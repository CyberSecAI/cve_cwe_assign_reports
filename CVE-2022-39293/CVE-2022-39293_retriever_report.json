{
  "cve_id": "CVE-2022-39293",
  "query": "Azure RTOS USBX is a high-performance USB host, device, and on-the-go (OTG) embedded stack, that is fully integrated with Azure RTOS ThreadX. The case is, in [_ux_host_class_pima_read](https//github.com/azure-rtos/usbx/blob/master/common/usbx_host_classes/src/ux_host_class_pima_read.c), there is data length from device response, returned in the very first packet, and read by [L165 code](https//github.com/azure-rtos/usbx/blob/082fd9db09a3669eca3358f10b8837a5c1635c0b/common/usbx_host_classes/src/ux_host_class_pima_read.c#L165), as header_length. Then in [L178 code](https//github.com/azure-rtos/usbx/blob/082fd9db09a3669eca3358f10b8837a5c1635c0b/common/usbx_host_classes/src/ux_host_class_pima_read.c#L178), there is a if branch, which check the expression of (header_length - UX_HOST_CLASS_PIMA_DATA_HEADER_SIZE) > data_length where if header_length is smaller than UX_HOST_CLASS_PIMA_DATA_HEADER_SIZE, calculation could overflow and then [L182 code](https//github.com/azure-rtos/usbx/blob/082fd9db09a3669eca3358f10b8837a5c1635c0b/common/usbx_host_classes/src/ux_host_class_pima_read.c#L182) the calculation of data_length is also overflow, this way the later [while loop start from L192](https//github.com/azure-rtos/usbx/blob/082fd9db09a3669eca3358f10b8837a5c1635c0b/common/usbx_host_classes/src/ux_host_class_pima_read.c#L192) can move data_pointer to unexpected address and cause write buffer overflow. The fix has been included in USBX release [6.1.12](https//github.com/azure-rtos/usbx/releases/tag/v6.1.12_rel). The following can be used as a workaround Add check of `header_length` 1. It must be greater than `UX_HOST_CLASS_PIMA_DATA_HEADER_SIZE`. 1. It should be greater or equal to the current returned data length (`transfer_request -> ux_transfer_request_actual_length`).",
  "keyphrases": {
    "weakness": "integer overflow"
  },
  "timestamp": "2025-03-18T16:31:37.967193",
  "summary": {
    "total_unique_cwes": 10,
    "retrievers_used": {
      "dense": true,
      "sparse": true,
      "graph": true
    },
    "retriever_weights": {
      "dense": 0.35,
      "sparse": 0.4,
      "graph": 0.25
    }
  },
  "retriever_statistics": {
    "dense": {
      "hit_count": 6,
      "average_score": 0.49932592523876584,
      "unique_finds": 0
    },
    "sparse": {
      "hit_count": 10,
      "average_score": 0.7908099477598555,
      "unique_finds": 0
    },
    "graph": {
      "hit_count": 8,
      "average_score": 0.6522635070548157,
      "unique_finds": 0
    }
  },
  "results_table": [
    {
      "cwe_id": "CWE-191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "mapping_usage": "Not specified",
      "combined_score": 1.0864,
      "retriever_count": 0,
      "dense_score": 0.5974,
      "sparse_score": 1.0,
      "graph_score": 0.6027
    },
    {
      "cwe_id": "CWE-1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "mapping_usage": "Not specified",
      "combined_score": 1.01,
      "retriever_count": 0,
      "dense_score": 0.4688,
      "sparse_score": 1.0,
      "graph_score": 0.569
    },
    {
      "cwe_id": "CWE-130",
      "name": "Improper Handling of Length Parameter Inconsistency",
      "abstraction": "Base",
      "mapping_usage": "Not specified",
      "combined_score": 0.9934,
      "retriever_count": 0,
      "dense_score": 0.484,
      "sparse_score": 0.6881,
      "graph_score": 1.0
    },
    {
      "cwe_id": "CWE-190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "mapping_usage": "Not specified",
      "combined_score": 0.9282,
      "retriever_count": 0,
      "dense_score": 0.4891,
      "sparse_score": 0.7404,
      "graph_score": 0.7269
    },
    {
      "cwe_id": "CWE-122",
      "name": "Heap-based Buffer Overflow",
      "abstraction": "Variant",
      "mapping_usage": "Not specified",
      "combined_score": 0.6603,
      "retriever_count": 0,
      "dense_score": 0.4738,
      "sparse_score": 0.836,
      "graph_score": "-"
    },
    {
      "cwe_id": "CWE-824",
      "name": "Access of Uninitialized Pointer",
      "abstraction": "Base",
      "mapping_usage": "Not specified",
      "combined_score": 0.6503,
      "retriever_count": 0,
      "dense_score": "-",
      "sparse_score": 0.7752,
      "graph_score": 0.5787
    },
    {
      "cwe_id": "CWE-476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "mapping_usage": "Not specified",
      "combined_score": 0.6482,
      "retriever_count": 0,
      "dense_score": "-",
      "sparse_score": 0.7386,
      "graph_score": 0.6314
    },
    {
      "cwe_id": "CWE-681",
      "name": "Incorrect Conversion between Numeric Types",
      "abstraction": "Base",
      "mapping_usage": "Not specified",
      "combined_score": 0.6232,
      "retriever_count": 0,
      "dense_score": "-",
      "sparse_score": 0.7321,
      "graph_score": 0.572
    },
    {
      "cwe_id": "CWE-125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "mapping_usage": "Not specified",
      "combined_score": 0.5986,
      "retriever_count": 0,
      "dense_score": "-",
      "sparse_score": 0.7106,
      "graph_score": 0.5374
    },
    {
      "cwe_id": "CWE-126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "mapping_usage": "Not specified",
      "combined_score": 0.5859,
      "retriever_count": 0,
      "dense_score": 0.4829,
      "sparse_score": 0.6871,
      "graph_score": "-"
    }
  ]
}