{
  "cve_id": "CVE-2020-11176",
  "description": "While processing server certificate from IPSec server, certificate validation for subject alternative name API can cause heap overflow which can lead to memory corruption in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon IoT, Snapdragon Mobile",
  "key_phrases": {
    "rootcause": "",
    "weakness": "heap overflow",
    "impact": "memory corruption",
    "vector": "",
    "attacker": "",
    "product": [
      "Snapdragon Auto",
      "Snapdragon Compute",
      "Snapdragon Connectivity",
      "Snapdragon Consumer IOT",
      "Snapdragon Industrial IOT",
      "Snapdragon IoT",
      "Snapdragon Mobile"
    ],
    "version": "",
    "component": ""
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Out-of-bounds Write | 0.9 | Base | Allowed | The vulnerability is a heap overflow, which directly relates to writing outside the intended buffer boundaries. |\n| CWE-119 | Improper Restriction of Operations within the Bounds of a Memory Buffer | 0.6 | Class | Allowed | This is a broader category that includes out-of-bounds write. While CWE-787 is more specific, CWE-119 is still relevant as the root cause involves improper memory boundary handling. |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.4 | Base | Allowed | There could be an improper validation of the size or length in the input, leading to a heap overflow |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** MEDIUM\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The vulnerability description clearly states that a **heap overflow** occurs during server certificate processing in IPSec. This aligns directly with CWE-787 (Out-of-bounds Write), as a heap overflow is a specific type of out-of-bounds write where data is written beyond the allocated buffer on the heap. The description also mentions \"memory corruption,\" which is a typical impact of CWE-787. CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer) is a broader class that encompasses CWE-787. While CWE-787 is a more precise classification, CWE-119 is relevant because the root cause is the failure to properly restrict memory operations within the allocated bounds. There also could be an Improper Validation of Specified Quantity in Input (CWE-1284). This is because to allocate the certificate, the size needs to be determined somehow, which could lead to a heap overflow.\n  \n  - *Relationship Analysis:* \"CWE-787 is a base level CWE that is a child of CWE-119. This parent-child relationship supports the selection of CWE-787 as the primary weakness due to its higher specificity. CWE-787 can precede CWE-822 (Untrusted Pointer Dereference), CWE-823 (Use of Out-of-range Pointer Offset), CWE-824 (Improper Check for Pointer Validity Before Dereference), and CWE-825 (Missing Check against an Alternate Path or Channel). While not explicitly stated, a possible chain of events is that an out-of-bounds write can lead to dereferencing an untrusted pointer.\"\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.9 (High confidence due to direct evidence of heap overflow and memory corruption).\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Out-of-bounds Write | 0.9 | Base | Allowed | The vulnerability is a heap overflow, which directly relates to writing outside the intended buffer boundaries. |\n| CWE-119 | Improper Restriction of Operations within the Bounds of a Memory Buffer | 0.6 | Class | Allowed | This is a broader category that includes out-of-bounds write. While CWE-787 is more specific, CWE-119 is still relevant as the root cause involves improper memory boundary handling. |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.4 | Base | Allowed | There could be an improper validation of the size or length in the input, leading to a heap overflow |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** MEDIUM\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The vulnerability description clearly states that a **heap overflow** occurs during server certificate processing in IPSec. This aligns directly with CWE-787 (Out-of-bounds Write), as a heap overflow is a specific type of out-of-bounds write where data is written beyond the allocated buffer on the heap. The description also mentions \"memory corruption,\" which is a typical impact of CWE-787. CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer) is a broader class that encompasses CWE-787. While CWE-787 is a more precise classification, CWE-119 is relevant because the root cause is the failure to properly restrict memory operations within the allocated bounds. There also could be an Improper Validation of Specified Quantity in Input (CWE-1284). This is because to allocate the certificate, the size needs to be determined somehow, which could lead to a heap overflow.\n  \n  - *Relationship Analysis:* \"CWE-787 is a base level CWE that is a child of CWE-119. This parent-child relationship supports the selection of CWE-787 as the primary weakness due to its higher specificity. CWE-787 can precede CWE-822 (Untrusted Pointer Dereference), CWE-823 (Use of Out-of-range Pointer Offset), CWE-824 (Improper Check for Pointer Validity Before Dereference), and CWE-825 (Missing Check against an Alternate Path or Channel). While not explicitly stated, a possible chain of events is that an out-of-bounds write can lead to dereferencing an untrusted pointer.\"\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.9 (High confidence due to direct evidence of heap overflow and memory corruption).\n---",
  "criticism": "Okay, I've reviewed the provided analysis against the full CWE specifications and can offer a detailed critique.\n\n**Overall Assessment:**\n\nThe analysis correctly identifies CWE-787 (Out-of-bounds Write) as the most likely root cause, given the \"heap overflow\" and \"memory corruption\" keywords in the vulnerability description. The inclusion of CWE-119 and CWE-1284 is also reasonable, as they represent the broader class of improper memory boundary handling and a potential root cause related to size validation, respectively. However, the confidence scores and justifications could be improved in some areas.\n\n**Detailed Critique by CWE:**\n\n1.  **CWE-787: Out-of-bounds Write (Confidence: 0.9)**\n\n    *   **Strengths:** Excellent primary mapping.  The description of the vulnerability aligns directly with the definition of CWE-787, and the mention of \"memory corruption\" reinforces this. The confidence score of 0.9 is well-justified.\n    *   **Improvements:** None needed.\n    *   **Recommendation:** Keep as is.\n\n2.  **CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer (Confidence: 0.6)**\n\n    *   **Strengths:** Valid secondary mapping. CWE-119 is the parent class of CWE-787, so its inclusion demonstrates an understanding of the CWE hierarchy.\n    *   **Weaknesses:** The analysis notes that CWE-119 is a broader class, which is correct. However, per CWE guidelines, CWE-119 is discouraged, except when a more detailed CWE is unavailable. Since CWE-787 is available, CWE-119 should likely not be included.\n    *   **Improvements:** Recommendation: Remove CWE-119. Given the specificity of the provided information (heap overflow), a more specific CWE is preferable. As the CWE documentation says:  \"Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.\"\n\n3.  **CWE-1284: Improper Validation of Specified Quantity in Input (Confidence: 0.4)**\n\n    *   **Strengths:** The rationale for including this CWE is that a size needs to be determined to allocate the certificate, and a failure to validate this size could lead to the overflow. This is a reasonable hypothesis.\n    *   **Weaknesses:** The confidence score of 0.4 reflects the speculative nature of this mapping. There's no explicit mention of size validation failures in the provided vulnerability description. It's inferred. Also, the extended description of CWE-1284 says the following: \"Code may rely on specified quantities to allocate resources, perform calculations, control iteration, etc.\" The certificate does not explicitly call for any of those. Finally, the relationship of CWE-1284 -> CWE-789 is only \"CanPrecede,\" not \"CanCause.\"\n    *   **Improvements:** Recommendation: This is a weak mapping. Consider removing it or lowering the confidence score significantly (e.g., 0.2). Alternatively, if more information becomes available to support this mapping, increase the confidence.\n\n**Additional Observations and Recommendations:**\n\n*   **Retriever Results Analysis:** It would be helpful to analyze why the retriever results suggested other CWEs, such as CWE-190 (Integer Overflow), CWE-131 (Incorrect Calculation of Buffer Size), CWE-822 (Untrusted Pointer Dereference), and CWE-823 (Use of Out-of-range Pointer Offset). Even if these are not the primary weaknesses, understanding why they were suggested could reveal potential contributing factors or related attack vectors.\n*   **Chain of Events:** The \"Relationship Analysis\" section is a good start, but it could be expanded. For instance, if CWE-1284 is present (improper size validation), it *could* lead to CWE-131 (Incorrect Calculation of Buffer Size), which *could* lead to CWE-787 (Out-of-bounds Write).  Or, if the program incorrectly handles the size and offset of data within the Subject Alternative Name extension, it could lead to CWE-823 (Use of Out-of-Range Pointer Offset) and, subsequently, CWE-787.\n*   **Missing Mitigations:** The analysis should include brief mentions of potential mitigations, drawing from the \"Potential Mitigations\" sections of the CWE specifications. This would strengthen the analysis and demonstrate a practical understanding of how to address the vulnerability. For example, for CWE-787, you could mention using safe string handling functions, compiler-based overflow detection mechanisms, or using memory-safe languages.  Mentioning why some mitigations might *not* be practical in this context is also valuable.\n*   **CWE Examples:** The original analysis provides examples for CWE-823. This is a good start. If applicable, adding examples for the other identified CWEs (CWE-787, CWE-119, CWE-1284) would be valuable. This can assist readers in better understanding the context of each CWE.\n\n**Revised Summary Table:**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Out-of-bounds Write | 0.9 | Base | Allowed | The vulnerability is a heap overflow, which directly relates to writing outside the intended buffer boundaries. |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.2 | Base | Allowed |  There could be an improper validation of the size or length in the input, *potentially* leading to a heap overflow, but this is speculative. Requires more information to confirm. |\n\n**In summary,** the analysis is a good starting point, but the primary focus should remain on CWE-787. Improving the justification for the other CWEs and incorporating potential mitigations would make the analysis more robust and actionable. Also, consider analyzing the retriever results to determine the significance of those suggestions.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Out-of-bounds Write | 0.9 | Base | Allowed | Primary CWE. The vulnerability is a heap overflow, which directly relates to writing outside the intended buffer boundaries. |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.2 | Base | Allowed | Secondary candidate. There could be an improper validation of the size or length in the input, potentially leading to a heap overflow, but this is speculative and requires more information to confirm. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship that impacted the decision was the parent-child relationship between CWE-119 and CWE-787. While CWE-119 is a parent of CWE-787, the specificity of the vulnerability description (heap overflow) makes CWE-787 a more appropriate choice. The \"CanPrecede\" relationship between CWE-1284 and other CWEs such as CWE-789 was considered, but the lack of direct evidence supporting improper size validation led to a lower confidence score and its classification as a secondary candidate.\n\n```mermaid\ngraph TD\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations\"]\n    cwe789[\"CWE-789: Memory Allocation with Untrusted Size Value\"]\n    \n    cwe787 -->|CHILDOF| cwe119\n    cwe1284 -->|CANPRECEDE| cwe789\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe787 primary\n    class cwe1284 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a potential **ROOTCAUSE** of **CWE-1284 (Improper Validation of Specified Quantity in Input)**, which, if present, could lead to allocating an incorrect buffer size, eventually resulting in **CWE-787 (Out-of-bounds Write)**. The **WEAKNESS** of writing beyond the buffer boundary then leads to memory corruption and potential exploitation. However, the link between CWE-1284 and CWE-787 is speculative based on the provided information.\n\n## Summary of Analysis\nThe analysis and criticism both agree that **CWE-787 (Out-of-bounds Write)** is the most appropriate primary classification due to the \"heap overflow\" and \"memory corruption\" indicators in the vulnerability description. The criticism correctly points out that CWE-119 should be removed because CWE-787 is a more specific and available CWE. The criticism also suggests lowering the confidence score for **CWE-1284 (Improper Validation of Specified Quantity in Input)** due to the lack of explicit evidence in the description. The final assessment agrees with this recommendation and lowers the confidence score to 0.2, classifying it as a secondary candidate.\n\nThe decision is primarily based on the evidence of a \"heap overflow,\" which directly maps to **CWE-787 (Out-of-bounds Write)**. The relationship analysis reinforces this decision by highlighting the parent-child relationship between CWE-119 and CWE-787, favoring the more specific CWE. The classification reflects the optimal level of specificity based on the available evidence. The retriever scores were also considered and the suggested CWEs were analyzed, including CWE-190, CWE-131, CWE-822, and CWE-823, but none of them were deemed to be a better fit than CWE-787.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 354.88348547720756,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5245397995089636,
            "sparse": 354.88348547720756,
            "graph": 2.5014742806664665
          },
          "normalized_scores": {
            "dense": 0.5245397995089636,
            "sparse": 0.28390678838176603,
            "graph": 0.8933836716665953
          },
          "weighted_scores": {
            "dense": 0.18358892982813724,
            "sparse": 0.11356271535270641,
            "graph": 0.22334591791664882
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5245397995089636,
              "query_max": 0.5615725894624871,
              "query_min": 0.4792749094166747,
              "normalized_score": 0.5245397995089636,
              "weight": 0.35,
              "weighted_score": 0.18358892982813724
            },
            "sparse": {
              "raw_score": 354.88348547720756,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.28390678838176603,
              "weight": 0.4,
              "weighted_score": 0.11356271535270641
            },
            "graph": {
              "raw_score": 2.5014742806664665,
              "query_max": 3.1486000000000005,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.8933836716665953,
              "weight": 0.25,
              "weighted_score": 0.22334591791664882
            }
          },
          "contribution_percentages": {
            "dense": 35.27181351927865,
            "sparse": 21.818107019923822,
            "graph": 42.91007946079755
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5204975630974924,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6766468320267401
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6766468320267401
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.7443115152294142
            }
          },
          "combined_score": 0.7443115152294142
        }
      },
      "similarity": 0.7443115152294142
    },
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 332.27355083264365,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5244356415671416,
            "sparse": 332.27355083264365,
            "graph": 2.5107117451595653
          },
          "normalized_scores": {
            "dense": 0.5244356415671416,
            "sparse": 0.26581884066611494,
            "graph": 0.8966827661284162
          },
          "weighted_scores": {
            "dense": 0.18355247454849954,
            "sparse": 0.10632753626644598,
            "graph": 0.22417069153210406
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5244356415671416,
              "query_max": 0.5615725894624871,
              "query_min": 0.4792749094166747,
              "normalized_score": 0.5244356415671416,
              "weight": 0.35,
              "weighted_score": 0.18355247454849954
            },
            "sparse": {
              "raw_score": 332.27355083264365,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.26581884066611494,
              "weight": 0.4,
              "weighted_score": 0.10632753626644598
            },
            "graph": {
              "raw_score": 2.5107117451595653,
              "query_max": 3.1486000000000005,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.8966827661284162,
              "weight": 0.25,
              "weighted_score": 0.22417069153210406
            }
          },
          "contribution_percentages": {
            "dense": 35.70707591886107,
            "sparse": 20.684250752109932,
            "graph": 43.608673329029
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5140507023470495,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6682659130511645
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6682659130511645
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7350925043562809
            }
          },
          "combined_score": 0.7350925043562809
        }
      },
      "similarity": 0.7350925043562809
    },
    {
      "metadata": {
        "doc_id": "CWE-822",
        "name": "Untrusted Pointer Dereference",
        "type": "Base",
        "original_content": "The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.",
        "relationships": [],
        "original_sparse_score": 374.1232230295154,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.48551409601863027,
            "sparse": 374.1232230295154,
            "graph": 2.49520873812712
          },
          "normalized_scores": {
            "dense": 0.48551409601863027,
            "sparse": 0.2992985784236123,
            "graph": 0.891145977902543
          },
          "weighted_scores": {
            "dense": 0.1699299336065206,
            "sparse": 0.11971943136944492,
            "graph": 0.22278649447563575
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.48551409601863027,
              "query_max": 0.5615725894624871,
              "query_min": 0.4792749094166747,
              "normalized_score": 0.48551409601863027,
              "weight": 0.35,
              "weighted_score": 0.1699299336065206
            },
            "sparse": {
              "raw_score": 374.1232230295154,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.2992985784236123,
              "weight": 0.4,
              "weighted_score": 0.11971943136944492
            },
            "graph": {
              "raw_score": 2.49520873812712,
              "query_max": 3.1486000000000005,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.891145977902543,
              "weight": 0.25,
              "weighted_score": 0.22278649447563575
            }
          },
          "contribution_percentages": {
            "dense": 33.16121041731472,
            "sparse": 23.362812957228698,
            "graph": 43.475976625456596
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5124358594516012,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6661666172870816
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6661666172870816
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7327832790157898
            }
          },
          "combined_score": 0.7327832790157898
        }
      },
      "similarity": 0.7327832790157898
    },
    {
      "metadata": {
        "doc_id": "CWE-129",
        "name": "Improper Validation of Array Index",
        "type": "Variant",
        "original_content": "The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.",
        "relationships": [],
        "original_sparse_score": 298.6267377497223,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.49128750224823164,
            "sparse": 298.6267377497223,
            "graph": 1.8205114802904943
          },
          "normalized_scores": {
            "dense": 0.49128750224823164,
            "sparse": 0.23890139019977782,
            "graph": 0.6501826715323195
          },
          "weighted_scores": {
            "dense": 0.17195062578688106,
            "sparse": 0.09556055607991114,
            "graph": 0.16254566788307986
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.49128750224823164,
              "query_max": 0.5615725894624871,
              "query_min": 0.4792749094166747,
              "normalized_score": 0.49128750224823164,
              "weight": 0.35,
              "weighted_score": 0.17195062578688106
            },
            "sparse": {
              "raw_score": 298.6267377497223,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.23890139019977782,
              "weight": 0.4,
              "weighted_score": 0.09556055607991114
            },
            "graph": {
              "raw_score": 1.8205114802904943,
              "query_max": 3.1486000000000005,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.6501826715323195,
              "weight": 0.25,
              "weighted_score": 0.16254566788307986
            }
          },
          "contribution_percentages": {
            "dense": 39.983231492973616,
            "sparse": 22.22044739794069,
            "graph": 37.7963211090857
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.430056849749872,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.5160682196998464
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5160682196998464
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5676750416698311
            }
          },
          "combined_score": 0.5676750416698311
        }
      },
      "similarity": 0.5676750416698311
    },
    {
      "metadata": {
        "doc_id": "CWE-823",
        "name": "Use of Out-of-range Pointer Offset",
        "type": "Base",
        "original_content": "The product performs pointer arithmetic on a valid pointer, but it uses an offset that can point outside of the intended range of valid memory locations for the resulting pointer.",
        "relationships": [],
        "original_sparse_score": 375.678202067525,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 375.678202067525,
            "graph": 3.1486000000000005
          },
          "normalized_scores": {
            "sparse": 0.30054256165402,
            "graph": 1.0
          },
          "weighted_scores": {
            "sparse": 0.120217024661608,
            "graph": 0.25
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 375.678202067525,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.30054256165402,
              "weight": 0.4,
              "weighted_score": 0.120217024661608
            },
            "graph": {
              "raw_score": 3.1486000000000005,
              "query_max": 3.1486000000000005,
              "query_min": 1.6848000000000003,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "sparse": 32.47204116868769,
            "graph": 67.52795883131232
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.370217024661608,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4812821320600904
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4812821320600904
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5294103452660995
            }
          },
          "combined_score": 0.5294103452660995
        }
      },
      "similarity": 0.5294103452660995
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 308.6070500551517,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 308.6070500551517,
            "graph": 2.7196000000000002
          },
          "normalized_scores": {
            "sparse": 0.24688564004412136,
            "graph": 0.9712857142857144
          },
          "weighted_scores": {
            "sparse": 0.09875425601764855,
            "graph": 0.2428214285714286
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 308.6070500551517,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.24688564004412136,
              "weight": 0.4,
              "weighted_score": 0.09875425601764855
            },
            "graph": {
              "raw_score": 2.7196000000000002,
              "query_max": 3.1486000000000005,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.9712857142857144,
              "weight": 0.25,
              "weighted_score": 0.2428214285714286
            }
          },
          "contribution_percentages": {
            "sparse": 28.911383471704678,
            "graph": 71.08861652829532
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.34157568458907717,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4440483899658003
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4440483899658003
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4884532289623804
            }
          },
          "combined_score": 0.4884532289623804
        }
      },
      "similarity": 0.4884532289623804
    },
    {
      "metadata": {
        "doc_id": "CWE-367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "type": "Base",
        "original_content": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
        "relationships": [],
        "original_sparse_score": 371.9639400002788,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 371.9639400002788,
            "graph": 2.1189999999999998
          },
          "normalized_scores": {
            "sparse": 0.29757115200022305,
            "graph": 0.7567857142857143
          },
          "weighted_scores": {
            "sparse": 0.11902846080008922,
            "graph": 0.18919642857142857
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 371.9639400002788,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.29757115200022305,
              "weight": 0.4,
              "weighted_score": 0.11902846080008922
            },
            "graph": {
              "raw_score": 2.1189999999999998,
              "query_max": 3.1486000000000005,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.7567857142857143,
              "weight": 0.25,
              "weighted_score": 0.18919642857142857
            }
          },
          "contribution_percentages": {
            "sparse": 38.61740725831478,
            "graph": 61.382592741685215
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3082248893715178,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.40069235618297316
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.40069235618297316
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4407615918012705
            }
          },
          "combined_score": 0.4407615918012705
        }
      },
      "similarity": 0.4407615918012705
    },
    {
      "metadata": {
        "doc_id": "CWE-1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
        "relationships": [],
        "original_sparse_score": 326.6230176110885,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5615725894624871,
            "sparse": 326.6230176110885
          },
          "normalized_scores": {
            "dense": 0.5615725894624871,
            "sparse": 0.26129841408887083
          },
          "weighted_scores": {
            "dense": 0.19655040631187048,
            "sparse": 0.10451936563554834
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5615725894624871,
              "query_max": 0.5615725894624871,
              "query_min": 0.4792749094166747,
              "normalized_score": 0.5615725894624871,
              "weight": 0.35,
              "weighted_score": 0.19655040631187048
            },
            "sparse": {
              "raw_score": 326.6230176110885,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.26129841408887083,
              "weight": 0.4,
              "weighted_score": 0.10451936563554834
            }
          },
          "contribution_percentages": {
            "dense": 65.28400544515561,
            "sparse": 34.71599455484439
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3010697719474188,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.39139070353164446
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.39139070353164446
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.43052977388480895
            }
          },
          "combined_score": 0.43052977388480895
        }
      },
      "similarity": 0.43052977388480895
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 430.6708689092021,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5154203526445437,
            "sparse": 430.6708689092021
          },
          "normalized_scores": {
            "dense": 0.5154203526445437,
            "sparse": 0.3445366951273617
          },
          "weighted_scores": {
            "dense": 0.18039712342559028,
            "sparse": 0.1378146780509447
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5154203526445437,
              "query_max": 0.5615725894624871,
              "query_min": 0.4792749094166747,
              "normalized_score": 0.5154203526445437,
              "weight": 0.35,
              "weighted_score": 0.18039712342559028
            },
            "sparse": {
              "raw_score": 430.6708689092021,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.3445366951273617,
              "weight": 0.4,
              "weighted_score": 0.1378146780509447
            }
          },
          "contribution_percentages": {
            "dense": 56.69089662562148,
            "sparse": 43.30910337437853
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.31821180147653494,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3818541617718419
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3818541617718419
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.42003957794902613
            }
          },
          "combined_score": 0.42003957794902613
        }
      },
      "similarity": 0.42003957794902613
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 347.3545135193082,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.48834651589211586,
            "sparse": 347.3545135193082
          },
          "normalized_scores": {
            "dense": 0.48834651589211586,
            "sparse": 0.2778836108154466
          },
          "weighted_scores": {
            "dense": 0.17092128056224054,
            "sparse": 0.11115344432617864
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.48834651589211586,
              "query_max": 0.5615725894624871,
              "query_min": 0.4792749094166747,
              "normalized_score": 0.48834651589211586,
              "weight": 0.35,
              "weighted_score": 0.17092128056224054
            },
            "sparse": {
              "raw_score": 347.3545135193082,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.2778836108154466,
              "weight": 0.4,
              "weighted_score": 0.11115344432617864
            }
          },
          "contribution_percentages": {
            "dense": 60.594326779846085,
            "sparse": 39.40567322015392
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.28207472488841917,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.36669714235494494
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.36669714235494494
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.40336685659043947
            }
          },
          "combined_score": 0.40336685659043947
        }
      },
      "similarity": 0.40336685659043947
    },
    {
      "metadata": {
        "doc_id": "CWE-415",
        "name": "Double Free",
        "type": "Variant",
        "original_content": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
        "relationships": [],
        "original_sparse_score": 395.1276962867421,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.48301188370903825,
            "sparse": 395.1276962867421
          },
          "normalized_scores": {
            "dense": 0.48301188370903825,
            "sparse": 0.31610215702939365
          },
          "weighted_scores": {
            "dense": 0.16905415929816336,
            "sparse": 0.12644086281175745
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.48301188370903825,
              "query_max": 0.5615725894624871,
              "query_min": 0.4792749094166747,
              "normalized_score": 0.48301188370903825,
              "weight": 0.35,
              "weighted_score": 0.16905415929816336
            },
            "sparse": {
              "raw_score": 395.1276962867421,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.31610215702939365,
              "weight": 0.4,
              "weighted_score": 0.12644086281175745
            }
          },
          "contribution_percentages": {
            "dense": 57.21049312136199,
            "sparse": 42.789506878638
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.29549502210992085,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.354594026531905
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.354594026531905
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.39005342918509556
            }
          },
          "combined_score": 0.39005342918509556
        }
      },
      "similarity": 0.39005342918509556
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 311.0559414340832,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4987094602201523,
            "sparse": 311.0559414340832
          },
          "normalized_scores": {
            "dense": 0.4987094602201523,
            "sparse": 0.24884475314726656
          },
          "weighted_scores": {
            "dense": 0.1745483110770533,
            "sparse": 0.09953790125890663
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4987094602201523,
              "query_max": 0.5615725894624871,
              "query_min": 0.4792749094166747,
              "normalized_score": 0.4987094602201523,
              "weight": 0.35,
              "weighted_score": 0.1745483110770533
            },
            "sparse": {
              "raw_score": 311.0559414340832,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.24884475314726656,
              "weight": 0.4,
              "weighted_score": 0.09953790125890663
            }
          },
          "contribution_percentages": {
            "dense": 63.683725492583875,
            "sparse": 36.31627450741612
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.2740862123359599,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.21926896986876795
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.21926896986876795
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.17541517589501437
            }
          },
          "combined_score": 0.17541517589501437
        }
      },
      "similarity": 0.17541517589501437
    },
    {
      "metadata": {
        "doc_id": "CWE-124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "type": "Base",
        "original_content": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "relationships": [],
        "original_sparse_score": 363.29875465464573,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 363.29875465464573
          },
          "normalized_scores": {
            "sparse": 0.2906390037237166
          },
          "weighted_scores": {
            "sparse": 0.11625560148948665
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 363.29875465464573,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.2906390037237166,
              "weight": 0.4,
              "weighted_score": 0.11625560148948665
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11625560148948665,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.15113228193633266
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.15113228193633266
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.16624551012996594
            }
          },
          "combined_score": 0.16624551012996594
        }
      },
      "similarity": 0.16624551012996594
    },
    {
      "metadata": {
        "doc_id": "CWE-390",
        "name": "Detection of Error Condition Without Action",
        "type": "Base",
        "original_content": "The product detects a specific error, but takes no actions to handle the error.",
        "relationships": [],
        "original_sparse_score": 333.04563953359934,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 333.04563953359934
          },
          "normalized_scores": {
            "sparse": 0.2664365116268795
          },
          "weighted_scores": {
            "sparse": 0.1065746046507518
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 333.04563953359934,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.2664365116268795,
              "weight": 0.4,
              "weighted_score": 0.1065746046507518
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.1065746046507518,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13854698604597734
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13854698604597734
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1524016846505751
            }
          },
          "combined_score": 0.1524016846505751
        }
      },
      "similarity": 0.1524016846505751
    },
    {
      "metadata": {
        "doc_id": "CWE-1314",
        "name": "Missing Write Protection for Parametric Data Values",
        "type": "Base",
        "original_content": "The device does not write-protect the parametric data values for sensors that scale the sensor value, allowing untrusted software to manipulate the apparent result and potentially damage hardware or cause operational failure.",
        "relationships": [],
        "original_sparse_score": 316.7166145893665,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 316.7166145893665
          },
          "normalized_scores": {
            "sparse": 0.2533732916714932
          },
          "weighted_scores": {
            "sparse": 0.10134931666859728
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 316.7166145893665,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.2533732916714932,
              "weight": 0.4,
              "weighted_score": 0.10134931666859728
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10134931666859728,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13175411166917647
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13175411166917647
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.14492952283609414
            }
          },
          "combined_score": 0.14492952283609414
        }
      },
      "similarity": 0.14492952283609414
    },
    {
      "metadata": {
        "doc_id": "CWE-252",
        "name": "Unchecked Return Value",
        "type": "Base",
        "original_content": "The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.",
        "relationships": [],
        "original_sparse_score": 314.7954320128643,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 314.7954320128643
          },
          "normalized_scores": {
            "sparse": 0.25183634561029145
          },
          "weighted_scores": {
            "sparse": 0.10073453824411659
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 314.7954320128643,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.25183634561029145,
              "weight": 0.4,
              "weighted_score": 0.10073453824411659
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10073453824411659,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13095489971735158
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13095489971735158
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.14405038968908676
            }
          },
          "combined_score": 0.14405038968908676
        }
      },
      "similarity": 0.14405038968908676
    },
    {
      "metadata": {
        "doc_id": "CWE-459",
        "name": "Incomplete Cleanup",
        "type": "Base",
        "original_content": "The product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.",
        "relationships": [],
        "original_sparse_score": 310.7315270546466,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 310.7315270546466
          },
          "normalized_scores": {
            "sparse": 0.2485852216437173
          },
          "weighted_scores": {
            "sparse": 0.09943408865748693
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 310.7315270546466,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.2485852216437173,
              "weight": 0.4,
              "weighted_score": 0.09943408865748693
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.09943408865748693,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.129264315254733
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.129264315254733
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.14219074678020632
            }
          },
          "combined_score": 0.14219074678020632
        }
      },
      "similarity": 0.14219074678020632
    },
    {
      "metadata": {
        "doc_id": "CWE-704",
        "name": "Incorrect Type Conversion or Cast",
        "type": "Class",
        "original_content": "The product does not correctly convert an object, resource, or structure from one type to a different type.",
        "relationships": [],
        "original_sparse_score": 299.4921609986726,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 299.4921609986726
          },
          "normalized_scores": {
            "sparse": 0.2395937287989381
          },
          "weighted_scores": {
            "sparse": 0.09583749151957524
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 299.4921609986726,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.2395937287989381,
              "weight": 0.4,
              "weighted_score": 0.09583749151957524
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.09583749151957524,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.0766699932156602
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0766699932156602
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.08050349287644322
            }
          },
          "combined_score": 0.08050349287644322
        }
      },
      "similarity": 0.08050349287644322
    },
    {
      "metadata": {
        "doc_id": "CWE-362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "type": "Class",
        "original_content": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.",
        "relationships": [],
        "original_sparse_score": 280.94031994753476,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 280.94031994753476
          },
          "normalized_scores": {
            "sparse": 0.2247522559580278
          },
          "weighted_scores": {
            "sparse": 0.08990090238321113
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 280.94031994753476,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.2247522559580278,
              "weight": 0.4,
              "weighted_score": 0.08990090238321113
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.08990090238321113,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.07192072190656891
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07192072190656891
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.07551675800189736
            }
          },
          "combined_score": 0.07551675800189736
        }
      },
      "similarity": 0.07551675800189736
    },
    {
      "metadata": {
        "doc_id": "CWE-697",
        "name": "Incorrect Comparison",
        "type": "Pillar",
        "original_content": "The product compares two entities in a security-relevant context, but the comparison is incorrect, which may lead to resultant weaknesses.",
        "relationships": [],
        "original_sparse_score": 288.2818529825264,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is extremely high-level, a Pillar. However, sometimes this weakness is forced to be used due to the lack of in-depth weakness research. See Research Gaps.",
          "comments": "Where feasible, consider children or descendants of this entry instead.",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 288.2818529825264
          },
          "normalized_scores": {
            "sparse": 0.23062548238602112
          },
          "weighted_scores": {
            "sparse": 0.09225019295440845
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 288.2818529825264,
              "query_max": 430.6708689092021,
              "query_min": 280.94031994753476,
              "normalized_score": 0.23062548238602112,
              "weight": 0.4,
              "weighted_score": 0.09225019295440845
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.6,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.09225019295440845,
            "abstraction": {
              "type": "pillar",
              "factor": 0.6,
              "score_after": 0.05535011577264507
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.05535011577264507
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is extremely high-level, a Pillar. However, sometimes this weakness is forced to be used due to the lack of in-depth weakness research. See Research Gaps.",
                "comments": "Where feasible, consider children or descendants of this entry instead.",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.04428009261811606
            }
          },
          "combined_score": 0.04428009261811606
        }
      },
      "similarity": 0.04428009261811606
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-823",
      "CWE-824",
      "CWE-119",
      "CWE-822",
      "CWE-787",
      "CWE-1284",
      "CWE-825"
    ],
    "critic_additional": [
      "CWE-190",
      "CWE-125",
      "CWE-789",
      "CWE-131"
    ]
  }
}