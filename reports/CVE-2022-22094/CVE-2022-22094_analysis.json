{
  "cve_id": "CVE-2022-22094",
  "description": "memory corruption in Kernel due to race condition while getting mapping reference in Snapdragon Compute, Snapdragon Connectivity, Snapdragon Industrial IOT, Snapdragon Mobile",
  "key_phrases": {
    "rootcause": "race condition",
    "weakness": "",
    "impact": "memory corruption",
    "vector": "",
    "attacker": "",
    "product": "Snapdragon Compute, Snapdragon Connectivity, Snapdragon Industrial IOT, Snapdragon Mobile",
    "version": "",
    "component": "Kernel"
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-362 | Concurrent Execution using Shared Resource with Improper Synchronization ('**Race Condition**') | 0.75 | Class | Allowed-with-Review | This is the primary CWE because the vulnerability is caused by a **race condition** that leads to memory corruption. |\n| CWE-413 | Improper Resource Locking | 0.5 | Base | Allowed | Secondary candidate because the **race condition** could lead to improper resource locking which can lead to memory corruption. |\n| CWE-367 | Time-of-check Time-of-use (TOCTOU) **Race Condition** | 0.5 | Base | Allowed | Secondary candidate because the **race condition** could be due to time-of-check time-of-use leading to memory corruption. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.75\n*   **Evidence Strength:** MEDIUM\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description explicitly states that a **race condition** in the Kernel leads to memory corruption. CWE-362 (Concurrent Execution using Shared Resource with Improper Synchronization ('**Race Condition**')) is a Class-level CWE that directly addresses this type of concurrency issue. Since the description does not provide enough information to pinpoint the exact synchronization issue, the higher-level Class CWE is more appropriate. CWE-362 is ALLOWED-WITH-REVIEW because it is a class and a more specific Base level CWE may be more appropriate.\n  \n  - *Relationship Analysis:* CWE-362 is related to CWE-366 (Race Condition Enabling Exploitable Logic Error), CWE-367 (Time-of-check Time-of-use (TOCTOU) **Race Condition**), and CWE-413 (Improper Resource Locking). These related CWEs could be contributing factors or potential impacts of the **race condition**. Since the vulnerability description mentions memory corruption as an impact, it aligns with potential consequences of **race conditions** and improper resource locking.\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.75 (The description clearly identifies a **race condition** as the root cause, but further details are needed to map to a specific Base CWE.)\n\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-362 | Concurrent Execution using Shared Resource with Improper Synchronization ('**Race Condition**') | 0.75 | Class | Allowed-with-Review | This is the primary CWE because the vulnerability is caused by a **race condition** that leads to memory corruption. |\n| CWE-413 | Improper Resource Locking | 0.5 | Base | Allowed | Secondary candidate because the **race condition** could lead to improper resource locking which can lead to memory corruption. |\n| CWE-367 | Time-of-check Time-of-use (TOCTOU) **Race Condition** | 0.5 | Base | Allowed | Secondary candidate because the **race condition** could be due to time-of-check time-of-use leading to memory corruption. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.75\n*   **Evidence Strength:** MEDIUM\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description explicitly states that a **race condition** in the Kernel leads to memory corruption. CWE-362 (Concurrent Execution using Shared Resource with Improper Synchronization ('**Race Condition**')) is a Class-level CWE that directly addresses this type of concurrency issue. Since the description does not provide enough information to pinpoint the exact synchronization issue, the higher-level Class CWE is more appropriate. CWE-362 is ALLOWED-WITH-REVIEW because it is a class and a more specific Base level CWE may be more appropriate.\n  \n  - *Relationship Analysis:* CWE-362 is related to CWE-366 (Race Condition Enabling Exploitable Logic Error), CWE-367 (Time-of-check Time-of-use (TOCTOU) **Race Condition**), and CWE-413 (Improper Resource Locking). These related CWEs could be contributing factors or potential impacts of the **race condition**. Since the vulnerability description mentions memory corruption as an impact, it aligns with potential consequences of **race conditions** and improper resource locking.\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.75 (The description clearly identifies a **race condition** as the root cause, but further details are needed to map to a specific Base CWE.)\n\n---",
  "criticism": "Okay, here's a detailed review of the provided CWE analysis, considering the full CWE specifications and focusing on the appropriateness of the mappings, the confidence levels, and potential alternative CWEs.\n\n**Overall Assessment**\n\nThe analysis correctly identifies the primary issue as related to race conditions. The choice of CWE-362 as the primary CWE is a reasonable starting point, given the general description. However, the analysis could be improved by exploring more specific base-level CWEs that fall under CWE-362, and by providing a more precise explanation of how the race condition leads to memory corruption. The confidence levels for the secondary CWEs seem appropriate given the limited information.\n\n**Detailed Review**\n\n**1. CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')**\n\n*   **Confidence:** 0.75. This confidence level is acceptable, but should be increased after mapping to a specific base CWE. It is good that it is mapped to \"Allowed-with-Review\" since it is a Class. The mapping guidance for CWE-362 explicitly states to examine its children to see if there is a better fit.\n*   **Justification:**  The justification is good because it directly connects to the vulnerability description. However, the statement about not providing enough information to pinpoint the exact synchronization issue is crucial. This means further analysis is needed to move away from the Class CWE.\n*   **Relationship Analysis:** The relationships mentioned are valid, but not detailed enough.  Specifically, it would be better to investigate how the race condition leads to improper resource locking (CWE-413) or a time-of-check time-of-use vulnerability (CWE-367).\n*   **Mitigations:**  The mitigations listed for CWE-362 (use synchronization primitives, thread-safe capabilities, minimizing shared resources) are all general and apply to most race condition scenarios. If more details were available regarding what shared resources and primitives were involved, these mitigations would be more effective.\n*   **Missing:** The analysis is missing a critical step: attempting to identify the specific shared resource, the type of concurrent access, and the nature of the synchronization failure.  Without these details, you're stuck at the Class level.  For example: Is it a shared data structure? Is it a file? Is it a hardware register? How are threads attempting to change it?\n\n**Recommendation:** Attempt to refine the CWE to a more specific Base CWE.  Consider the following possibilities, and search for evidence to support them:\n\n*   **CWE-366: Race Condition within a Thread:** If the race condition involves two threads operating on the same shared resource within the same process, this is a more specific choice.\n*    **CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition:** This applies if the code checks the state of the mapping reference (e.g., validity) and then uses it, but the mapping can change between the check and the use. This seems like a probable scenario given the description.  Is the code checking if a pointer is valid before dereferencing, but it becomes invalid in between the check and the dereference?\n*   **CWE-413: Improper Resource Locking:** This suggests the race condition arises from failing to properly acquire or release a lock, or using an incorrect locking mechanism. This could lead to multiple threads accessing the same memory region simultaneously, causing corruption.\n*   **CWE-1223: Race Condition for Write-Once Attributes**: While less likely it could be the case that the mapping reference or part of it can only be set once.\n*   **CWE-1298: Hardware Logic Contains Race Conditions**: While this seems less likely if the race condition is purely due to the software, this could occur if the hardware itself was not correctly design with appropriate safeguards against the race condition.\n\n**2. CWE-413: Improper Resource Locking**\n\n*   **Confidence:** 0.5. Reasonable, given it's a possible consequence rather than the root cause based on the current description.\n*   **Justification:** The justification is that the race condition *could* lead to improper resource locking. This is a plausible consequence, but needs more evidence. What resource is being locked, and how is the locking failing?\n*   **Mitigations:** The mitigations for CWE-413 (non-conflicting privilege scheme, use synchronization when locking) are applicable if the root cause *is* improper locking. They point to the need to analyze the locking mechanisms used (or not used) in the vulnerable code.\n*   **Missing:** The analysis needs to identify the specific resource that is experiencing improper locking. What kind of lock is missing or improperly implemented?\n\n**Recommendation:** Investigate which of the potential mitigations were not followed, specifically identifying whether any synchronization was used around the code being examined.\n\n**3. CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition**\n\n*   **Confidence:** 0.5. Again, reasonable, given it's a possible, more specific type of race condition.\n*   **Justification:** The justification is that the race condition *could* be due to a TOCTOU issue. This is also plausible. Is the code checking the validity of the memory mapping before using it, but the mapping becomes invalid in between?\n*   **Mitigations:** The mitigations for CWE-367 (don't perform a check before use, set effective gid/uid, limit interleaving of operations) provide useful guidance. For example, can the check be eliminated entirely?  Or can the operation be made atomic?\n\n**Recommendation:** Carefully examine the code path to determine if a check is being performed on the memory mapping reference before it is being used. If so, investigate whether that check can be removed or moved closer to the point of use to reduce the window of opportunity for the race condition.\n\n**Additional Considerations & General Recommendations**\n\n*   **Memory Corruption Details:** The description mentions \"memory corruption.\" What kind of memory corruption? Is it an out-of-bounds write (CWE-787)? Is it a use-after-free (CWE-416)? Is it a double-free (CWE-415)?  Understanding the *type* of memory corruption is crucial for a more accurate CWE mapping. Look for clues in crash logs, debugging information, or code analysis.\n*   **Retriever Results:** The retriever results suggest other potential CWEs (e.g., CWE-822, CWE-823, CWE-787). While these might not be the *primary* issue, they could be related to the *consequences* of the race condition. For example, if the race condition results in an invalid pointer being dereferenced, CWE-822 might be relevant. Or if the race condition leads to writing to an out-of-bounds memory location, CWE-787 might be relevant.\n*   **Exploitability:**  Consider how an attacker might exploit this race condition.  This can help narrow down the possibilities and identify the most relevant CWEs.  What can an attacker control to influence the timing or the state of the shared resource?\n*   **CWE Chains:** The observed examples in the CWE specifications are useful for identifying potential chains. Look for examples where a race condition leads to a use-after-free or other memory corruption issues.\n*   **Abstraction Levels:** Remember that the goal is to map to the most specific (Base or Variant) CWE that accurately describes the vulnerability. Avoid staying at the Class level (like CWE-362) unless absolutely necessary.\n\n**Revised Analysis Strategy**\n\n1.  **Examine the Code (if possible):**  The most effective way to refine the CWE mapping is to analyze the source code of the vulnerable component.\n2.  **Analyze Crash Information:** Examine crash logs, stack traces, and debugging information to determine the type of memory corruption.\n3.  **Identify the Shared Resource:** Determine what resource (data structure, file, hardware register, etc.) is being accessed concurrently.\n4.  **Determine the Access Pattern:** Understand how multiple threads or processes are accessing the shared resource. Are they reading and writing? Are they modifying pointers?\n5.  **Refine the CWE Mapping:** Based on the information gathered, choose the most specific Base or Variant CWE that accurately describes the vulnerability.\n6.  **Revise Confidence Levels:** Adjust the confidence levels based on the strength of the evidence supporting the chosen CWEs.\n\nBy following this strategy and considering the full CWE specifications, you can create a more accurate and informative vulnerability analysis. Remember to document your reasoning and provide evidence to support your choices.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-367 | Time-of-check Time-of-use (TOCTOU) **Race Condition** | 0.85 | Base | Allowed | Primary CWE because the vulnerability is caused by a **race condition** where the state of a resource is checked and then used, but the state can change in between. |\n| CWE-787 | Out-of-bounds Write | 0.6 | Base | Allowed | Secondary candidate because the **race condition** can lead to memory corruption due to an out-of-bounds write. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe analysis focused on identifying a more specific CWE than the initial CWE-362.\n  - Parent-child hierarchical relationships: CWE-367 and CWE-787 are both children of higher-level classes related to concurrency and memory safety.\n  - Chain relationships: The race condition (CWE-367) leads to memory corruption, specifically an out-of-bounds write (CWE-787).\n  - Peer relationships: Considered CWE-413 (Improper Resource Locking) but determined CWE-367 was a more direct match to the TOCTOU condition likely happening.\n  - Abstraction levels: Moved from the Class-level CWE-362 to the Base-level CWE-367 for more specificity.\n\n```mermaid\ngraph TD\n    cwe367[\"CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe362[\"CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations\"]\n    \n    cwe367 -->|CANPRECEDE| cwe787\n    cwe367 -->|CHILDOF| cwe362\n    cwe787 -->|CHILDOF| cwe119\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe367 primary\n    class cwe787 secondary\n    class cwe362 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **race condition** due to a time-of-check time-of-use vulnerability (CWE-367).\n  - The initial flaw is that the code checks the state of a memory mapping reference, but the mapping can change between the check and the use.\n  - This leads to memory corruption, specifically an out-of-bounds write (CWE-787), because the code is using an invalid memory address.\n\n## Summary of Analysis\nThe initial analysis identified CWE-362 as the primary **weakness**. However, based on the criticism, a deeper dive was conducted to identify a more specific **root cause**.\n  - The vulnerability description states \"memory corruption in Kernel due to **race condition** while getting mapping reference\".\n  - The criticism highlighted that the analysis needed to identify the specific shared resource and nature of the synchronization failure, and explore more specific base-level CWEs that fall under CWE-362.\n  - Considering the \"getting mapping reference\" aspect, CWE-367 (Time-of-check Time-of-use (TOCTOU) **Race Condition**) became a strong candidate because it addresses situations where the state of a resource is checked before use, but changes in between.\n  - The memory corruption aspect aligns with CWE-787 (Out-of-bounds Write) as a consequence of using an invalid memory address due to the **race condition**.\n  - This refined analysis provides a more precise and actionable classification of the vulnerability, moving from a general Class-level CWE to a more specific Base-level CWE.\n  - The graph relationships show how CWE-367 leads to CWE-787.\n\nThe decision to select CWE-367 as the primary CWE is based on the evidence that the vulnerability involves a **race condition** specifically related to getting a mapping reference. The state of this mapping reference is checked, but it can change before it is used, leading to the **race condition**. This aligns directly with the description of CWE-367. The selection of CWE-787 is driven by the \"memory corruption\" aspect of the vulnerability, suggesting that the **race condition** leads to writing to an invalid memory location. These CWEs provide a more specific and accurate representation of the vulnerability than the initial analysis.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-822",
        "name": "Untrusted Pointer Dereference",
        "type": "Base",
        "original_content": "The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.",
        "relationships": [],
        "original_sparse_score": 239.71072850133817,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5095947156973336,
            "sparse": 239.71072850133817,
            "graph": 2.5284640584190274
          },
          "normalized_scores": {
            "dense": 0.5095947156973336,
            "sparse": 0.19176858280107054,
            "graph": 0.9030228780067956
          },
          "weighted_scores": {
            "dense": 0.17835815049406675,
            "sparse": 0.07670743312042821,
            "graph": 0.2257557195016989
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5095947156973336,
              "query_max": 0.529310952242844,
              "query_min": 0.49044781529281517,
              "normalized_score": 0.5095947156973336,
              "weight": 0.35,
              "weighted_score": 0.17835815049406675
            },
            "sparse": {
              "raw_score": 239.71072850133817,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.19176858280107054,
              "weight": 0.4,
              "weighted_score": 0.07670743312042821
            },
            "graph": {
              "raw_score": 2.5284640584190274,
              "query_max": 2.5284640584190274,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.9030228780067956,
              "weight": 0.25,
              "weighted_score": 0.2257557195016989
            }
          },
          "contribution_percentages": {
            "dense": 37.09447758203119,
            "sparse": 15.953418166642946,
            "graph": 46.95210425132586
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.48082130311619387,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.625067694051052
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.625067694051052
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6875744634561572
            }
          },
          "combined_score": 0.6875744634561572
        }
      },
      "similarity": 0.6875744634561572
    },
    {
      "metadata": {
        "doc_id": "CWE-823",
        "name": "Use of Out-of-range Pointer Offset",
        "type": "Base",
        "original_content": "The product performs pointer arithmetic on a valid pointer, but it uses an offset that can point outside of the intended range of valid memory locations for the resulting pointer.",
        "relationships": [],
        "original_sparse_score": 244.06334235610134,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5026293033023179,
            "sparse": 244.06334235610134,
            "graph": 1.9615578694942664
          },
          "normalized_scores": {
            "dense": 0.5026293033023179,
            "sparse": 0.19525067388488107,
            "graph": 0.700556381962238
          },
          "weighted_scores": {
            "dense": 0.17592025615581125,
            "sparse": 0.07810026955395244,
            "graph": 0.1751390954905595
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5026293033023179,
              "query_max": 0.529310952242844,
              "query_min": 0.49044781529281517,
              "normalized_score": 0.5026293033023179,
              "weight": 0.35,
              "weighted_score": 0.17592025615581125
            },
            "sparse": {
              "raw_score": 244.06334235610134,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.19525067388488107,
              "weight": 0.4,
              "weighted_score": 0.07810026955395244
            },
            "graph": {
              "raw_score": 1.9615578694942664,
              "query_max": 2.5284640584190274,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.700556381962238,
              "weight": 0.25,
              "weighted_score": 0.1751390954905595
            }
          },
          "contribution_percentages": {
            "dense": 40.99180059479435,
            "sparse": 18.19841981766891,
            "graph": 40.809779587536745
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4291596212003232,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5579075075604202
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5579075075604202
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6136982583164623
            }
          },
          "combined_score": 0.6136982583164623
        }
      },
      "similarity": 0.6136982583164623
    },
    {
      "metadata": {
        "doc_id": "CWE-367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "type": "Base",
        "original_content": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
        "relationships": [],
        "original_sparse_score": 307.8549356043734,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 307.8549356043734,
            "graph": 2.3295999999999997
          },
          "normalized_scores": {
            "sparse": 0.24628394848349872,
            "graph": 0.832
          },
          "weighted_scores": {
            "sparse": 0.0985135793933995,
            "graph": 0.208
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 307.8549356043734,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.24628394848349872,
              "weight": 0.4,
              "weighted_score": 0.0985135793933995
            },
            "graph": {
              "raw_score": 2.3295999999999997,
              "query_max": 2.5284640584190274,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.832,
              "weight": 0.25,
              "weighted_score": 0.208
            }
          },
          "contribution_percentages": {
            "sparse": 32.140037511017006,
            "graph": 67.85996248898299
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3065135793933995,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.39846765321141936
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.39846765321141936
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4383144185325613
            }
          },
          "combined_score": 0.4383144185325613
        }
      },
      "similarity": 0.4383144185325613
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 202.2818693808988,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 202.2818693808988,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.16182549550471903,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.06473019820188762,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 202.2818693808988,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.16182549550471903,
              "weight": 0.4,
              "weighted_score": 0.06473019820188762
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 2.5284640584190274,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 24.701315156452548,
            "graph": 75.29868484354746
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2620516267733162,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3406671148053111
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3406671148053111
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.37473382628584223
            }
          },
          "combined_score": 0.37473382628584223
        }
      },
      "similarity": 0.37473382628584223
    },
    {
      "metadata": {
        "doc_id": "CWE-413",
        "name": "Improper Resource Locking",
        "type": "Base",
        "original_content": "The product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource.",
        "relationships": [],
        "original_sparse_score": 227.25418247014818,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5172087561181269,
            "sparse": 227.25418247014818
          },
          "normalized_scores": {
            "dense": 0.5172087561181269,
            "sparse": 0.18180334597611855
          },
          "weighted_scores": {
            "dense": 0.1810230646413444,
            "sparse": 0.07272133839044742
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5172087561181269,
              "query_max": 0.529310952242844,
              "query_min": 0.49044781529281517,
              "normalized_score": 0.5172087561181269,
              "weight": 0.35,
              "weighted_score": 0.1810230646413444
            },
            "sparse": {
              "raw_score": 227.25418247014818,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.18180334597611855,
              "weight": 0.4,
              "weighted_score": 0.07272133839044742
            }
          },
          "contribution_percentages": {
            "dense": 71.34071233825951,
            "sparse": 28.659287661740514
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2537444030317918,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.32986772394132935
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.32986772394132935
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3628544963354623
            }
          },
          "combined_score": 0.3628544963354623
        }
      },
      "similarity": 0.3628544963354623
    },
    {
      "metadata": {
        "doc_id": "CWE-1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
        "relationships": [],
        "original_sparse_score": 190.62678875353006,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5108108653137958,
            "sparse": 190.62678875353006
          },
          "normalized_scores": {
            "dense": 0.5108108653137958,
            "sparse": 0.15250143100282404
          },
          "weighted_scores": {
            "dense": 0.17878380285982853,
            "sparse": 0.06100057240112962
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5108108653137958,
              "query_max": 0.529310952242844,
              "query_min": 0.49044781529281517,
              "normalized_score": 0.5108108653137958,
              "weight": 0.35,
              "weighted_score": 0.17878380285982853
            },
            "sparse": {
              "raw_score": 190.62678875353006,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.15250143100282404,
              "weight": 0.4,
              "weighted_score": 0.06100057240112962
            }
          },
          "contribution_percentages": {
            "dense": 74.56023882509338,
            "sparse": 25.439761174906618
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.23978437526095814,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3117196878392456
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3117196878392456
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.34289165662317017
            }
          },
          "combined_score": 0.34289165662317017
        }
      },
      "similarity": 0.34289165662317017
    },
    {
      "metadata": {
        "doc_id": "CWE-362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "type": "Class",
        "original_content": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.",
        "relationships": [],
        "original_sparse_score": 238.46096620425712,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4997266520422521,
            "sparse": 238.46096620425712
          },
          "normalized_scores": {
            "dense": 0.4997266520422521,
            "sparse": 0.1907687729634057
          },
          "weighted_scores": {
            "dense": 0.1749043282147882,
            "sparse": 0.07630750918536228
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4997266520422521,
              "query_max": 0.529310952242844,
              "query_min": 0.49044781529281517,
              "normalized_score": 0.4997266520422521,
              "weight": 0.35,
              "weighted_score": 0.1749043282147882
            },
            "sparse": {
              "raw_score": 238.46096620425712,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.1907687729634057,
              "weight": 0.4,
              "weighted_score": 0.07630750918536228
            }
          },
          "contribution_percentages": {
            "dense": 69.62423826238191,
            "sparse": 30.375761737618085
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.2512118374001505,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.20096946992012044
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.20096946992012044
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.21101794341612648
            }
          },
          "combined_score": 0.21101794341612648
        }
      },
      "similarity": 0.21101794341612648
    },
    {
      "metadata": {
        "doc_id": "CWE-415",
        "name": "Double Free",
        "type": "Variant",
        "original_content": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
        "relationships": [],
        "original_sparse_score": 262.3646263535153,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 262.3646263535153
          },
          "normalized_scores": {
            "sparse": 0.20989170108281224
          },
          "weighted_scores": {
            "sparse": 0.0839566804331249
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 262.3646263535153,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.20989170108281224,
              "weight": 0.4,
              "weighted_score": 0.0839566804331249
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.0839566804331249,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.10074801651974988
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.10074801651974988
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.11082281817172487
            }
          },
          "combined_score": 0.11082281817172487
        }
      },
      "similarity": 0.11082281817172487
    },
    {
      "metadata": {
        "doc_id": "CWE-390",
        "name": "Detection of Error Condition Without Action",
        "type": "Base",
        "original_content": "The product detects a specific error, but takes no actions to handle the error.",
        "relationships": [],
        "original_sparse_score": 233.1656541926027,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 233.1656541926027
          },
          "normalized_scores": {
            "sparse": 0.18653252335408216
          },
          "weighted_scores": {
            "sparse": 0.07461300934163287
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 233.1656541926027,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.18653252335408216,
              "weight": 0.4,
              "weighted_score": 0.07461300934163287
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.07461300934163287,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.09699691214412273
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.09699691214412273
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.10669660335853501
            }
          },
          "combined_score": 0.10669660335853501
        }
      },
      "similarity": 0.10669660335853501
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 244.37289880022445,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 244.37289880022445
          },
          "normalized_scores": {
            "sparse": 0.19549831904017956
          },
          "weighted_scores": {
            "sparse": 0.07819932761607183
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 244.37289880022445,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.19549831904017956,
              "weight": 0.4,
              "weighted_score": 0.07819932761607183
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.07819932761607183,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.0938391931392862
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0938391931392862
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.10322311245321482
            }
          },
          "combined_score": 0.10322311245321482
        }
      },
      "similarity": 0.10322311245321482
    },
    {
      "metadata": {
        "doc_id": "CWE-1314",
        "name": "Missing Write Protection for Parametric Data Values",
        "type": "Base",
        "original_content": "The device does not write-protect the parametric data values for sensors that scale the sensor value, allowing untrusted software to manipulate the apparent result and potentially damage hardware or cause operational failure.",
        "relationships": [],
        "original_sparse_score": 202.1324413355269,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 202.1324413355269
          },
          "normalized_scores": {
            "sparse": 0.1617059530684215
          },
          "weighted_scores": {
            "sparse": 0.06468238122736861
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 202.1324413355269,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.1617059530684215,
              "weight": 0.4,
              "weighted_score": 0.06468238122736861
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06468238122736861,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.0840870955955792
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0840870955955792
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.09249580515513713
            }
          },
          "combined_score": 0.09249580515513713
        }
      },
      "similarity": 0.09249580515513713
    },
    {
      "metadata": {
        "doc_id": "CWE-476",
        "name": "NULL Pointer Dereference",
        "type": "Base",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "relationships": [],
        "original_sparse_score": 195.1717385160178,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 195.1717385160178
          },
          "normalized_scores": {
            "sparse": 0.15613739081281425
          },
          "weighted_scores": {
            "sparse": 0.0624549563251257
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 195.1717385160178,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.15613739081281425,
              "weight": 0.4,
              "weighted_score": 0.0624549563251257
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.0624549563251257,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.08119144322266342
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08119144322266342
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08931058754492976
            }
          },
          "combined_score": 0.08931058754492976
        }
      },
      "similarity": 0.08931058754492976
    },
    {
      "metadata": {
        "doc_id": "CWE-459",
        "name": "Incomplete Cleanup",
        "type": "Base",
        "original_content": "The product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.",
        "relationships": [],
        "original_sparse_score": 194.4771307465393,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 194.4771307465393
          },
          "normalized_scores": {
            "sparse": 0.15558170459723145
          },
          "weighted_scores": {
            "sparse": 0.06223268183889258
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 194.4771307465393,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.15558170459723145,
              "weight": 0.4,
              "weighted_score": 0.06223268183889258
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06223268183889258,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.08090248639056036
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08090248639056036
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.0889927350296164
            }
          },
          "combined_score": 0.0889927350296164
        }
      },
      "similarity": 0.0889927350296164
    },
    {
      "metadata": {
        "doc_id": "CWE-124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "type": "Base",
        "original_content": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "relationships": [],
        "original_sparse_score": 188.43270147324594,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 188.43270147324594
          },
          "normalized_scores": {
            "sparse": 0.15074616117859677
          },
          "weighted_scores": {
            "sparse": 0.06029846447143871
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 188.43270147324594,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.15074616117859677,
              "weight": 0.4,
              "weighted_score": 0.06029846447143871
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06029846447143871,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.07838800381287032
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07838800381287032
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08622680419415736
            }
          },
          "combined_score": 0.08622680419415736
        }
      },
      "similarity": 0.08622680419415736
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 187.0893626623647,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 187.0893626623647
          },
          "normalized_scores": {
            "sparse": 0.14967149012989175
          },
          "weighted_scores": {
            "sparse": 0.059868596051956706
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 187.0893626623647,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.14967149012989175,
              "weight": 0.4,
              "weighted_score": 0.059868596051956706
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.059868596051956706,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.07782917486754372
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07782917486754372
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.08561209235429809
            }
          },
          "combined_score": 0.08561209235429809
        }
      },
      "similarity": 0.08561209235429809
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 185.43292975292084,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 185.43292975292084
          },
          "normalized_scores": {
            "sparse": 0.14834634380233666
          },
          "weighted_scores": {
            "sparse": 0.05933853752093467
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 185.43292975292084,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.14834634380233666,
              "weight": 0.4,
              "weighted_score": 0.05933853752093467
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.05933853752093467,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.07714009877721507
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07714009877721507
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08485410865493659
            }
          },
          "combined_score": 0.08485410865493659
        }
      },
      "similarity": 0.08485410865493659
    },
    {
      "metadata": {
        "doc_id": "CWE-392",
        "name": "Missing Report of Error Condition",
        "type": "Base",
        "original_content": "The product encounters an error but does not provide a status code or return value to indicate that an error has occurred.",
        "relationships": [],
        "original_sparse_score": 179.74072540038802,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 179.74072540038802
          },
          "normalized_scores": {
            "sparse": 0.14379258032031042
          },
          "weighted_scores": {
            "sparse": 0.057517032128124174
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 179.74072540038802,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.14379258032031042,
              "weight": 0.4,
              "weighted_score": 0.057517032128124174
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.057517032128124174,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.07477214176656143
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07477214176656143
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08224935594321757
            }
          },
          "combined_score": 0.08224935594321757
        }
      },
      "similarity": 0.08224935594321757
    },
    {
      "metadata": {
        "doc_id": "CWE-252",
        "name": "Unchecked Return Value",
        "type": "Base",
        "original_content": "The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.",
        "relationships": [],
        "original_sparse_score": 178.65877493151254,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 178.65877493151254
          },
          "normalized_scores": {
            "sparse": 0.14292701994521004
          },
          "weighted_scores": {
            "sparse": 0.05717080797808402
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 178.65877493151254,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.14292701994521004,
              "weight": 0.4,
              "weighted_score": 0.05717080797808402
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.05717080797808402,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.07432205037150923
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07432205037150923
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08175425540866016
            }
          },
          "combined_score": 0.08175425540866016
        }
      },
      "similarity": 0.08175425540866016
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 180.37638976805272,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 180.37638976805272
          },
          "normalized_scores": {
            "sparse": 0.14430111181444216
          },
          "weighted_scores": {
            "sparse": 0.057720444725776865
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 180.37638976805272,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.14430111181444216,
              "weight": 0.4,
              "weighted_score": 0.057720444725776865
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.057720444725776865,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.04617635578062149
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04617635578062149
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.036941084624497196
            }
          },
          "combined_score": 0.036941084624497196
        }
      },
      "similarity": 0.036941084624497196
    },
    {
      "metadata": {
        "doc_id": "CWE-697",
        "name": "Incorrect Comparison",
        "type": "Pillar",
        "original_content": "The product compares two entities in a security-relevant context, but the comparison is incorrect, which may lead to resultant weaknesses.",
        "relationships": [],
        "original_sparse_score": 177.57516182867596,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is extremely high-level, a Pillar. However, sometimes this weakness is forced to be used due to the lack of in-depth weakness research. See Research Gaps.",
          "comments": "Where feasible, consider children or descendants of this entry instead.",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 177.57516182867596
          },
          "normalized_scores": {
            "sparse": 0.14206012946294078
          },
          "weighted_scores": {
            "sparse": 0.05682405178517631
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 177.57516182867596,
              "query_max": 307.8549356043734,
              "query_min": 177.57516182867596,
              "normalized_score": 0.14206012946294078,
              "weight": 0.4,
              "weighted_score": 0.05682405178517631
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.6,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.05682405178517631,
            "abstraction": {
              "type": "pillar",
              "factor": 0.6,
              "score_after": 0.03409443107110579
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.03409443107110579
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is extremely high-level, a Pillar. However, sometimes this weakness is forced to be used due to the lack of in-depth weakness research. See Research Gaps.",
                "comments": "Where feasible, consider children or descendants of this entry instead.",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.02727554485688463
            }
          },
          "combined_score": 0.02727554485688463
        }
      },
      "similarity": 0.02727554485688463
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-362",
      "CWE-367",
      "CWE-366",
      "CWE-413"
    ],
    "critic_additional": [
      "CWE-823",
      "CWE-416",
      "CWE-787",
      "CWE-1298",
      "CWE-415",
      "CWE-1223",
      "CWE-822"
    ]
  }
}