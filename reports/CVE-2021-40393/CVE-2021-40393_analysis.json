{
  "cve_id": "CVE-2021-40393",
  "description": "An out-of-bounds write vulnerability exists in the RS-274X aperture macro variables handling functionality of Gerbv 2.7.0 and dev (commit b5f1eacd) and the forked version of Gerbv (commit 71493260). A specially-crafted gerber file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.",
  "key_phrases": {
    "rootcause": "out-of-bounds write",
    "weakness": "",
    "impact": "code execution",
    "vector": "specially-crafted gerber file",
    "attacker": "attacker",
    "product": "Gerbv",
    "version": "2.7.0 and dev (commit b5f1eacd), forked version (commit 71493260)",
    "component": "RS-274X aperture macro variables handling functionality"
  },
  "reference_content": "Based on the provided content, here's a breakdown of the vulnerability described in CVE-2021-40393:\n\n**Root Cause:**\n\n*   The vulnerability lies in the way `gerbv` handles RS-274X format aperture macro variables, specifically during the parsing and execution of aperture macro templates.\n*   The `simplify_aperture_macro` function lacks proper bounds checking when accessing and modifying an array of parameters used in the aperture macro execution. This leads to an out-of-bounds write.\n\n**Weaknesses/Vulnerabilities:**\n\n*   **Out-of-bounds write:** The core vulnerability is the ability to write data outside of the allocated memory buffer for storing aperture macro parameters.\n*   **Missing Bounds Checks:**  The code does not validate if the variable number (used as an index in the parameter array `lp`) is within the valid range.\n*   **Lax Parsing of Template Macros:** The parser allows for assignment to arbitrary variables, including negative indices which are then used to write out of bounds.\n\n**Impact of Exploitation:**\n\n*   **Arbitrary Code Execution:** By writing to out-of-bounds memory, an attacker can overwrite critical data or program instructions, potentially leading to arbitrary code execution. This is further facilitated by the fact that the values written in memory are directly controlled by the attacker.\n*   **Denial of Service:** The vulnerability can cause the program to crash, leading to a denial of service.\n\n**Attack Vectors:**\n\n*   **Malicious Gerber File:** The vulnerability is triggered by processing a specially crafted Gerber file containing a malicious aperture macro definition and instantiation.\n*   **File Processing:**  The attacker supplies the malicious file to `gerbv`, which then parses and executes the vulnerable macro, triggering the out-of-bounds write.\n\n**Required Attacker Capabilities/Position:**\n\n*   **Ability to provide input to gerbv:** The attacker needs to be able to provide the malicious Gerber file to `gerbv` for processing. This may involve uploading a crafted file to a service using gerbv for rendering.\n*   **No user interaction or privileges:** The Talos report notes that the software is often used in automated workflows, making it reachable via the network without user interaction or specific privileges.\n\n**Additional Details from the Content:**\n\n*   **Vulnerable Functions:** The key functions involved are `gerbv_open_image`, `gerber_is_rs274x_p`, `parse_gerb`, `gerber_parse_file_segment`, `parse_rs274x`, `parse_aperture_macro`, `parse_aperture_definition`, and `simplify_aperture_macro`.\n*   **Virtual Machine:**  `parse_aperture_macro` effectively constructs a virtual machine to interpret aperture macro templates, using a virtual stack and a parameter array. This is how the out-of-bounds access is enabled.\n*   **Example Exploit:** The provided example shows how a negative variable name in an `AM` command can cause an out-of-bounds write when processing the associated `AD` command.\n*   **Affected Versions:** gerbv versions 2.7.0 and dev (commit b5f1eacd) and forked version of gerbv (commit 71493260) are vulnerable.\n*   **CVSS Score:** The vulnerability has a CVSSv3 score of 10.0, indicating a critical severity.\n\nThe provided information gives more detailed technical insights compared to a standard CVE description, including a code-level explanation of the vulnerability and how it can be triggered.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {
          "CWE-787": 1
        },
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {
          "CWE-787": 2,
          "CWE-755": 1
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 0.5
          },
          {
            "cwes": [
              "CWE-787",
              "CWE-755"
            ],
            "frequency": 1,
            "proportion": 0.5
          }
        ]
      },
      "85": {
        "cwe_counts": {
          "CWE-787": 2,
          "CWE-755": 1
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 0.5
          },
          {
            "cwes": [
              "CWE-787",
              "CWE-755"
            ],
            "frequency": 1,
            "proportion": 0.5
          }
        ]
      },
      "80": {
        "cwe_counts": {
          "CWE-125": 2,
          "CWE-787": 1
        },
        "total_samples": 3,
        "distribution": [
          {
            "cwes": [
              "CWE-125"
            ],
            "frequency": 2,
            "proportion": 0.667
          },
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 0.333
          }
        ]
      },
      "75": {
        "cwe_counts": {
          "CWE-787": 2,
          "CWE-755": 1
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 0.5
          },
          {
            "cwes": [
              "CWE-787",
              "CWE-755"
            ],
            "frequency": 1,
            "proportion": 0.5
          }
        ]
      },
      "70": {
        "cwe_counts": {
          "CWE-787": 8,
          "CWE-502": 2,
          "CWE-755": 1,
          "CWE-908": 1
        },
        "total_samples": 11,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 7,
            "proportion": 0.636
          },
          {
            "cwes": [
              "CWE-502"
            ],
            "frequency": 2,
            "proportion": 0.182
          },
          {
            "cwes": [
              "CWE-787",
              "CWE-755"
            ],
            "frequency": 1,
            "proportion": 0.091
          },
          {
            "cwes": [
              "CWE-908"
            ],
            "frequency": 1,
            "proportion": 0.091
          }
        ]
      }
    },
    "cwe_consensus": "CWE-787",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 1,
        "90": 2,
        "85": 2,
        "80": 3,
        "75": 2,
        "70": 11
      },
      "top_cwes_by_threshold": {
        "95": [
          [
            "CWE-787",
            1
          ]
        ],
        "90": [
          [
            "CWE-787",
            2
          ],
          [
            "CWE-755",
            1
          ]
        ],
        "85": [
          [
            "CWE-787",
            2
          ],
          [
            "CWE-755",
            1
          ]
        ],
        "80": [
          [
            "CWE-125",
            2
          ],
          [
            "CWE-787",
            1
          ]
        ],
        "75": [
          [
            "CWE-787",
            2
          ],
          [
            "CWE-755",
            1
          ]
        ],
        "70": [
          [
            "CWE-787",
            8
          ],
          [
            "CWE-502",
            2
          ],
          [
            "CWE-755",
            1
          ]
        ]
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [
          "787"
        ],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [
          "787"
        ],
        "total": 2,
        "frequency": 1,
        "proportion": 0.5
      },
      {
        "similarity": 90,
        "cwes": [
          "787",
          "755"
        ],
        "total": 2,
        "frequency": 1,
        "proportion": 0.5
      },
      {
        "similarity": 85,
        "cwes": [
          "787"
        ],
        "total": 2,
        "frequency": 1,
        "proportion": 0.5
      },
      {
        "similarity": 85,
        "cwes": [
          "787",
          "755"
        ],
        "total": 2,
        "frequency": 1,
        "proportion": 0.5
      },
      {
        "similarity": 80,
        "cwes": [
          "125"
        ],
        "total": 3,
        "frequency": 2,
        "proportion": 0.667
      },
      {
        "similarity": 80,
        "cwes": [
          "787"
        ],
        "total": 3,
        "frequency": 1,
        "proportion": 0.333
      },
      {
        "similarity": 75,
        "cwes": [
          "787"
        ],
        "total": 2,
        "frequency": 1,
        "proportion": 0.5
      },
      {
        "similarity": 75,
        "cwes": [
          "787",
          "755"
        ],
        "total": 2,
        "frequency": 1,
        "proportion": 0.5
      },
      {
        "similarity": 70,
        "cwes": [
          "787"
        ],
        "total": 11,
        "frequency": 7,
        "proportion": 0.636
      },
      {
        "similarity": 70,
        "cwes": [
          "502"
        ],
        "total": 11,
        "frequency": 2,
        "proportion": 0.182
      },
      {
        "similarity": 70,
        "cwes": [
          "787",
          "755"
        ],
        "total": 11,
        "frequency": 1,
        "proportion": 0.091
      },
      {
        "similarity": 70,
        "cwes": [
          "908"
        ],
        "total": 11,
        "frequency": 1,
        "proportion": 0.091
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-787",
    "top_cwes": [
      [
        "CWE-787",
        16
      ],
      [
        "CWE-755",
        4
      ],
      [
        "CWE-125",
        2
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 21
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                     | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :--------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-787 | Out-of-bounds Write  | 1.0       | Base                 | Allowed                        | Primary CWE                      |\n| CWE-129 | Improper Validation of Array Index  | 0.65      | Variant                  | Allowed                        | Secondary Candidate                      |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The vulnerability is described as an **out-of-bounds write** in the RS-274X aperture macro variables handling functionality of Gerbv. The CVE reference summary confirms that the root cause is the lack of proper bounds checking when accessing and modifying an array of parameters used in the aperture macro execution leading to an out-of-bounds write. Specifically, the code doesn't validate if the variable number (array index) is within the valid range. This directly corresponds to CWE-787 (Out-of-bounds Write). The retriever results also list CWE-787 as a relevant CWE with a high graph score (1.0). MITRE mapping guidance for CWE-787 indicates that it is ALLOWED for out-of-bounds write vulnerabilities.\"\n  \n  - *Relationship Analysis:* \"CWE-787 is a base level CWE and a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). It can be related to other CWEs via chain relationships like CanFollow CWE-825 (Expired Pointer Dereference) and CanPrecede CWE-269 (Privilege Management) and CWE-399 (Resource Management Errors) as the out-of-bounds write could potentially lead to those conditions. However, the primary weakness is the out-of-bounds write itself.\"\n\n- **Confidence Score:** 1.0 (High confidence due to explicit mention of out-of-bounds write in both the vulnerability description and the CVE reference details, and the high retriever score for CWE-787)\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The vulnerability description and the CVE reference summary highlights that the **out-of-bounds write** occurs because of missing bounds checking on the array index (variable number). This directly relates to CWE-129 (Improper Validation of Array Index). The retriever results lists CWE-129 as a relevant CWE. MITRE mapping guidance for CWE-129 indicates that it is ALLOWED.\"\n  \n  - *Relationship Analysis:* \"CWE-129 is a variant level CWE. It can be related to other CWEs via chain relationships but is tightly coupled to the primary weakness.\"\n\n- **Confidence Score:** 0.65 (Medium confidence due to explicit mention of improper array index validation in the CVE reference summary)",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                     | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :--------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-787 | Out-of-bounds Write  | 1.0       | Base                 | Allowed                        | Primary CWE                      |\n| CWE-129 | Improper Validation of Array Index  | 0.65      | Variant                  | Allowed                        | Secondary Candidate                      |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The vulnerability is described as an **out-of-bounds write** in the RS-274X aperture macro variables handling functionality of Gerbv. The CVE reference summary confirms that the root cause is the lack of proper bounds checking when accessing and modifying an array of parameters used in the aperture macro execution leading to an out-of-bounds write. Specifically, the code doesn't validate if the variable number (array index) is within the valid range. This directly corresponds to CWE-787 (Out-of-bounds Write). The retriever results also list CWE-787 as a relevant CWE with a high graph score (1.0). MITRE mapping guidance for CWE-787 indicates that it is ALLOWED for out-of-bounds write vulnerabilities.\"\n  \n  - *Relationship Analysis:* \"CWE-787 is a base level CWE and a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). It can be related to other CWEs via chain relationships like CanFollow CWE-825 (Expired Pointer Dereference) and CanPrecede CWE-269 (Privilege Management) and CWE-399 (Resource Management Errors) as the out-of-bounds write could potentially lead to those conditions. However, the primary weakness is the out-of-bounds write itself.\"\n\n- **Confidence Score:** 1.0 (High confidence due to explicit mention of out-of-bounds write in both the vulnerability description and the CVE reference details, and the high retriever score for CWE-787)\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The vulnerability description and the CVE reference summary highlights that the **out-of-bounds write** occurs because of missing bounds checking on the array index (variable number). This directly relates to CWE-129 (Improper Validation of Array Index). The retriever results lists CWE-129 as a relevant CWE. MITRE mapping guidance for CWE-129 indicates that it is ALLOWED.\"\n  \n  - *Relationship Analysis:* \"CWE-129 is a variant level CWE. It can be related to other CWEs via chain relationships but is tightly coupled to the primary weakness.\"\n\n- **Confidence Score:** 0.65 (Medium confidence due to explicit mention of improper array index validation in the CVE reference summary)",
  "criticism": "Okay, I've reviewed the analysis provided, considering the full CWE specifications included. Here's a breakdown of my critique, focusing on the strengths and weaknesses of the assessment, and suggestions for improvement:\n\n**Strengths:**\n\n*   **Clear Identification of Root Cause:** The analysis correctly identifies the \"out-of-bounds write\" as a core problem. It digs into the root cause, mentioning the lack of bounds checking and lax parsing.\n*   **Good Use of Evidence:** The analysis uses direct quotes and summarization of the CVE description and its references to support its claims. The inclusion of the CVE reference content summary is highly valuable.\n*   **Sound Justification:** The explanations for both CWE-787 and CWE-129 are well-reasoned and based on the evidence provided.\n*   **Awareness of CWE Relationships:** The discussion of the relationship between CWE-787 and CWE-119, and other related CWEs, demonstrates a good understanding of the CWE hierarchy and chaining concepts.\n*   **Consideration of Retriever Results:** The analysis includes the Retriever results and acknowledges the relevance of the high graph score of CWE-787.\n*   **Mapping Guidance:** The analysis notes that the CWEs are \"ALLOWED\"\n*   **CWE Examples:** The document lists good examples, such as CVE-2021-22991 for CWE-119.\n\n**Weaknesses and Suggestions for Improvement:**\n\n*   **CWE-129 Confidence Could Be Higher:** While the reasoning for a confidence score of 0.65 for CWE-129 (Improper Validation of Array Index) is valid, the confidence could be higher. The vulnerability description *explicitly* mentions the lack of bounds checking on array indices. Given this, and the retriever results, a confidence score of 0.75-0.80 would be more appropriate.\n*   **Over-Reliance on \"Retriever Results\":** The Retriever results should be used to inform your decision, not dictate it. While the high graph score for CWE-787 is a positive signal, it shouldn't be the primary reason for choosing it. Your analysis should be the driving factor.\n*   **Missed Opportunity: CWE-119 Dismissal:** The analysis correctly states that CWE-119 should be avoided when lower-level CWEs are available. This is good, and the proper lower-level CWEs were selected.\n*   **Missed Opportunity: Chaining:** While the analysis *mentions* chaining, it doesn't explicitly document a *chain*.  Consider formalizing this, potentially by adding a chain like:\n    *   CWE-20 Improper Input Validation -> CWE-129 Improper Validation of Array Index -> CWE-787 Out-of-bounds Write.\n    This emphasizes that it *starts* with a lack of input validation (CWE-20) which enables the array index to be improperly validated, which results in the write.\n*   **Lack of Consideration for CWE-20:** The analysis doesn't include CWE-20 (Improper Input Validation) as a possible CWE in the Summary table, even though it's a part of a chain that leads to CWE-129 and CWE-787. The fact that the input isn't validated is a KEY component of the vulnerability. Add CWE-20 to the Summary table as a secondary candidate.\n*   **Lack of Specificity in Mitigations:** The mitigations sections of the CWE specifications are *very* general. Try to map these back to the specific context of *this* vulnerability. For example, for CWE-129:\n\n    *   Instead of just \"Use an input validation framework,\" explain *how* a framework could be used to prevent the vulnerability.  For instance, \"Implement input validation to ensure aperture macro variable numbers are within acceptable bounds before using them as array indices.  Reject Gerber files with invalid variable numbers.\"\n    *   Similarly, for CWE-787, instead of just saying \"Use a language that provides memory management\" discuss how the specific language features should be applied to the aperture macro parsing logic.\n*  **Observed Examples:** The document includes Observed Examples for CWE-119, but none of the selected CWEs. It would improve the document to add such examples.\n\n**Revised Summary Table:**\n\n| CWE ID  | CWE Name                     | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :--------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-787 | Out-of-bounds Write  | 1.0       | Base                 | Allowed                        | Primary CWE                      |\n| CWE-129 | Improper Validation of Array Index  | 0.80      | Variant                  | Allowed                        | Secondary CWE                      |\n| CWE-20 | Improper Input Validation  | 0.70      | Class                  | Allowed                        | Supporting CWE                      |\n\n**Revised Chain:**\n\nCWE-20 Improper Input Validation -> CWE-129 Improper Validation of Array Index -> CWE-787 Out-of-bounds Write\n\n**In summary,** the analysis is good and identifies the core problem well. The suggested improvements focus on adding more detail to the chain, strengthening the support for CWE-129 and adding CWE-20, and making the potential mitigations more specific to the vulnerability context.",
  "resolution": "# Summary\n| CWE ID  | CWE Name                     | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :--------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-787 | **Out-of-bounds Write** | 1.0       | Base                 | Allowed                        | Primary **CWE**                      |\n| CWE-129 | **Improper Validation of Array Index**  | 0.80      | Variant                  | Allowed                        | Secondary **CWE**                      |\n| CWE-20 | **Improper Input Validation**  | 0.70      | Class                  | Allowed                        | Supporting **CWE**                      |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe analysis focuses on identifying the root cause and contributing factors to the vulnerability. CWE-787 (**Out-of-bounds Write**) is correctly identified as the primary weakness due to the direct mention of an out-of-bounds write in the vulnerability description. CWE-129 (**Improper Validation of Array Index**) is included as it describes the immediate cause of the out-of-bounds write. CWE-20 (**Improper Input Validation**) is included as a contributing factor, as the lack of input validation enables the improper array index validation.\n\n```mermaid\ngraph TD\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe129[\"CWE-129: Improper Validation of Array Index\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n\n    cwe129 -->|CANPRECEDE| cwe787\n    cwe20 -->|CANPRECEDE| cwe129\n    cwe787 -->|CHILDOF| cwe119\n    cwe129 -->|CHILDOF| cwe119\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe787 primary\n    class cwe129 secondary\n    class cwe20 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-20 (Improper Input Validation)**, where the product does not properly validate the input. This leads to **CWE-129 (Improper Validation of Array Index)**, where the product uses an untrusted input when calculating or using an array index, but does not validate or incorrectly validates the index. This then leads to **CWE-787 (Out-of-bounds Write)**, where the product writes data past the end, or before the beginning, of the intended buffer.\n\n## Summary of Analysis\nThe initial analysis correctly identified **CWE-787 (Out-of-bounds Write)** as the primary **weakness**. The criticism suggested increasing the confidence score for **CWE-129 (Improper Validation of Array Index)**, which is reflected in the updated table. The addition of **CWE-20 (Improper Input Validation)** provides a more complete view of the vulnerability chain. The evidence provided in the vulnerability description supports the inclusion of all three **CWEs**.\n\nThe following quotes from the vulnerability description support the classification:\n*   \"An **out-of-bounds write** vulnerability exists in the RS-274X aperture macro variables handling functionality of Gerbv 2.7.0\" - Supports **CWE-787**.\n*   \"A specially-crafted gerber file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.\" - Supports **CWE-20** by indicating a lack of input validation, allowing a malicious file to trigger the vulnerability.\n* The CVE reference summary confirms that the root cause is the lack of proper bounds checking when accessing and modifying an array of parameters used in the aperture macro execution leading to an out-of-bounds write. Specifically, the code doesn't validate if the variable number (array index) is within the valid range - Supports **CWE-129**.\n\nThe selected **CWEs** are at the optimal level of specificity because they accurately describe the root cause and contributing factors to the vulnerability. **CWE-787** is a base level **CWE** that directly describes the **out-of-bounds write**. **CWE-129** is a variant level **CWE** that describes the improper validation of the array index. **CWE-20** is a class level **CWE** that highlights the lack of input validation.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 373.43057146834093,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5734557822916385,
            "sparse": 373.43057146834093,
            "graph": 2.575963529797671
          },
          "normalized_scores": {
            "dense": 0.5734557822916385,
            "sparse": 0.29874445717467274,
            "graph": 0.9199869749277396
          },
          "weighted_scores": {
            "dense": 0.20070952380207346,
            "sparse": 0.1194977828698691,
            "graph": 0.2299967437319349
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5734557822916385,
              "query_max": 0.5914371887707867,
              "query_min": 0.5427409533817478,
              "normalized_score": 0.5734557822916385,
              "weight": 0.35,
              "weighted_score": 0.20070952380207346
            },
            "sparse": {
              "raw_score": 373.43057146834093,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.29874445717467274,
              "weight": 0.4,
              "weighted_score": 0.1194977828698691
            },
            "graph": {
              "raw_score": 2.575963529797671,
              "query_max": 3.302,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.9199869749277396,
              "weight": 0.25,
              "weighted_score": 0.2299967437319349
            }
          },
          "contribution_percentages": {
            "dense": 36.47910691583288,
            "sparse": 21.718811917533454,
            "graph": 41.80208116663368
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5502040504038774,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7152652655250407
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7152652655250407
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7867917920775448
            }
          },
          "combined_score": 0.7867917920775448
        }
      },
      "similarity": 0.7867917920775448
    },
    {
      "metadata": {
        "doc_id": "CWE-252",
        "name": "Unchecked Return Value",
        "type": "Base",
        "original_content": "The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.",
        "relationships": [],
        "original_sparse_score": 423.71538491293086,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5712068288859367,
            "sparse": 423.71538491293086,
            "graph": 2.297714502634055
          },
          "normalized_scores": {
            "dense": 0.5712068288859367,
            "sparse": 0.33897230793034466,
            "graph": 0.8206123223693054
          },
          "weighted_scores": {
            "dense": 0.1999223901100778,
            "sparse": 0.13558892317213786,
            "graph": 0.20515308059232634
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5712068288859367,
              "query_max": 0.5914371887707867,
              "query_min": 0.5427409533817478,
              "normalized_score": 0.5712068288859367,
              "weight": 0.35,
              "weighted_score": 0.1999223901100778
            },
            "sparse": {
              "raw_score": 423.71538491293086,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.33897230793034466,
              "weight": 0.4,
              "weighted_score": 0.13558892317213786
            },
            "graph": {
              "raw_score": 2.297714502634055,
              "query_max": 3.302,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.8206123223693054,
              "weight": 0.25,
              "weighted_score": 0.20515308059232634
            }
          },
          "contribution_percentages": {
            "dense": 36.9771696407418,
            "sparse": 25.078204651220375,
            "graph": 37.94462570803782
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.540664393874542,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7028637120369047
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7028637120369047
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7731500832405952
            }
          },
          "combined_score": 0.7731500832405952
        }
      },
      "similarity": 0.7731500832405952
    },
    {
      "metadata": {
        "doc_id": "CWE-129",
        "name": "Improper Validation of Array Index",
        "type": "Variant",
        "original_content": "The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.",
        "relationships": [],
        "original_sparse_score": 374.57002888048106,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5441749664653888,
            "sparse": 374.57002888048106,
            "graph": 1.9323523073026154
          },
          "normalized_scores": {
            "dense": 0.5441749664653888,
            "sparse": 0.2996560231043848,
            "graph": 0.6901258240366485
          },
          "weighted_scores": {
            "dense": 0.19046123826288605,
            "sparse": 0.11986240924175394,
            "graph": 0.17253145600916212
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5441749664653888,
              "query_max": 0.5914371887707867,
              "query_min": 0.5427409533817478,
              "normalized_score": 0.5441749664653888,
              "weight": 0.35,
              "weighted_score": 0.19046123826288605
            },
            "sparse": {
              "raw_score": 374.57002888048106,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.2996560231043848,
              "weight": 0.4,
              "weighted_score": 0.11986240924175394
            },
            "graph": {
              "raw_score": 1.9323523073026154,
              "query_max": 3.302,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.6901258240366485,
              "weight": 0.25,
              "weighted_score": 0.17253145600916212
            }
          },
          "contribution_percentages": {
            "dense": 39.444801738010796,
            "sparse": 24.823680721089808,
            "graph": 35.7315175408994
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4828551035138021,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.5794261242165625
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5794261242165625
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6373687366382188
            }
          },
          "combined_score": 0.6373687366382188
        }
      },
      "similarity": 0.6373687366382188
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 402.5663062836271,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 402.5663062836271,
            "graph": 3.302
          },
          "normalized_scores": {
            "sparse": 0.3220530450269017,
            "graph": 1.0
          },
          "weighted_scores": {
            "sparse": 0.12882121801076069,
            "graph": 0.25
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 402.5663062836271,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.3220530450269017,
              "weight": 0.4,
              "weighted_score": 0.12882121801076069
            },
            "graph": {
              "raw_score": 3.302,
              "query_max": 3.302,
              "query_min": 1.6848000000000003,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "sparse": 34.00580851495531,
            "graph": 65.99419148504468
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3788212180107607,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4924675834139889
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4924675834139889
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5417143417553878
            }
          },
          "combined_score": 0.5417143417553878
        }
      },
      "similarity": 0.5417143417553878
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 363.37455788224804,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5617290197360914,
            "sparse": 363.37455788224804
          },
          "normalized_scores": {
            "dense": 0.5617290197360914,
            "sparse": 0.2906996463057984
          },
          "weighted_scores": {
            "dense": 0.19660515690763197,
            "sparse": 0.11627985852231937
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5617290197360914,
              "query_max": 0.5914371887707867,
              "query_min": 0.5427409533817478,
              "normalized_score": 0.5617290197360914,
              "weight": 0.35,
              "weighted_score": 0.19660515690763197
            },
            "sparse": {
              "raw_score": 363.37455788224804,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.2906996463057984,
              "weight": 0.4,
              "weighted_score": 0.11627985852231937
            }
          },
          "contribution_percentages": {
            "dense": 62.83623286895563,
            "sparse": 37.163767131044374
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.31288501542995134,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.40675052005893675
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.40675052005893675
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.44742557206483047
            }
          },
          "combined_score": 0.44742557206483047
        }
      },
      "similarity": 0.44742557206483047
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 346.0790387780289,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5643973712220594,
            "sparse": 346.0790387780289
          },
          "normalized_scores": {
            "dense": 0.5643973712220594,
            "sparse": 0.2768632310224231
          },
          "weighted_scores": {
            "dense": 0.19753907992772077,
            "sparse": 0.11074529240896924
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5643973712220594,
              "query_max": 0.5914371887707867,
              "query_min": 0.5427409533817478,
              "normalized_score": 0.5643973712220594,
              "weight": 0.35,
              "weighted_score": 0.19753907992772077
            },
            "sparse": {
              "raw_score": 346.0790387780289,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.2768632310224231,
              "weight": 0.4,
              "weighted_score": 0.11074529240896924
            }
          },
          "contribution_percentages": {
            "dense": 64.0769035518869,
            "sparse": 35.92309644811309
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.30828437233669004,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4007696840376971
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4007696840376971
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4408466524414668
            }
          },
          "combined_score": 0.4408466524414668
        }
      },
      "similarity": 0.4408466524414668
    },
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 345.95329305573705,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.559736157205695,
            "sparse": 345.95329305573705
          },
          "normalized_scores": {
            "dense": 0.559736157205695,
            "sparse": 0.27676263444458965
          },
          "weighted_scores": {
            "dense": 0.19590765502199325,
            "sparse": 0.11070505377783586
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.559736157205695,
              "query_max": 0.5914371887707867,
              "query_min": 0.5427409533817478,
              "normalized_score": 0.559736157205695,
              "weight": 0.35,
              "weighted_score": 0.19590765502199325
            },
            "sparse": {
              "raw_score": 345.95329305573705,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.27676263444458965,
              "weight": 0.4,
              "weighted_score": 0.11070505377783586
            }
          },
          "contribution_percentages": {
            "dense": 63.894173137451645,
            "sparse": 36.105826862548355
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3066127087998291,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.39859652143977786
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.39859652143977786
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.43845617358375566
            }
          },
          "combined_score": 0.43845617358375566
        }
      },
      "similarity": 0.43845617358375566
    },
    {
      "metadata": {
        "doc_id": "CWE-908",
        "name": "Use of Uninitialized Resource",
        "type": "Base",
        "original_content": "The product uses or accesses a resource that has not been initialized.",
        "relationships": [],
        "original_sparse_score": 306.47594399495205,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 306.47594399495205,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.24518075519596164,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.09807230207838466,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 306.47594399495205,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.24518075519596164,
              "weight": 0.4,
              "weighted_score": 0.09807230207838466
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 3.302,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 33.20053606508275,
            "graph": 66.79946393491724
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2953937306498133,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3840118498447573
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3840118498447573
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.42241303482923304
            }
          },
          "combined_score": 0.42241303482923304
        }
      },
      "similarity": 0.42241303482923304
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 358.85919794977224,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5714901800915135,
            "sparse": 358.85919794977224
          },
          "normalized_scores": {
            "dense": 0.5714901800915135,
            "sparse": 0.2870873583598178
          },
          "weighted_scores": {
            "dense": 0.20002156303202973,
            "sparse": 0.11483494334392713
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5714901800915135,
              "query_max": 0.5914371887707867,
              "query_min": 0.5427409533817478,
              "normalized_score": 0.5714901800915135,
              "weight": 0.35,
              "weighted_score": 0.20002156303202973
            },
            "sparse": {
              "raw_score": 358.85919794977224,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.2870873583598178,
              "weight": 0.4,
              "weighted_score": 0.11483494334392713
            }
          },
          "contribution_percentages": {
            "dense": 63.52784807730555,
            "sparse": 36.47215192269445
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.31485650637595686,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3778278076511482
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3778278076511482
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4156105884162631
            }
          },
          "combined_score": 0.4156105884162631
        }
      },
      "similarity": 0.4156105884162631
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 307.4305397058484,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5863525817786528,
            "sparse": 307.4305397058484
          },
          "normalized_scores": {
            "dense": 0.5863525817786528,
            "sparse": 0.2459444317646787
          },
          "weighted_scores": {
            "dense": 0.20522340362252847,
            "sparse": 0.09837777270587149
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5863525817786528,
              "query_max": 0.5914371887707867,
              "query_min": 0.5427409533817478,
              "normalized_score": 0.5863525817786528,
              "weight": 0.35,
              "weighted_score": 0.20522340362252847
            },
            "sparse": {
              "raw_score": 307.4305397058484,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.2459444317646787,
              "weight": 0.4,
              "weighted_score": 0.09837777270587149
            }
          },
          "contribution_percentages": {
            "dense": 67.59637960049997,
            "sparse": 32.403620399500035
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.30360117632839995,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.36432141159407994
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.36432141159407994
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.40075355275348795
            }
          },
          "combined_score": 0.40075355275348795
        }
      },
      "similarity": 0.40075355275348795
    },
    {
      "metadata": {
        "doc_id": "CWE-843",
        "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
        "type": "Base",
        "original_content": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.",
        "relationships": [],
        "original_sparse_score": 304.241897849514,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 304.241897849514,
            "graph": 1.6848000000000003
          },
          "normalized_scores": {
            "sparse": 0.24339351827961117,
            "graph": 0.6017142857142859
          },
          "weighted_scores": {
            "sparse": 0.09735740731184447,
            "graph": 0.15042857142857147
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 304.241897849514,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.24339351827961117,
              "weight": 0.4,
              "weighted_score": 0.09735740731184447
            },
            "graph": {
              "raw_score": 1.6848000000000003,
              "query_max": 3.302,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.6017142857142859,
              "weight": 0.25,
              "weighted_score": 0.15042857142857147
            }
          },
          "contribution_percentages": {
            "sparse": 39.29092671294265,
            "graph": 60.70907328705736
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.24778597874041594,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.32212177236254075
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.32212177236254075
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.35433394959879483
            }
          },
          "combined_score": 0.35433394959879483
        }
      },
      "similarity": 0.35433394959879483
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 325.8590138083586,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5501329231354659,
            "sparse": 325.8590138083586
          },
          "normalized_scores": {
            "dense": 0.5501329231354659,
            "sparse": 0.2606872110466869
          },
          "weighted_scores": {
            "dense": 0.19254652309741305,
            "sparse": 0.10427488441867477
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5501329231354659,
              "query_max": 0.5914371887707867,
              "query_min": 0.5427409533817478,
              "normalized_score": 0.5501329231354659,
              "weight": 0.35,
              "weighted_score": 0.19254652309741305
            },
            "sparse": {
              "raw_score": 325.8590138083586,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.2606872110466869,
              "weight": 0.4,
              "weighted_score": 0.10427488441867477
            }
          },
          "contribution_percentages": {
            "dense": 64.86948657400224,
            "sparse": 35.13051342599777
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.2968214075160878,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.23745712601287028
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.23745712601287028
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.18996570081029623
            }
          },
          "combined_score": 0.18996570081029623
        }
      },
      "similarity": 0.18996570081029623
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 347.8381743203319,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 347.8381743203319
          },
          "normalized_scores": {
            "sparse": 0.2782705394562655
          },
          "weighted_scores": {
            "sparse": 0.11130821578250621
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 347.8381743203319,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.2782705394562655,
              "weight": 0.4,
              "weighted_score": 0.11130821578250621
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11130821578250621,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.1447006805172581
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1447006805172581
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.15917074856898392
            }
          },
          "combined_score": 0.15917074856898392
        }
      },
      "similarity": 0.15917074856898392
    },
    {
      "metadata": {
        "doc_id": "CWE-824",
        "name": "Access of Uninitialized Pointer",
        "type": "Base",
        "original_content": "The product accesses or uses a pointer that has not been initialized.",
        "relationships": [],
        "original_sparse_score": 337.9115772799317,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 337.9115772799317
          },
          "normalized_scores": {
            "sparse": 0.27032926182394534
          },
          "weighted_scores": {
            "sparse": 0.10813170472957814
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 337.9115772799317,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.27032926182394534,
              "weight": 0.4,
              "weighted_score": 0.10813170472957814
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10813170472957814,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.14057121614845158
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.14057121614845158
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.15462833776329676
            }
          },
          "combined_score": 0.15462833776329676
        }
      },
      "similarity": 0.15462833776329676
    },
    {
      "metadata": {
        "doc_id": "CWE-476",
        "name": "NULL Pointer Dereference",
        "type": "Base",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "relationships": [],
        "original_sparse_score": 324.970606684918,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 324.970606684918
          },
          "normalized_scores": {
            "sparse": 0.2599764853479344
          },
          "weighted_scores": {
            "sparse": 0.10399059413917376
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 324.970606684918,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.2599764853479344,
              "weight": 0.4,
              "weighted_score": 0.10399059413917376
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10399059413917376,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13518777238092589
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13518777238092589
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1487065496190185
            }
          },
          "combined_score": 0.1487065496190185
        }
      },
      "similarity": 0.1487065496190185
    },
    {
      "metadata": {
        "doc_id": "CWE-197",
        "name": "Numeric Truncation Error",
        "type": "Base",
        "original_content": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
        "relationships": [],
        "original_sparse_score": 321.361728452839,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 321.361728452839
          },
          "normalized_scores": {
            "sparse": 0.25708938276227117
          },
          "weighted_scores": {
            "sparse": 0.10283575310490847
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 321.361728452839,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.25708938276227117,
              "weight": 0.4,
              "weighted_score": 0.10283575310490847
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10283575310490847,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.133686479036381
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.133686479036381
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.14705512694001913
            }
          },
          "combined_score": 0.14705512694001913
        }
      },
      "similarity": 0.14705512694001913
    },
    {
      "metadata": {
        "doc_id": "CWE-909",
        "name": "Missing Initialization of Resource",
        "type": "Class",
        "original_content": "The product does not initialize a critical resource.",
        "relationships": [],
        "original_sparse_score": 364.95138709804576,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 364.95138709804576
          },
          "normalized_scores": {
            "sparse": 0.2919611096784366
          },
          "weighted_scores": {
            "sparse": 0.11678444387137464
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 364.95138709804576,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.2919611096784366,
              "weight": 0.4,
              "weighted_score": 0.11678444387137464
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.11678444387137464,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.09342755509709971
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.09342755509709971
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.0980989328519547
            }
          },
          "combined_score": 0.0980989328519547
        }
      },
      "similarity": 0.0980989328519547
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 312.0780429467079,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 312.0780429467079
          },
          "normalized_scores": {
            "sparse": 0.24966243435736632
          },
          "weighted_scores": {
            "sparse": 0.09986497374294653
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 312.0780429467079,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.24966243435736632,
              "weight": 0.4,
              "weighted_score": 0.09986497374294653
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.09986497374294653,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.07989197899435724
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07989197899435724
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.0838865779440751
            }
          },
          "combined_score": 0.0838865779440751
        }
      },
      "similarity": 0.0838865779440751
    },
    {
      "metadata": {
        "doc_id": "CWE-754",
        "name": "Improper Check for Unusual or Exceptional Conditions",
        "type": "Class",
        "original_content": "The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product.",
        "relationships": [],
        "original_sparse_score": 305.8217934877665,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 305.8217934877665
          },
          "normalized_scores": {
            "sparse": 0.2446574347902132
          },
          "weighted_scores": {
            "sparse": 0.09786297391608528
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 305.8217934877665,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.2446574347902132,
              "weight": 0.4,
              "weighted_score": 0.09786297391608528
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.09786297391608528,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.07829037913286824
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07829037913286824
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.08220489808951165
            }
          },
          "combined_score": 0.08220489808951165
        }
      },
      "similarity": 0.08220489808951165
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 324.82244663950524,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 324.82244663950524
          },
          "normalized_scores": {
            "sparse": 0.2598579573116042
          },
          "weighted_scores": {
            "sparse": 0.10394318292464169
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 324.82244663950524,
              "query_max": 423.71538491293086,
              "query_min": 304.241897849514,
              "normalized_score": 0.2598579573116042,
              "weight": 0.4,
              "weighted_score": 0.10394318292464169
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.10394318292464169,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.08315454633971336
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08315454633971336
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.0665236370717707
            }
          },
          "combined_score": 0.0665236370717707
        }
      },
      "similarity": 0.0665236370717707
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-119",
      "CWE-269",
      "CWE-399",
      "CWE-787",
      "CWE-129",
      "CWE-825"
    ],
    "critic_additional": [
      "CWE-20"
    ]
  }
}