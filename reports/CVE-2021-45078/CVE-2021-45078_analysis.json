{
  "cve_id": "CVE-2021-45078",
  "description": "stab_xcoff_builtin_type in stabs.c in GNU Binutils through 2.37 allows attackers to cause a denial of service (heap-based buffer overflow) or possibly have unspecified other impact, as demonstrated by an out-of-bounds write. NOTE this issue exists because of an incorrect fix for CVE-2018-12699.",
  "key_phrases": {
    "rootcause": "heap-based buffer overflow",
    "weakness": "",
    "impact": [
      "denial of service",
      "out-of-bounds write"
    ],
    "vector": "",
    "attacker": "attackers",
    "product": "GNU Binutils",
    "version": "through 2.37",
    "component": "stab_xcoff_builtin_type in stabs.c"
  },
  "reference_content": "Based on the provided content, here's an analysis of CVE-2021-45078:\n\n**Root cause of vulnerability:**\n- An out-of-bounds write vulnerability exists in the `stab_xcoff_builtin_type` function within `stabs.c` of GNU Binutils.\n\n**Weaknesses/vulnerabilities present:**\n- **Out-of-bounds write:** The code uses a negated `typenum` variable as an index into the `info->xcoff_types` array without proper bounds checking, leading to writing outside the array's allocated memory.\n- **Integer handling:** The type number was a signed integer, which when negated, can become a large positive number exceeding array bounds.\n\n**Impact of exploitation:**\n- **Memory Corruption:** Writing outside the bounds of the `info->xcoff_types` array corrupts adjacent memory, specifically overwriting the `info->tags` field.\n- **Denial of Service (DoS):** The memory corruption can eventually lead to a segmentation fault due to illegal memory access during the `finish_stab` function, which crashes the program.\n- **Potential for sensitive information disclosure or data modification:** The NetApp advisory suggests that successful exploitation could lead to disclosure of sensitive information or modification of data, beyond the immediate DoS. This may be due to the program attempting to use the corrupted memory to perform later actions.\n\n**Attack vectors:**\n- **File Processing:** The vulnerability is triggered when processing a specially crafted binary or object file containing a specific type of debugging information (stab). The objdump utility is mentioned in the provided text as a potential trigger.\n\n**Required attacker capabilities/position:**\n- **Ability to supply malformed input:** The attacker needs to be able to provide a crafted input file (binary or object) to a vulnerable tool within the binutils suite, such as objdump.\n\n**Technical details:**\n- The vulnerability occurs at the line `info->xcoff_types[-typenum] = rettype;` in `stabs.c`.\n- The issue arises because `typenum` can be a negative number. When this negative number is negated, the resulting positive number can exceed the allocated size of the `info->xcoff_types` array leading to out-of-bounds access.\n- The fix involves making `typenum` unsigned and adjusting bounds checking and switch cases to correctly handle type numbers.\n\n**Additional notes:**\n- The vulnerability can be triggered when processing XCOFF stab debug information.\n- The issue was assigned Bugzilla ID 28694, and the fix was committed with commit ID `161e87d12167b1e36193385485c1f6ce92f74f02`.\n- Several vendors such as Gentoo, Fedora, and NetApp acknowledged and provided updates to address this vulnerability.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.85 | Variant | Allowed | Acceptable-Use |\n| CWE-125 | Out-of-bounds Read | 0.65 | Base | Allowed | Acceptable-Use |\n| CWE-787 | Out-of-bounds Write | 0.65 | Base | Allowed | Acceptable-Use |\n| CWE-190 | Integer Overflow or Wraparound | 0.50 | Base | Allowed | Acceptable-Use |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**\n  - *Explanation:* \"The vulnerability description clearly states \"**heap-based buffer overflow**\" as the root cause. The CVE reference further elaborates on an out-of-bounds write in the `stab_xcoff_builtin_type` function, triggered by a negative `typenum` variable used as an index into the `info->xcoff_types` array. This directly corresponds to CWE-122 (Heap-based Buffer Overflow) because the overflow occurs in heap memory, and CWE-787 (Out-of-bounds Write) as it's writing data beyond the allocated buffer. The integer handling issues (negative typenum) also point to a potential CWE-190 (Integer Overflow or Wraparound) scenario, where negation results in a large positive number.\"\n\n  - *Relationship Analysis:* \"CWE-122 is a variant of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). CWE-787 is a parent of CWE-122. CWE-190 is related to integer handling issues. CWE-125 (Out-of-bounds Read) is related to the potential consequences of memory corruption. The graph relationship shows that CWE-787 can lead to various memory corruption issues and potential privilege escalation scenarios.\"\n\n- **Confidence Score:**\n  - *Example:* Confidence: 0.85 (High evidence from technical description and CVE reference materials, especially the confirmation of heap-based overflow and out-of-bounds write)\n\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.85 | Variant | Allowed | Acceptable-Use |\n| CWE-125 | Out-of-bounds Read | 0.65 | Base | Allowed | Acceptable-Use |\n| CWE-787 | Out-of-bounds Write | 0.65 | Base | Allowed | Acceptable-Use |\n| CWE-190 | Integer Overflow or Wraparound | 0.50 | Base | Allowed | Acceptable-Use |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**\n  - *Explanation:* \"The vulnerability description clearly states \"**heap-based buffer overflow**\" as the root cause. The CVE reference further elaborates on an out-of-bounds write in the `stab_xcoff_builtin_type` function, triggered by a negative `typenum` variable used as an index into the `info->xcoff_types` array. This directly corresponds to CWE-122 (Heap-based Buffer Overflow) because the overflow occurs in heap memory, and CWE-787 (Out-of-bounds Write) as it's writing data beyond the allocated buffer. The integer handling issues (negative typenum) also point to a potential CWE-190 (Integer Overflow or Wraparound) scenario, where negation results in a large positive number.\"\n\n  - *Relationship Analysis:* \"CWE-122 is a variant of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). CWE-787 is a parent of CWE-122. CWE-190 is related to integer handling issues. CWE-125 (Out-of-bounds Read) is related to the potential consequences of memory corruption. The graph relationship shows that CWE-787 can lead to various memory corruption issues and potential privilege escalation scenarios.\"\n\n- **Confidence Score:**\n  - *Example:* Confidence: 0.85 (High evidence from technical description and CVE reference materials, especially the confirmation of heap-based overflow and out-of-bounds write)\n\n---",
  "criticism": "Okay, I've reviewed the analysis, focusing on the provided CWE specifications and mapping guidance. Here's my critique:\n\n**Overall Assessment:**\n\nThe analysis correctly identifies the primary vulnerabilities: a heap-based buffer overflow (CWE-122) and an out-of-bounds write (CWE-787). The inclusion of out-of-bounds read (CWE-125) and integer overflow (CWE-190) is reasonable, given the context and potential for these to be contributing factors or consequences. The Confidence scores are appropriate.\n\n**Detailed Review:**\n\n*   **CWE-122: Heap-based Buffer Overflow (Confidence: 0.85)**\n\n    *   **Mapping Justification:** Solid. The vulnerability description explicitly mentions \"heap-based buffer overflow,\" and the details align with CWE-122's definition.\n    *   **Abstraction Level:** Correct. Variant is the preferred level of abstraction\n    *   **Mitigations:** The suggested mitigations (language selection, abstraction libraries, compiler-based overflow detection) are all relevant and appropriate.\n    *   **Observed Examples:** Correct.\n    *   **Overall:** Good mapping\n\n*   **CWE-787: Out-of-bounds Write (Confidence: 0.65)**\n\n    *   **Mapping Justification:** The CVE details on the out-of-bounds write directly support this mapping. `info->xcoff_types[-typenum] = rettype;` clearly demonstrates writing outside the allocated bounds of the `info->xcoff_types` buffer.\n    *   **Abstraction Level:** Correct. Base is the preferred level of abstraction.\n    *   **Mitigations:** The specified mitigations (language selection, safe string libraries, overflow detection) are relevant.\n    *    **Observed Examples:** Correct.\n    *   **Overall:** Good mapping.\n\n*   **CWE-125: Out-of-bounds Read (Confidence: 0.65)**\n\n     *   **Mapping Justification:** The description explains how memory corruption from out-of-bounds write can lead to illegal memory access, causing DoS, and potentially sensitive information disclosure. While the vulnerability is triggered by a write, the corrupted memory can then be *read* later, fitting the description of CWE-125.\n     *   **Abstraction Level:** Correct. Base is the preferred level of abstraction.\n     *   **Mitigations:** Input validation and language selection are appropriate mitigations.\n     *   **Observed Examples:** Correct.\n     *   **Overall:** Good mapping\n\n*   **CWE-190: Integer Overflow or Wraparound (Confidence: 0.50)**\n\n    *   **Mapping Justification:** This is the weakest mapping, but still plausible. The description highlights the negative `typenum` variable and its negation. While it *could* lead to a very large positive number exceeding the array bounds, it's not a guaranteed integer overflow/wraparound in all cases. The negation itself doesn't *necessarily* cause an overflow, but it *can* under certain circumstances (e.g. `INT_MIN`).  It's more of a contributing factor that *enables* the out-of-bounds write. Because of this, the confidence should remain relatively low.\n    *   **Abstraction Level:** Correct. Base is the preferred level of abstraction.\n    *   **Mitigations:**  Ensure protocols are defined, language selection and libraries/frameworks are good to specify.\n    *    **Observed Examples:** Correct.\n    *   **Overall:** Correct, but the reasoning should be well-documented, as the direct link is not as obvious as with the other CWEs.\n\n**Suggestions for Improvement:**\n\n*   **Chain Analysis (Explicit):** While relationships are mentioned, consider explicitly stating the *chain* of vulnerabilities. For example: \"The vulnerability involves CWE-190 (Integer Overflow) which leads to CWE-787 (Out-of-bounds Write) and CWE-122 (Heap-based Buffer Overflow), potentially resulting in CWE-125 (Out-of-bounds Read) and a denial of service.\" This reinforces the connections and clarifies the sequence of events.\n*   **CWE-119 Avoidance:** The CWE specifications rightly point out the discouragement of the mapping CWE-119. It is correctly avoided here by mapping more precisely to children.\n*  **Review Retriever Results:** The \"Retriever Results\" section lists several other CWEs that were also highly scored by the retriever, such as CWE-193 (Off-by-one Error), CWE-124 (Buffer Underwrite), and CWE-131 (Incorrect Calculation of Buffer Size). While the selected CWEs are correct, review the code to see if any of these apply in a smaller role or are potential risks with similar code structure.\n\n**Conclusion:**\n\nThe analysis is well-reasoned and provides a sound mapping to the identified CWEs. The justification is clear, and the confidence levels are appropriate. The suggested improvements, particularly the chain analysis and consideration of other potential weaknesses, would further strengthen the assessment.",
  "resolution": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Out-of-bounds Write | 0.95 | Base | Allowed | Acceptable-Use |\n| CWE-122 | Heap-based Buffer Overflow | 0.90 | Variant | Allowed | Acceptable-Use |\n| CWE-190 | Integer Overflow or Wraparound | 0.70 | Base | Allowed | Acceptable-Use |\n| CWE-125 | Out-of-bounds Read | 0.65 | Base | Allowed | Acceptable-Use |\n\n*   **Primary CWEs:** CWE-787, CWE-122\n*   **Secondary Candidates:** CWE-190, CWE-125\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that the **CWE-190** (Integer Overflow or Wraparound) can precede **CWE-787** (Out-of-bounds Write), which in turn causes **CWE-122** (Heap-based Buffer Overflow). The **CWE-125** (Out-of-bounds Read) can result from the memory corruption caused by **CWE-787**.\nThe abstraction levels were considered to ensure that the most specific CWEs were chosen. Specifically, avoiding **CWE-119** and choosing its children: **CWE-122** and **CWE-787**.\n\n```mermaid\ngraph TD\n    cwe190[\"CWE-190: Integer Overflow or Wraparound\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe122[\"CWE-122: Heap-based Buffer Overflow\"]\n    cwe125[\"CWE-125: Out-of-bounds Read\"]\n    \n    cwe190 -->|CANPRECEDE| cwe787\n    cwe787 -->|CAUSES| cwe122\n    cwe787 -->|CAUSES| cwe125\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe787 primary\n    class cwe122 primary\n    class cwe190,cwe125 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a negative `typenum` (potentially stemming from **CWE-190**, Integer Overflow or Wraparound) used as an index. This leads to **CWE-787**, Out-of-bounds Write, writing data outside the allocated buffer on the heap, resulting in **CWE-122**, Heap-based Buffer Overflow. The memory corruption from **CWE-787** can then lead to **CWE-125**, Out-of-bounds Read, and potentially a denial of service.\n\n## Summary of Analysis\nThe initial analysis and criticism are well-founded. The vulnerability description clearly states \"heap-based buffer overflow\" and \"out-of-bounds write,\" making **CWE-122** and **CWE-787** the primary weaknesses. The inclusion of **CWE-190** and **CWE-125** is also justified based on the potential for integer handling issues and the consequences of memory corruption.\n\nThe graph relationships helped to clarify the sequence of events and the potential for a vulnerability chain. **CWE-190** can precede **CWE-787**, which leads to **CWE-122** and potentially **CWE-125**.\nI have increased the confidence score for **CWE-787** to 0.95 and **CWE-122** to 0.90 because the vulnerability description mentions \"heap-based buffer overflow\" and \"out-of-bounds write\". I have also increased the confidence score for **CWE-190** to 0.70 as the code takes a negative value and uses it as an index which results in an out-of-bounds write.\n\nThe selected CWEs are at the optimal level of specificity, avoiding the more general **CWE-119** and focusing on the specific types of buffer overflows and related weaknesses.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 376.7882688974835,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5214990258337964,
            "sparse": 376.7882688974835,
            "graph": 2.5567064503451893
          },
          "normalized_scores": {
            "dense": 0.5214990258337964,
            "sparse": 0.3014306151179868,
            "graph": 0.9131094465518533
          },
          "weighted_scores": {
            "dense": 0.1825246590418287,
            "sparse": 0.12057224604719473,
            "graph": 0.22827736163796333
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5214990258337964,
              "query_max": 0.5788929798046415,
              "query_min": 0.5158596539037106,
              "normalized_score": 0.5214990258337964,
              "weight": 0.35,
              "weighted_score": 0.1825246590418287
            },
            "sparse": {
              "raw_score": 376.7882688974835,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.3014306151179868,
              "weight": 0.4,
              "weighted_score": 0.12057224604719473
            },
            "graph": {
              "raw_score": 2.5567064503451893,
              "query_max": 2.5567064503451893,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.9131094465518533,
              "weight": 0.25,
              "weighted_score": 0.22827736163796333
            }
          },
          "contribution_percentages": {
            "dense": 34.34954804380987,
            "sparse": 22.69064454134419,
            "graph": 42.95980741484595
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5313742667269867,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6907865467450828
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6907865467450828
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7598652014195911
            }
          },
          "combined_score": 0.7598652014195911
        }
      },
      "similarity": 0.7598652014195911
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 355.2630668631352,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5679419307923911,
            "sparse": 355.2630668631352,
            "graph": 2.084732750540286
          },
          "normalized_scores": {
            "dense": 0.5679419307923911,
            "sparse": 0.28421045349050816,
            "graph": 0.7445474109072451
          },
          "weighted_scores": {
            "dense": 0.19877967577733688,
            "sparse": 0.11368418139620327,
            "graph": 0.18613685272681127
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5679419307923911,
              "query_max": 0.5788929798046415,
              "query_min": 0.5158596539037106,
              "normalized_score": 0.5679419307923911,
              "weight": 0.35,
              "weighted_score": 0.19877967577733688
            },
            "sparse": {
              "raw_score": 355.2630668631352,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.28421045349050816,
              "weight": 0.4,
              "weighted_score": 0.11368418139620327
            },
            "graph": {
              "raw_score": 2.084732750540286,
              "query_max": 2.5567064503451893,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.7445474109072451,
              "weight": 0.25,
              "weighted_score": 0.18613685272681127
            }
          },
          "contribution_percentages": {
            "dense": 39.86750757275582,
            "sparse": 22.80064571486948,
            "graph": 37.3318467123747
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.49860070990035144,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6481809228704569
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6481809228704569
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.7129990151575026
            }
          },
          "combined_score": 0.7129990151575026
        }
      },
      "similarity": 0.7129990151575026
    },
    {
      "metadata": {
        "doc_id": "CWE-124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "type": "Base",
        "original_content": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "relationships": [],
        "original_sparse_score": 282.4450342350047,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5527984828661667,
            "sparse": 282.4450342350047,
            "graph": 2.075581048984493
          },
          "normalized_scores": {
            "dense": 0.5527984828661667,
            "sparse": 0.22595602738800377,
            "graph": 0.7412789460658904
          },
          "weighted_scores": {
            "dense": 0.19347946900315835,
            "sparse": 0.09038241095520151,
            "graph": 0.1853197365164726
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5527984828661667,
              "query_max": 0.5788929798046415,
              "query_min": 0.5158596539037106,
              "normalized_score": 0.5527984828661667,
              "weight": 0.35,
              "weighted_score": 0.19347946900315835
            },
            "sparse": {
              "raw_score": 282.4450342350047,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.22595602738800377,
              "weight": 0.4,
              "weighted_score": 0.09038241095520151
            },
            "graph": {
              "raw_score": 2.075581048984493,
              "query_max": 2.5567064503451893,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.7412789460658904,
              "weight": 0.25,
              "weighted_score": 0.1853197365164726
            }
          },
          "contribution_percentages": {
            "dense": 41.23764917663539,
            "sparse": 19.263843207303015,
            "graph": 39.498507616061595
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4691816164748325,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6099361014172823
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6099361014172823
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6709297115590106
            }
          },
          "combined_score": 0.6709297115590106
        }
      },
      "similarity": 0.6709297115590106
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 355.90659999478515,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5245667125911267,
            "sparse": 355.90659999478515,
            "graph": 1.9199667333162789
          },
          "normalized_scores": {
            "dense": 0.5245667125911267,
            "sparse": 0.28472527999582814,
            "graph": 0.6857024047558139
          },
          "weighted_scores": {
            "dense": 0.18359834940689435,
            "sparse": 0.11389011199833127,
            "graph": 0.17142560118895347
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5245667125911267,
              "query_max": 0.5788929798046415,
              "query_min": 0.5158596539037106,
              "normalized_score": 0.5245667125911267,
              "weight": 0.35,
              "weighted_score": 0.18359834940689435
            },
            "sparse": {
              "raw_score": 355.90659999478515,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.28472527999582814,
              "weight": 0.4,
              "weighted_score": 0.11389011199833127
            },
            "graph": {
              "raw_score": 1.9199667333162789,
              "query_max": 2.5567064503451893,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.6857024047558139,
              "weight": 0.25,
              "weighted_score": 0.17142560118895347
            }
          },
          "contribution_percentages": {
            "dense": 39.15394398520934,
            "sparse": 24.288056401690234,
            "graph": 36.55799961310042
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4689140625941791,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6095882813724328
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6095882813724328
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6705471095096761
            }
          },
          "combined_score": 0.6705471095096761
        }
      },
      "similarity": 0.6705471095096761
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 328.21398090357064,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5682426333709363,
            "sparse": 328.21398090357064,
            "graph": 1.9982434962461109
          },
          "normalized_scores": {
            "dense": 0.5682426333709363,
            "sparse": 0.2625711847228565,
            "graph": 0.7136583915164683
          },
          "weighted_scores": {
            "dense": 0.1988849216798277,
            "sparse": 0.1050284738891426,
            "graph": 0.17841459787911707
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5682426333709363,
              "query_max": 0.5788929798046415,
              "query_min": 0.5158596539037106,
              "normalized_score": 0.5682426333709363,
              "weight": 0.35,
              "weighted_score": 0.1988849216798277
            },
            "sparse": {
              "raw_score": 328.21398090357064,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.2625711847228565,
              "weight": 0.4,
              "weighted_score": 0.1050284738891426
            },
            "graph": {
              "raw_score": 1.9982434962461109,
              "query_max": 2.5567064503451893,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.7136583915164683,
              "weight": 0.25,
              "weighted_score": 0.17841459787911707
            }
          },
          "contribution_percentages": {
            "dense": 41.2343725393234,
            "sparse": 21.775322045546325,
            "graph": 36.99030541513027
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.48232799344808736,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.5787935921377048
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5787935921377048
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6366729513514753
            }
          },
          "combined_score": 0.6366729513514753
        }
      },
      "similarity": 0.6366729513514753
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 396.35188388882915,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5788929798046415,
            "sparse": 396.35188388882915
          },
          "normalized_scores": {
            "dense": 0.5788929798046415,
            "sparse": 0.3170815071110633
          },
          "weighted_scores": {
            "dense": 0.2026125429316245,
            "sparse": 0.12683260284442532
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5788929798046415,
              "query_max": 0.5788929798046415,
              "query_min": 0.5158596539037106,
              "normalized_score": 0.5788929798046415,
              "weight": 0.35,
              "weighted_score": 0.2026125429316245
            },
            "sparse": {
              "raw_score": 396.35188388882915,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.3170815071110633,
              "weight": 0.4,
              "weighted_score": 0.12683260284442532
            }
          },
          "contribution_percentages": {
            "dense": 61.501146861443345,
            "sparse": 38.49885313855666
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.32944514577604983,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3953341749312598
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3953341749312598
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4348675924243858
            }
          },
          "combined_score": 0.4348675924243858
        }
      },
      "similarity": 0.4348675924243858
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 307.38196805234566,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 307.38196805234566,
            "graph": 2.2776000000000005
          },
          "normalized_scores": {
            "sparse": 0.24590557444187652,
            "graph": 0.8134285714285716
          },
          "weighted_scores": {
            "sparse": 0.09836222977675062,
            "graph": 0.2033571428571429
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 307.38196805234566,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.24590557444187652,
              "weight": 0.4,
              "weighted_score": 0.09836222977675062
            },
            "graph": {
              "raw_score": 2.2776000000000005,
              "query_max": 2.5567064503451893,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.8134285714285716,
              "weight": 0.25,
              "weighted_score": 0.2033571428571429
            }
          },
          "contribution_percentages": {
            "sparse": 32.600568176344254,
            "graph": 67.39943182365575
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.30171937263389353,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.39223518442406163
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.39223518442406163
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4314587028664678
            }
          },
          "combined_score": 0.4314587028664678
        }
      },
      "similarity": 0.4314587028664678
    },
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 315.5472343505097,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5429486486340156,
            "sparse": 315.5472343505097
          },
          "normalized_scores": {
            "dense": 0.5429486486340156,
            "sparse": 0.2524377874804078
          },
          "weighted_scores": {
            "dense": 0.19003202702190544,
            "sparse": 0.10097511499216312
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5429486486340156,
              "query_max": 0.5788929798046415,
              "query_min": 0.5158596539037106,
              "normalized_score": 0.5429486486340156,
              "weight": 0.35,
              "weighted_score": 0.19003202702190544
            },
            "sparse": {
              "raw_score": 315.5472343505097,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.2524377874804078,
              "weight": 0.4,
              "weighted_score": 0.10097511499216312
            }
          },
          "contribution_percentages": {
            "dense": 65.30149937444438,
            "sparse": 34.698500625555624
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2910071420140686,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.37830928461828917
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.37830928461828917
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4161402130801181
            }
          },
          "combined_score": 0.4161402130801181
        }
      },
      "similarity": 0.4161402130801181
    },
    {
      "metadata": {
        "doc_id": "CWE-170",
        "name": "Improper Null Termination",
        "type": "Base",
        "original_content": "The product does not terminate or incorrectly terminates a string or array with a null character or equivalent terminator.",
        "relationships": [],
        "original_sparse_score": 289.3527309143045,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 289.3527309143045,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.2314821847314436,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.09259287389257745,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 289.3527309143045,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.2314821847314436,
              "weight": 0.4,
              "weighted_score": 0.09259287389257745
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 2.5567064503451893,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 31.9380151671107,
            "graph": 68.0619848328893
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.28991430246400607,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3768885932032079
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3768885932032079
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.41457745252352873
            }
          },
          "combined_score": 0.41457745252352873
        }
      },
      "similarity": 0.41457745252352873
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 306.4015635287021,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5389988606986116,
            "sparse": 306.4015635287021
          },
          "normalized_scores": {
            "dense": 0.5389988606986116,
            "sparse": 0.2451212508229617
          },
          "weighted_scores": {
            "dense": 0.18864960124451405,
            "sparse": 0.09804850032918469
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5389988606986116,
              "query_max": 0.5788929798046415,
              "query_min": 0.5158596539037106,
              "normalized_score": 0.5389988606986116,
              "weight": 0.35,
              "weighted_score": 0.18864960124451405
            },
            "sparse": {
              "raw_score": 306.4015635287021,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.2451212508229617,
              "weight": 0.4,
              "weighted_score": 0.09804850032918469
            }
          },
          "contribution_percentages": {
            "dense": 65.8007849403285,
            "sparse": 34.19921505967151
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.28669810157369874,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.37270753204580837
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.37270753204580837
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4099782852503892
            }
          },
          "combined_score": 0.4099782852503892
        }
      },
      "similarity": 0.4099782852503892
    },
    {
      "metadata": {
        "doc_id": "CWE-197",
        "name": "Numeric Truncation Error",
        "type": "Base",
        "original_content": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
        "relationships": [],
        "original_sparse_score": 306.5482172652803,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5356598284648466,
            "sparse": 306.5482172652803
          },
          "normalized_scores": {
            "dense": 0.5356598284648466,
            "sparse": 0.24523857381222425
          },
          "weighted_scores": {
            "dense": 0.1874809399626963,
            "sparse": 0.0980954295248897
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5356598284648466,
              "query_max": 0.5788929798046415,
              "query_min": 0.5158596539037106,
              "normalized_score": 0.5356598284648466,
              "weight": 0.35,
              "weighted_score": 0.1874809399626963
            },
            "sparse": {
              "raw_score": 306.5482172652803,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.24523857381222425,
              "weight": 0.4,
              "weighted_score": 0.0980954295248897
            }
          },
          "contribution_percentages": {
            "dense": 65.65001869695878,
            "sparse": 34.34998130304122
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.285576369487586,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.37124928033386184
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.37124928033386184
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4083742083672481
            }
          },
          "combined_score": 0.4083742083672481
        }
      },
      "similarity": 0.4083742083672481
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 319.7707057441656,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5171863871909242,
            "sparse": 319.7707057441656
          },
          "normalized_scores": {
            "dense": 0.5171863871909242,
            "sparse": 0.2558165645953325
          },
          "weighted_scores": {
            "dense": 0.18101523551682347,
            "sparse": 0.102326625838133
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5171863871909242,
              "query_max": 0.5788929798046415,
              "query_min": 0.5158596539037106,
              "normalized_score": 0.5171863871909242,
              "weight": 0.35,
              "weighted_score": 0.18101523551682347
            },
            "sparse": {
              "raw_score": 319.7707057441656,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.2558165645953325,
              "weight": 0.4,
              "weighted_score": 0.102326625838133
            }
          },
          "contribution_percentages": {
            "dense": 63.88580728989306,
            "sparse": 36.114192710106934
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2833418613549565,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.36834441976144344
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.36834441976144344
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4051788617375878
            }
          },
          "combined_score": 0.4051788617375878
        }
      },
      "similarity": 0.4051788617375878
    },
    {
      "metadata": {
        "doc_id": "CWE-681",
        "name": "Incorrect Conversion between Numeric Types",
        "type": "Base",
        "original_content": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
        "relationships": [],
        "original_sparse_score": 302.3168255423169,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.51947510541603,
            "sparse": 302.3168255423169
          },
          "normalized_scores": {
            "dense": 0.51947510541603,
            "sparse": 0.24185346043385353
          },
          "weighted_scores": {
            "dense": 0.1818162868956105,
            "sparse": 0.09674138417354142
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.51947510541603,
              "query_max": 0.5788929798046415,
              "query_min": 0.5158596539037106,
              "normalized_score": 0.51947510541603,
              "weight": 0.35,
              "weighted_score": 0.1818162868956105
            },
            "sparse": {
              "raw_score": 302.3168255423169,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.24185346043385353,
              "weight": 0.4,
              "weighted_score": 0.09674138417354142
            }
          },
          "contribution_percentages": {
            "dense": 65.2706084875597,
            "sparse": 34.7293915124403
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2785576710691519,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3621249723898975
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3621249723898975
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3983374696288873
            }
          },
          "combined_score": 0.3983374696288873
        }
      },
      "similarity": 0.3983374696288873
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 303.1096980832583,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5527404104972814,
            "sparse": 303.1096980832583
          },
          "normalized_scores": {
            "dense": 0.5527404104972814,
            "sparse": 0.24248775846660664
          },
          "weighted_scores": {
            "dense": 0.19345914367404848,
            "sparse": 0.09699510338664266
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5527404104972814,
              "query_max": 0.5788929798046415,
              "query_min": 0.5158596539037106,
              "normalized_score": 0.5527404104972814,
              "weight": 0.35,
              "weighted_score": 0.19345914367404848
            },
            "sparse": {
              "raw_score": 303.1096980832583,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.24248775846660664,
              "weight": 0.4,
              "weighted_score": 0.09699510338664266
            }
          },
          "contribution_percentages": {
            "dense": 66.60572039548272,
            "sparse": 33.3942796045173
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2904542470606911,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.34854509647282933
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.34854509647282933
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3833996061201123
            }
          },
          "combined_score": 0.3833996061201123
        }
      },
      "similarity": 0.3833996061201123
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 290.33861053805913,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5158596539037106,
            "sparse": 290.33861053805913
          },
          "normalized_scores": {
            "dense": 0.5158596539037106,
            "sparse": 0.2322708884304473
          },
          "weighted_scores": {
            "dense": 0.1805508788662987,
            "sparse": 0.09290835537217892
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5158596539037106,
              "query_max": 0.5788929798046415,
              "query_min": 0.5158596539037106,
              "normalized_score": 0.5158596539037106,
              "weight": 0.35,
              "weighted_score": 0.1805508788662987
            },
            "sparse": {
              "raw_score": 290.33861053805913,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.2322708884304473,
              "weight": 0.4,
              "weighted_score": 0.09290835537217892
            }
          },
          "contribution_percentages": {
            "dense": 66.02478770522862,
            "sparse": 33.97521229477138
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.2734592342384776,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.2187673873907821
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2187673873907821
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.22970575676032123
            }
          },
          "combined_score": 0.22970575676032123
        }
      },
      "similarity": 0.22970575676032123
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 309.6180046924965,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 309.6180046924965,
            "graph": 1.6736000000000002
          },
          "normalized_scores": {
            "sparse": 0.24769440375399723,
            "graph": 0.5977142857142859
          },
          "weighted_scores": {
            "sparse": 0.0990777615015989,
            "graph": 0.14942857142857147
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 309.6180046924965,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.24769440375399723,
              "weight": 0.4,
              "weighted_score": 0.0990777615015989
            },
            "graph": {
              "raw_score": 1.6736000000000002,
              "query_max": 2.5567064503451893,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.5977142857142859,
              "weight": 0.25,
              "weighted_score": 0.14942857142857147
            }
          },
          "contribution_percentages": {
            "sparse": 39.86931050543468,
            "graph": 60.13068949456532
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.24850633293017038,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.1988050663441363
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1988050663441363
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.15904405307530906
            }
          },
          "combined_score": 0.15904405307530906
        }
      },
      "similarity": 0.15904405307530906
    },
    {
      "metadata": {
        "doc_id": "CWE-476",
        "name": "NULL Pointer Dereference",
        "type": "Base",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "relationships": [],
        "original_sparse_score": 291.4734711777128,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 291.4734711777128
          },
          "normalized_scores": {
            "sparse": 0.23317877694217023
          },
          "weighted_scores": {
            "sparse": 0.0932715107768681
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 291.4734711777128,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.23317877694217023,
              "weight": 0.4,
              "weighted_score": 0.0932715107768681
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.0932715107768681,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.12125296400992853
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.12125296400992853
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1333782604109214
            }
          },
          "combined_score": 0.1333782604109214
        }
      },
      "similarity": 0.1333782604109214
    },
    {
      "metadata": {
        "doc_id": "CWE-130",
        "name": "Improper Handling of Length Parameter Inconsistency",
        "type": "Base",
        "original_content": "The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.",
        "relationships": [],
        "original_sparse_score": 288.89456154002687,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 288.89456154002687
          },
          "normalized_scores": {
            "sparse": 0.2311156492320215
          },
          "weighted_scores": {
            "sparse": 0.0924462596928086
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 288.89456154002687,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.2311156492320215,
              "weight": 0.4,
              "weighted_score": 0.0924462596928086
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.0924462596928086,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.12018013760065119
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.12018013760065119
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1321981513607163
            }
          },
          "combined_score": 0.1321981513607163
        }
      },
      "similarity": 0.1321981513607163
    },
    {
      "metadata": {
        "doc_id": "CWE-909",
        "name": "Missing Initialization of Resource",
        "type": "Class",
        "original_content": "The product does not initialize a critical resource.",
        "relationships": [],
        "original_sparse_score": 286.01297727859026,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 286.01297727859026
          },
          "normalized_scores": {
            "sparse": 0.2288103818228722
          },
          "weighted_scores": {
            "sparse": 0.09152415272914888
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 286.01297727859026,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.2288103818228722,
              "weight": 0.4,
              "weighted_score": 0.09152415272914888
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.09152415272914888,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.0732193221833191
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0732193221833191
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.07688028829248506
            }
          },
          "combined_score": 0.07688028829248506
        }
      },
      "similarity": 0.07688028829248506
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 281.13622602441365,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 281.13622602441365
          },
          "normalized_scores": {
            "sparse": 0.22490898081953092
          },
          "weighted_scores": {
            "sparse": 0.08996359232781237
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 281.13622602441365,
              "query_max": 396.35188388882915,
              "query_min": 281.13622602441365,
              "normalized_score": 0.22490898081953092,
              "weight": 0.4,
              "weighted_score": 0.08996359232781237
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.08996359232781237,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.0719708738622499
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0719708738622499
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.057576699089799926
            }
          },
          "combined_score": 0.057576699089799926
        }
      },
      "similarity": 0.057576699089799926
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-119",
      "CWE-787",
      "CWE-190",
      "CWE-122",
      "CWE-125"
    ],
    "critic_additional": [
      "CWE-124",
      "CWE-131",
      "CWE-193"
    ]
  }
}