{
  "cve_id": "CVE-2022-1211",
  "description": "A vulnerability classified as critical has been found in tildearrow Furnace dev73. This affects the FUR to VGM converter in console mode which causes stack-based overflows and crashes. It is possible to initiate the attack remotely but it requires user-interaction. A POC has been disclosed to the public and may be used.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "stack-based overflows",
    "impact": "crashes",
    "vector": "",
    "attacker": "",
    "product": "tildearrow Furnace",
    "version": "dev73",
    "component": "FUR to VGM converter in console mode"
  },
  "reference_content": "```\nRoot cause of vulnerability:\nA stack-based buffer overflow vulnerability in the FUR to VGM converter within tildearrow Furnace dev73.\n\nWeaknesses/vulnerabilities present:\n- Stack-based buffer overflow (CWE-121, CWE-787, CWE-119)\n\nImpact of exploitation:\n- Crashes and potentially other impacts related to confidentiality, integrity, and availability.\n-  The vulnerability can lead to arbitrary code execution if successfully exploited.\n\nAttack vectors:\n- Network: The vulnerability can be exploited remotely, but requires user interaction.\n\nRequired attacker capabilities/position:\n- An attacker needs to provide a specially crafted input to the FUR to VGM converter.\n- User interaction is required to trigger the vulnerability.\n\nAdditional details:\n- A proof-of-concept exploit is publicly available.\n- The vulnerability was discovered through fuzz testing.\n- The issue was addressed by hardening the file loader, specifically for .fur and .dmf files, to prevent out-of-bounds access.\n- The fix was deployed in commits `3a7a132` and `258a905` for `tildearrow/furnace`\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 1.0 | Variant | Primary | Allowed |\n| CWE-787 | Out-of-bounds Write | 0.7 | Base | Secondary Candidate | Allowed |\n| CWE-119 | Improper Restriction of Operations within the Bounds of a Memory Buffer | 0.6 | Class | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description explicitly states \"**stack-based overflows**\" and crashes in the FUR to VGM converter within tildearrow Furnace dev73. The CVE Reference Links Content Summary confirms this, stating a \"**stack-based buffer overflow** vulnerability (CWE-121, CWE-787, CWE-119)\". This directly aligns with CWE-121 (Stack-based Buffer Overflow), which is a Variant of a buffer overflow occurring specifically on the stack. The description details the component (FUR to VGM converter in console mode), the trigger (user interaction), and the impact (crashes), all supporting a stack-based buffer overflow scenario. The evidence is further strengthened by the mention of fuzz testing as the discovery method and the provided commits `3a7a132` and `258a905` which fixed the vulnerability by hardening the file loader to prevent out-of-bounds access. CWE-787 is considered as secondary because it is a general out-of-bounds write, and CWE-121 is a specific case of that, and the description mentions stack. CWE-119, while relevant as a parent class, is less specific than CWE-121 and CWE-787.\n  \n  - *Relationship Analysis:* CWE-121 is a Variant of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). CWE-121 is also a specific type of CWE-787 (Out-of-bounds Write), focusing on stack-based overflows. The exploit can lead to arbitrary code execution.\n\n- **Confidence Score:**  \n  - Confidence: 1.0 (High confidence due to explicit mention of stack-based overflow and corroborating CVE details)\n\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 1.0 | Variant | Primary | Allowed |\n| CWE-787 | Out-of-bounds Write | 0.7 | Base | Secondary Candidate | Allowed |\n| CWE-119 | Improper Restriction of Operations within the Bounds of a Memory Buffer | 0.6 | Class | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description explicitly states \"**stack-based overflows**\" and crashes in the FUR to VGM converter within tildearrow Furnace dev73. The CVE Reference Links Content Summary confirms this, stating a \"**stack-based buffer overflow** vulnerability (CWE-121, CWE-787, CWE-119)\". This directly aligns with CWE-121 (Stack-based Buffer Overflow), which is a Variant of a buffer overflow occurring specifically on the stack. The description details the component (FUR to VGM converter in console mode), the trigger (user interaction), and the impact (crashes), all supporting a stack-based buffer overflow scenario. The evidence is further strengthened by the mention of fuzz testing as the discovery method and the provided commits `3a7a132` and `258a905` which fixed the vulnerability by hardening the file loader to prevent out-of-bounds access. CWE-787 is considered as secondary because it is a general out-of-bounds write, and CWE-121 is a specific case of that, and the description mentions stack. CWE-119, while relevant as a parent class, is less specific than CWE-121 and CWE-787.\n  \n  - *Relationship Analysis:* CWE-121 is a Variant of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). CWE-121 is also a specific type of CWE-787 (Out-of-bounds Write), focusing on stack-based overflows. The exploit can lead to arbitrary code execution.\n\n- **Confidence Score:**  \n  - Confidence: 1.0 (High confidence due to explicit mention of stack-based overflow and corroborating CVE details)\n\n---",
  "criticism": "Okay, I've reviewed the provided analysis against the full CWE specifications. Here's my critique:\n\n**Overall Assessment:**\n\nThe analysis is generally good, with a clear and logical justification for the primary CWE mapping. The confidence score and evidence strength are appropriate. The inclusion of secondary candidate CWEs and relationship analysis strengthens the assessment. However, there are some areas where the analysis could be improved, especially concerning the secondary candidates and some missed related CWEs based on the root cause.\n\n**Detailed Critique:**\n\n1.  **CWE-121: Stack-based Buffer Overflow (Primary)**\n\n    *   **Strengths:** The mapping to CWE-121 is accurate and well-justified. The analysis correctly identifies the specific nature of the buffer overflow occurring on the stack. The provided evidence (vulnerability description, CVE details, fuzzing discovery, and fix commits) strongly supports this mapping.\n    *   **Areas for Improvement:** None significant.\n    *   **CWE Specification Alignment:** The analysis aligns well with the CWE-121 specification, including the description, extended description, and alternative terms.\n\n2.  **CWE-787: Out-of-bounds Write (Secondary Candidate)**\n\n    *   **Strengths:** The rationale for including CWE-787 is valid since a stack-based buffer overflow is a specific form of out-of-bounds write.\n    *   **Areas for Improvement:** While correct to include, consider explicitly stating that CWE-787 is the more *general* case, and CWE-121 is a *specific* instance of it.\n    *   **CWE Specification Alignment:**  It correctly identifies that CWE-787 is a parent of CWE-121.\n\n3.  **CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer (Secondary Candidate)**\n\n    *   **Strengths:** Acknowledging the relationship between CWE-119 and CWE-121/CWE-787 is important because it's the overarching issue of improper memory boundary handling.\n    *   **Areas for Improvement:**\n        *   Follow the CWE-119's \"Mapping Guidance\": \"Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.\"  The analysis *does* do this, but then keeps CWE-119 as a *secondary* candidate.  Based on the mapping guidance, CWE-119 should be *excluded* in favor of the more specific CWE-121 and CWE-787.  The analysis essentially acknowledges this in its justification.\n        *   The confidence score for CWE-119 should be lower than the scores for CWE-121 and CWE-787, reflecting its higher level of abstraction.  Consider removing it altogether.\n    *   **CWE Specification Alignment:** Accurately represents CWE-119 as a class-level weakness and a parent of CWE-121 and CWE-787.\n\n4.  **Missing Related CWEs (Potential Improvement):**\n\n    *   **CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow').** If the code directly uses a buffer copy operation (like `strcpy` in C) *without* any size checks, then CWE-120 might be a relevant contributing factor. This depends on the specifics of the vulnerable code, which aren't available, but it's worth considering.  The description notes that \"The simplest type of error, and the most common cause of buffer overflows, is the \"classic\" case in which the product copies the buffer without restricting how much is copied.\"\n    *   **CWE-20: Improper Input Validation:**  Buffer overflows often stem from a lack of proper input validation.  If the size of the input data is not validated before being copied into the stack buffer, CWE-20 would be appropriate.  However, CWE-20's mapping guidance says that it is commonly misused and that lower-level CWEs should be preferred instead.  Thus, if there are more specific validation errors, those would be preferred.  For example:\n        *   **CWE-1284: Specified Quantity:** This should be considered if the input contains a size parameter that is not properly validated.\n    *   **CWE-131: Incorrect Calculation of Buffer Size:**  If the buffer size calculation was performed incorrectly, leading to a smaller buffer than needed, this would be relevant.\n    *   **CWE-788: Access of Memory Location After End of Buffer:** If the vulnerability manifests by writing past the end of the buffer due to an improper index or pointer manipulation, this would be relevant to include\n\n5.  **Mitigation Strategies:**\n\n    *   The analysis doesn't explicitly mention mitigation strategies. While not strictly required, briefly mentioning some relevant mitigations (especially those suggested in the CWE specifications) can enhance the analysis.\n    *   For CWE-121, some mitigations could include:\n        *   Using compiler-based buffer overflow detection mechanisms (e.g., /GS flag in Visual Studio, FORTIFY_SOURCE in GCC).\n        *   Implementing bounds checking on input.\n        *   Using safer string handling functions (if applicable).\n    *   For CWE-787, focus on language selection, libraries and frameworks and environment hardening.\n\n**Revised Summary Table (Incorporating Suggestions):**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 1.0 | Variant | Primary | Allowed |\n| CWE-787 | Out-of-bounds Write | 0.7 | Base | Secondary Candidate | Allowed | Stack-based buffer overflow is a specific type of out-of-bounds write.\n| CWE-119 | Improper Restriction of Operations within the Bounds of a Memory Buffer | 0.3 | Class | Excluded | Discouraged by CWE Mapping Guidance. Use more specific CWEs instead. |\n| CWE-120 | Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') | 0.4 | Base | Secondary Candidate | Allowed | Only include if source code uses `strcpy` or equivalent without any size checks.|\n| CWE-20 | Improper Input Validation | 0.3 | Class | Secondary Candidate | Only include if there is improper or missing Input Validation.  |\n\n**Key Improvements Suggested:**\n\n*   **Remove CWE-119:** Based on the Mapping Guidance, it's better to use the more specific CWEs and exclude CWE-119.\n*   **Consider CWE-120:** Analyze the code to determine if classic buffer copy is used.\n*   **Mitigation Suggestions:** Briefly touch on mitigation strategies.\n\nBy incorporating these suggestions, the analysis can become even more comprehensive and aligned with best practices for CWE mapping.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 1.0 | Variant | Primary | Allowed |\n| CWE-787 | Out-of-bounds Write | 0.7 | Base | Secondary Candidate | Allowed | Stack-based buffer overflow is a specific type of out-of-bounds write. |\n| CWE-120 | Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') | 0.4 | Base | Secondary Candidate | Allowed | Only include if source code uses `strcpy` or equivalent without any size checks. |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.4 | Base | Secondary Candidate | Allowed | Consider if the input contains a size parameter that is not properly validated. |\n\n  - The Primary CWE should be first and noted as the Primary CWEs\n  - The secondary candidate CWEs should be next and noted as secondary candidates.\n  - The confidence is a confidence score 0 to 1 to rate your confidence in your assessment for that CWE.\n  - The CWE Abstraction Level as one of these values: Base, Variant, Pillar, Class, Compound\n  - The Mapping Notes Usage as one of these values: Allowed, Allowed-with-Review, Prohibited, Discouraged\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-121 (Stack-based Buffer Overflow)**, a variant of **CWE-787 (Out-of-bounds Write)**. **CWE-120 (Buffer Copy without Checking Size of Input)** can precede **CWE-787** if a buffer copy operation without size checking is used. **CWE-1284 (Improper Validation of Specified Quantity in Input)** could also precede **CWE-787** if the size of the input is not validated.\nCWE-119 was removed because of the CWE Mapping Guidance.\n\n```mermaid\ngraph TD\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe120[\"CWE-120: Buffer Copy without Checking Size\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    \n    cwe121 -->|CHILDOF| cwe787\n    cwe120 -->|CANPRECEDE| cwe787\n    cwe1284 -->|CANPRECEDE| cwe787\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe121 primary\n    class cwe787,cwe120,cwe1284 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with either **CWE-120 (Buffer Copy without Checking Size)** or **CWE-1284 (Improper Validation of Specified Quantity in Input)**, leading to **CWE-787 (Out-of-bounds Write)**, and finally manifesting as **CWE-121 (Stack-based Buffer Overflow)**. The root cause could be the lack of input validation or the use of unsafe buffer copy functions. The impact is a crash due to the stack-based buffer overflow, potentially leading to arbitrary code execution.\n\n## Summary of Analysis\nThe initial analysis correctly identified **CWE-121 (Stack-based Buffer Overflow)** as the primary weakness. The criticism provided valuable insights by suggesting the exclusion of **CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer)** based on CWE mapping guidance and proposing the consideration of **CWE-120 (Buffer Copy without Checking Size)** and **CWE-1284 (Improper Validation of Specified Quantity in Input)**.\n\nThe vulnerability description explicitly mentions \"stack-based overflows,\" which directly supports the selection of **CWE-121**. The evidence is strengthened by the CVE details and the provided commits, which address out-of-bounds access.\n\nThe graph relationships influenced the final selection by highlighting the hierarchical relationship between **CWE-121** and **CWE-787**, as well as the potential chain relationships involving **CWE-120** and **CWE-1284**. The selected CWEs are at the optimal level of specificity, with **CWE-121** being the most specific and accurately reflecting the nature of the vulnerability.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 281.38910359186184,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5612290316681752,
            "sparse": 281.38910359186184,
            "graph": 1.9323533047275259
          },
          "normalized_scores": {
            "dense": 0.5612290316681752,
            "sparse": 0.22511128287348947,
            "graph": 0.6901261802598307
          },
          "weighted_scores": {
            "dense": 0.1964301610838613,
            "sparse": 0.0900445131493958,
            "graph": 0.1725315450649577
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5612290316681752,
              "query_max": 0.6149494149408202,
              "query_min": 0.5549225143072318,
              "normalized_score": 0.5612290316681752,
              "weight": 0.35,
              "weighted_score": 0.1964301610838613
            },
            "sparse": {
              "raw_score": 281.38910359186184,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.22511128287348947,
              "weight": 0.4,
              "weighted_score": 0.0900445131493958
            },
            "graph": {
              "raw_score": 1.9323533047275259,
              "query_max": 3.8870000000000005,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.6901261802598307,
              "weight": 0.25,
              "weighted_score": 0.1725315450649577
            }
          },
          "contribution_percentages": {
            "dense": 42.794662212679356,
            "sparse": 19.617275183562203,
            "graph": 37.588062603758424
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.45900621929821483,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5967080850876793
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5967080850876793
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6563788935964472
            }
          },
          "combined_score": 0.6563788935964472
        }
      },
      "similarity": 0.6563788935964472
    },
    {
      "metadata": {
        "doc_id": "CWE-79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "type": "Base",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "relationships": [],
        "original_sparse_score": 296.65953251020113,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 296.65953251020113,
            "graph": 3.8870000000000005
          },
          "normalized_scores": {
            "sparse": 0.2373276260081609,
            "graph": 1.0
          },
          "weighted_scores": {
            "sparse": 0.09493105040326437,
            "graph": 0.25
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 296.65953251020113,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.2373276260081609,
              "weight": 0.4,
              "weighted_score": 0.09493105040326437
            },
            "graph": {
              "raw_score": 3.8870000000000005,
              "query_max": 3.8870000000000005,
              "query_min": 1.5350400000000004,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "sparse": 27.52174682223562,
            "graph": 72.47825317776437
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3449310504032644,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.44841036552424374
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.44841036552424374
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4932514020766682
            }
          },
          "combined_score": 0.4932514020766682
        }
      },
      "similarity": 0.4932514020766682
    },
    {
      "metadata": {
        "doc_id": "CWE-89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "relationships": [],
        "original_sparse_score": 316.27593440107967,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 316.27593440107967,
            "graph": 2.3998000000000004
          },
          "normalized_scores": {
            "sparse": 0.25302074752086373,
            "graph": 0.8570714285714287
          },
          "weighted_scores": {
            "sparse": 0.10120829900834549,
            "graph": 0.21426785714285718
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 316.27593440107967,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.25302074752086373,
              "weight": 0.4,
              "weighted_score": 0.10120829900834549
            },
            "graph": {
              "raw_score": 2.3998000000000004,
              "query_max": 3.8870000000000005,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.8570714285714287,
              "weight": 0.25,
              "weighted_score": 0.21426785714285718
            }
          },
          "contribution_percentages": {
            "sparse": 32.08112468564438,
            "graph": 67.91887531435562
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.31547615615120267,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4101190029965635
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4101190029965635
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4511309032962199
            }
          },
          "combined_score": 0.4511309032962199
        }
      },
      "similarity": 0.4511309032962199
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 314.8128805551689,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6149494149408202,
            "sparse": 314.8128805551689
          },
          "normalized_scores": {
            "dense": 0.6149494149408202,
            "sparse": 0.2518503044441351
          },
          "weighted_scores": {
            "dense": 0.21523229522928708,
            "sparse": 0.10074012177765404
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6149494149408202,
              "query_max": 0.6149494149408202,
              "query_min": 0.5549225143072318,
              "normalized_score": 0.6149494149408202,
              "weight": 0.35,
              "weighted_score": 0.21523229522928708
            },
            "sparse": {
              "raw_score": 314.8128805551689,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.2518503044441351,
              "weight": 0.4,
              "weighted_score": 0.10074012177765404
            }
          },
          "contribution_percentages": {
            "dense": 68.11743166320716,
            "sparse": 31.882568336792836
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3159724170069411,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.37916690040832934
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.37916690040832934
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4170835904491623
            }
          },
          "combined_score": 0.4170835904491623
        }
      },
      "similarity": 0.4170835904491623
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 279.6203469827901,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5645630149177714,
            "sparse": 279.6203469827901
          },
          "normalized_scores": {
            "dense": 0.5645630149177714,
            "sparse": 0.2236962775862321
          },
          "weighted_scores": {
            "dense": 0.19759705522121998,
            "sparse": 0.08947851103449284
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5645630149177714,
              "query_max": 0.6149494149408202,
              "query_min": 0.5549225143072318,
              "normalized_score": 0.5645630149177714,
              "weight": 0.35,
              "weighted_score": 0.19759705522121998
            },
            "sparse": {
              "raw_score": 279.6203469827901,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.2236962775862321,
              "weight": 0.4,
              "weighted_score": 0.08947851103449284
            }
          },
          "contribution_percentages": {
            "dense": 68.83102515426556,
            "sparse": 31.168974845734436
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.28707556625571284,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3731982361324267
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3731982361324267
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.4105180597456694
            }
          },
          "combined_score": 0.4105180597456694
        }
      },
      "similarity": 0.4105180597456694
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 252.08418133937488,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 252.08418133937488,
            "graph": 2.2776000000000005
          },
          "normalized_scores": {
            "sparse": 0.20166734507149991,
            "graph": 0.8134285714285716
          },
          "weighted_scores": {
            "sparse": 0.08066693802859998,
            "graph": 0.2033571428571429
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 252.08418133937488,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.20166734507149991,
              "weight": 0.4,
              "weighted_score": 0.08066693802859998
            },
            "graph": {
              "raw_score": 2.2776000000000005,
              "query_max": 3.8870000000000005,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.8134285714285716,
              "weight": 0.25,
              "weighted_score": 0.2033571428571429
            }
          },
          "contribution_percentages": {
            "sparse": 28.40144320757459,
            "graph": 71.59855679242541
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2840240808857429,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.36923130515146574
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.36923130515146574
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.40615443566661236
            }
          },
          "combined_score": 0.40615443566661236
        }
      },
      "similarity": 0.40615443566661236
    },
    {
      "metadata": {
        "doc_id": "CWE-306",
        "name": "Missing Authentication for Critical Function",
        "type": "Base",
        "original_content": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
        "relationships": [],
        "original_sparse_score": 265.0003505698909,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5580033240716198,
            "sparse": 265.0003505698909
          },
          "normalized_scores": {
            "dense": 0.5580033240716198,
            "sparse": 0.2120002804559127
          },
          "weighted_scores": {
            "dense": 0.19530116342506693,
            "sparse": 0.08480011218236509
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5580033240716198,
              "query_max": 0.6149494149408202,
              "query_min": 0.5549225143072318,
              "normalized_score": 0.5580033240716198,
              "weight": 0.35,
              "weighted_score": 0.19530116342506693
            },
            "sparse": {
              "raw_score": 265.0003505698909,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.2120002804559127,
              "weight": 0.4,
              "weighted_score": 0.08480011218236509
            }
          },
          "contribution_percentages": {
            "dense": 69.72519600331478,
            "sparse": 30.27480399668521
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.28010127560743203,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.36413165828966165
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.36413165828966165
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.40054482411862785
            }
          },
          "combined_score": 0.40054482411862785
        }
      },
      "similarity": 0.40054482411862785
    },
    {
      "metadata": {
        "doc_id": "CWE-434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "type": "Base",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "relationships": [],
        "original_sparse_score": 259.2742387292438,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 259.2742387292438,
            "graph": 1.7680000000000005
          },
          "normalized_scores": {
            "sparse": 0.20741939098339504,
            "graph": 0.6314285714285717
          },
          "weighted_scores": {
            "sparse": 0.08296775639335802,
            "graph": 0.15785714285714292
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 259.2742387292438,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.20741939098339504,
              "weight": 0.4,
              "weighted_score": 0.08296775639335802
            },
            "graph": {
              "raw_score": 1.7680000000000005,
              "query_max": 3.8870000000000005,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.6314285714285717,
              "weight": 0.25,
              "weighted_score": 0.15785714285714292
            }
          },
          "contribution_percentages": {
            "sparse": 34.45148597656288,
            "graph": 65.54851402343712
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.24082489925050093,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3130723690256512
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3130723690256512
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.34437960592821637
            }
          },
          "combined_score": 0.34437960592821637
        }
      },
      "similarity": 0.34437960592821637
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 296.7959024946496,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5866567874595957,
            "sparse": 296.7959024946496
          },
          "normalized_scores": {
            "dense": 0.5866567874595957,
            "sparse": 0.2374367219957197
          },
          "weighted_scores": {
            "dense": 0.2053298756108585,
            "sparse": 0.09497468879828788
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5866567874595957,
              "query_max": 0.6149494149408202,
              "query_min": 0.5549225143072318,
              "normalized_score": 0.5866567874595957,
              "weight": 0.35,
              "weighted_score": 0.2053298756108585
            },
            "sparse": {
              "raw_score": 296.7959024946496,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.2374367219957197,
              "weight": 0.4,
              "weighted_score": 0.09497468879828788
            }
          },
          "contribution_percentages": {
            "dense": 68.37387770473886,
            "sparse": 31.62612229526114
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.3003045644091464,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.2402436515273171
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2402436515273171
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.25225583410368296
            }
          },
          "combined_score": 0.25225583410368296
        }
      },
      "similarity": 0.25225583410368296
    },
    {
      "metadata": {
        "doc_id": "CWE-1241",
        "name": "Use of Predictable Algorithm in Random Number Generator",
        "type": "Base",
        "original_content": "The device uses an algorithm that is predictable and generates a pseudo-random number.",
        "relationships": [],
        "original_sparse_score": 265.1070540375508,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 265.1070540375508
          },
          "normalized_scores": {
            "sparse": 0.21208564323004067
          },
          "weighted_scores": {
            "sparse": 0.08483425729201627
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 265.1070540375508,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.21208564323004067,
              "weight": 0.4,
              "weighted_score": 0.08483425729201627
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.08483425729201627,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.11028453447962115
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.11028453447962115
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.12131298792758327
            }
          },
          "combined_score": 0.12131298792758327
        }
      },
      "similarity": 0.12131298792758327
    },
    {
      "metadata": {
        "doc_id": "CWE-1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "type": "Base",
        "original_content": "The product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine.",
        "relationships": [],
        "original_sparse_score": 264.662919202357,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 264.662919202357
          },
          "normalized_scores": {
            "sparse": 0.2117303353618856
          },
          "weighted_scores": {
            "sparse": 0.08469213414475424
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 264.662919202357,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.2117303353618856,
              "weight": 0.4,
              "weighted_score": 0.08469213414475424
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.08469213414475424,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.11009977438818051
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.11009977438818051
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.12110975182699857
            }
          },
          "combined_score": 0.12110975182699857
        }
      },
      "similarity": 0.12110975182699857
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 264.5592308044205,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 264.5592308044205
          },
          "normalized_scores": {
            "sparse": 0.2116473846435364
          },
          "weighted_scores": {
            "sparse": 0.08465895385741457
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 264.5592308044205,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.2116473846435364,
              "weight": 0.4,
              "weighted_score": 0.08465895385741457
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.08465895385741457,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.11005664001463894
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.11005664001463894
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.12106230401610285
            }
          },
          "combined_score": 0.12106230401610285
        }
      },
      "similarity": 0.12106230401610285
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 259.6471100316461,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 259.6471100316461
          },
          "normalized_scores": {
            "sparse": 0.20771768802531687
          },
          "weighted_scores": {
            "sparse": 0.08308707521012676
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 259.6471100316461,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.20771768802531687,
              "weight": 0.4,
              "weighted_score": 0.08308707521012676
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.08308707521012676,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.10801319777316479
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.10801319777316479
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.11881451755048128
            }
          },
          "combined_score": 0.11881451755048128
        }
      },
      "similarity": 0.11881451755048128
    },
    {
      "metadata": {
        "doc_id": "CWE-770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [],
        "original_sparse_score": 257.60338685762423,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 257.60338685762423
          },
          "normalized_scores": {
            "sparse": 0.20608270948609939
          },
          "weighted_scores": {
            "sparse": 0.08243308379443975
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 257.60338685762423,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.20608270948609939,
              "weight": 0.4,
              "weighted_score": 0.08243308379443975
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.08243308379443975,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.10716300893277168
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.10716300893277168
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.11787930982604886
            }
          },
          "combined_score": 0.11787930982604886
        }
      },
      "similarity": 0.11787930982604886
    },
    {
      "metadata": {
        "doc_id": "CWE-352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "type": "Compound",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "relationships": [],
        "original_sparse_score": 252.23010499405984,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
          "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
          "reasons": [
            "Other"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 252.23010499405984
          },
          "normalized_scores": {
            "sparse": 0.2017840839952479
          },
          "weighted_scores": {
            "sparse": 0.08071363359809916
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 252.23010499405984,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.2017840839952479,
              "weight": 0.4,
              "weighted_score": 0.08071363359809916
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.0,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.08071363359809916,
            "abstraction": {
              "type": "compound",
              "factor": 1.0,
              "score_after": 0.08071363359809916
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08071363359809916
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
                "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
                "reasons": [
                  "Other"
                ]
              },
              "score_after": 0.08878499695790909
            }
          },
          "combined_score": 0.08878499695790909
        }
      },
      "similarity": 0.08878499695790909
    },
    {
      "metadata": {
        "doc_id": "CWE-99",
        "name": "Improper Control of Resource Identifiers ('Resource Injection')",
        "type": "Class",
        "original_content": "The product receives input from an upstream component, but it does not restrict or incorrectly restricts the input before it is used as an identifier for a resource that may be outside the intended sphere of control.",
        "relationships": [],
        "original_sparse_score": 260.0744787758092,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 260.0744787758092
          },
          "normalized_scores": {
            "sparse": 0.20805958302064737
          },
          "weighted_scores": {
            "sparse": 0.08322383320825895
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 260.0744787758092,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.20805958302064737,
              "weight": 0.4,
              "weighted_score": 0.08322383320825895
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.08322383320825895,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.06657906656660716
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06657906656660716
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.06990801989493751
            }
          },
          "combined_score": 0.06990801989493751
        }
      },
      "similarity": 0.06990801989493751
    },
    {
      "metadata": {
        "doc_id": "CWE-705",
        "name": "Incorrect Control Flow Scoping",
        "type": "Class",
        "original_content": "The product does not properly return control flow to the proper location after it has completed a task or detected an unusual condition.",
        "relationships": [],
        "original_sparse_score": 254.5406599942287,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 254.5406599942287
          },
          "normalized_scores": {
            "sparse": 0.20363252799538295
          },
          "weighted_scores": {
            "sparse": 0.08145301119815318
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 254.5406599942287,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.20363252799538295,
              "weight": 0.4,
              "weighted_score": 0.08145301119815318
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.08145301119815318,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.06516240895852254
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06516240895852254
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.06842052940644867
            }
          },
          "combined_score": 0.06842052940644867
        }
      },
      "similarity": 0.06842052940644867
    },
    {
      "metadata": {
        "doc_id": "CWE-404",
        "name": "Improper Resource Shutdown or Release",
        "type": "Class",
        "original_content": "The product does not release or incorrectly releases a resource before it is made available for re-use.",
        "relationships": [],
        "original_sparse_score": 250.77072287506147,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 250.77072287506147
          },
          "normalized_scores": {
            "sparse": 0.20061657830004917
          },
          "weighted_scores": {
            "sparse": 0.08024663132001968
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 250.77072287506147,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.20061657830004917,
              "weight": 0.4,
              "weighted_score": 0.08024663132001968
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.08024663132001968,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.06419730505601574
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06419730505601574
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.06740717030881653
            }
          },
          "combined_score": 0.06740717030881653
        }
      },
      "similarity": 0.06740717030881653
    },
    {
      "metadata": {
        "doc_id": "CWE-285",
        "name": "Improper Authorization",
        "type": "Class",
        "original_content": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
        "relationships": [],
        "original_sparse_score": 251.61816142194849,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Look at CWE-285's children and consider mapping to CWEs such as CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-732: Incorrect Permission Assignment for Critical Resource, or others.",
          "reasons": [
            "Abstraction"
          ],
          "suggestions": [
            {
              "CweID": "862",
              "Comment": "Missing Authorization"
            },
            {
              "CweID": "863",
              "Comment": "Incorrect Authorization"
            },
            {
              "CweID": "732",
              "Comment": "Incorrect Permission Assignment for Critical Resource"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 251.61816142194849
          },
          "normalized_scores": {
            "sparse": 0.2012945291375588
          },
          "weighted_scores": {
            "sparse": 0.08051781165502353
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 251.61816142194849,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.2012945291375588,
              "weight": 0.4,
              "weighted_score": 0.08051781165502353
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.08051781165502353,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.06441424932401883
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06441424932401883
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Look at CWE-285's children and consider mapping to CWEs such as CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-732: Incorrect Permission Assignment for Critical Resource, or others.",
                "reasons": [
                  "Abstraction"
                ],
                "suggestions": [
                  {
                    "CweID": "862",
                    "Comment": "Missing Authorization"
                  },
                  {
                    "CweID": "863",
                    "Comment": "Incorrect Authorization"
                  },
                  {
                    "CweID": "732",
                    "Comment": "Incorrect Permission Assignment for Critical Resource"
                  }
                ]
              },
              "score_after": 0.05153139945921507
            }
          },
          "combined_score": 0.05153139945921507
        }
      },
      "similarity": 0.05153139945921507
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 250.94439811344304,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 250.94439811344304
          },
          "normalized_scores": {
            "sparse": 0.20075551849075443
          },
          "weighted_scores": {
            "sparse": 0.08030220739630178
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 250.94439811344304,
              "query_max": 316.27593440107967,
              "query_min": 250.77072287506147,
              "normalized_score": 0.20075551849075443,
              "weight": 0.4,
              "weighted_score": 0.08030220739630178
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.08030220739630178,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.06424176591704144
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06424176591704144
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.051393412733633154
            }
          },
          "combined_score": 0.051393412733633154
        }
      },
      "similarity": 0.051393412733633154
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-119",
      "CWE-121",
      "CWE-787"
    ],
    "critic_additional": [
      "CWE-788",
      "CWE-120",
      "CWE-1284",
      "CWE-20",
      "CWE-131",
      "CWE-125"
    ]
  }
}