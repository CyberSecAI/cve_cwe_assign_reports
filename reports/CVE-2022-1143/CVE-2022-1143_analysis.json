{
  "cve_id": "CVE-2022-1143",
  "description": "Heap buffer overflow in WebUI in Google Chrome prior to 100.0.4896.60 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via specific input into DevTools.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "Heap buffer overflow",
    "impact": "heap corruption",
    "vector": "specific input",
    "attacker": "remote attacker",
    "product": "Google Chrome",
    "version": "prior to 100.0.4896.60",
    "component": "WebUI"
  },
  "reference_content": "Based on the provided information, here's an analysis of CVE-2022-1143:\n\n**Root Cause of Vulnerability:**\n- Heap buffer overflow in WebUI.\n\n**Weaknesses/Vulnerabilities Present:**\n- Heap buffer overflow.\n\n**Impact of Exploitation:**\n- The vulnerability could lead to remote code execution.\n\n**Attack Vectors:**\n- The vulnerability is located in the WebUI component of Chromium and its derivatives.\n\n**Required Attacker Capabilities/Position:**\n- The attacker would need to be able to trigger the heap buffer overflow, likely by crafting a malicious webpage or content that is processed by WebUI.\n\n**Additional Details:**\n- The vulnerability was reported by Leecraso and Guang Gong of 360 Alpha Lab on 2022-03-07.\n- The Gentoo Security Advisory (GLSA 202208-25) also references this CVE and other vulnerabilities, indicating a wide range of issues in Chromium and related browsers.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {
          "CWE-787": 1
        },
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {
          "CWE-787": 1
        },
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "85": {
        "cwe_counts": {
          "CWE-787": 13,
          "CWE-416": 1
        },
        "total_samples": 14,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 13,
            "proportion": 0.929
          },
          {
            "cwes": [
              "CWE-416"
            ],
            "frequency": 1,
            "proportion": 0.071
          }
        ]
      },
      "80": {
        "cwe_counts": {
          "CWE-787": 6
        },
        "total_samples": 6,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 6,
            "proportion": 1.0
          }
        ]
      },
      "75": {
        "cwe_counts": {
          "CWE-787": 13
        },
        "total_samples": 13,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 13,
            "proportion": 1.0
          }
        ]
      },
      "70": {
        "cwe_counts": {
          "CWE-787": 104,
          "CWE-119": 6,
          "CWE-416": 2
        },
        "total_samples": 112,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 104,
            "proportion": 0.929
          },
          {
            "cwes": [
              "CWE-119"
            ],
            "frequency": 6,
            "proportion": 0.054
          },
          {
            "cwes": [
              "CWE-416"
            ],
            "frequency": 2,
            "proportion": 0.018
          }
        ]
      }
    },
    "cwe_consensus": "CWE-787",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 1,
        "90": 1,
        "85": 14,
        "80": 6,
        "75": 13,
        "70": 112
      },
      "top_cwes_by_threshold": {
        "95": [
          [
            "CWE-787",
            1
          ]
        ],
        "90": [
          [
            "CWE-787",
            1
          ]
        ],
        "85": [
          [
            "CWE-787",
            13
          ],
          [
            "CWE-416",
            1
          ]
        ],
        "80": [
          [
            "CWE-787",
            6
          ]
        ],
        "75": [
          [
            "CWE-787",
            13
          ]
        ],
        "70": [
          [
            "CWE-787",
            104
          ],
          [
            "CWE-119",
            6
          ],
          [
            "CWE-416",
            2
          ]
        ]
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [
          "787"
        ],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [
          "787"
        ],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 85,
        "cwes": [
          "787"
        ],
        "total": 14,
        "frequency": 13,
        "proportion": 0.929
      },
      {
        "similarity": 85,
        "cwes": [
          "416"
        ],
        "total": 14,
        "frequency": 1,
        "proportion": 0.071
      },
      {
        "similarity": 80,
        "cwes": [
          "787"
        ],
        "total": 6,
        "frequency": 6,
        "proportion": 1.0
      },
      {
        "similarity": 75,
        "cwes": [
          "787"
        ],
        "total": 13,
        "frequency": 13,
        "proportion": 1.0
      },
      {
        "similarity": 70,
        "cwes": [
          "787"
        ],
        "total": 112,
        "frequency": 104,
        "proportion": 0.929
      },
      {
        "similarity": 70,
        "cwes": [
          "119"
        ],
        "total": 112,
        "frequency": 6,
        "proportion": 0.054
      },
      {
        "similarity": 70,
        "cwes": [
          "416"
        ],
        "total": 112,
        "frequency": 2,
        "proportion": 0.018
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-787",
    "top_cwes": [
      [
        "CWE-787",
        138
      ],
      [
        "CWE-119",
        6
      ],
      [
        "CWE-416",
        3
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 147
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                     | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------- | :---------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-122 | Heap-based Buffer Overflow | 0.9 | Variant | Allowed | Primary CWE |\n| CWE-787 | Out-of-bounds Write | 0.7 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description explicitly states \"**Heap buffer overflow**\" in Google Chrome's WebUI, leading to potential heap corruption. This directly aligns with CWE-122, Heap-based Buffer Overflow, which is a variant of buffer overflow occurring specifically in the heap memory region. Given the explicit mention of \"heap,\" CWE-122 is a more precise match than the more general CWE-787 (Out-of-bounds Write). The \"CVE Reference Links Content Summary\" reinforces this by identifying a \"Heap buffer overflow in WebUI\" as the root cause.\n  \n  - *Relationship Analysis:* CWE-122 is a Variant of CWE-787 (Out-of-bounds Write). While CWE-787 could be considered, CWE-122 is more specific due to the overflow occurring on the heap.\n\n- **Confidence Score:**  \n  - Confidence: 0.9 (High confidence due to explicit mention of \"heap buffer overflow\" in the description and supporting information.)",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                     | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------- | :---------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-122 | Heap-based Buffer Overflow | 0.9 | Variant | Allowed | Primary CWE |\n| CWE-787 | Out-of-bounds Write | 0.7 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description explicitly states \"**Heap buffer overflow**\" in Google Chrome's WebUI, leading to potential heap corruption. This directly aligns with CWE-122, Heap-based Buffer Overflow, which is a variant of buffer overflow occurring specifically in the heap memory region. Given the explicit mention of \"heap,\" CWE-122 is a more precise match than the more general CWE-787 (Out-of-bounds Write). The \"CVE Reference Links Content Summary\" reinforces this by identifying a \"Heap buffer overflow in WebUI\" as the root cause.\n  \n  - *Relationship Analysis:* CWE-122 is a Variant of CWE-787 (Out-of-bounds Write). While CWE-787 could be considered, CWE-122 is more specific due to the overflow occurring on the heap.\n\n- **Confidence Score:**  \n  - Confidence: 0.9 (High confidence due to explicit mention of \"heap buffer overflow\" in the description and supporting information.)",
  "criticism": "Okay, I've reviewed the analysis and the full CWE specifications you provided. Here's my critique:\n\n**Overall Assessment:**\n\nThe analysis is generally sound, particularly in identifying CWE-122 (Heap-based Buffer Overflow) as the primary weakness.  The reasoning is clearly articulated, referencing the explicit mention of \"heap buffer overflow\" in the original vulnerability description.  The decision to prioritize CWE-122 over its parent, CWE-787, is also correct, given the specificity of the vulnerability.  The inclusion of CWE-787 as a secondary candidate is reasonable, providing a broader context.\n\n**Specific Points and Suggestions:**\n\n1.  **Confidence Score:** The confidence score of 0.9 for CWE-122 is justified.  The explicit language in the vulnerability description warrants high confidence.\n\n2.  **Justification for CWE-122:** The analysis clearly explains why CWE-122 is a better fit than CWE-787.  It correctly notes that CWE-122 is a variant of CWE-787, providing the necessary relationship context.\n\n3.  **CWE-787 as a Secondary Candidate:** Including CWE-787 is good practice, as it acknowledges the broader category of out-of-bounds writes. However, it might be helpful to add a brief explanation of *why* it's a secondary candidate, perhaps mentioning that while the write *is* out-of-bounds, the location (heap) is already specifically addressed.\n\n4.  **Consider CWE-119, but correctly discarded:**  The analysis implicitly discards CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), and this is the right choice. CWE-119 is a very general CWE and the mapping guidance discourages its use when more specific CWEs are available.  The analysis correctly bypasses CWE-119.\n\n5. **Retriever Results:**\nThe retriever results show other possible CWE's. These are not incorrect but do not directly apply. Here is why:\n    - CWE-843, Type Confusion: This could occur, but would require more specific information. While type confusion can lead to a heap overflow, the base description doesn't suggest this.\n    - CWE-190, Integer Overflow: Same as type confusion, this can lead to a heap overflow but not necessary, requires more info.\n    - CWE-366, Race Condition: Not directly related to the buffer overflow, requires more information.\n    - CWE-416, Use After Free: Again, could be related if the heap is freed, but not specifically implied by the description.\n    - CWE-193, Off-by-one Error: This is a possible root cause for the overflow but requires more in depth information.\n    - CWE-126, Buffer Over-read: The focus is on the writing and not the reading, therefore it is less accurate.\n    - CWE-415, Double Free: This would be a consequence of memory corruption but not the overflow itself.\n    - CWE-121, Stack-based Buffer Overflow: Description specifically states heap and not stack.\n\n6.  **Mitigations (General):** The analysis doesn't explicitly mention mitigations, but that's acceptable at this stage.  If this were a more detailed security assessment, adding potential mitigations from the CWE entries would be beneficial. Specifically, for CWE-122 and CWE-787, consider mentioning:\n\n    *   **Language Selection:** Using memory-safe languages (Java, C#, Rust) or languages with automatic bounds checking.\n    *   **Safe Libraries/Frameworks:** Using safe string handling libraries (e.g., SafeStr, Strsafe.h).\n    *   **Compiler-Based Protections:** Using compiler flags like `/GS` (Microsoft Visual Studio) or `FORTIFY_SOURCE` (GCC) for buffer overflow detection.\n    *   **Address Space Layout Randomization (ASLR):**  While not a direct mitigation, ASLR makes exploiting heap overflows more difficult.\n\n7. **CWE Example Database:**\nThe examples from the database are very useful to understand the various attack vectors for a heap overflow. Specifically, looking at the chains that result in a heap overflow will give the developer a clearer picture.\n\n8. **Complete CWE Specifications:**\nThe tool is following the mapping guidance and attempting to map to a Variant.\n\n**Specific CWE Specification Feedback:**\n\n*   **CWE-122 (Heap-based Buffer Overflow):**\n    *   The description is accurate.\n    *   The relationships (child of CWE-787) are correctly identified.\n    *   The mapping guidance is appropriate.\n    *   The potential mitigations listed are relevant.\n\n*   **CWE-787 (Out-of-bounds Write):**\n    *   The description is accurate.\n    *   The relationships are correctly identified.\n    *   The mapping guidance is appropriate.\n    *   The potential mitigations are relevant.\n\n**Improved Analysis Example (incorporating the suggestions):**\n\n```\n# Summary\n| CWE ID  | CWE Name                                                     | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------- | :---------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-122 | Heap-based Buffer Overflow | 0.9 | Variant | Allowed | Primary CWE |\n| CWE-787 | Out-of-bounds Write | 0.7 | Base | Allowed | Secondary Candidate - General Write |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description explicitly states \"**Heap buffer overflow**\" in Google Chrome's WebUI, leading to potential heap corruption. This directly aligns with CWE-122, Heap-based Buffer Overflow, which is a variant of buffer overflow occurring specifically in the heap memory region. Given the explicit mention of \"heap,\" CWE-122 is a more precise match than the more general CWE-787 (Out-of-bounds Write). The \"CVE Reference Links Content Summary\" reinforces this by identifying a \"Heap buffer overflow in WebUI\" as the root cause.\n  \n  - *Relationship Analysis:* CWE-122 is a Variant of CWE-787 (Out-of-bounds Write). While CWE-787 could be considered, CWE-122 is more specific due to the overflow occurring on the heap.\n\n- **Confidence Score:**  \n  - Confidence: 0.9 (High confidence due to explicit mention of \"heap buffer overflow\" in the description and supporting information.)\n\n# CWE Examples from Database\n\n\n## Known Examples for CWE-122: Heap-based Buffer Overflow\n### Observed Examples\n- **CVE-2021-43537** [https://www.cve.org/CVERecord?id=CVE-2021-43537](https://www.cve.org/CVERecord?id=CVE-2021-43537): Chain: in a web browser, an unsigned 64-bit integer is forcibly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory corruption (CWE-122)\n- **CVE-2007-4268** [https://www.cve.org/CVERecord?id=CVE-2007-4268](https://www.cve.org/CVERecord?id=CVE-2007-4268): Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122)\n- **CVE-2009-2523** [https://www.cve.org/CVERecord?id=CVE-2009-2523](https://www.cve.org/CVERecord?id=CVE-2009-2523): Chain: product does not handle when an input string is not NULL terminated (CWE-170), leading to buffer over-read (CWE-125) or heap-based buffer overflow (CWE-122).\n- **CVE-2021-29529** [https://www.cve.org/CVERecord?id=CVE-2021-29529](https://www.cve.org/CVERecord?id=CVE-2021-29529): Chain: machine-learning product can have a heap-based buffer overflow (CWE-122) when some integer-oriented bounds are calculated by using ceiling() and floor() on floating point values (CWE-1339)\n- **CVE-2010-1866** [https://www.cve.org/CVERecord?id=CVE-2010-1866](https://www.cve.org/CVERecord?id=CVE-201",
  "resolution": "# Summary\n| CWE ID  | CWE Name                                                     | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------- | :---------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-122 | Heap-based Buffer Overflow | 0.9 | Variant | Allowed | Primary CWE |\n| CWE-787 | Out-of-bounds Write | 0.7 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe analysis correctly identifies CWE-122 as a Variant of CWE-787. CWE-122 is more specific as the vulnerability occurs on the heap. The other retriever results such as CWE-190 (Integer Overflow) and CWE-416 (Use After Free) are not directly related to the buffer overflow and require more information.\n\n```mermaid\ngraph TD\n    cwe122[\"CWE-122: Heap-based Buffer Overflow\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    \n    cwe122 -->|CHILDOF| cwe787\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe122 primary\n    class cwe787 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the user interaction that leads to specific input into DevTools. This input is then processed, leading to a **Heap buffer overflow** (**CWE-122**), which is a form of **Out-of-bounds Write** (**CWE-787**). The consequence is potential heap corruption, which could lead to arbitrary code execution or other security impacts.\n\n## Summary of Analysis\nThe initial analysis and the criticism are both sound. The vulnerability description clearly indicates a **Heap buffer overflow**, making CWE-122 the most appropriate primary CWE. The confidence score of 0.9 is justified due to the explicit mention of \"heap buffer overflow\" in the description. The inclusion of CWE-787 as a secondary candidate is also reasonable as it represents the broader category of out-of-bounds write. The relationships between the CWEs, particularly the child-of relationship between CWE-122 and CWE-787, influenced the final selection by ensuring that the most specific CWE was chosen while still acknowledging the broader context. The selected CWEs are at the optimal level of specificity because CWE-122 directly addresses the heap-based nature of the overflow, while CWE-787 provides a more general categorization.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-843",
        "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
        "type": "Base",
        "original_content": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.",
        "relationships": [],
        "original_sparse_score": 302.78517965427153,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5595580097204578,
            "sparse": 302.78517965427153,
            "graph": 2.5275100346005854
          },
          "normalized_scores": {
            "dense": 0.5595580097204578,
            "sparse": 0.24222814372341722,
            "graph": 0.9026821552144949
          },
          "weighted_scores": {
            "dense": 0.19584530340216022,
            "sparse": 0.09689125748936689,
            "graph": 0.22567053880362373
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5595580097204578,
              "query_max": 0.6222578739869642,
              "query_min": 0.5428651365235706,
              "normalized_score": 0.5595580097204578,
              "weight": 0.35,
              "weighted_score": 0.19584530340216022
            },
            "sparse": {
              "raw_score": 302.78517965427153,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.24222814372341722,
              "weight": 0.4,
              "weighted_score": 0.09689125748936689
            },
            "graph": {
              "raw_score": 2.5275100346005854,
              "query_max": 2.7014000000000005,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.9026821552144949,
              "weight": 0.25,
              "weighted_score": 0.22567053880362373
            }
          },
          "contribution_percentages": {
            "dense": 37.77828342191436,
            "sparse": 18.69018721895278,
            "graph": 43.531529359132854
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5184070996951509,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6739292296036962
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6739292296036962
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7413221525640659
            }
          },
          "combined_score": 0.7413221525640659
        }
      },
      "similarity": 0.7413221525640659
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 247.7725986544189,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5678564177384877,
            "sparse": 247.7725986544189,
            "graph": 2.3869011082731593
          },
          "normalized_scores": {
            "dense": 0.5678564177384877,
            "sparse": 0.19821807892353513,
            "graph": 0.8524646815261283
          },
          "weighted_scores": {
            "dense": 0.1987497462084707,
            "sparse": 0.07928723156941406,
            "graph": 0.21311617038153208
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5678564177384877,
              "query_max": 0.6222578739869642,
              "query_min": 0.5428651365235706,
              "normalized_score": 0.5678564177384877,
              "weight": 0.35,
              "weighted_score": 0.1987497462084707
            },
            "sparse": {
              "raw_score": 247.7725986544189,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.19821807892353513,
              "weight": 0.4,
              "weighted_score": 0.07928723156941406
            },
            "graph": {
              "raw_score": 2.3869011082731593,
              "query_max": 2.7014000000000005,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.8524646815261283,
              "weight": 0.25,
              "weighted_score": 0.21311617038153208
            }
          },
          "contribution_percentages": {
            "dense": 40.46594162193198,
            "sparse": 16.143077137251552,
            "graph": 43.39098124081647
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4911531481594168,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6384990926072418
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6384990926072418
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.702349001867966
            }
          },
          "combined_score": 0.702349001867966
        }
      },
      "similarity": 0.702349001867966
    },
    {
      "metadata": {
        "doc_id": "CWE-366",
        "name": "Race Condition within a Thread",
        "type": "Base",
        "original_content": "If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined.",
        "relationships": [],
        "original_sparse_score": 311.9561348933571,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5718016943824284,
            "sparse": 311.9561348933571,
            "graph": 1.6905569624673835
          },
          "normalized_scores": {
            "dense": 0.5718016943824284,
            "sparse": 0.2495649079146857,
            "graph": 0.6037703437383513
          },
          "weighted_scores": {
            "dense": 0.20013059303384995,
            "sparse": 0.09982596316587428,
            "graph": 0.15094258593458781
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5718016943824284,
              "query_max": 0.6222578739869642,
              "query_min": 0.5428651365235706,
              "normalized_score": 0.5718016943824284,
              "weight": 0.35,
              "weighted_score": 0.20013059303384995
            },
            "sparse": {
              "raw_score": 311.9561348933571,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.2495649079146857,
              "weight": 0.4,
              "weighted_score": 0.09982596316587428
            },
            "graph": {
              "raw_score": 1.6905569624673835,
              "query_max": 2.7014000000000005,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.6037703437383513,
              "weight": 0.25,
              "weighted_score": 0.15094258593458781
            }
          },
          "contribution_percentages": {
            "dense": 44.38478017202256,
            "sparse": 22.13931095396463,
            "graph": 33.475908874012816
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.45089914213431204,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5861688847746057
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5861688847746057
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6447857732520663
            }
          },
          "combined_score": 0.6447857732520663
        }
      },
      "similarity": 0.6447857732520663
    },
    {
      "metadata": {
        "doc_id": "CWE-416",
        "name": "Use After Free",
        "type": "Variant",
        "original_content": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
        "relationships": [],
        "original_sparse_score": 388.0104369301234,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6222578739869642,
            "sparse": 388.0104369301234
          },
          "normalized_scores": {
            "dense": 0.6222578739869642,
            "sparse": 0.3104083495440987
          },
          "weighted_scores": {
            "dense": 0.21779025589543746,
            "sparse": 0.12416333981763948
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6222578739869642,
              "query_max": 0.6222578739869642,
              "query_min": 0.5428651365235706,
              "normalized_score": 0.6222578739869642,
              "weight": 0.35,
              "weighted_score": 0.21779025589543746
            },
            "sparse": {
              "raw_score": 388.0104369301234,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.3104083495440987,
              "weight": 0.4,
              "weighted_score": 0.12416333981763948
            }
          },
          "contribution_percentages": {
            "dense": 63.69000315416445,
            "sparse": 36.30999684583555
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.34195359571307693,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.4103443148556923
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4103443148556923
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.45137874634126157
            }
          },
          "combined_score": 0.45137874634126157
        }
      },
      "similarity": 0.45137874634126157
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 336.73662589568664,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6145811539287858,
            "sparse": 336.73662589568664
          },
          "normalized_scores": {
            "dense": 0.6145811539287858,
            "sparse": 0.2693893007165493
          },
          "weighted_scores": {
            "dense": 0.215103403875075,
            "sparse": 0.10775572028661973
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6145811539287858,
              "query_max": 0.6222578739869642,
              "query_min": 0.5428651365235706,
              "normalized_score": 0.6145811539287858,
              "weight": 0.35,
              "weighted_score": 0.215103403875075
            },
            "sparse": {
              "raw_score": 336.73662589568664,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.2693893007165493,
              "weight": 0.4,
              "weighted_score": 0.10775572028661973
            }
          },
          "contribution_percentages": {
            "dense": 66.62453924249223,
            "sparse": 33.375460757507774
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3228591241616947,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.38743094899403363
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.38743094899403363
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.42617404389343705
            }
          },
          "combined_score": 0.42617404389343705
        }
      },
      "similarity": 0.42617404389343705
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 242.0852045968504,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.551846005913479,
            "sparse": 242.0852045968504
          },
          "normalized_scores": {
            "dense": 0.551846005913479,
            "sparse": 0.1936681636774803
          },
          "weighted_scores": {
            "dense": 0.19314610206971763,
            "sparse": 0.07746726547099213
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.551846005913479,
              "query_max": 0.6222578739869642,
              "query_min": 0.5428651365235706,
              "normalized_score": 0.551846005913479,
              "weight": 0.35,
              "weighted_score": 0.19314610206971763
            },
            "sparse": {
              "raw_score": 242.0852045968504,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.1936681636774803,
              "weight": 0.4,
              "weighted_score": 0.07746726547099213
            }
          },
          "contribution_percentages": {
            "dense": 71.37345203047359,
            "sparse": 28.626547969526424
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.27061336754070975,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3517973778029227
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3517973778029227
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.386977115583215
            }
          },
          "combined_score": 0.386977115583215
        }
      },
      "similarity": 0.386977115583215
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 222.3677123699595,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5479098574783186,
            "sparse": 222.3677123699595
          },
          "normalized_scores": {
            "dense": 0.5479098574783186,
            "sparse": 0.1778941698959676
          },
          "weighted_scores": {
            "dense": 0.19176845011741148,
            "sparse": 0.07115766795838704
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5479098574783186,
              "query_max": 0.6222578739869642,
              "query_min": 0.5428651365235706,
              "normalized_score": 0.5479098574783186,
              "weight": 0.35,
              "weighted_score": 0.19176845011741148
            },
            "sparse": {
              "raw_score": 222.3677123699595,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.1778941698959676,
              "weight": 0.4,
              "weighted_score": 0.07115766795838704
            }
          },
          "contribution_percentages": {
            "dense": 72.93624974226671,
            "sparse": 27.06375025773329
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2629261180757985,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3418039534985381
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3418039534985381
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.37598434884839194
            }
          },
          "combined_score": 0.37598434884839194
        }
      },
      "similarity": 0.37598434884839194
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 216.9632172285606,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5856224846623378,
            "sparse": 216.9632172285606
          },
          "normalized_scores": {
            "dense": 0.5856224846623378,
            "sparse": 0.1735705737828485
          },
          "weighted_scores": {
            "dense": 0.2049678696318182,
            "sparse": 0.0694282295131394
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5856224846623378,
              "query_max": 0.6222578739869642,
              "query_min": 0.5428651365235706,
              "normalized_score": 0.5856224846623378,
              "weight": 0.35,
              "weighted_score": 0.2049678696318182
            },
            "sparse": {
              "raw_score": 216.9632172285606,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.1735705737828485,
              "weight": 0.4,
              "weighted_score": 0.0694282295131394
            }
          },
          "contribution_percentages": {
            "dense": 74.69780739249433,
            "sparse": 25.302192607505674
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2743960991449576,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3292753189739491
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3292753189739491
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3622028508713441
            }
          },
          "combined_score": 0.3622028508713441
        }
      },
      "similarity": 0.3622028508713441
    },
    {
      "metadata": {
        "doc_id": "CWE-415",
        "name": "Double Free",
        "type": "Variant",
        "original_content": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
        "relationships": [],
        "original_sparse_score": 224.17314253480748,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 224.17314253480748,
            "graph": 2.172
          },
          "normalized_scores": {
            "sparse": 0.17933851402784598,
            "graph": 0.7757142857142858
          },
          "weighted_scores": {
            "sparse": 0.07173540561113839,
            "graph": 0.19392857142857145
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 224.17314253480748,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.17933851402784598,
              "weight": 0.4,
              "weighted_score": 0.07173540561113839
            },
            "graph": {
              "raw_score": 2.172,
              "query_max": 2.7014000000000005,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.7757142857142858,
              "weight": 0.25,
              "weighted_score": 0.19392857142857145
            }
          },
          "contribution_percentages": {
            "sparse": 27.002308107589545,
            "graph": 72.99769189241046
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.26566397703970984,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3187967724476518
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3187967724476518
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.350676449692417
            }
          },
          "combined_score": 0.350676449692417
        }
      },
      "similarity": 0.350676449692417
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 204.0896093999725,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5642903514023603,
            "sparse": 204.0896093999725
          },
          "normalized_scores": {
            "dense": 0.5642903514023603,
            "sparse": 0.163271687519978
          },
          "weighted_scores": {
            "dense": 0.19750162299082608,
            "sparse": 0.0653086750079912
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5642903514023603,
              "query_max": 0.6222578739869642,
              "query_min": 0.5428651365235706,
              "normalized_score": 0.5642903514023603,
              "weight": 0.35,
              "weighted_score": 0.19750162299082608
            },
            "sparse": {
              "raw_score": 204.0896093999725,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.163271687519978,
              "weight": 0.4,
              "weighted_score": 0.0653086750079912
            }
          },
          "contribution_percentages": {
            "dense": 75.14987977819457,
            "sparse": 24.85012022180543
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2628102979988173,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.31537235759858073
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.31537235759858073
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.34690959335843885
            }
          },
          "combined_score": 0.34690959335843885
        }
      },
      "similarity": 0.34690959335843885
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 238.99828769228174,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 238.99828769228174
          },
          "normalized_scores": {
            "sparse": 0.19119863015382538
          },
          "weighted_scores": {
            "sparse": 0.07647945206153016
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 238.99828769228174,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.19119863015382538,
              "weight": 0.4,
              "weighted_score": 0.07647945206153016
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.07647945206153016,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.09942328767998922
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.09942328767998922
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.10936561644798815
            }
          },
          "combined_score": 0.10936561644798815
        }
      },
      "similarity": 0.10936561644798815
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 232.95695197170105,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 232.95695197170105
          },
          "normalized_scores": {
            "sparse": 0.18636556157736084
          },
          "weighted_scores": {
            "sparse": 0.07454622463094433
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 232.95695197170105,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.18636556157736084,
              "weight": 0.4,
              "weighted_score": 0.07454622463094433
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.07454622463094433,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.09691009202022764
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.09691009202022764
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.10660110122225042
            }
          },
          "combined_score": 0.10660110122225042
        }
      },
      "similarity": 0.10660110122225042
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 217.4524234621031,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 217.4524234621031
          },
          "normalized_scores": {
            "sparse": 0.17396193876968247
          },
          "weighted_scores": {
            "sparse": 0.069584775507873
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 217.4524234621031,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.17396193876968247,
              "weight": 0.4,
              "weighted_score": 0.069584775507873
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.069584775507873,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.0904602081602349
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0904602081602349
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.0995062289762584
            }
          },
          "combined_score": 0.0995062289762584
        }
      },
      "similarity": 0.0995062289762584
    },
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 211.87787029660706,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 211.87787029660706
          },
          "normalized_scores": {
            "sparse": 0.16950229623728563
          },
          "weighted_scores": {
            "sparse": 0.06780091849491425
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 211.87787029660706,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.16950229623728563,
              "weight": 0.4,
              "weighted_score": 0.06780091849491425
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06780091849491425,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.08814119404338853
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08814119404338853
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.0969553134477274
            }
          },
          "combined_score": 0.0969553134477274
        }
      },
      "similarity": 0.0969553134477274
    },
    {
      "metadata": {
        "doc_id": "CWE-681",
        "name": "Incorrect Conversion between Numeric Types",
        "type": "Base",
        "original_content": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
        "relationships": [],
        "original_sparse_score": 205.89877657339056,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 205.89877657339056
          },
          "normalized_scores": {
            "sparse": 0.16471902125871246
          },
          "weighted_scores": {
            "sparse": 0.06588760850348499
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 205.89877657339056,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.16471902125871246,
              "weight": 0.4,
              "weighted_score": 0.06588760850348499
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06588760850348499,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.08565389105453049
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08565389105453049
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.09421928015998354
            }
          },
          "combined_score": 0.09421928015998354
        }
      },
      "similarity": 0.09421928015998354
    },
    {
      "metadata": {
        "doc_id": "CWE-197",
        "name": "Numeric Truncation Error",
        "type": "Base",
        "original_content": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
        "relationships": [],
        "original_sparse_score": 204.5937016850774,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 204.5937016850774
          },
          "normalized_scores": {
            "sparse": 0.16367496134806192
          },
          "weighted_scores": {
            "sparse": 0.06546998453922477
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 204.5937016850774,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.16367496134806192,
              "weight": 0.4,
              "weighted_score": 0.06546998453922477
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06546998453922477,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.0851109799009922
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0851109799009922
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.09362207789109143
            }
          },
          "combined_score": 0.09362207789109143
        }
      },
      "similarity": 0.09362207789109143
    },
    {
      "metadata": {
        "doc_id": "CWE-457",
        "name": "Use of Uninitialized Variable",
        "type": "Variant",
        "original_content": "The code uses a variable that has not been initialized, leading to unpredictable or unintended results.",
        "relationships": [],
        "original_sparse_score": 205.04954710680664,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 205.04954710680664
          },
          "normalized_scores": {
            "sparse": 0.16403963768544533
          },
          "weighted_scores": {
            "sparse": 0.06561585507417814
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 205.04954710680664,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.16403963768544533,
              "weight": 0.4,
              "weighted_score": 0.06561585507417814
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06561585507417814,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.07873902608901376
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07873902608901376
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08661292869791515
            }
          },
          "combined_score": 0.08661292869791515
        }
      },
      "similarity": 0.08661292869791515
    },
    {
      "metadata": {
        "doc_id": "CWE-362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "type": "Class",
        "original_content": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.",
        "relationships": [],
        "original_sparse_score": 217.6561708476923,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 217.6561708476923
          },
          "normalized_scores": {
            "sparse": 0.17412493667815385
          },
          "weighted_scores": {
            "sparse": 0.06964997467126154
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 217.6561708476923,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.17412493667815385,
              "weight": 0.4,
              "weighted_score": 0.06964997467126154
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.06964997467126154,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.055719979737009234
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.055719979737009234
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.0585059787238597
            }
          },
          "combined_score": 0.0585059787238597
        }
      },
      "similarity": 0.0585059787238597
    },
    {
      "metadata": {
        "doc_id": "CWE-665",
        "name": "Improper Initialization",
        "type": "Class",
        "original_content": "The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.",
        "relationships": [],
        "original_sparse_score": 222.46558878802898,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 222.46558878802898
          },
          "normalized_scores": {
            "sparse": 0.17797247103042318
          },
          "weighted_scores": {
            "sparse": 0.07118898841216928
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 222.46558878802898,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.17797247103042318,
              "weight": 0.4,
              "weighted_score": 0.07118898841216928
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.07118898841216928,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.056951190729735424
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.056951190729735424
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.04556095258378834
            }
          },
          "combined_score": 0.04556095258378834
        }
      },
      "similarity": 0.04556095258378834
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 211.87365002208827,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 211.87365002208827
          },
          "normalized_scores": {
            "sparse": 0.1694989200176706
          },
          "weighted_scores": {
            "sparse": 0.06779956800706825
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 211.87365002208827,
              "query_max": 388.0104369301234,
              "query_min": 204.0896093999725,
              "normalized_score": 0.1694989200176706,
              "weight": 0.4,
              "weighted_score": 0.06779956800706825
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.06779956800706825,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.054239654405654605
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.054239654405654605
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.04339172352452369
            }
          },
          "combined_score": 0.04339172352452369
        }
      },
      "similarity": 0.04339172352452369
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-122",
      "CWE-787"
    ],
    "critic_additional": [
      "CWE-119",
      "CWE-190",
      "CWE-843",
      "CWE-366",
      "CWE-195",
      "CWE-125",
      "CWE-416",
      "CWE-1339",
      "CWE-415",
      "CWE-681",
      "CWE-121",
      "CWE-170",
      "CWE-126",
      "CWE-193"
    ]
  }
}