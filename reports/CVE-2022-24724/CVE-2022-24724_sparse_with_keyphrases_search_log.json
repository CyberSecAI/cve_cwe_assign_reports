{
  "method": "sparse_with_keyphrases",
  "query": "cmark-gfm is GitHubs extended version of the C reference implementation of CommonMark. Prior to versions 0.29.0.gfm.3 and 0.28.3.gfm.21, an integer overflow in cmark-gfms table row parsing `table.crow_from_string` may lead to heap memory corruption when parsing tables whos marker rows contain more than UINT16_MAX columns. The impact of this heap corruption ranges from Information Leak to Arbitrary Code Execution depending on how and where `cmark-gfm` is used. If `cmark-gfm` is used for rendering remote user controlled markdown, this vulnerability may lead to Remote Code Execution (RCE) in applications employing affected versions of the `cmark-gfm` library. This vulnerability has been patched in the following cmark-gfm versions 0.29.0.gfm.3 and 0.28.3.gfm.21. A workaround is available. The vulnerability exists in the table markdown extensions of cmark-gfm. Disabling the table extension will prevent this vulnerability from being triggered.",
  "keyphrases": {
    "rootcause": "integer overflow",
    "weakness": "heap memory corruption"
  },
  "timestamp": "2025-03-18T10:54:33.996972",
  "results_count": 20,
  "results_summary": [
    {
      "doc_id": "CWE-407",
      "name": "Inefficient Algorithmic Complexity",
      "score": 2151.376789246299
    },
    {
      "doc_id": "CWE-190",
      "name": "Integer Overflow or Wraparound",
      "score": 1963.21725523378
    },
    {
      "doc_id": "CWE-122",
      "name": "Heap-based Buffer Overflow",
      "score": 1205.2594944339128
    },
    {
      "doc_id": "CWE-125",
      "name": "Out-of-bounds Read",
      "score": 1195.6726398079809
    },
    {
      "doc_id": "CWE-362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 1185.4401695424608
    }
  ]
}