{
  "cve_id": "CVE-2022-35896",
  "description": "An issue SMM memory leak vulnerability in SMM driver (SMRAM was discovered in Insyde InsydeH2O with kernel 5.0 through 5.5. An attacker can dump SMRAM contents via the software SMI provided by the FvbServicesRuntimeDxe driver to read the contents of SMRAM, leading to information disclosure.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "",
    "impact": "information disclosure",
    "vector": "",
    "attacker": "attacker",
    "product": "Insyde InsydeH2O",
    "version": "kernel 5.0 through 5.5",
    "component": ""
  },
  "reference_content": "Based on the provided content, here's a breakdown of the vulnerability information related to CVE-2022-35896:\n\n**Root Cause of Vulnerability:**\n- The vulnerability stems from an SMM memory leak in the `FvbServicesRuntimeDxe` driver of InsydeH2O UEFI firmware.\n- Specifically, the `SmfbFunc1` function within the `FwBlockServiceSmm` SMM driver allows an attacker to read arbitrary SMRAM memory due to a lack of input validation on the address argument.\n\n**Weaknesses/Vulnerabilities Present:**\n- **SMM Memory Leak:** The primary vulnerability is that the `SmfbFunc1` function allows reading from arbitrary memory locations within SMRAM.\n- **Lack of Input Validation:** The `addr` argument passed to `SmfbFunc1` is not validated, allowing an attacker to supply an address within SMRAM.\n- **Memory Copy:** The vulnerable function uses either `memcpy` or `sub_800031CC` to copy memory from the attacker-specified SMRAM address to a destination buffer.\n\n**Impact of Exploitation:**\n- **Information Disclosure:** An attacker can read sensitive information stored in SMRAM. This could reveal secrets, code, or other data that can be leveraged in subsequent attacks.\n- **Privilege Escalation:** By reading SMRAM, an attacker can gain knowledge about SMM internals, which can be used to exploit SMM memory corruption vulnerabilities and gain control of the SMM environment (Ring -2).\n- **Firmware Backdoor/Implant:** The attacker could use this vulnerability to bypass SMM-based SPI flash protections and install a firmware backdoor or implant into the BIOS, which could persist across operating system re-installs.\n- **Bypass Security Mechanisms:** The vulnerability can potentially be used to bypass UEFI firmware security mechanisms like Secure Boot and memory isolation for hypervisors.\n\n**Attack Vectors:**\n- The vulnerability is triggered by sending a specific command (where `*((_DWORD *)CommBuffer + 6) = 0`) through the registered SMI handler.\n- The attacker controls the `addr` argument (`*((_QWORD *)CommBuffer + 2)`) which is used in `memcpy` or `sub_800031CC` function, allowing access to SMRAM.\n\n**Required Attacker Capabilities/Position:**\n- **High Privileges:** The attacker needs to be able to communicate with the SMI handler, which typically requires high privileges (ring 0).\n- **Runtime Exploitation:** The vulnerability can be exploited from the runtime environment, implying the attacker needs to be able to execute code within the operating system.\n\n**Additional details:**\n- The vulnerability was discovered by the Binarly efiXplorer team.\n- Affected InsydeH2O versions and fixes are provided in the Insyde advisory.\n- Binarly assigned the internal identifier BRLY-2022-025 to this vulnerability and provided a FwHunt rule for detection.\n- The issue was reported to Insyde PSIRT, which assigned the CVE number.\n\nThis vulnerability allows an attacker to leak information from SMM memory, which could be used to launch further, more severe attacks against the system.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-125 | Out-of-bounds Read | 0.75 | Base | Primary | Allowed |\n| CWE-1285 | Improper Validation of Specified Index, Position, or Offset in Input | 0.60 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.70\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability is an SMM memory leak where an attacker can read arbitrary SMRAM memory due to a lack of input validation on the address argument. The `SmfbFunc1` function within the `FwBlockServiceSmm` SMM driver allows an attacker to read arbitrary SMRAM memory due to a lack of input validation on the address argument. This lack of validation results in the ability to read data past the end, or before the beginning, of the intended buffer. Therefore, CWE-125 (Out-of-bounds Read) is the most appropriate primary CWE.\n\n  - *Relationship Analysis:* CWE-125 is a Base level CWE, making it a suitable choice. It is related to CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), but CWE-125 is more specific.\n\n- **Confidence Score:**  \n  - Confidence: 0.75 (High evidence from technical description and CVE reference materials)\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability also includes a **lack of input validation** on the address argument passed to `SmfbFunc1`. This aligns with CWE-1285 (Improper Validation of Specified Index, Position, or Offset in Input), as the input is expected to specify an address (offset) into SMRAM, but it is not validated. This is a contributing factor, allowing the out-of-bounds read.\n\n  - *Relationship Analysis:* CWE-1285 is a Base level CWE. While CWE-20 (Improper Input Validation) could be considered, CWE-1285 is more specific to the type of input (index, position, or offset), and therefore more appropriate.\n\n- **Confidence Score:**  \n  - Confidence: 0.60 (Supporting evidence is present, but the primary weakness is the out-of-bounds read.)\n\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-125 | Out-of-bounds Read | 0.75 | Base | Primary | Allowed |\n| CWE-1285 | Improper Validation of Specified Index, Position, or Offset in Input | 0.60 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.70\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability is an SMM memory leak where an attacker can read arbitrary SMRAM memory due to a lack of input validation on the address argument. The `SmfbFunc1` function within the `FwBlockServiceSmm` SMM driver allows an attacker to read arbitrary SMRAM memory due to a lack of input validation on the address argument. This lack of validation results in the ability to read data past the end, or before the beginning, of the intended buffer. Therefore, CWE-125 (Out-of-bounds Read) is the most appropriate primary CWE.\n\n  - *Relationship Analysis:* CWE-125 is a Base level CWE, making it a suitable choice. It is related to CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), but CWE-125 is more specific.\n\n- **Confidence Score:**  \n  - Confidence: 0.75 (High evidence from technical description and CVE reference materials)\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability also includes a **lack of input validation** on the address argument passed to `SmfbFunc1`. This aligns with CWE-1285 (Improper Validation of Specified Index, Position, or Offset in Input), as the input is expected to specify an address (offset) into SMRAM, but it is not validated. This is a contributing factor, allowing the out-of-bounds read.\n\n  - *Relationship Analysis:* CWE-1285 is a Base level CWE. While CWE-20 (Improper Input Validation) could be considered, CWE-1285 is more specific to the type of input (index, position, or offset), and therefore more appropriate.\n\n- **Confidence Score:**  \n  - Confidence: 0.60 (Supporting evidence is present, but the primary weakness is the out-of-bounds read.)\n\n---",
  "criticism": "Okay, I've reviewed the provided analysis along with the full CWE specifications. Here's a critique of the CWE mappings and suggestions for improvement:\n\n**Overall Assessment:**\n\nThe analysis correctly identifies the two major issues, an out-of-bounds read and a lack of input validation. The reasoning provided is sound and uses key phrases from the vulnerability description to support the selection of CWE-125 and CWE-1285. The confidence levels are reasonable, reflecting the strength of the evidence. However, there are a few points that could be refined to make the analysis more precise and robust, particularly regarding the choice of CWEs given the available options and the mapping guidance.\n\n**Detailed Review:**\n\n**1. Primary CWE: CWE-125 (Out-of-bounds Read)**\n\n*   **Assessment:** The choice of CWE-125 is generally good, and the justification is mostly solid. The analysis accurately describes how the missing input validation leads to the potential for reading outside the intended memory bounds.\n*   **Areas for Refinement:** While CWE-125 is appropriate, it is important to consider the context within which the out-of-bounds read occurs. In this case, a `memcpy` (or equivalent function) is used to copy from a source controlled by the attacker to a destination. In this case, the *source* of the memory is what is uncontrolled and potentially out of bounds.\n*   **Alternative CWEs Considered:** CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer) is correctly identified as a related CWE, and the analysis states that CWE-125 is more specific, and thus more appropriate.\n*   **Mapping Guidance:** The provided CWE specifications highlight that CWE-119 should be *discouraged* and more specific CWEs like CWE-125 should be preferred.\n*   **Mitigations:** The Mitigations for CWE-125 are appropriate, including input validation and using memory-safe languages.\n*   **Suggested Change:** The choice of CWE-125 is correct, and the reasoning is sound.\n\n**2. Secondary CWE: CWE-1285 (Improper Validation of Specified Index, Position, or Offset in Input)**\n\n*   **Assessment:** This is also a good choice. The vulnerability fundamentally relies on the fact that the 'addr' argument, which acts as an offset into SMRAM, is not properly validated.\n*   **Areas for Refinement:** The analysis mentions that CWE-20 (Improper Input Validation) could be considered, but CWE-1285 is more specific. I agree with this assessment, as the argument that isn't being validated is directly related to \"index, position, or offset\".\n*   **Alternative CWEs Considered:** CWE-20\n*   **Mapping Guidance:** The CWE specifications for CWE-20, specifically states to consider lower-level children such as CWE-1285 (Specified Index, Position, or Offset) and that it should be *discouraged*.\n*   **Mitigations:** Input validation techniques are appropriate.\n*   **Suggested Change:** Reasoning and the choice of CWE is correct.\n\n**3. Retriever Results Analysis:**\n\n*   **CWE-787 (Out-of-bounds Write):** While the vulnerability primarily involves an *out-of-bounds read*, the potential for an out-of-bounds write might exist if the size of the read operation is larger than the remaining valid memory after the attacker-controlled offset. The analysis should explicitly state that the primary impact is information disclosure via out-of-bounds read, but mention the potential for a write if the size parameter was mishandled as well, which could then lead to memory corruption. This was also the top combined result.\n*   **CWE-822 (Untrusted Pointer Dereference):** This isn't entirely incorrect, as the address used *could* be viewed as being supplied by an untrusted party (the attacker). However, the primary problem is not that the pointer itself is untrusted and dereferenced, but that it is *out of bounds* in relation to the allocated buffer. Therefore, it's a less accurate fit than CWE-125 and CWE-1285.\n*   **CWE-367 (Time-of-check Time-of-use (TOCTOU) Race Condition):** This is not relevant to the vulnerability as described. There is no indication of a race condition.\n*   **CWE-908 (Use of Uninitialized Resource):** This isn't relevant.\n*   **CWE-190 (Integer Overflow or Wraparound):** This isn't relevant.\n*   **CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer):** As stated, is too high-level.\n\n**Suggestions for improvement:**\n\n1.  **Acknowledge Potential for Write:** Explicitly address the potential for an *out-of-bounds write* in the analysis, even if it is considered a secondary or less likely scenario. This will make the analysis more comprehensive.\n2.  **Review Additional CWEs:** The analysis could briefly consider other CWEs suggested by the retriever results (even if ultimately rejected), and explain *why* they are not appropriate. This shows a thorough evaluation process.\n3.  **Chain:** This vulnerability has two elements that contribute to it. First, the code lacks input validation. Second, the out-of-bounds read occurs. Thus, a chain might better represent the vulnerability than just a primary and secondary mapping.\n\n**Revised Summary:**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-125 | Out-of-bounds Read | 0.75 | Base | Primary | Allowed |\n| CWE-1285 | Improper Validation of Specified Index, Position, or Offset in Input | 0.60 | Base | Secondary | Allowed |\n| CWE-20 | Improper Input Validation | 0.20 | Class | Contributing Factor |  Contributes to CWE-1285, but not the root cause. |\n\n**Revised Explanation:**\n\n*   The primary vulnerability is CWE-125 (Out-of-bounds Read). The `SmfbFunc1` function allows reading from arbitrary memory locations within SMRAM due to a lack of input validation on the address argument.\n*   This out-of-bounds read is primarily caused by CWE-1285 (Improper Validation of Specified Index, Position, or Offset in Input). The `addr` argument passed to `SmfbFunc1` is not validated, allowing an attacker to supply an address within SMRAM.\n*   This chain is contributed to by CWE-20 because there is a lack of any validation for the argument to memcpy, and not explicitly a validation of the \"offset\", the core issue stems from an \"Improper Input Validation\" CWE.\n\nBy incorporating these refinements, the analysis will be more accurate, comprehensive, and aligned with the CWE's mapping guidance.",
  "resolution": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| **CWE-125** | **Out-of-bounds Read** | 0.80 | Base | Primary CWE | Allowed |\n| **CWE-1285** | **Improper Validation of Specified Index, Position, or Offset in Input** | 0.70 | Base | Secondary CWE | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.75\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship is that **CWE-1285 (Improper Validation of Specified Index, Position, or Offset in Input)** *CanPrecede* **CWE-125 (Out-of-bounds Read)**. The lack of validation allows for an attacker-controlled offset, which then leads to the out-of-bounds read. Both CWEs are at the Base level, offering good specificity.\n\n```mermaid\ngraph TD\n    cwe125[\"CWE-125: Out-of-bounds Read\"]\n    cwe1285[\"CWE-1285: Improper Validation of Specified Index, Position, or Offset in Input\"]\n    \n    cwe1285 -->|CANPRECEDE| cwe125\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe125 primary\n    class cwe1285 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **ROOTCAUSE** of **CWE-1285 (Improper Validation of Specified Index, Position, or Offset in Input)**. The `addr` argument passed to `SmfbFunc1` is not validated. This leads to the **WEAKNESS** of **CWE-125 (Out-of-bounds Read)**, where the function can read memory beyond the intended buffer. The final impact is information disclosure via reading SMRAM contents.\n\n## Summary of Analysis\n\nThe initial analysis and the criticism both converge on **CWE-125 (Out-of-bounds Read)** as the primary **WEAKNESS**, stemming from a **ROOTCAUSE** of **CWE-1285 (Improper Validation of Specified Index, Position, or Offset in Input)**.\n\nThe vulnerability description states: \"An issue SMM memory leak vulnerability in SMM driver (SMRAM was discovered in Insyde InsydeH2O with kernel 5.0 through 5.5. An attacker can dump SMRAM contents via the software SMI provided by the FvbServicesRuntimeDxe driver to read the contents of SMRAM, leading to information disclosure.\"\n\nThis evidence directly supports the **CWE-125 (Out-of-bounds Read)** classification because the attacker is able to \"read the contents of SMRAM\" beyond the intended boundaries. The lack of validation on the \"address argument\" directly supports the **CWE-1285 (Improper Validation of Specified Index, Position, or Offset in Input)** classification.\n\nThe relationship analysis confirms that this is a logical chain, with the improper validation leading directly to the out-of-bounds read. Both CWEs are at the Base level, providing the optimal level of specificity.\n\nThe criticism's point about the potential for an out-of-bounds write is valid, but the description primarily focuses on the read, so **CWE-125 (Out-of-bounds Read)** remains the most appropriate primary **WEAKNESS**.\n\nI am increasing the confidence score for **CWE-125 (Out-of-bounds Read)** to 0.80 and **CWE-1285 (Improper Validation of Specified Index, Position, or Offset in Input)** to 0.70, reflecting the high evidence strength and the logical relationship between the two **WEAKNESSES**. The final selection reflects the optimal level of specificity based on the available evidence.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 121.9544410442128,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5536040882526312,
            "sparse": 121.9544410442128,
            "graph": 2.8414805916042845
          },
          "normalized_scores": {
            "dense": 0.5536040882526312,
            "sparse": 0.09756355283537024,
            "graph": 1.0
          },
          "weighted_scores": {
            "dense": 0.1937614308884209,
            "sparse": 0.0390254211341481,
            "graph": 0.25
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5536040882526312,
              "query_max": 0.5712842978296913,
              "query_min": 0.5018897574952734,
              "normalized_score": 0.5536040882526312,
              "weight": 0.35,
              "weighted_score": 0.1937614308884209
            },
            "sparse": {
              "raw_score": 121.9544410442128,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.09756355283537024,
              "weight": 0.4,
              "weighted_score": 0.0390254211341481
            },
            "graph": {
              "raw_score": 2.8414805916042845,
              "query_max": 2.8414805916042845,
              "query_min": 1.509160566091619,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "dense": 40.133949397479256,
            "sparse": 8.083364526323878,
            "graph": 51.78268607619687
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.482786852022569,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6276229076293397
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6276229076293397
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6903851983922737
            }
          },
          "combined_score": 0.6903851983922737
        }
      },
      "similarity": 0.6903851983922737
    },
    {
      "metadata": {
        "doc_id": "CWE-822",
        "name": "Untrusted Pointer Dereference",
        "type": "Base",
        "original_content": "The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.",
        "relationships": [],
        "original_sparse_score": 145.18231368825585,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5098898077257037,
            "sparse": 145.18231368825585,
            "graph": 2.8328521788693384
          },
          "normalized_scores": {
            "dense": 0.5098898077257037,
            "sparse": 0.11614585095060467,
            "graph": 1.0
          },
          "weighted_scores": {
            "dense": 0.17846143270399628,
            "sparse": 0.04645834038024187,
            "graph": 0.25
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5098898077257037,
              "query_max": 0.5712842978296913,
              "query_min": 0.5018897574952734,
              "normalized_score": 0.5098898077257037,
              "weight": 0.35,
              "weighted_score": 0.17846143270399628
            },
            "sparse": {
              "raw_score": 145.18231368825585,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.11614585095060467,
              "weight": 0.4,
              "weighted_score": 0.04645834038024187
            },
            "graph": {
              "raw_score": 2.8328521788693384,
              "query_max": 2.8414805916042845,
              "query_min": 1.509160566091619,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "dense": 37.57717467626726,
            "sparse": 9.78235546575177,
            "graph": 52.64046985798097
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.47491977308423816,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6173957050095096
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6173957050095096
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6791352755104606
            }
          },
          "combined_score": 0.6791352755104606
        }
      },
      "similarity": 0.6791352755104606
    },
    {
      "metadata": {
        "doc_id": "CWE-1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
        "relationships": [],
        "original_sparse_score": 149.70932313775623,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5465225647524405,
            "sparse": 149.70932313775623,
            "graph": 1.6883508531277516
          },
          "normalized_scores": {
            "dense": 0.5465225647524405,
            "sparse": 0.11976745851020498,
            "graph": 0.6029824475456256
          },
          "weighted_scores": {
            "dense": 0.19128289766335418,
            "sparse": 0.047906983404082,
            "graph": 0.1507456118864064
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5465225647524405,
              "query_max": 0.5712842978296913,
              "query_min": 0.5018897574952734,
              "normalized_score": 0.5465225647524405,
              "weight": 0.35,
              "weighted_score": 0.19128289766335418
            },
            "sparse": {
              "raw_score": 149.70932313775623,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.11976745851020498,
              "weight": 0.4,
              "weighted_score": 0.047906983404082
            },
            "graph": {
              "raw_score": 1.6883508531277516,
              "query_max": 2.8414805916042845,
              "query_min": 1.509160566091619,
              "normalized_score": 0.6029824475456256,
              "weight": 0.25,
              "weighted_score": 0.1507456118864064
            }
          },
          "contribution_percentages": {
            "dense": 49.055010667109684,
            "sparse": 12.285874015000948,
            "graph": 38.65911531788937
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.38993549295384256,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5069161408399954
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5069161408399954
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.557607754923995
            }
          },
          "combined_score": 0.557607754923995
        }
      },
      "similarity": 0.557607754923995
    },
    {
      "metadata": {
        "doc_id": "CWE-367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "type": "Base",
        "original_content": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
        "relationships": [],
        "original_sparse_score": 102.00187886233438,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 102.00187886233438,
            "graph": 2.1189999999999998
          },
          "normalized_scores": {
            "sparse": 0.08160150308986751,
            "graph": 0.7567857142857143
          },
          "weighted_scores": {
            "sparse": 0.032640601235947,
            "graph": 0.18919642857142857
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 102.00187886233438,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.08160150308986751,
              "weight": 0.4,
              "weighted_score": 0.032640601235947
            },
            "graph": {
              "raw_score": 2.1189999999999998,
              "query_max": 2.8414805916042845,
              "query_min": 1.509160566091619,
              "normalized_score": 0.7567857142857143,
              "weight": 0.25,
              "weighted_score": 0.18919642857142857
            }
          },
          "contribution_percentages": {
            "sparse": 14.71377491137946,
            "graph": 85.28622508862054
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.22183702980737557,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.28838813874958824
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.28838813874958824
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3172269526245471
            }
          },
          "combined_score": 0.3172269526245471
        }
      },
      "similarity": 0.3172269526245471
    },
    {
      "metadata": {
        "doc_id": "CWE-908",
        "name": "Use of Uninitialized Resource",
        "type": "Base",
        "original_content": "The product uses or accesses a resource that has not been initialized.",
        "relationships": [],
        "original_sparse_score": 86.76387486789365,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5201193502118565,
            "sparse": 86.76387486789365
          },
          "normalized_scores": {
            "dense": 0.5201193502118565,
            "sparse": 0.06941109989431492
          },
          "weighted_scores": {
            "dense": 0.18204177257414977,
            "sparse": 0.02776443995772597
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5201193502118565,
              "query_max": 0.5712842978296913,
              "query_min": 0.5018897574952734,
              "normalized_score": 0.5201193502118565,
              "weight": 0.35,
              "weighted_score": 0.18204177257414977
            },
            "sparse": {
              "raw_score": 86.76387486789365,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.06941109989431492,
              "weight": 0.4,
              "weighted_score": 0.02776443995772597
            }
          },
          "contribution_percentages": {
            "dense": 86.76662639171957,
            "sparse": 13.233373608280418
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.20980621253187576,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2727480762914385
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2727480762914385
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.30002288392058235
            }
          },
          "combined_score": 0.30002288392058235
        }
      },
      "similarity": 0.30002288392058235
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 76.05023355678549,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5165355774598415,
            "sparse": 76.05023355678549
          },
          "normalized_scores": {
            "dense": 0.5165355774598415,
            "sparse": 0.06084018684542839
          },
          "weighted_scores": {
            "dense": 0.1807874521109445,
            "sparse": 0.024336074738171357
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5165355774598415,
              "query_max": 0.5712842978296913,
              "query_min": 0.5018897574952734,
              "normalized_score": 0.5165355774598415,
              "weight": 0.35,
              "weighted_score": 0.1807874521109445
            },
            "sparse": {
              "raw_score": 76.05023355678549,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.06084018684542839,
              "weight": 0.4,
              "weighted_score": 0.024336074738171357
            }
          },
          "contribution_percentages": {
            "dense": 88.13589298507314,
            "sparse": 11.864107014926871
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.20512352684911583,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2666605849038506
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2666605849038506
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.29332664339423564
            }
          },
          "combined_score": 0.29332664339423564
        }
      },
      "similarity": 0.29332664339423564
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 79.81858450811242,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5284176468854596,
            "sparse": 79.81858450811242
          },
          "normalized_scores": {
            "dense": 0.5284176468854596,
            "sparse": 0.06385486760648994
          },
          "weighted_scores": {
            "dense": 0.18494617640991085,
            "sparse": 0.025541947042595978
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5284176468854596,
              "query_max": 0.5712842978296913,
              "query_min": 0.5018897574952734,
              "normalized_score": 0.5284176468854596,
              "weight": 0.35,
              "weighted_score": 0.18494617640991085
            },
            "sparse": {
              "raw_score": 79.81858450811242,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.06385486760648994,
              "weight": 0.4,
              "weighted_score": 0.025541947042595978
            }
          },
          "contribution_percentages": {
            "dense": 87.8653737685304,
            "sparse": 12.134626231469586
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.21048812345250684,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.2525857481430082
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2525857481430082
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.27784432295730904
            }
          },
          "combined_score": 0.27784432295730904
        }
      },
      "similarity": 0.27784432295730904
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 83.4434783279384,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 83.4434783279384,
            "graph": 1.5457690441165508
          },
          "normalized_scores": {
            "sparse": 0.06675478266235071,
            "graph": 0.5520603728987682
          },
          "weighted_scores": {
            "sparse": 0.026701913064940287,
            "graph": 0.13801509322469205
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 83.4434783279384,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.06675478266235071,
              "weight": 0.4,
              "weighted_score": 0.026701913064940287
            },
            "graph": {
              "raw_score": 1.5457690441165508,
              "query_max": 2.8414805916042845,
              "query_min": 1.509160566091619,
              "normalized_score": 0.5520603728987682,
              "weight": 0.25,
              "weighted_score": 0.13801509322469205
            }
          },
          "contribution_percentages": {
            "sparse": 16.210780942672443,
            "graph": 83.78921905732756
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.16471700628963235,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.21413210817652206
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.21413210817652206
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.23554531899417427
            }
          },
          "combined_score": 0.23554531899417427
        }
      },
      "similarity": 0.23554531899417427
    },
    {
      "metadata": {
        "doc_id": "CWE-909",
        "name": "Missing Initialization of Resource",
        "type": "Class",
        "original_content": "The product does not initialize a critical resource.",
        "relationships": [],
        "original_sparse_score": 86.8677761137104,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5248078659389863,
            "sparse": 86.8677761137104
          },
          "normalized_scores": {
            "dense": 0.5248078659389863,
            "sparse": 0.06949422089096832
          },
          "weighted_scores": {
            "dense": 0.1836827530786452,
            "sparse": 0.02779768835638733
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5248078659389863,
              "query_max": 0.5712842978296913,
              "query_min": 0.5018897574952734,
              "normalized_score": 0.5248078659389863,
              "weight": 0.35,
              "weighted_score": 0.1836827530786452
            },
            "sparse": {
              "raw_score": 86.8677761137104,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.06949422089096832,
              "weight": 0.4,
              "weighted_score": 0.02779768835638733
            }
          },
          "contribution_percentages": {
            "dense": 86.85566940953882,
            "sparse": 13.144330590461184
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.21148044143503253,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.16918435314802605
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.16918435314802605
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.17764357080542736
            }
          },
          "combined_score": 0.17764357080542736
        }
      },
      "similarity": 0.17764357080542736
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 91.34645683633464,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5146520621490006,
            "sparse": 91.34645683633464
          },
          "normalized_scores": {
            "dense": 0.5146520621490006,
            "sparse": 0.07307716546906771
          },
          "weighted_scores": {
            "dense": 0.1801282217521502,
            "sparse": 0.02923086618762709
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5146520621490006,
              "query_max": 0.5712842978296913,
              "query_min": 0.5018897574952734,
              "normalized_score": 0.5146520621490006,
              "weight": 0.35,
              "weighted_score": 0.1801282217521502
            },
            "sparse": {
              "raw_score": 91.34645683633464,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.07307716546906771,
              "weight": 0.4,
              "weighted_score": 0.02923086618762709
            }
          },
          "contribution_percentages": {
            "dense": 86.03792819539058,
            "sparse": 13.962071804609419
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.2093590879397773,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.16748727035182187
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.16748727035182187
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.1339898162814575
            }
          },
          "combined_score": 0.1339898162814575
        }
      },
      "similarity": 0.1339898162814575
    },
    {
      "metadata": {
        "doc_id": "CWE-457",
        "name": "Use of Uninitialized Variable",
        "type": "Variant",
        "original_content": "The code uses a variable that has not been initialized, leading to unpredictable or unintended results.",
        "relationships": [],
        "original_sparse_score": 93.71171616680121,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 93.71171616680121
          },
          "normalized_scores": {
            "sparse": 0.07496937293344097
          },
          "weighted_scores": {
            "sparse": 0.02998774917337639
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 93.71171616680121,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.07496937293344097,
              "weight": 0.4,
              "weighted_score": 0.02998774917337639
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.02998774917337639,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.03598529900805167
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.03598529900805167
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.03958382890885684
            }
          },
          "combined_score": 0.03958382890885684
        }
      },
      "similarity": 0.03958382890885684
    },
    {
      "metadata": {
        "doc_id": "CWE-805",
        "name": "Buffer Access with Incorrect Length Value",
        "type": "Base",
        "original_content": "The product uses a sequential operation to read or write a buffer, but it uses an incorrect length value that causes it to access memory that is outside of the bounds of the buffer.",
        "relationships": [],
        "original_sparse_score": 86.22274673833383,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 86.22274673833383
          },
          "normalized_scores": {
            "sparse": 0.06897819739066706
          },
          "weighted_scores": {
            "sparse": 0.027591278956266826
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 86.22274673833383,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.06897819739066706,
              "weight": 0.4,
              "weighted_score": 0.027591278956266826
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.027591278956266826,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.03586866264314688
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.03586866264314688
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.03945552890746157
            }
          },
          "combined_score": 0.03945552890746157
        }
      },
      "similarity": 0.03945552890746157
    },
    {
      "metadata": {
        "doc_id": "CWE-476",
        "name": "NULL Pointer Dereference",
        "type": "Base",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "relationships": [],
        "original_sparse_score": 77.07847369579788,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 77.07847369579788
          },
          "normalized_scores": {
            "sparse": 0.061662778956638305
          },
          "weighted_scores": {
            "sparse": 0.024665111582655323
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 77.07847369579788,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.061662778956638305,
              "weight": 0.4,
              "weighted_score": 0.024665111582655323
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.024665111582655323,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.03206464505745192
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.03206464505745192
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.035271109563197116
            }
          },
          "combined_score": 0.035271109563197116
        }
      },
      "similarity": 0.035271109563197116
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 76.37694733085684,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 76.37694733085684
          },
          "normalized_scores": {
            "sparse": 0.06110155786468547
          },
          "weighted_scores": {
            "sparse": 0.02444062314587419
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 76.37694733085684,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.06110155786468547,
              "weight": 0.4,
              "weighted_score": 0.02444062314587419
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.02444062314587419,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.03177281008963645
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.03177281008963645
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.034950091098600096
            }
          },
          "combined_score": 0.034950091098600096
        }
      },
      "similarity": 0.034950091098600096
    },
    {
      "metadata": {
        "doc_id": "CWE-257",
        "name": "Storing Passwords in a Recoverable Format",
        "type": "Base",
        "original_content": "The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.",
        "relationships": [],
        "original_sparse_score": 76.37146135619656,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 76.37146135619656
          },
          "normalized_scores": {
            "sparse": 0.06109716908495725
          },
          "weighted_scores": {
            "sparse": 0.0244388676339829
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 76.37146135619656,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.06109716908495725,
              "weight": 0.4,
              "weighted_score": 0.0244388676339829
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.0244388676339829,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.03177052792417777
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.03177052792417777
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.034947580716595546
            }
          },
          "combined_score": 0.034947580716595546
        }
      },
      "similarity": 0.034947580716595546
    },
    {
      "metadata": {
        "doc_id": "CWE-201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "type": "Base",
        "original_content": "The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.",
        "relationships": [],
        "original_sparse_score": 76.06601519536413,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 76.06601519536413
          },
          "normalized_scores": {
            "sparse": 0.060852812156291305
          },
          "weighted_scores": {
            "sparse": 0.024341124862516522
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 76.06601519536413,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.060852812156291305,
              "weight": 0.4,
              "weighted_score": 0.024341124862516522
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.024341124862516522,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.03164346232127148
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.03164346232127148
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.03480780855339863
            }
          },
          "combined_score": 0.03480780855339863
        }
      },
      "similarity": 0.03480780855339863
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 75.86888180431416,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 75.86888180431416
          },
          "normalized_scores": {
            "sparse": 0.06069510544345132
          },
          "weighted_scores": {
            "sparse": 0.02427804217738053
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 75.86888180431416,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.06069510544345132,
              "weight": 0.4,
              "weighted_score": 0.02427804217738053
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.02427804217738053,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.03156145483059469
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.03156145483059469
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.034717600313654166
            }
          },
          "combined_score": 0.034717600313654166
        }
      },
      "similarity": 0.034717600313654166
    },
    {
      "metadata": {
        "doc_id": "CWE-362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "type": "Class",
        "original_content": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.",
        "relationships": [],
        "original_sparse_score": 78.26545599242496,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 78.26545599242496
          },
          "normalized_scores": {
            "sparse": 0.06261236479393997
          },
          "weighted_scores": {
            "sparse": 0.02504494591757599
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 78.26545599242496,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.06261236479393997,
              "weight": 0.4,
              "weighted_score": 0.02504494591757599
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.02504494591757599,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.020035956734060792
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.020035956734060792
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.02103775457076383
            }
          },
          "combined_score": 0.02103775457076383
        }
      },
      "similarity": 0.02103775457076383
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 87.24449580868436,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 87.24449580868436
          },
          "normalized_scores": {
            "sparse": 0.0697955966469475
          },
          "weighted_scores": {
            "sparse": 0.027918238658779
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 87.24449580868436,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.0697955966469475,
              "weight": 0.4,
              "weighted_score": 0.027918238658779
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.027918238658779,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.022334590927023203
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.022334590927023203
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.017867672741618563
            }
          },
          "combined_score": 0.017867672741618563
        }
      },
      "similarity": 0.017867672741618563
    },
    {
      "metadata": {
        "doc_id": "CWE-665",
        "name": "Improper Initialization",
        "type": "Class",
        "original_content": "The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.",
        "relationships": [],
        "original_sparse_score": 85.56292652408985,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 85.56292652408985
          },
          "normalized_scores": {
            "sparse": 0.06845034121927188
          },
          "weighted_scores": {
            "sparse": 0.02738013648770875
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 85.56292652408985,
              "query_max": 149.70932313775623,
              "query_min": 75.86888180431416,
              "normalized_score": 0.06845034121927188,
              "weight": 0.4,
              "weighted_score": 0.02738013648770875
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.02738013648770875,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.021904109190167
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.021904109190167
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.017523287352133602
            }
          },
          "combined_score": 0.017523287352133602
        }
      },
      "similarity": 0.017523287352133602
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-119",
      "CWE-20",
      "CWE-1285",
      "CWE-125"
    ],
    "critic_additional": [
      "CWE-787",
      "CWE-908",
      "CWE-190",
      "CWE-367",
      "CWE-822"
    ]
  }
}