{
  "query": "TensorFlow is an open source platform for machine learning. In version 2.8.0, the `TensorKey` hash function used total estimated `AllocatedBytes()`, which (a) is an estimate per tensor, and (b) is a very poor hash function for constants (e.g. `int32_t`). It also tried to access individual tensor bytes through `tensor.data()` of size `AllocatedBytes()`. This led to ASAN failures because the `AllocatedBytes()` is an estimate of total bytes allocated by a tensor, including any pointed-to constructs (e.g. strings), and does not refer to contiguous bytes in the `.data()` buffer. The discoverers could not use this byte vector anyway because types such as `tstring` include pointers, whereas they needed to hash the string values themselves. This issue is patched in Tensorflow versions 2.9.0 and 2.8.1.",
  "count": 20,
  "results": [
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 784.0386391506319,
      "original_score": 784.0386391506319,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 781.710642934738,
      "original_score": 781.710642934738,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "824",
      "name": "Access of Uninitialized Pointer",
      "abstraction": "Base",
      "score": 727.2211445305586,
      "original_score": 727.2211445305586,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 678.3925679786358,
      "original_score": 678.3925679786358,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "95",
      "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
      "abstraction": "Variant",
      "score": 676.6859864769942,
      "original_score": 676.6859864769942,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 668.3023705091969,
      "original_score": 668.3023705091969,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "335",
      "name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
      "abstraction": "Base",
      "score": 660.5598106099249,
      "original_score": 660.5598106099249,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "score": 658.4573423630252,
      "original_score": 658.4573423630252,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "abstraction": "Base",
      "score": 636.0369170855811,
      "original_score": 636.0369170855811,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "abstraction": "Class",
      "score": 633.7604195330991,
      "original_score": 633.7604195330991,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 631.0726948356211,
      "original_score": 631.0726948356211,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 626.6592724372643,
      "original_score": 626.6592724372643,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "328",
      "name": "Use of Weak Hash",
      "abstraction": "Base",
      "score": 621.8441311244986,
      "original_score": 621.8441311244986,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "617",
      "name": "Reachable Assertion",
      "abstraction": "Base",
      "score": 618.4265778635447,
      "original_score": 618.4265778635447,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1286",
      "name": "Improper Validation of Syntactic Correctness of Input",
      "abstraction": "Base",
      "score": 615.9725745120988,
      "original_score": 615.9725745120988,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "843",
      "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
      "abstraction": "Base",
      "score": 614.0568804127612,
      "original_score": 614.0568804127612,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "abstraction": "Base",
      "score": 606.0232725254934,
      "original_score": 606.0232725254934,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "20",
      "name": "Improper Input Validation",
      "abstraction": "Class",
      "score": 606.0207229735806,
      "original_score": 606.0207229735806,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "203",
      "name": "Observable Discrepancy",
      "abstraction": "Base",
      "score": 604.8996440631406,
      "original_score": 604.8996440631406,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "327",
      "name": "Use of a Broken or Risky Cryptographic Algorithm",
      "abstraction": "Class",
      "score": 603.0133010103427,
      "original_score": 603.0133010103427,
      "mapping_usage": "Allowed-with-Review"
    }
  ],
  "statistics": {
    "min": 603.0133010103427,
    "max": 784.0386391506319,
    "mean": 652.6577456465366,
    "median": 632.41655718436,
    "count": 20
  }
}