{
  "method": "sparse_with_keyphrases",
  "query": "TensorFlow is an open source platform for machine learning. In version 2.8.0, the `TensorKey` hash function used total estimated `AllocatedBytes()`, which (a) is an estimate per tensor, and (b) is a very poor hash function for constants (e.g. `int32_t`). It also tried to access individual tensor bytes through `tensor.data()` of size `AllocatedBytes()`. This led to ASAN failures because the `AllocatedBytes()` is an estimate of total bytes allocated by a tensor, including any pointed-to constructs (e.g. strings), and does not refer to contiguous bytes in the `.data()` buffer. The discoverers could not use this byte vector anyway because types such as `tstring` include pointers, whereas they needed to hash the string values themselves. This issue is patched in Tensorflow versions 2.9.0 and 2.8.1.",
  "keyphrases": {
    "rootcause": "very poor hash function for constants"
  },
  "timestamp": "2025-03-18T12:33:22.606451",
  "results_count": 20,
  "results_summary": [
    {
      "doc_id": "CWE-1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 784.0386391506319
    },
    {
      "doc_id": "CWE-122",
      "name": "Heap-based Buffer Overflow",
      "score": 781.710642934738
    },
    {
      "doc_id": "CWE-824",
      "name": "Access of Uninitialized Pointer",
      "score": 727.2211445305586
    },
    {
      "doc_id": "CWE-476",
      "name": "NULL Pointer Dereference",
      "score": 678.3925679786358
    },
    {
      "doc_id": "CWE-95",
      "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
      "score": 676.6859864769942
    }
  ]
}