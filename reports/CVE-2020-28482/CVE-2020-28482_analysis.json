{
  "cve_id": "CVE-2020-28482",
  "description": "This affects the package fastify-csrf before 3.0.0. 1. The generated cookie used insecure defaults, and did not have the httpOnly flag on cookieOpts { path /, sameSite true } 2. The CSRF token was available in the GET query parameter",
  "key_phrases": {
    "rootcause": "",
    "weakness": "",
    "impact": "CSRF vulnerability",
    "vector": "CSRF token in GET query parameter",
    "attacker": "",
    "product": "fastify-csrf",
    "version": "before 3.0.0",
    "component": ""
  },
  "reference_content": "Based on the provided information, here's an analysis of CVE-2020-28482:\n\n**Root Cause of Vulnerability:**\n\nThe vulnerability stems from insecure default settings in the `fastify-csrf` package regarding how CSRF protection was implemented:\n\n*   **Insecure Cookie Defaults:** The generated cookie lacked the `httpOnly` flag.\n*   **CSRF Token in GET Query:** The CSRF token was made available in the GET query parameter.\n\n**Weaknesses/Vulnerabilities Present:**\n\n*   **Cross-Site Request Forgery (CSRF):** The primary vulnerability is CSRF, which allows attackers to potentially execute unauthorized actions on behalf of a user.\n*   **Lack of HttpOnly Cookie Flag:** The absence of the `httpOnly` flag on the CSRF cookie made it accessible to client-side scripts, increasing the risk of the token being stolen via cross-site scripting (XSS) attacks.\n*   **CSRF Token in GET Parameters:** Exposing the CSRF token in the GET query parameter makes it vulnerable to exposure through various mechanisms like browser history, server logs and referrer headers.\n\n**Impact of Exploitation:**\n\nSuccessful exploitation of this vulnerability could allow an attacker to perform actions on a web application that the user is authenticated to perform, including data manipulation or unauthorized transactions, without the user's knowledge or consent. The impact includes potential loss of confidentiality due to the exposed token and the integrity impact can range from low to high depending on the specific application's vulnerability.\n\n**Attack Vectors:**\n\n*   An attacker could craft a malicious web page containing a form that targets the vulnerable application and forces a logged-in user to submit the form with malicious data, because the attacker can retrieve the CSRF token from GET query or via XSS if the token is exposed due to lack of httpOnly cookie flag.\n*   If the CSRF token is in a GET parameter, this token could be exposed via the referrer header and server logs, etc, enabling the attacker to use this token in a malicious request\n\n**Required Attacker Capabilities/Position:**\n\n*   **Network Access:** The attacker needs to be able to make network requests to the vulnerable application.\n*   **User Interaction:** The attack requires the user to visit a malicious website or perform some action that the attacker controls (e.g., clicking a link).\n*   **Ability to Craft Malicious Requests:** The attacker needs to be able to craft HTTP requests that target the vulnerable application and include the correct CSRF token, or to leverage an XSS attack.\n\n**Additional Information:**\n\n*   The vulnerability is present in `fastify-csrf` versions prior to 3.0.0.\n*   The fix involves removing the support for the token in the query parameter, and making the cookie `httpOnly` by default.\n*   The suggested mitigation is to upgrade `fastify-csrf` to version 3.0.0 or higher.\n*  The Snyk CVSS score is 5.9 (Medium) and NVD CVSS score is 8.8 (High).\n*  The provided content includes a link to the related GitHub pull request which introduced the fix",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Primary | Allowed |\n| CWE-1004 | Sensitive Cookie Without 'HttpOnly' Flag | 0.8 | Variant | Secondary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states that this affects the package fastify-csrf before 3.0.0 due to two reasons: 1. The generated cookie used insecure defaults, and did not have the httpOnly flag on cookieOpts { path /, sameSite true } 2. The **CSRF token was available in the GET query parameter**, which is a clear indication of a **CSRF vulnerability**. Therefore, CWE-352 (Cross-Site Request Forgery (CSRF)) is the most appropriate primary CWE. The presence of the cookie without the `httpOnly` flag contributes to potential exposure of the token, thus CWE-1004 (Sensitive Cookie Without 'HttpOnly' Flag) is a secondary contributing weakness. The lack of `httpOnly` flag also can cause a **Cross-site Scripting (XSS)** vulnerability (CWE-79), hence, it's added as a secondary CWE. MITRE mapping guidance for CWE-352 indicates this is ALLOWED.\n  \n  - *Relationship Analysis:* \"CWE-352 (Cross-Site Request Forgery (CSRF)) is related to CWE-1275 (Sensitive Cookie with Improper SameSite Attribute) since improper cookie settings can lead to CSRF. CWE-352 Requires weaknesses such as CWE-613, CWE-642, CWE-441, and CWE-346. CWE-1004 and CWE-79 are potential root causes that can enable or worsen CSRF attacks.\"\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.9 (High evidence from technical description and CVE reference materials)\n\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Primary | Allowed |\n| CWE-1004 | Sensitive Cookie Without 'HttpOnly' Flag | 0.8 | Variant | Secondary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states that this affects the package fastify-csrf before 3.0.0 due to two reasons: 1. The generated cookie used insecure defaults, and did not have the httpOnly flag on cookieOpts { path /, sameSite true } 2. The **CSRF token was available in the GET query parameter**, which is a clear indication of a **CSRF vulnerability**. Therefore, CWE-352 (Cross-Site Request Forgery (CSRF)) is the most appropriate primary CWE. The presence of the cookie without the `httpOnly` flag contributes to potential exposure of the token, thus CWE-1004 (Sensitive Cookie Without 'HttpOnly' Flag) is a secondary contributing weakness. The lack of `httpOnly` flag also can cause a **Cross-site Scripting (XSS)** vulnerability (CWE-79), hence, it's added as a secondary CWE. MITRE mapping guidance for CWE-352 indicates this is ALLOWED.\n  \n  - *Relationship Analysis:* \"CWE-352 (Cross-Site Request Forgery (CSRF)) is related to CWE-1275 (Sensitive Cookie with Improper SameSite Attribute) since improper cookie settings can lead to CSRF. CWE-352 Requires weaknesses such as CWE-613, CWE-642, CWE-441, and CWE-346. CWE-1004 and CWE-79 are potential root causes that can enable or worsen CSRF attacks.\"\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.9 (High evidence from technical description and CVE reference materials)\n\n---",
  "criticism": "Okay, here's a detailed review of the CWE analysis, considering the full CWE specifications:\n\n**Overall Assessment:**\n\nThe analysis is generally sound and identifies the key weaknesses associated with the described vulnerability in `fastify-csrf` before version 3.0.0. The mapping to CWE-352, CWE-1004, and CWE-79 is justified, and the confidence levels are reasonable. The provided explanations and relationships are also well-articulated.\n\n**Detailed Review:**\n\n| CWE ID  | CWE Name                                                                                                                            | Confidence | Abstraction Level | Assessment                                                                                                                                                                                                                                                                                                                          |\n| :------- | :---------------------------------------------------------------------------------------------------------------------------------- | :--------- | :---------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| CWE-352   | Cross-Site Request Forgery (CSRF)                                                                                                   | 0.9        | Compound          | **Correct**. The primary vulnerability is indeed CSRF.  The description clearly indicates a failure to properly verify the origin of requests, as the CSRF token was exposed in the GET query parameter.  This aligns perfectly with CWE-352's description.  The provided examples for CWE-352 are also relevant. Allowed.                                                                       |\n| CWE-1004  | Sensitive Cookie Without 'HttpOnly' Flag                                                                                            | 0.8        | Variant           | **Correct**. The absence of the `httpOnly` flag directly contributes to the risk of token theft via XSS.  This makes CWE-1004 a suitable secondary weakness.  The mapping guidance (Allowed) aligns. The examples for CWE-1004 are relevant.                                                                       |\n| CWE-79    | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')                                            | 0.7        | Base              | **Correct**. The lack of `httpOnly` on the cookie enables a reflected XSS vector to access the CSRF token. Using the full specifications for CWE-79, the mitigation techniques are also relevant. The attacker could then transfer the private information. Allowed.                                                                        |\n\n**Recommendations and Potential Improvements:**\n\n1.  **CWE-1275: Sensitive Cookie with Improper SameSite Attribute:** Consider including CWE-1275 as a tertiary weakness.  While the description mainly focuses on the `httpOnly` flag and GET parameter exposure, the `SameSite` attribute is mentioned in the original analyzer input, and its absence (or incorrect value) could exacerbate CSRF.  If the `SameSite` attribute is not properly configured, it could allow cross-origin requests to include the cookie, further undermining CSRF protection.\n\n    *   **Justification:**  The CWE-1275 description specifically mentions how the `None` value may lead to CSRF attacks. The relationship between `CWE-1275` and `CWE-352` is also clearly defined as `CanPrecede -> CWE-352`.\n    *  Given the lack of specific details about the SameSite configuration, it should be a lower confidence level (e.g., 0.5 or 0.6) and marked as a potential, rather than a definite, contributor.\n\n2.  **Relationship Analysis:** Expand the Relationship Analysis to include more CWEs that are relevant as per the MITRE specifications.\n    *CWE-352 is related to CWE-1275 (Sensitive Cookie with Improper SameSite Attribute) since improper cookie settings can lead to CSRF. CWE-352 Requires weaknesses such as CWE-346 (Origin Validation Error), CWE-441 (Unintended Proxy or Intermediary), CWE-642 (External Control of Critical State Data), and CWE-613 (Insufficient Session Expiration). CWE-1004 and CWE-79 are potential root causes that can enable or worsen CSRF attacks. The `CanFollow` relationship between CWE-79 and CWE-352 should also be mentioned.\n\n3.  **CWE Mitigation Considerations:** In the evidence and justification section, consider expanding the analysis with potential mitigations mentioned under each weakness in the MITRE specifications. For example,\n\n    *   For `CWE-352`, suggest using a vetted library or framework with anti-CSRF packages such as OWASP CSRFGuard, generating unique nonces for each form and verifying the nonce.\n    *   For `CWE-1004`, stress the importance of leveraging the HttpOnly flag.\n    *   For `CWE-79`, suggest libraries like Microsoft's Anti-XSS library or OWASP ESAPI Encoding module and the XSS Prevention Cheat Sheet for encoding and escaping.\n\n4. **Review Combined Results:** Refer to the \"Top Combined Results\" table from the Retriever Results. The high scores for CWE-1275 (Sensitive Cookie with Improper SameSite Attribute) and CWE-201 (Insertion of Sensitive Information Into Sent Data) indicate that these should be strongly considered as potential CWEs, even if they're not ultimately selected.\n\n5.  **Specificity of Attack Vector:** Consider whether CWE-201, Insertion of Sensitive Information Into Sent Data is an issue. The CSRF token itself is being sent in the GET query parameter, but whether that classifies as *sensitive* depends on the specific context and whether other information besides the token is also sent.\n\n**Revised Summary (with suggested changes):**\n\n| CWE ID  | CWE Name                                                                                                                            | Confidence | Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :------- | :---------------------------------------------------------------------------------------------------------------------------------- | :--------- | :---------------- | :------------------------------ | :------------------------------ |\n| CWE-352   | Cross-Site Request Forgery (CSRF)                                                                                                   | 0.9        | Compound          | Primary                       | Allowed                       |\n| CWE-1004  | Sensitive Cookie Without 'HttpOnly' Flag                                                                                            | 0.8        | Variant           | Secondary                     | Allowed                       |\n| CWE-79    | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')                                            | 0.7        | Base              | Secondary                     | Allowed                       |\n| CWE-1275   | Sensitive Cookie with Improper SameSite Attribute                                                                                                   | 0.5        | Variant          | Tertiary                    | Allowed                       |\n\n**Revised Evidence and Confidence**\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states that this affects the package fastify-csrf before 3.0.0 due to two reasons: 1. The generated cookie used insecure defaults and did not have the httpOnly flag on cookieOpts { path /, sameSite true } 2. The **CSRF token was available in the GET query parameter**, which is a clear indication of a **CSRF vulnerability**. Therefore, CWE-352 (Cross-Site Request Forgery (CSRF)) is the most appropriate primary CWE. The presence of the cookie without the `httpOnly` flag contributes to potential exposure of the token, thus CWE-1004 (Sensitive Cookie Without 'HttpOnly' Flag) is a secondary contributing weakness. The lack of `httpOnly` flag also can cause a **Cross-site Scripting (XSS)** vulnerability (CWE-79), hence, it's added as a secondary CWE. The improper configuration of the `SameSite` attribute (CWE-1275) can allow cross-origin requests to include the cookie, further undermining CSRF protection, and is added as a tertiary CWE. MITRE mapping guidance for CWE-352 indicates this is ALLOWED. The mitigation methods include using an anti-CSRF package, generating unique nonces for each form, setting the HttpOnly flag, libraries like the OWASP ESAPI Encoding module and encoding and escaping the outputs.\n  \n  - *Relationship Analysis:* \"CWE-352 (Cross-Site Request Forgery (CSRF)) is related to CWE-1275 (Sensitive Cookie with Improper SameSite Attribute) since improper cookie settings can lead to CSRF. CWE-352 Requires weaknesses such as CWE-346 (Origin Validation Error), CWE-441 (Unintended Proxy or Intermediary), CWE-642 (External Control of Critical State Data), and CWE-613 (Insufficient Session Expiration). CWE-1004 and CWE-79 are potential root causes that can enable or worsen CSRF attacks. \"CWE-79 CanFollows CWE-352\".\n\nBy incorporating these suggestions, the analysis becomes more comprehensive and aligns even better with the nuances of the CWE specifications.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Primary | Allowed |\n| CWE-1004 | Sensitive Cookie Without 'HttpOnly' Flag | 0.8 | Variant | Secondary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.7 | Base | Secondary | Allowed |\n| CWE-1275 | Sensitive Cookie with Improper SameSite Attribute | 0.5 | Variant | Tertiary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-352 (**Cross-Site Request Forgery (CSRF)**), a compound weakness. This is supported by the fact that the **CSRF token was available in the GET query parameter**, which violates CSRF protection mechanisms. CWE-352 Requires weaknesses such as CWE-346 (Origin Validation Error), CWE-441 (Unintended Proxy or Intermediary), CWE-642 (External Control of Critical State Data), and CWE-613 (Insufficient Session Expiration). CWE-1004 (Sensitive Cookie Without 'HttpOnly' Flag) and CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) are contributing factors. CWE-1275 (Sensitive Cookie with Improper SameSite Attribute) is included as a tertiary weakness with lower confidence, as the original description mentions `SameSite` but doesn't provide specifics. The `CanPrecede` relationship between `CWE-1275` and `CWE-352` further supports this addition.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe1004[\"CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe1275[\"CWE-1275: Sensitive Cookie with Improper SameSite Attribute\"]\n\n    cwe1004 -->|CANPRECEDE| cwe352\n    cwe79 -->|CANPRECEDE| cwe352\n    cwe1275 -->|CANPRECEDE| cwe352\n    cwe79 -->|CANFOLLOW| cwe352\n    cwe352 -->|REQUIRES| cwe346\n    cwe352 -->|REQUIRES| cwe441\n    cwe352 -->|REQUIRES| cwe642\n    cwe352 -->|REQUIRES| cwe613\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe352 primary\n    class cwe1004,cwe79 secondary\n    class cwe1275 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with insecure cookie handling and the exposure of the **CSRF token in the GET query parameter**. This leads to:\n1.  **Root Cause:** **Improper cookie configuration** (missing `HttpOnly` flag and potentially incorrect `SameSite` attribute).\n2.  **Weakness:** **CSRF token is exposed and vulnerable to theft** via XSS or other means.\n3.  **Vulnerability:** **Cross-Site Request Forgery (CSRF)** due to the ability of an attacker to forge requests on behalf of the user.\n4.  **Impact:** Unauthorized actions performed by the attacker on behalf of the user.\n\n## Summary of Analysis\nThe initial analysis and the criticism both correctly identified the main issues. The primary weakness is CWE-352 (**Cross-Site Request Forgery (CSRF)**), as explicitly indicated by the exposure of the **CSRF token in the GET query parameter**. The secondary CWEs, CWE-1004 (Sensitive Cookie Without 'HttpOnly' Flag) and CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')), are valid contributors as the lack of `HttpOnly` increases the risk of XSS and token theft.\n\nI have added CWE-1275 (Sensitive Cookie with Improper SameSite Attribute) as a tertiary concern with a lower confidence score (0.5) due to the mention of `SameSite` in the initial description and the `CanPrecede` relationship with `CWE-352`, despite a lack of specific details.\n\nThe retriever scores were considered.\n\nThe CWEs selected are at the appropriate level of specificity (Base and Variant levels for contributing factors, Compound for the primary). The inclusion of specific cookie attributes and the method of token transmission makes these choices more precise than higher-level classifications.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-1275",
        "name": "Sensitive Cookie with Improper SameSite Attribute",
        "type": "Variant",
        "original_content": "The SameSite attribute for sensitive cookies is not set, or an insecure value is used.",
        "relationships": [],
        "original_sparse_score": 62.59818523288979,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5684209347085787,
            "sparse": 62.59818523288979,
            "graph": 2.2019393702271075
          },
          "normalized_scores": {
            "dense": 0.5684209347085787,
            "sparse": 0.050078548186311835,
            "graph": 0.7864069179382527
          },
          "weighted_scores": {
            "dense": 0.19894732714800253,
            "sparse": 0.020031419274524735,
            "graph": 0.19660172948456317
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5684209347085787,
              "query_max": 0.5684209347085787,
              "query_min": 0.39676938357175073,
              "normalized_score": 0.5684209347085787,
              "weight": 0.35,
              "weighted_score": 0.19894732714800253
            },
            "sparse": {
              "raw_score": 62.59818523288979,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.050078548186311835,
              "weight": 0.4,
              "weighted_score": 0.020031419274524735
            },
            "graph": {
              "raw_score": 2.2019393702271075,
              "query_max": 3.6399999999999997,
              "query_min": 1.3010400000000002,
              "normalized_score": 0.7864069179382527,
              "weight": 0.25,
              "weighted_score": 0.19660172948456317
            }
          },
          "contribution_percentages": {
            "dense": 47.87215441576239,
            "sparse": 4.820105956807045,
            "graph": 47.307739627430564
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.41558047590709046,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.4986965710885085
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4986965710885085
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5485662281973595
            }
          },
          "combined_score": 0.5485662281973595
        }
      },
      "similarity": 0.5485662281973595
    },
    {
      "metadata": {
        "doc_id": "CWE-352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "type": "Compound",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "relationships": [],
        "original_sparse_score": 78.71549617855966,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
          "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
          "reasons": [
            "Other"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4547944557585488,
            "sparse": 78.71549617855966,
            "graph": 2.152902752724751
          },
          "normalized_scores": {
            "dense": 0.4547944557585488,
            "sparse": 0.06297239694284773,
            "graph": 0.7688938402588397
          },
          "weighted_scores": {
            "dense": 0.15917805951549208,
            "sparse": 0.025188958777139094,
            "graph": 0.19222346006470992
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4547944557585488,
              "query_max": 0.5684209347085787,
              "query_min": 0.39676938357175073,
              "normalized_score": 0.4547944557585488,
              "weight": 0.35,
              "weighted_score": 0.15917805951549208
            },
            "sparse": {
              "raw_score": 78.71549617855966,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.06297239694284773,
              "weight": 0.4,
              "weighted_score": 0.025188958777139094
            },
            "graph": {
              "raw_score": 2.152902752724751,
              "query_max": 3.6399999999999997,
              "query_min": 1.3010400000000002,
              "normalized_score": 0.7688938402588397,
              "weight": 0.25,
              "weighted_score": 0.19222346006470992
            }
          },
          "contribution_percentages": {
            "dense": 42.268211402958094,
            "sparse": 6.688687108344165,
            "graph": 51.04310148869775
          },
          "abstraction_factor": 1.0,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.37659047835734105,
            "abstraction": {
              "type": "compound",
              "factor": 1.0,
              "score_after": 0.37659047835734105
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.37659047835734105
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
                "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
                "reasons": [
                  "Other"
                ]
              },
              "score_after": 0.4142495261930752
            }
          },
          "combined_score": 0.4142495261930752
        }
      },
      "similarity": 0.4142495261930752
    },
    {
      "metadata": {
        "doc_id": "CWE-79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "type": "Base",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "relationships": [],
        "original_sparse_score": 71.95539698482159,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 71.95539698482159,
            "graph": 3.6399999999999997
          },
          "normalized_scores": {
            "sparse": 0.057564317587857274,
            "graph": 1.0
          },
          "weighted_scores": {
            "sparse": 0.023025727035142912,
            "graph": 0.25
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 71.95539698482159,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.057564317587857274,
              "weight": 0.4,
              "weighted_score": 0.023025727035142912
            },
            "graph": {
              "raw_score": 3.6399999999999997,
              "query_max": 3.6399999999999997,
              "query_min": 1.3010400000000002,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "sparse": 8.433537485710685,
            "graph": 91.5664625142893
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.27302572703514294,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3549334451456858
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3549334451456858
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3904267896602544
            }
          },
          "combined_score": 0.3904267896602544
        }
      },
      "similarity": 0.3904267896602544
    },
    {
      "metadata": {
        "doc_id": "CWE-201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "type": "Base",
        "original_content": "The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.",
        "relationships": [],
        "original_sparse_score": 65.63341292410522,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 65.63341292410522,
            "graph": 2.1189999999999998
          },
          "normalized_scores": {
            "sparse": 0.05250673033928417,
            "graph": 0.7567857142857143
          },
          "weighted_scores": {
            "sparse": 0.02100269213571367,
            "graph": 0.18919642857142857
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 65.63341292410522,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.05250673033928417,
              "weight": 0.4,
              "weighted_score": 0.02100269213571367
            },
            "graph": {
              "raw_score": 2.1189999999999998,
              "query_max": 3.6399999999999997,
              "query_min": 1.3010400000000002,
              "normalized_score": 0.7567857142857143,
              "weight": 0.25,
              "weighted_score": 0.18919642857142857
            }
          },
          "contribution_percentages": {
            "sparse": 9.99180779874691,
            "graph": 90.0081922012531
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.21019912070714225,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2732588569192849
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2732588569192849
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.30058474261121343
            }
          },
          "combined_score": 0.30058474261121343
        }
      },
      "similarity": 0.30058474261121343
    },
    {
      "metadata": {
        "doc_id": "CWE-1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "type": "Variant",
        "original_content": "The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.",
        "relationships": [],
        "original_sparse_score": 123.2454378070533,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5341852764037046,
            "sparse": 123.2454378070533
          },
          "normalized_scores": {
            "dense": 0.5341852764037046,
            "sparse": 0.09859635024564264
          },
          "weighted_scores": {
            "dense": 0.1869648467412966,
            "sparse": 0.03943854009825706
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5341852764037046,
              "query_max": 0.5684209347085787,
              "query_min": 0.39676938357175073,
              "normalized_score": 0.5341852764037046,
              "weight": 0.35,
              "weighted_score": 0.1869648467412966
            },
            "sparse": {
              "raw_score": 123.2454378070533,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.09859635024564264,
              "weight": 0.4,
              "weighted_score": 0.03943854009825706
            }
          },
          "contribution_percentages": {
            "dense": 82.580410722298,
            "sparse": 17.419589277701995
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.22640338683955366,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.2716840642074644
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2716840642074644
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.29885247062821085
            }
          },
          "combined_score": 0.29885247062821085
        }
      },
      "similarity": 0.29885247062821085
    },
    {
      "metadata": {
        "doc_id": "CWE-614",
        "name": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute",
        "type": "Variant",
        "original_content": "The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.",
        "relationships": [],
        "original_sparse_score": 68.45863992081611,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5168048004385384,
            "sparse": 68.45863992081611
          },
          "normalized_scores": {
            "dense": 0.5168048004385384,
            "sparse": 0.05476691193665289
          },
          "weighted_scores": {
            "dense": 0.18088168015348843,
            "sparse": 0.021906764774661157
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5168048004385384,
              "query_max": 0.5684209347085787,
              "query_min": 0.39676938357175073,
              "normalized_score": 0.5168048004385384,
              "weight": 0.35,
              "weighted_score": 0.18088168015348843
            },
            "sparse": {
              "raw_score": 68.45863992081611,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.05476691193665289,
              "weight": 0.4,
              "weighted_score": 0.021906764774661157
            }
          },
          "contribution_percentages": {
            "dense": 89.19723222769275,
            "sparse": 10.802767772307238
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2027884449281496,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.24334613391377952
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.24334613391377952
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2676807473051575
            }
          },
          "combined_score": 0.2676807473051575
        }
      },
      "similarity": 0.2676807473051575
    },
    {
      "metadata": {
        "doc_id": "CWE-434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "type": "Base",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "relationships": [],
        "original_sparse_score": 64.38810205293808,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 64.38810205293808,
            "graph": 1.7680000000000005
          },
          "normalized_scores": {
            "sparse": 0.05151048164235046,
            "graph": 0.6314285714285717
          },
          "weighted_scores": {
            "sparse": 0.020604192656940187,
            "graph": 0.15785714285714292
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 64.38810205293808,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.05151048164235046,
              "weight": 0.4,
              "weighted_score": 0.020604192656940187
            },
            "graph": {
              "raw_score": 1.7680000000000005,
              "query_max": 3.6399999999999997,
              "query_min": 1.3010400000000002,
              "normalized_score": 0.6314285714285717,
              "weight": 0.25,
              "weighted_score": 0.15785714285714292
            }
          },
          "contribution_percentages": {
            "sparse": 11.545465911474267,
            "graph": 88.45453408852573
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.1784613355140831,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.23199973616830805
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.23199973616830805
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2551997097851389
            }
          },
          "combined_score": 0.2551997097851389
        }
      },
      "similarity": 0.2551997097851389
    },
    {
      "metadata": {
        "doc_id": "CWE-1188",
        "name": "Initialization of a Resource with an Insecure Default",
        "type": "Base",
        "original_content": "The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.",
        "relationships": [],
        "original_sparse_score": 60.41615958803187,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.40387600219670394,
            "sparse": 60.41615958803187
          },
          "normalized_scores": {
            "dense": 0.40387600219670394,
            "sparse": 0.04833292767042549
          },
          "weighted_scores": {
            "dense": 0.14135660076884637,
            "sparse": 0.0193331710681702
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.40387600219670394,
              "query_max": 0.5684209347085787,
              "query_min": 0.39676938357175073,
              "normalized_score": 0.40387600219670394,
              "weight": 0.35,
              "weighted_score": 0.14135660076884637
            },
            "sparse": {
              "raw_score": 60.41615958803187,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.04833292767042549,
              "weight": 0.4,
              "weighted_score": 0.0193331710681702
            }
          },
          "contribution_percentages": {
            "dense": 87.96863618190999,
            "sparse": 12.031363818090007
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.16068977183701658,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.20889670338812155
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.20889670338812155
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.22978637372693372
            }
          },
          "combined_score": 0.22978637372693372
        }
      },
      "similarity": 0.22978637372693372
    },
    {
      "metadata": {
        "doc_id": "CWE-425",
        "name": "Direct Request ('Forced Browsing')",
        "type": "Base",
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "relationships": [],
        "original_sparse_score": 60.44069739621979,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 60.44069739621979,
            "graph": 1.3010400000000002
          },
          "normalized_scores": {
            "sparse": 0.04835255791697583,
            "graph": 0.46465714285714294
          },
          "weighted_scores": {
            "sparse": 0.019341023166790334,
            "graph": 0.11616428571428573
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 60.44069739621979,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.04835255791697583,
              "weight": 0.4,
              "weighted_score": 0.019341023166790334
            },
            "graph": {
              "raw_score": 1.3010400000000002,
              "query_max": 3.6399999999999997,
              "query_min": 1.3010400000000002,
              "normalized_score": 0.46465714285714294,
              "weight": 0.25,
              "weighted_score": 0.11616428571428573
            }
          },
          "contribution_percentages": {
            "sparse": 14.273258609937308,
            "graph": 85.72674139006268
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.13550530888107606,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.1761569015453989
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1761569015453989
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1937725916999388
            }
          },
          "combined_score": 0.1937725916999388
        }
      },
      "similarity": 0.1937725916999388
    },
    {
      "metadata": {
        "doc_id": "CWE-639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "type": "Base",
        "original_content": "The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.",
        "relationships": [],
        "original_sparse_score": 64.68143098516147,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 64.68143098516147
          },
          "normalized_scores": {
            "sparse": 0.05174514478812917
          },
          "weighted_scores": {
            "sparse": 0.020698057915251672
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 64.68143098516147,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.05174514478812917,
              "weight": 0.4,
              "weighted_score": 0.020698057915251672
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.020698057915251672,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.026907475289827173
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.026907475289827173
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.029598222818809892
            }
          },
          "combined_score": 0.029598222818809892
        }
      },
      "similarity": 0.029598222818809892
    },
    {
      "metadata": {
        "doc_id": "CWE-23",
        "name": "Relative Path Traversal",
        "type": "Base",
        "original_content": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.",
        "relationships": [],
        "original_sparse_score": 62.38028892068641,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 62.38028892068641
          },
          "normalized_scores": {
            "sparse": 0.049904231136549126
          },
          "weighted_scores": {
            "sparse": 0.01996169245461965
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 62.38028892068641,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.049904231136549126,
              "weight": 0.4,
              "weighted_score": 0.01996169245461965
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.01996169245461965,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.025950200191005548
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.025950200191005548
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.028545220210106106
            }
          },
          "combined_score": 0.028545220210106106
        }
      },
      "similarity": 0.028545220210106106
    },
    {
      "metadata": {
        "doc_id": "CWE-601",
        "name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "type": "Base",
        "original_content": "The web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a redirect.",
        "relationships": [],
        "original_sparse_score": 61.0575615164314,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 61.0575615164314
          },
          "normalized_scores": {
            "sparse": 0.04884604921314512
          },
          "weighted_scores": {
            "sparse": 0.01953841968525805
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 61.0575615164314,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.04884604921314512,
              "weight": 0.4,
              "weighted_score": 0.01953841968525805
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.01953841968525805,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.025399945590835464
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.025399945590835464
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.02793994014991901
            }
          },
          "combined_score": 0.02793994014991901
        }
      },
      "similarity": 0.02793994014991901
    },
    {
      "metadata": {
        "doc_id": "CWE-89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "relationships": [],
        "original_sparse_score": 60.05170209144951,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 60.05170209144951
          },
          "normalized_scores": {
            "sparse": 0.04804136167315961
          },
          "weighted_scores": {
            "sparse": 0.019216544669263844
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 60.05170209144951,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.04804136167315961,
              "weight": 0.4,
              "weighted_score": 0.019216544669263844
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.019216544669263844,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.024981508070043
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.024981508070043
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.0274796588770473
            }
          },
          "combined_score": 0.0274796588770473
        }
      },
      "similarity": 0.0274796588770473
    },
    {
      "metadata": {
        "doc_id": "CWE-1321",
        "name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.",
        "relationships": [],
        "original_sparse_score": 61.069366227947306,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 61.069366227947306
          },
          "normalized_scores": {
            "sparse": 0.04885549298235785
          },
          "weighted_scores": {
            "sparse": 0.01954219719294314
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 61.069366227947306,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.04885549298235785,
              "weight": 0.4,
              "weighted_score": 0.01954219719294314
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.01954219719294314,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.023450636631531768
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.023450636631531768
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.025795700294684948
            }
          },
          "combined_score": 0.025795700294684948
        }
      },
      "similarity": 0.025795700294684948
    },
    {
      "metadata": {
        "doc_id": "CWE-116",
        "name": "Improper Encoding or Escaping of Output",
        "type": "Class",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "relationships": [],
        "original_sparse_score": 63.484712007186715,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 63.484712007186715
          },
          "normalized_scores": {
            "sparse": 0.05078776960574937
          },
          "weighted_scores": {
            "sparse": 0.02031510784229975
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 63.484712007186715,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.05078776960574937,
              "weight": 0.4,
              "weighted_score": 0.02031510784229975
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.02031510784229975,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.0162520862738398
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0162520862738398
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.01706469058753179
            }
          },
          "combined_score": 0.01706469058753179
        }
      },
      "similarity": 0.01706469058753179
    },
    {
      "metadata": {
        "doc_id": "CWE-862",
        "name": "Missing Authorization",
        "type": "Class",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "relationships": [],
        "original_sparse_score": 63.35992419156557,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 63.35992419156557
          },
          "normalized_scores": {
            "sparse": 0.050687939353252456
          },
          "weighted_scores": {
            "sparse": 0.020275175741300985
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 63.35992419156557,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.050687939353252456,
              "weight": 0.4,
              "weighted_score": 0.020275175741300985
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.020275175741300985,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.016220140593040788
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.016220140593040788
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.017031147622692828
            }
          },
          "combined_score": 0.017031147622692828
        }
      },
      "similarity": 0.017031147622692828
    },
    {
      "metadata": {
        "doc_id": "CWE-863",
        "name": "Incorrect Authorization",
        "type": "Class",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "relationships": [],
        "original_sparse_score": 62.41733187779422,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 62.41733187779422
          },
          "normalized_scores": {
            "sparse": 0.04993386550223537
          },
          "weighted_scores": {
            "sparse": 0.01997354620089415
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 62.41733187779422,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.04993386550223537,
              "weight": 0.4,
              "weighted_score": 0.01997354620089415
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.01997354620089415,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.01597883696071532
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.01597883696071532
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.016777778808751087
            }
          },
          "combined_score": 0.016777778808751087
        }
      },
      "similarity": 0.016777778808751087
    },
    {
      "metadata": {
        "doc_id": "CWE-340",
        "name": "Generation of Predictable Numbers or Identifiers",
        "type": "Class",
        "original_content": "The product uses a scheme that generates numbers or identifiers that are more predictable than required.",
        "relationships": [],
        "original_sparse_score": 61.10907910810246,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 61.10907910810246
          },
          "normalized_scores": {
            "sparse": 0.04888726328648197
          },
          "weighted_scores": {
            "sparse": 0.01955490531459279
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 61.10907910810246,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.04888726328648197,
              "weight": 0.4,
              "weighted_score": 0.01955490531459279
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.01955490531459279,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.015643924251674234
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.015643924251674234
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.016426120464257947
            }
          },
          "combined_score": 0.016426120464257947
        }
      },
      "similarity": 0.016426120464257947
    },
    {
      "metadata": {
        "doc_id": "CWE-668",
        "name": "Exposure of Resource to Wrong Sphere",
        "type": "Class",
        "original_content": "The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.",
        "relationships": [],
        "original_sparse_score": 60.271094301769,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.",
          "comments": "Closely analyze the specific mistake that is allowing the resource to be exposed, and perform a CWE mapping for that mistake.",
          "reasons": [
            "Frequent Misuse",
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 60.271094301769
          },
          "normalized_scores": {
            "sparse": 0.048216875441415195
          },
          "weighted_scores": {
            "sparse": 0.01928675017656608
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 60.271094301769,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.048216875441415195,
              "weight": 0.4,
              "weighted_score": 0.01928675017656608
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.01928675017656608,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.015429400141252865
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.015429400141252865
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.",
                "comments": "Closely analyze the specific mistake that is allowing the resource to be exposed, and perform a CWE mapping for that mistake.",
                "reasons": [
                  "Frequent Misuse",
                  "Abstraction"
                ]
              },
              "score_after": 0.012343520113002292
            }
          },
          "combined_score": 0.012343520113002292
        }
      },
      "similarity": 0.012343520113002292
    },
    {
      "metadata": {
        "doc_id": "CWE-287",
        "name": "Improper Authentication",
        "type": "Class",
        "original_content": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
        "relationships": [],
        "original_sparse_score": 59.22789149129313,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1390",
              "Comment": "Weak Authentication"
            },
            {
              "CweID": "306",
              "Comment": "Missing Authentication for Critical Function"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 59.22789149129313
          },
          "normalized_scores": {
            "sparse": 0.0473823131930345
          },
          "weighted_scores": {
            "sparse": 0.018952925277213803
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 59.22789149129313,
              "query_max": 123.2454378070533,
              "query_min": 59.22789149129313,
              "normalized_score": 0.0473823131930345,
              "weight": 0.4,
              "weighted_score": 0.018952925277213803
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.018952925277213803,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.015162340221771042
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.015162340221771042
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1390",
                    "Comment": "Weak Authentication"
                  },
                  {
                    "CweID": "306",
                    "Comment": "Missing Authentication for Critical Function"
                  }
                ]
              },
              "score_after": 0.012129872177416835
            }
          },
          "combined_score": 0.012129872177416835
        }
      },
      "similarity": 0.012129872177416835
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-352",
      "CWE-613",
      "CWE-1004",
      "CWE-441",
      "CWE-642",
      "CWE-1275",
      "CWE-79",
      "CWE-346"
    ],
    "critic_additional": [
      "CWE-201"
    ]
  }
}