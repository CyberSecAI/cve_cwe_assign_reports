{
  "cve_id": "CVE-2022-41902",
  "description": "TensorFlow is an open source platform for machine learning. The function MakeGrapplerFunctionItem takes arguments that determine the sizes of inputs and outputs. If the inputs given are greater than or equal to the sizes of the outputs, an out-of-bounds memory read or a crash is triggered. We have patched the issue in GitHub commit a65411a1d69edfb16b25907ffb8f73556ce36bb7. The fix will be included in TensorFlow 2.11.0. We will also cherrypick this commit on TensorFlow 2.8.4, 2.9.3, and 2.10.1.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "out-of-bounds memory read",
    "impact": "crash",
    "vector": "",
    "attacker": "",
    "product": "TensorFlow",
    "version": "before 2.11.0",
    "component": "MakeGrapplerFunctionItem function"
  },
  "reference_content": "Based on the provided content, here's a breakdown of the vulnerability:\n\n**CVE ID:** CVE-2022-41902\n\n**Root Cause:** The vulnerability lies within the `MakeGrapplerFunctionItem` function in `tensorflow/core/grappler/utils/functions.cc`. This function takes input and output sizes as arguments.\n\n**Weakness:** An out-of-bounds memory read or a crash occurs if the provided input sizes are greater than or equal to the sizes of the outputs. This implies that there is a lack of proper bounds checking on input sizes in relation to output sizes.\n\n**Impact:** Exploitation can lead to an out-of-bounds memory read or a crash. This could result in denial of service, and potentially other undefined behaviors if memory read is controllable.\n\n**Attack Vectors:**  The vulnerability can be triggered by providing crafted input arguments to the `MakeGrapplerFunctionItem` function that define larger input sizes compared to the output sizes. This could happen through manipulation of tensorflow models or input data that uses this function.\n\n**Required Attacker Capabilities/Position:** The attacker needs the ability to control the sizes of inputs and outputs provided to the `MakeGrapplerFunctionItem` function, which are arguments to it. This would likely require either a malicious model, or the ability to manipulate how function calls to this method are created.\n\n**Additional Notes:**\n- The issue was discovered through internal fuzzing.\n- The fix was implemented in commit `a65411a1d69edfb16b25907ffb8f73556ce36bb7`, which added a check to ensure that the attribute index is within the range of the input size.\n- Patched versions are 2.8.4, 2.9.3, 2.10.1 and 2.11.0\n- The advisory states that no CWEs are associated with this vulnerability, however it can be generally categorized under CWE-125: Out-of-bounds Read or CWE-787: Out-of-bounds Write\n\nThis information provides more detail than the original CVE description, giving insight into the root cause, impact and mitigation.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {},
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {},
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "85": {
        "cwe_counts": {},
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "80": {
        "cwe_counts": {},
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "75": {
        "cwe_counts": {
          "CWE-617": 2,
          "CWE-476": 1
        },
        "total_samples": 7,
        "distribution": [
          {
            "cwes": [],
            "frequency": 4,
            "proportion": 0.571
          },
          {
            "cwes": [
              "CWE-617"
            ],
            "frequency": 2,
            "proportion": 0.286
          },
          {
            "cwes": [
              "CWE-476"
            ],
            "frequency": 1,
            "proportion": 0.143
          }
        ]
      },
      "70": {
        "cwe_counts": {},
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      }
    },
    "cwe_consensus": "CWE-617",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 1,
        "90": 1,
        "85": 1,
        "80": 1,
        "75": 7,
        "70": 1
      },
      "top_cwes_by_threshold": {
        "95": [],
        "90": [],
        "85": [],
        "80": [],
        "75": [
          [
            "CWE-617",
            2
          ],
          [
            "CWE-476",
            1
          ]
        ],
        "70": []
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 85,
        "cwes": [],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 80,
        "cwes": [],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 75,
        "cwes": [],
        "total": 7,
        "frequency": 4,
        "proportion": 0.571
      },
      {
        "similarity": 75,
        "cwes": [
          "617"
        ],
        "total": 7,
        "frequency": 2,
        "proportion": 0.286
      },
      {
        "similarity": 75,
        "cwes": [
          "476"
        ],
        "total": 7,
        "frequency": 1,
        "proportion": 0.143
      },
      {
        "similarity": 70,
        "cwes": [],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-617",
    "top_cwes": [
      [
        "CWE-617",
        2
      ],
      [
        "CWE-476",
        1
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 12
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-125 | Out-of-bounds Read | 0.95 | Base | Primary | Allowed |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.75 | Base | Secondary | Allowed |\n| CWE-617 | Reachable Assertion | 0.6 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description explicitly mentions an \"**out-of-bounds memory read**\" condition in the `MakeGrapplerFunctionItem` function of TensorFlow. This occurs when input sizes are greater than or equal to output sizes, leading to reading memory outside the intended buffer. CWE-125 (Out-of-bounds Read) directly addresses this weakness, making it the most appropriate primary mapping. The \"CVE Reference Links Content Summary\" further confirms that the root cause involves a lack of proper bounds checking and can be generally categorized as CWE-125. The MITRE mapping guidance for CWE-125 indicates that it's ALLOWED for this type of vulnerability.\n\n  - *Relationship Analysis:* CWE-125 is a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). The relationship clarifies that the out-of-bounds read is a specific type of buffer handling issue. CWE-1284 (Improper Validation of Specified Quantity in Input) is also relevant because the vulnerability arises from a failure to validate the input sizes against the output sizes. The retriever scores also indicated it as a candidate. CWE-617 is also a possible mapping since the out-of-bounds read can cause a crash.\n\n- **Confidence Score:**  \n  - Confidence: 0.95 (High confidence due to direct evidence from the vulnerability description and CVE reference summary, supported by retriever results and MITRE guidance)",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-125 | Out-of-bounds Read | 0.95 | Base | Primary | Allowed |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.75 | Base | Secondary | Allowed |\n| CWE-617 | Reachable Assertion | 0.6 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description explicitly mentions an \"**out-of-bounds memory read**\" condition in the `MakeGrapplerFunctionItem` function of TensorFlow. This occurs when input sizes are greater than or equal to output sizes, leading to reading memory outside the intended buffer. CWE-125 (Out-of-bounds Read) directly addresses this weakness, making it the most appropriate primary mapping. The \"CVE Reference Links Content Summary\" further confirms that the root cause involves a lack of proper bounds checking and can be generally categorized as CWE-125. The MITRE mapping guidance for CWE-125 indicates that it's ALLOWED for this type of vulnerability.\n\n  - *Relationship Analysis:* CWE-125 is a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). The relationship clarifies that the out-of-bounds read is a specific type of buffer handling issue. CWE-1284 (Improper Validation of Specified Quantity in Input) is also relevant because the vulnerability arises from a failure to validate the input sizes against the output sizes. The retriever scores also indicated it as a candidate. CWE-617 is also a possible mapping since the out-of-bounds read can cause a crash.\n\n- **Confidence Score:**  \n  - Confidence: 0.95 (High confidence due to direct evidence from the vulnerability description and CVE reference summary, supported by retriever results and MITRE guidance)",
  "criticism": "Okay, here's a breakdown and critique of the provided CWE analysis, incorporating the full CWE specifications:\n\n**Overall Assessment:**\n\nThe analysis is generally good and arrives at a reasonable primary CWE. The justification is well-written and explains the reasoning behind the chosen CWEs. However, some aspects can be refined for greater accuracy and completeness.\n\n**Detailed Critique:**\n\n**1. Primary CWE: CWE-125 (Out-of-bounds Read)**\n\n*   **Confidence:** 0.95\n*   **Correctness:** Correct and well-justified.\n*   **Justification Strength:** Strong. The vulnerability description directly states \"out-of-bounds memory read.\" The vulnerability is a clear instance of reading data beyond the intended boundaries of a buffer.\n*   **Mitigation Considerations:** The analysis could mention potential mitigations as described in the CWE specifications.\n    *   **Input Validation:** As highlighted by the retriever results.  The most relevant mitigation is rigorous input validation to ensure input sizes are within expected bounds relative to output sizes. The \"accept known good\" input validation strategy is directly applicable.\n    *   **Language Selection:**  While a rewrite in a memory-safe language is a significant undertaking, it's worth mentioning as a potential long-term solution, per the CWE specification.\n*   **CWE-119 Parent Relationship** In general, CWE-119 is not a specific enough mapping. Instead, the CWE specification discourages the use of it and encourages the use of its children instead. This has been done by selecting CWE-125.\n\n**2. Secondary CWE: CWE-1284 (Improper Validation of Specified Quantity in Input)**\n\n*   **Confidence:** 0.75\n*   **Correctness:** Correct and relevant.\n*   **Justification Strength:** The failure to validate the input sizes against the output sizes is a key aspect of the vulnerability. CWE-1284 accurately captures this.\n*   **Mitigation Considerations:** The CWE specification for CWE-1284 emphasizes the importance of assuming all input is malicious and using a strict \"accept known good\" input validation strategy. This should be mentioned explicitly. It is also worth noting that the description indicates this entry is still under development.\n    * An example can be provided here: *Reject any input where the input size is greater or equal than the output size*.\n\n**3. Secondary CWE: CWE-617 (Reachable Assertion)**\n\n*   **Confidence:** 0.6\n*   **Correctness:** Arguable. While an assertion *could* be triggered due to the OOB read (leading to a crash), it's not the fundamental *cause* of the vulnerability.  The vulnerability exists even if there's no assertion. This is more of a potential *consequence* of the OOB read.\n*   **Justification Strength:** Weaker than the others. The connection is more indirect. While a crash is mentioned in the vulnerability description, it's not necessarily due to an assertion.\n*   **Mitigation Considerations:** The mitigation strategies for CWE-617 (making sensitive operations unreachable and performing input validation) are already covered by CWE-125 and CWE-1284. So, it doesn't add significantly to the analysis.\n*   **Alternative:** If a crash is guaranteed, it is more accurate; however, other errors could result.\n\n**Additional Considerations & Suggestions:**\n\n*   **CWE-787 (Out-of-bounds Write):** While the vulnerability is primarily described as an out-of-bounds *read*, there's a possibility that an attacker could leverage the out-of-bounds access to *write* to memory as well, especially if the contents being read are used to make decisions that later impact memory allocation or data handling. If the out-of-bounds read exposes sensitive data that's used to construct a write operation, then CWE-787 would be more strongly warranted. Without this further clarification, it's difficult to justify adding it, but it's something to consider when analyzing the code.\n*   **CWE-824 (Access of Uninitialized Pointer):** The retriever results listed this as a candidate. While it doesn't seem to be directly applicable from the description, it is possible an uninitialized pointer could be exposed due to the out-of-bounds read.\n*   **Chaining:** The analysis could benefit from explicitly mentioning potential chaining. For example:\n    *   \"CWE-1284 can lead to CWE-125.  Improper validation (CWE-1284) allows an attacker to provide input sizes that trigger an out-of-bounds read (CWE-125).\"\n*   **Negative Emphasis:** The analysis could state why certain highly-scored CWEs from the retriever results *weren't* selected. This demonstrates thoroughness. For example, explaining why CWE-476 (NULL Pointer Dereference) isn't the primary CWE. *While a crash might occur, the root cause isn't a NULL pointer dereference, but rather a memory read outside the bounds of the buffer.*\n*   **Context:**  Keep in mind that the best CWE mapping depends on the level of detail known about the vulnerability and the specific goals of the analysis.\n\n**Revised Summary Table (incorporating suggestions):**\n\n| CWE ID  | CWE Name                                      | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes                                                                                                                                                                                                                                                                              |\n| :------ | :-------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| CWE-125 | Out-of-bounds Read                            | 0.95       | Base                    | Primary                       | Allowed. Directly reflects the \"out-of-bounds memory read\" vulnerability. Mitigation: Rigorous input validation and consideration of memory-safe languages.                                                                                                                                              |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.80       | Base                    | Secondary                     | Allowed.  The root cause is the lack of input validation of input sizes relative to output sizes. Mitigation: Strict \"accept known good\" input validation of input sizes. Example: Reject any input where the input size is greater than or equal to the output size.                                          |\n| CWE-617 | Reachable Assertion                            | 0.5       | Base                    | Consequence                     | Allowed. While a crash is possible, it is not guaranteed and may not be caused by an assertion failure.                                                                                                                                                                                                |\n\nBy incorporating these refinements, the analysis becomes more comprehensive, accurate, and actionable.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-125 | Out-of-bounds Read | 0.95 | Base | Primary | Allowed. Directly reflects the \"out-of-bounds memory read\" vulnerability. Mitigation: Rigorous input validation and consideration of memory-safe languages. |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.80 | Base | Secondary | Allowed. The root cause is the lack of input validation of input sizes relative to output sizes. Mitigation: Strict \"accept known good\" input validation of input sizes. Example: Reject any input where the input size is greater than or equal to the output size. |\n| CWE-617 | Reachable Assertion | 0.50 | Base | Consequence | Allowed. While a crash is possible, it is not guaranteed and may not be caused by an assertion failure. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-125 (Out-of-bounds Read)**, which is a specific type of memory error. It is a child of **CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer)**, but choosing **CWE-125** provides a more specific and accurate description of the vulnerability. **CWE-1284 (Improper Validation of Specified Quantity in Input)** can precede **CWE-125**, as the lack of input validation leads to the out-of-bounds read. **CWE-617 (Reachable Assertion)** is a potential consequence of **CWE-125**, but less directly related than **CWE-1284**. The Base abstraction level of **CWE-125**, **CWE-1284**, and **CWE-617** is appropriate for identifying root causes.\n\n```mermaid\ngraph TD\n    cwe125[\"CWE-125: Out-of-bounds Read\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    cwe617[\"CWE-617: Reachable Assertion\"]\n    \n    cwe125 -->|CHILDOF| cwe119\n    cwe1284 -->|CANPRECEDE| cwe125\n    cwe125 -->|CANPRECEDE| cwe617\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe125 primary\n    class cwe119,cwe1284,cwe617 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-1284 (Improper Validation of Specified Quantity in Input)**, where the input sizes are not properly validated against the output sizes. This leads to **CWE-125 (Out-of-bounds Read)**, where the program reads memory outside the intended buffer. This out-of-bounds read can potentially cause a crash or other unexpected behavior, which can manifest as **CWE-617 (Reachable Assertion)** if an assertion is triggered. The root cause is the missing input validation, leading to a memory safety issue and potential denial of service.\n\n## Summary of Analysis\nThe initial analysis and criticism both correctly identified **CWE-125 (Out-of-bounds Read)** as the primary issue, supported by the vulnerability description: \"If the inputs given are greater than or equal to the sizes of the outputs, an **out-of-bounds memory read** or a crash is triggered.\" The relationship analysis helped confirm the specificity of **CWE-125** over its parent, **CWE-119**. The inclusion of **CWE-1284 (Improper Validation of Specified Quantity in Input)** highlights the root cause, and **CWE-617 (Reachable Assertion)** captures a potential consequence. The selected CWEs are at the optimal level of specificity, with **CWE-125** directly addressing the vulnerability and **CWE-1284** explaining the underlying cause. The evidence supports the selection of these CWEs, and the MITRE guidance allows for their use in this context. **CWE-125** is the most specific and accurately reflects the vulnerability, while **CWE-1284** explains why the out-of-bounds read occurred and can be mitigated.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-824",
        "name": "Access of Uninitialized Pointer",
        "type": "Base",
        "original_content": "The product accesses or uses a pointer that has not been initialized.",
        "relationships": [],
        "original_sparse_score": 668.1317334635628,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.3689917903174058,
            "sparse": 668.1317334635628,
            "graph": 2.771032115525189
          },
          "normalized_scores": {
            "dense": 0.3689917903174058,
            "sparse": 0.5345053867708502,
            "graph": 0.9896543269732818
          },
          "weighted_scores": {
            "dense": 0.12914712661109204,
            "sparse": 0.2138021547083401,
            "graph": 0.24741358174332045
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.3689917903174058,
              "query_max": 0.39490927219953265,
              "query_min": 0.32695459834661744,
              "normalized_score": 0.3689917903174058,
              "weight": 0.35,
              "weighted_score": 0.12914712661109204
            },
            "sparse": {
              "raw_score": 668.1317334635628,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.5345053867708502,
              "weight": 0.4,
              "weighted_score": 0.2138021547083401
            },
            "graph": {
              "raw_score": 2.771032115525189,
              "query_max": 2.771032115525189,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.9896543269732818,
              "weight": 0.25,
              "weighted_score": 0.24741358174332045
            }
          },
          "contribution_percentages": {
            "dense": 21.875889337125248,
            "sparse": 36.21538007982964,
            "graph": 41.9087305830451
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5903628630627527,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7674717219815784
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7674717219815784
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.8442188941797364
            }
          },
          "combined_score": 0.8442188941797364
        }
      },
      "similarity": 0.8442188941797364
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 652.8443194954207,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.35723772834060796,
            "sparse": 652.8443194954207,
            "graph": 2.762067596855058
          },
          "normalized_scores": {
            "dense": 0.35723772834060796,
            "sparse": 0.5222754555963366,
            "graph": 0.9864527131625207
          },
          "weighted_scores": {
            "dense": 0.12503320491921277,
            "sparse": 0.20891018223853464,
            "graph": 0.24661317829063018
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.35723772834060796,
              "query_max": 0.39490927219953265,
              "query_min": 0.32695459834661744,
              "normalized_score": 0.35723772834060796,
              "weight": 0.35,
              "weighted_score": 0.12503320491921277
            },
            "sparse": {
              "raw_score": 652.8443194954207,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.5222754555963366,
              "weight": 0.4,
              "weighted_score": 0.20891018223853464
            },
            "graph": {
              "raw_score": 2.762067596855058,
              "query_max": 2.771032115525189,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.9864527131625207,
              "weight": 0.25,
              "weighted_score": 0.24661317829063018
            }
          },
          "contribution_percentages": {
            "dense": 21.536782522241683,
            "sparse": 35.98446640202723,
            "graph": 42.4787510757311
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5805565654483775,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7547235350828908
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7547235350828908
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.83019588859118
            }
          },
          "combined_score": 0.83019588859118
        }
      },
      "similarity": 0.83019588859118
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 634.6052353427913,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.39490927219953265,
            "sparse": 634.6052353427913,
            "graph": 1.5756939778571106
          },
          "normalized_scores": {
            "dense": 0.39490927219953265,
            "sparse": 0.507684188274233,
            "graph": 0.5627478492346824
          },
          "weighted_scores": {
            "dense": 0.13821824526983642,
            "sparse": 0.20307367530969322,
            "graph": 0.1406869623086706
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.39490927219953265,
              "query_max": 0.39490927219953265,
              "query_min": 0.32695459834661744,
              "normalized_score": 0.39490927219953265,
              "weight": 0.35,
              "weighted_score": 0.13821824526983642
            },
            "sparse": {
              "raw_score": 634.6052353427913,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.507684188274233,
              "weight": 0.4,
              "weighted_score": 0.20307367530969322
            },
            "graph": {
              "raw_score": 1.5756939778571106,
              "query_max": 2.771032115525189,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.5627478492346824,
              "weight": 0.25,
              "weighted_score": 0.1406869623086706
            }
          },
          "contribution_percentages": {
            "dense": 28.6772408868995,
            "sparse": 42.13331382752679,
            "graph": 29.189445285573708
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.48197888288820023,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6265725477546603
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6265725477546603
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6892298025301264
            }
          },
          "combined_score": 0.6892298025301264
        }
      },
      "similarity": 0.6892298025301264
    },
    {
      "metadata": {
        "doc_id": "CWE-681",
        "name": "Incorrect Conversion between Numeric Types",
        "type": "Base",
        "original_content": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
        "relationships": [],
        "original_sparse_score": 594.8416047515516,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.3627275814924412,
            "sparse": 594.8416047515516,
            "graph": 1.572953352473953
          },
          "normalized_scores": {
            "dense": 0.3627275814924412,
            "sparse": 0.4758732838012413,
            "graph": 0.5617690544549833
          },
          "weighted_scores": {
            "dense": 0.1269546535223544,
            "sparse": 0.19034931352049653,
            "graph": 0.14044226361374582
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.3627275814924412,
              "query_max": 0.39490927219953265,
              "query_min": 0.32695459834661744,
              "normalized_score": 0.3627275814924412,
              "weight": 0.35,
              "weighted_score": 0.1269546535223544
            },
            "sparse": {
              "raw_score": 594.8416047515516,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.4758732838012413,
              "weight": 0.4,
              "weighted_score": 0.19034931352049653
            },
            "graph": {
              "raw_score": 1.572953352473953,
              "query_max": 2.771032115525189,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.5617690544549833,
              "weight": 0.25,
              "weighted_score": 0.14044226361374582
            }
          },
          "contribution_percentages": {
            "dense": 27.734723962718196,
            "sparse": 41.58402642605209,
            "graph": 30.681249611229727
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4577462306565967,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5950700998535757
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5950700998535757
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6545771098389334
            }
          },
          "combined_score": 0.6545771098389334
        }
      },
      "similarity": 0.6545771098389334
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 510.0945202642876,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 510.0945202642876,
            "graph": 2.7196000000000002
          },
          "normalized_scores": {
            "sparse": 0.40807561621143007,
            "graph": 0.9712857142857144
          },
          "weighted_scores": {
            "sparse": 0.16323024648457204,
            "graph": 0.2428214285714286
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 510.0945202642876,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.40807561621143007,
              "weight": 0.4,
              "weighted_score": 0.16323024648457204
            },
            "graph": {
              "raw_score": 2.7196000000000002,
              "query_max": 2.771032115525189,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.9712857142857144,
              "weight": 0.25,
              "weighted_score": 0.2428214285714286
            }
          },
          "contribution_percentages": {
            "sparse": 40.19937769301411,
            "graph": 59.80062230698589
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.40605167505600065,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5278671775728009
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5278671775728009
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.580653895330081
            }
          },
          "combined_score": 0.580653895330081
        }
      },
      "similarity": 0.580653895330081
    },
    {
      "metadata": {
        "doc_id": "CWE-476",
        "name": "NULL Pointer Dereference",
        "type": "Base",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "relationships": [],
        "original_sparse_score": 535.4969364220717,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 535.4969364220717,
            "graph": 1.7680000000000005
          },
          "normalized_scores": {
            "sparse": 0.4283975491376574,
            "graph": 0.6314285714285717
          },
          "weighted_scores": {
            "sparse": 0.17135901965506295,
            "graph": 0.15785714285714292
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 535.4969364220717,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.4283975491376574,
              "weight": 0.4,
              "weighted_score": 0.17135901965506295
            },
            "graph": {
              "raw_score": 1.7680000000000005,
              "query_max": 2.771032115525189,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.6314285714285717,
              "weight": 0.25,
              "weighted_score": 0.15785714285714292
            }
          },
          "contribution_percentages": {
            "sparse": 52.05060965034173,
            "graph": 47.949390349658266
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.32921616251220587,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.42798101126586763
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.42798101126586763
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4707791123924544
            }
          },
          "combined_score": 0.4707791123924544
        }
      },
      "similarity": 0.4707791123924544
    },
    {
      "metadata": {
        "doc_id": "CWE-617",
        "name": "Reachable Assertion",
        "type": "Base",
        "original_content": "The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary.",
        "relationships": [],
        "original_sparse_score": 567.2330287535822,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.3291091199295031,
            "sparse": 567.2330287535822
          },
          "normalized_scores": {
            "dense": 0.3291091199295031,
            "sparse": 0.45378642300286576
          },
          "weighted_scores": {
            "dense": 0.11518819197532608,
            "sparse": 0.1815145692011463
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.3291091199295031,
              "query_max": 0.39490927219953265,
              "query_min": 0.32695459834661744,
              "normalized_score": 0.3291091199295031,
              "weight": 0.35,
              "weighted_score": 0.11518819197532608
            },
            "sparse": {
              "raw_score": 567.2330287535822,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.45378642300286576,
              "weight": 0.4,
              "weighted_score": 0.1815145692011463
            }
          },
          "contribution_percentages": {
            "dense": 38.82275699713311,
            "sparse": 61.17724300286689
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2967027611764724,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3857135895294141
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3857135895294141
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.42428494848235554
            }
          },
          "combined_score": 0.42428494848235554
        }
      },
      "similarity": 0.42428494848235554
    },
    {
      "metadata": {
        "doc_id": "CWE-1286",
        "name": "Improper Validation of Syntactic Correctness of Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.",
        "relationships": [],
        "original_sparse_score": 542.0956978022448,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.33400599972090256,
            "sparse": 542.0956978022448
          },
          "normalized_scores": {
            "dense": 0.33400599972090256,
            "sparse": 0.43367655824179585
          },
          "weighted_scores": {
            "dense": 0.11690209990231588,
            "sparse": 0.17347062329671836
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.33400599972090256,
              "query_max": 0.39490927219953265,
              "query_min": 0.32695459834661744,
              "normalized_score": 0.33400599972090256,
              "weight": 0.35,
              "weighted_score": 0.11690209990231588
            },
            "sparse": {
              "raw_score": 542.0956978022448,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.43367655824179585,
              "weight": 0.4,
              "weighted_score": 0.17347062329671836
            }
          },
          "contribution_percentages": {
            "dense": 40.25932553664348,
            "sparse": 59.74067446335653
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.29037272319903423,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3774845401587445
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3774845401587445
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.415232994174619
            }
          },
          "combined_score": 0.415232994174619
        }
      },
      "similarity": 0.415232994174619
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 517.3013698228652,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.34350620907065815,
            "sparse": 517.3013698228652
          },
          "normalized_scores": {
            "dense": 0.34350620907065815,
            "sparse": 0.4138410958582922
          },
          "weighted_scores": {
            "dense": 0.12022717317473035,
            "sparse": 0.16553643834331688
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.34350620907065815,
              "query_max": 0.39490927219953265,
              "query_min": 0.32695459834661744,
              "normalized_score": 0.34350620907065815,
              "weight": 0.35,
              "weighted_score": 0.12022717317473035
            },
            "sparse": {
              "raw_score": 517.3013698228652,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.4138410958582922,
              "weight": 0.4,
              "weighted_score": 0.16553643834331688
            }
          },
          "contribution_percentages": {
            "dense": 42.072247245215635,
            "sparse": 57.92775275478436
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.28576361151804724,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.37149269497346143
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.37149269497346143
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.4086419644708076
            }
          },
          "combined_score": 0.4086419644708076
        }
      },
      "similarity": 0.4086419644708076
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 582.4277600523219,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.331765901280458,
            "sparse": 582.4277600523219
          },
          "normalized_scores": {
            "dense": 0.331765901280458,
            "sparse": 0.46594220804185754
          },
          "weighted_scores": {
            "dense": 0.1161180654481603,
            "sparse": 0.18637688321674303
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.331765901280458,
              "query_max": 0.39490927219953265,
              "query_min": 0.32695459834661744,
              "normalized_score": 0.331765901280458,
              "weight": 0.35,
              "weighted_score": 0.1161180654481603
            },
            "sparse": {
              "raw_score": 582.4277600523219,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.46594220804185754,
              "weight": 0.4,
              "weighted_score": 0.18637688321674303
            }
          },
          "contribution_percentages": {
            "dense": 38.38677834478258,
            "sparse": 61.61322165521742
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.30249494866490334,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.362993938397884
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.362993938397884
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.39929333223767244
            }
          },
          "combined_score": 0.39929333223767244
        }
      },
      "similarity": 0.39929333223767244
    },
    {
      "metadata": {
        "doc_id": "CWE-663",
        "name": "Use of a Non-reentrant Function in a Concurrent Context",
        "type": "Base",
        "original_content": "The product calls a non-reentrant function in a concurrent context in which a competing code sequence (e.g. thread or signal handler) may have an opportunity to call the same function or otherwise influence its state.",
        "relationships": [],
        "original_sparse_score": 494.46321516045293,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.3448677925238895,
            "sparse": 494.46321516045293
          },
          "normalized_scores": {
            "dense": 0.3448677925238895,
            "sparse": 0.39557057212836233
          },
          "weighted_scores": {
            "dense": 0.12070372738336131,
            "sparse": 0.15822822885134494
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.3448677925238895,
              "query_max": 0.39490927219953265,
              "query_min": 0.32695459834661744,
              "normalized_score": 0.3448677925238895,
              "weight": 0.35,
              "weighted_score": 0.12070372738336131
            },
            "sparse": {
              "raw_score": 494.46321516045293,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.39557057212836233,
              "weight": 0.4,
              "weighted_score": 0.15822822885134494
            }
          },
          "contribution_percentages": {
            "dense": 43.27353846892883,
            "sparse": 56.72646153107118
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.27893195623470624,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3626115431051181
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3626115431051181
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.39887269741563
            }
          },
          "combined_score": 0.39887269741563
        }
      },
      "similarity": 0.39887269741563
    },
    {
      "metadata": {
        "doc_id": "CWE-843",
        "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
        "type": "Base",
        "original_content": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.",
        "relationships": [],
        "original_sparse_score": 496.00570046552826,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.33084789677578125,
            "sparse": 496.00570046552826
          },
          "normalized_scores": {
            "dense": 0.33084789677578125,
            "sparse": 0.3968045603724226
          },
          "weighted_scores": {
            "dense": 0.11579676387152343,
            "sparse": 0.15872182414896907
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.33084789677578125,
              "query_max": 0.39490927219953265,
              "query_min": 0.32695459834661744,
              "normalized_score": 0.33084789677578125,
              "weight": 0.35,
              "weighted_score": 0.11579676387152343
            },
            "sparse": {
              "raw_score": 496.00570046552826,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.3968045603724226,
              "weight": 0.4,
              "weighted_score": 0.15872182414896907
            }
          },
          "contribution_percentages": {
            "dense": 42.1817570556932,
            "sparse": 57.81824294430681
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2745185880204925,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3568741644266403
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3568741644266403
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3925615808693043
            }
          },
          "combined_score": 0.3925615808693043
        }
      },
      "similarity": 0.3925615808693043
    },
    {
      "metadata": {
        "doc_id": "CWE-415",
        "name": "Double Free",
        "type": "Variant",
        "original_content": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
        "relationships": [],
        "original_sparse_score": 516.0798403938797,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.35983909725701535,
            "sparse": 516.0798403938797
          },
          "normalized_scores": {
            "dense": 0.35983909725701535,
            "sparse": 0.4128638723151038
          },
          "weighted_scores": {
            "dense": 0.12594368403995537,
            "sparse": 0.16514554892604152
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.35983909725701535,
              "query_max": 0.39490927219953265,
              "query_min": 0.32695459834661744,
              "normalized_score": 0.35983909725701535,
              "weight": 0.35,
              "weighted_score": 0.12594368403995537
            },
            "sparse": {
              "raw_score": 516.0798403938797,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.4128638723151038,
              "weight": 0.4,
              "weighted_score": 0.16514554892604152
            }
          },
          "contribution_percentages": {
            "dense": 43.266349207312416,
            "sparse": 56.7336507926876
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.29108923296599687,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3493070795591962
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3493070795591962
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.38423778751511584
            }
          },
          "combined_score": 0.38423778751511584
        }
      },
      "similarity": 0.38423778751511584
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 549.6711169909236,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 549.6711169909236
          },
          "normalized_scores": {
            "sparse": 0.4397368935927389
          },
          "weighted_scores": {
            "sparse": 0.17589475743709557
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 549.6711169909236,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.4397368935927389,
              "weight": 0.4,
              "weighted_score": 0.17589475743709557
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.17589475743709557,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.22866318466822425
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.22866318466822425
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2515295031350467
            }
          },
          "combined_score": 0.2515295031350467
        }
      },
      "similarity": 0.2515295031350467
    },
    {
      "metadata": {
        "doc_id": "CWE-835",
        "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "type": "Base",
        "original_content": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
        "relationships": [],
        "original_sparse_score": 493.9195911739058,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 493.9195911739058
          },
          "normalized_scores": {
            "sparse": 0.39513567293912466
          },
          "weighted_scores": {
            "sparse": 0.15805426917564988
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 493.9195911739058,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.39513567293912466,
              "weight": 0.4,
              "weighted_score": 0.15805426917564988
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.15805426917564988,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.20547054992834485
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.20547054992834485
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.22601760492117934
            }
          },
          "combined_score": 0.22601760492117934
        }
      },
      "similarity": 0.22601760492117934
    },
    {
      "metadata": {
        "doc_id": "CWE-95",
        "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. \"eval\").",
        "relationships": [],
        "original_sparse_score": 529.1325097260359,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 529.1325097260359
          },
          "normalized_scores": {
            "sparse": 0.4233060077808287
          },
          "weighted_scores": {
            "sparse": 0.1693224031123315
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 529.1325097260359,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.4233060077808287,
              "weight": 0.4,
              "weighted_score": 0.1693224031123315
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.1693224031123315,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.2031868837347978
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2031868837347978
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2235055721082776
            }
          },
          "combined_score": 0.2235055721082776
        }
      },
      "similarity": 0.2235055721082776
    },
    {
      "metadata": {
        "doc_id": "CWE-770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [],
        "original_sparse_score": 453.06038804271367,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 453.06038804271367
          },
          "normalized_scores": {
            "sparse": 0.3624483104341709
          },
          "weighted_scores": {
            "sparse": 0.14497932417366838
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 453.06038804271367,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.3624483104341709,
              "weight": 0.4,
              "weighted_score": 0.14497932417366838
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.14497932417366838,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.18847312142576889
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.18847312142576889
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.20732043356834579
            }
          },
          "combined_score": 0.20732043356834579
        }
      },
      "similarity": 0.20732043356834579
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 449.01578933912066,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 449.01578933912066
          },
          "normalized_scores": {
            "sparse": 0.3592126314712965
          },
          "weighted_scores": {
            "sparse": 0.1436850525885186
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 449.01578933912066,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.3592126314712965,
              "weight": 0.4,
              "weighted_score": 0.1436850525885186
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.1436850525885186,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.18679056836507418
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.18679056836507418
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.20546962520158163
            }
          },
          "combined_score": 0.20546962520158163
        }
      },
      "similarity": 0.20546962520158163
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 533.1866953712225,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 533.1866953712225
          },
          "normalized_scores": {
            "sparse": 0.42654935629697804
          },
          "weighted_scores": {
            "sparse": 0.17061974251879122
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 533.1866953712225,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.42654935629697804,
              "weight": 0.4,
              "weighted_score": 0.17061974251879122
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.17061974251879122,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.13649579401503298
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13649579401503298
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.14332058371578463
            }
          },
          "combined_score": 0.14332058371578463
        }
      },
      "similarity": 0.14332058371578463
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 499.77942845515867,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 499.77942845515867
          },
          "normalized_scores": {
            "sparse": 0.39982354276412696
          },
          "weighted_scores": {
            "sparse": 0.15992941710565078
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 499.77942845515867,
              "query_max": 668.1317334635628,
              "query_min": 449.01578933912066,
              "normalized_score": 0.39982354276412696,
              "weight": 0.4,
              "weighted_score": 0.15992941710565078
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.15992941710565078,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.12794353368452063
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.12794353368452063
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.10235482694761651
            }
          },
          "combined_score": 0.10235482694761651
        }
      },
      "similarity": 0.10235482694761651
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-119",
      "CWE-617",
      "CWE-1284",
      "CWE-125"
    ],
    "critic_additional": [
      "CWE-824",
      "CWE-476",
      "CWE-787"
    ]
  }
}