{
  "cve_id": "CVE-2022-35109",
  "description": "SWFTools commit 772e55a2 was discovered to contain a heap-buffer overflow via draw_stroke at /gfxpoly/stroke.c.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "heap-buffer overflow",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "SWFTools",
    "version": "commit 772e55a2",
    "component": "draw_stroke at /gfxpoly/stroke.c"
  },
  "reference_content": "The provided content describes multiple vulnerabilities found in `swftools`, specifically in the `pdf2swf` component. Here's a breakdown of each:\n\n**1. Heap Buffer Overflow**\n\n*   **Root Cause:** A heap buffer overflow occurs in the `draw_stroke` function within `stroke.c`.\n*   **Vulnerability:** The `draw_stroke` function attempts to write 8 bytes to a memory location that is outside of the allocated buffer, resulting in a heap overflow.\n*   **Impact:** Memory corruption and potential crash of the `pdf2swf` application.\n*   **Attack Vector:** Maliciously crafted PDF file that triggers the vulnerable code path during processing.\n*   **Required Capabilities:** The attacker needs to be able to provide a malicious PDF file to the `pdf2swf` tool.\n*   **Technical Details:**\n    *   The crash occurs at `stroke.c:207:17` in `draw_stroke`.\n    *   The overflow writes 8 bytes at address `0x607000000690`, which is outside the 80-byte region allocated at `0x607000000640`.\n    *   The memory is allocated at `stroke.c:192:26` in the same `draw_stroke` function.\n    *   The vulnerable command to reproduce the issue is: `./pdf2swf -G -f -t [sample file] -o /dev/null` with the supplied sample file.\n\n**2. Stack Buffer Overflow (Multiple Instances)**\n\n*   **Root Cause:** Stack buffer overflows occur in multiple locations, primarily due to excessive recursion or uncontrolled string manipulation.\n*   **Vulnerability:** The stack overflows occur while allocating memory for stack trace, copying strings, and during vfprintf calls in different contexts.\n*   **Impact:** Application crash due to stack exhaustion.\n*   **Attack Vector:** Maliciously crafted PDF files that lead to deep recursion, large string copies, or cause errors that trigger vfprintf.\n*   **Required Capabilities:** The attacker needs to be able to provide a malicious PDF file to the `pdf2swf` tool.\n*   **Technical Details:**\n    *   **Instance 1 (`id407_stack_overflow_getcurrentthread.zip`):** Stack overflow during stack trace allocation via `__sanitizer::StackDepotNode::hash`, triggered within the `Parser::getObj` function.\n    *  **Instance 2 (`id465_stack_overflow_buffered_vfprintf.zip`):** Stack overflow occurs within the `vfprintf` function, due to an error in parsing PDF objects using `Parser::getObj`.\n    *   **Instance 3 (`id479_stack_overflow___asanAllocatorAllocate.zip`):** Stack overflow occurs during ASan's stack trace allocation within the `__asan::Allocator::QuarantineChunk` function called through the free operation during object parsing.\n    *   The common factor is that the overflow is triggered during PDF parsing and related operations like memory allocation/deallocation and stack trace capture.\n    *   The vulnerable command to reproduce the issue is: `./pdf2swf -G -f -t [sample file] -o /dev/null` with the respective sample files.\n\n**3. Memory Leak**\n\n*   **Root Cause:** Memory is allocated in `rfx_alloc` but not freed, leading to a memory leak.\n*   **Vulnerability:** Unreleased allocated memory in `rfx_alloc`.\n*   **Impact:** Gradual memory consumption leading to performance degradation or potential resource exhaustion.\n*   **Attack Vector:** Maliciously crafted PDF files that trigger the allocation without the corresponding free.\n*   **Required Capabilities:** The attacker needs to be able to provide a malicious PDF file to the `pdf2swf` tool.\n*  **Technical Details:**\n    *   Leak of 96 bytes in 2 objects, allocated via `rfx_alloc`\n    *   LeakSanitizer reports the leak detected, specifically in allocations in `rfx_alloc`.\n    *   The vulnerable command to reproduce the issue is: `./pdf2swf -G -f -t [sample file] -o /dev/null` with the supplied sample file.\n\n**4. SEGV (Segmentation Fault)**\n\n*   **Root Cause:** A segmentation fault occurs within the `DCTStream::getChar()` function, likely due to an invalid memory access when reading from a stream.\n*   **Vulnerability:** Attempt to read from an invalid memory address.\n*   **Impact:** Application crash.\n*   **Attack Vector:** Maliciously crafted PDF files that cause the `DCTStream::getChar()` function to attempt to access invalid memory.\n*   **Required Capabilities:** The attacker needs to be able to provide a malicious PDF file to the `pdf2swf` tool.\n*  **Technical Details:**\n    *   The crash occurs in `DCTStream::getChar()` at `Stream.cc:2048:9`\n    *   The segmentation fault occurs when reading from a potentially corrupted or invalid data stream.\n    *   The vulnerable command to reproduce the issue is: `./pdf2swf -G -f -t [sample file] -o /dev/null` with the supplied sample file.\n\nIn summary, the report identifies a range of vulnerabilities (heap overflow, stack overflows, memory leak, and segmentation fault) in `swftools`, particularly in `pdf2swf`, when processing maliciously crafted PDF files. The vulnerabilities can lead to application crashes, resource exhaustion, or memory corruption.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {
          "CWE-787": 1
        },
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {
          "CWE-787": 1
        },
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "85": {
        "cwe_counts": {
          "CWE-787": 1
        },
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "80": {
        "cwe_counts": {
          "CWE-787": 5,
          "CWE-416": 1
        },
        "total_samples": 6,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 5,
            "proportion": 0.833
          },
          {
            "cwes": [
              "CWE-416"
            ],
            "frequency": 1,
            "proportion": 0.167
          }
        ]
      },
      "75": {
        "cwe_counts": {
          "CWE-787": 8,
          "CWE-416": 1
        },
        "total_samples": 9,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 8,
            "proportion": 0.889
          },
          {
            "cwes": [
              "CWE-416"
            ],
            "frequency": 1,
            "proportion": 0.111
          }
        ]
      },
      "70": {
        "cwe_counts": {
          "CWE-787": 8,
          "CWE-754": 1
        },
        "total_samples": 9,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 8,
            "proportion": 0.889
          },
          {
            "cwes": [
              "CWE-754"
            ],
            "frequency": 1,
            "proportion": 0.111
          }
        ]
      }
    },
    "cwe_consensus": "CWE-787",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 1,
        "90": 1,
        "85": 1,
        "80": 6,
        "75": 9,
        "70": 9
      },
      "top_cwes_by_threshold": {
        "95": [
          [
            "CWE-787",
            1
          ]
        ],
        "90": [
          [
            "CWE-787",
            1
          ]
        ],
        "85": [
          [
            "CWE-787",
            1
          ]
        ],
        "80": [
          [
            "CWE-787",
            5
          ],
          [
            "CWE-416",
            1
          ]
        ],
        "75": [
          [
            "CWE-787",
            8
          ],
          [
            "CWE-416",
            1
          ]
        ],
        "70": [
          [
            "CWE-787",
            8
          ],
          [
            "CWE-754",
            1
          ]
        ]
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [
          "787"
        ],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [
          "787"
        ],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 85,
        "cwes": [
          "787"
        ],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 80,
        "cwes": [
          "787"
        ],
        "total": 6,
        "frequency": 5,
        "proportion": 0.833
      },
      {
        "similarity": 80,
        "cwes": [
          "416"
        ],
        "total": 6,
        "frequency": 1,
        "proportion": 0.167
      },
      {
        "similarity": 75,
        "cwes": [
          "787"
        ],
        "total": 9,
        "frequency": 8,
        "proportion": 0.889
      },
      {
        "similarity": 75,
        "cwes": [
          "416"
        ],
        "total": 9,
        "frequency": 1,
        "proportion": 0.111
      },
      {
        "similarity": 70,
        "cwes": [
          "787"
        ],
        "total": 9,
        "frequency": 8,
        "proportion": 0.889
      },
      {
        "similarity": 70,
        "cwes": [
          "754"
        ],
        "total": 9,
        "frequency": 1,
        "proportion": 0.111
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-787",
    "top_cwes": [
      [
        "CWE-787",
        24
      ],
      [
        "CWE-416",
        2
      ],
      [
        "CWE-754",
        1
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 27
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Write What Where Condition | 1.0 | Base | Allowed | Primary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states a \"**heap-buffer overflow**\" in the `draw_stroke` function at `/gfxpoly/stroke.c`. The CVE Reference Links Content Summary confirms that the `draw_stroke` function attempts to write 8 bytes outside of the allocated buffer, which aligns precisely with CWE-787 (Write What Where Condition). The description details the exact location of the overflow in the code (stroke.c:207:17) and how to reproduce the vulnerability.\n  \n  - *Relationship Analysis:* CWE-787 is a base level CWE, and is a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). It describes writing data past the end, or before the beginning, of the intended buffer.\n\n- **Confidence Score:**  \n  - Confidence: 1.0 (High evidence from technical description and CVE reference materials)",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Write What Where Condition | 1.0 | Base | Allowed | Primary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states a \"**heap-buffer overflow**\" in the `draw_stroke` function at `/gfxpoly/stroke.c`. The CVE Reference Links Content Summary confirms that the `draw_stroke` function attempts to write 8 bytes outside of the allocated buffer, which aligns precisely with CWE-787 (Write What Where Condition). The description details the exact location of the overflow in the code (stroke.c:207:17) and how to reproduce the vulnerability.\n  \n  - *Relationship Analysis:* CWE-787 is a base level CWE, and is a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). It describes writing data past the end, or before the beginning, of the intended buffer.\n\n- **Confidence Score:**  \n  - Confidence: 1.0 (High evidence from technical description and CVE reference materials)",
  "criticism": "Okay, let's review the analysis of the SWFTools heap-buffer overflow vulnerability (and the associated findings) with the full CWE specifications in mind.\n\n**Overall Assessment:**\n\nThe primary CWE mapping to `CWE-787: Out-of-bounds Write` is **correct and well-justified.** The provided evidence from the vulnerability description and CVE reference links strongly supports this classification. The analysis demonstrates a clear understanding of the vulnerability and its alignment with the CWE definition. The high confidence score (1.0) is also appropriate given the strong evidence.\n\n**Detailed Review:**\n\n1.  **CWE-787 Mapping:**\n\n    *   **Strengths:** The analysis clearly articulates why `CWE-787` is the correct choice.  It correctly identifies that the `draw_stroke` function is writing data past the end of an allocated buffer. The explanation about the relationship of `CWE-787` to its parent, `CWE-119`, is helpful. The example CVEs provided for CWE-119 and CWE-787 are also useful for providing additional context.\n    *   **Potential Improvements:** While the justification is good, it could benefit from explicitly stating why *other* potential CWEs were ruled out. For example, it could briefly mention why `CWE-125` (Out-of-bounds Read) isn't applicable, since the problem is a *write*, not a *read*. This adds even more robustness to the analysis. Also could consider mentioning that while `CWE-122` (Heap-based Buffer Overflow) is more specific it is a 'Variant' level rather than 'Base' level CWE, so `CWE-787` is more appropriate.\n\n2.  **Retriever Results:**\n\n    *   The retriever results are helpful in showcasing similar CWEs and how they relate to each other.\n    *   It is important to note that while the retriever results can provide insight, it's crucial not to rely on them exclusively. Always prioritize a thorough understanding of the vulnerability and a careful review of the CWE definitions.\n    *   The retriever results include a few entries worth discussing:\n        *   `CWE-193: Off-by-one Error`: Could be related to the root cause, but not the direct effect of the vulnerability.\n        *   `CWE-125: Out-of-bounds Read`: As stated above, it is important to emphasize why it is a Write, and not a Read.\n        *   `CWE-190: Integer Overflow or Wraparound`: Could be related to how the buffer size is calculated, but based on the details provided, that is not the case.\n        *   `CWE-122: Heap-based Buffer Overflow`: This is a *variant* of `CWE-787` and might be considered, but mapping to the base class is generally preferred unless the variant provides significantly more specific and relevant information.\n\n3.  **CWE Specification Considerations (Mitigations):**\n\n    *   The analysis doesn't explicitly discuss the mitigations suggested by the CWE specifications, but it's implied.\n    *   **Recommendation:** It would strengthen the analysis to briefly discuss potential mitigations in the context of this specific vulnerability. For example:\n        *   \"Mitigations for `CWE-787` include using safer languages with automatic memory management or employing libraries with built-in buffer overflow protection. In the context of SWFTools, this might involve refactoring the `draw_stroke` function to use safer memory handling techniques or using compiler flags that provide buffer overflow detection.\"\n        *   Mentioning compiler-level defenses (like /GS in Visual Studio or FORTIFY_SOURCE in GCC) would also be relevant.\n        *   The \"input validation\" strategies in CWE-125's mitigations could be mentioned, highlighting that properly validating the input data stream *before* it reaches the vulnerable function might prevent the overflow from occurring in the first place.  This connects to the broader picture of defense in depth.\n\n4.  **CWE Specification Considerations (Mapping Guidance):**\n\n    *   The analysis appropriately follows the mapping guidance. `CWE-787` is a base-level CWE and is appropriate for mapping to the root cause of this vulnerability.\n    *   The usage notes for CWE-119 correctly discourage its usage when lower-level CWEs like CWE-787 are applicable.\n\n5.  **Other Vulnerabilities Identified:**\n\n    *   The report also mentions Stack Buffer Overflows, Memory Leaks, and Segmentation Faults. It is important to perform the same level of detailed analysis and CWE mapping for each of these to understand the root cause and the best way to mitigate it.\n\n**Recommendations for Improvement:**\n\n*   **Explicitly Rule Out Alternatives:** Briefly explain why other plausible CWEs were *not* chosen.\n*   **Discuss Mitigations:**  Include a short section discussing potential mitigations from the CWE specifications in the context of the vulnerability.\n*   **Detailed Analysis of other Vulnerabilities:** Provide detailed analysis of other vulnerabilities, such as Stack Buffer Overflows, Memory Leaks, and Segmentation Faults.\n\nBy incorporating these suggestions, the analysis can be made even more comprehensive and useful. However, the current analysis is already of high quality and demonstrates a good understanding of both the vulnerability and the CWE framework.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Out-of-bounds Write | 1.0 | Base | Allowed | Primary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship considered was the parent-child relationship between CWE-787 (**Out-of-bounds Write**) and CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). CWE-787 is a child of CWE-119, offering a more specific description of the buffer overflow. The base level of abstraction for CWE-787 is optimal, as it directly addresses the **rootcause** without being overly general (like its parent, CWE-119) or excessively specific (like a variant).\n\n```mermaid\ngraph TD\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    \n    cwe787 -->|CHILDOF| cwe119\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe787 primary\n    class cwe119 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with the `draw_stroke` function attempting to write data beyond the allocated buffer's boundaries, directly resulting in a **CWE-787 (Out-of-bounds Write)**. This leads to a heap-based buffer overflow, potentially causing corruption of other data structures on the heap. The final impact can range from application crashes to arbitrary code execution if the overwritten memory contains executable code or function pointers.\n\n## Summary of Analysis\nThe initial analysis correctly identified **CWE-787 (Out-of-bounds Write)** as the primary CWE. The vulnerability description explicitly mentions a \"**heap-buffer overflow**\" in the `draw_stroke` function, with confirmation from CVE reference links that the function attempts to write 8 bytes outside the allocated buffer. This aligns perfectly with the definition of **CWE-787**.\n\nThe criticism was valuable in suggesting that other CWEs, such as CWE-125 (Out-of-bounds Read) and CWE-122 (Heap-based Buffer Overflow), be explicitly ruled out. While CWE-122 is more specific (Heap-based), it's a Variant, and the base class CWE-787 is therefore the preferred choice. The suggestion to discuss potential mitigations from the CWE specifications was also a good point. Mitigations for **CWE-787** could include using safer languages or libraries with built-in buffer overflow protection, or refactoring the `draw_stroke` function to use safer memory handling techniques.\n\nThe final decision to classify this vulnerability as **CWE-787 (Out-of-bounds Write)** is well-justified and at the optimal level of specificity. The evidence from the vulnerability description, combined with the understanding of CWE relationships and mitigations, provides a high level of confidence in this assessment. The analysis takes into account the retriever results, considering similar CWEs such as `CWE-193`, `CWE-125`, `CWE-190`, and `CWE-122`, and appropriately rules them out or explains their relationship to the primary CWE.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 140.04564939538076,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4870560442767957,
            "sparse": 140.04564939538076,
            "graph": 2.5522250016317787
          },
          "normalized_scores": {
            "dense": 0.4870560442767957,
            "sparse": 0.11203651951630461,
            "graph": 0.9115089291542068
          },
          "weighted_scores": {
            "dense": 0.1704696154968785,
            "sparse": 0.04481460780652185,
            "graph": 0.2278772322885517
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4870560442767957,
              "query_max": 0.5611239604821734,
              "query_min": 0.48428681682207897,
              "normalized_score": 0.4870560442767957,
              "weight": 0.35,
              "weighted_score": 0.1704696154968785
            },
            "sparse": {
              "raw_score": 140.04564939538076,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.11203651951630461,
              "weight": 0.4,
              "weighted_score": 0.04481460780652185
            },
            "graph": {
              "raw_score": 2.5522250016317787,
              "query_max": 2.5522250016317787,
              "query_min": 1.6320000000000003,
              "normalized_score": 0.9115089291542068,
              "weight": 0.25,
              "weighted_score": 0.2278772322885517
            }
          },
          "contribution_percentages": {
            "dense": 38.46670628635201,
            "sparse": 10.11247870071661,
            "graph": 51.42081501293138
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4431614555919521,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5761098922695377
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5761098922695377
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6337208814964915
            }
          },
          "combined_score": 0.6337208814964915
        }
      },
      "similarity": 0.6337208814964915
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 158.52721069272016,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5418549577034845,
            "sparse": 158.52721069272016,
            "graph": 1.9345465170378087
          },
          "normalized_scores": {
            "dense": 0.5418549577034845,
            "sparse": 0.12682176855417612,
            "graph": 0.690909470370646
          },
          "weighted_scores": {
            "dense": 0.18964923519621954,
            "sparse": 0.05072870742167045,
            "graph": 0.1727273675926615
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5418549577034845,
              "query_max": 0.5611239604821734,
              "query_min": 0.48428681682207897,
              "normalized_score": 0.5418549577034845,
              "weight": 0.35,
              "weighted_score": 0.18964923519621954
            },
            "sparse": {
              "raw_score": 158.52721069272016,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.12682176855417612,
              "weight": 0.4,
              "weighted_score": 0.05072870742167045
            },
            "graph": {
              "raw_score": 1.9345465170378087,
              "query_max": 2.5522250016317787,
              "query_min": 1.6320000000000003,
              "normalized_score": 0.690909470370646,
              "weight": 0.25,
              "weighted_score": 0.1727273675926615
            }
          },
          "contribution_percentages": {
            "dense": 45.90820560974128,
            "sparse": 12.279848786212659,
            "graph": 41.81194560404605
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4131053102105515,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.537036903273717
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.537036903273717
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5907405936010888
            }
          },
          "combined_score": 0.5907405936010888
        }
      },
      "similarity": 0.5907405936010888
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 135.63835756187353,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.523386869486163,
            "sparse": 135.63835756187353,
            "graph": 2.076805295676665
          },
          "normalized_scores": {
            "dense": 0.523386869486163,
            "sparse": 0.10851068604949883,
            "graph": 0.7417161770273805
          },
          "weighted_scores": {
            "dense": 0.18318540432015704,
            "sparse": 0.043404274419799535,
            "graph": 0.18542904425684512
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.523386869486163,
              "query_max": 0.5611239604821734,
              "query_min": 0.48428681682207897,
              "normalized_score": 0.523386869486163,
              "weight": 0.35,
              "weighted_score": 0.18318540432015704
            },
            "sparse": {
              "raw_score": 135.63835756187353,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.10851068604949883,
              "weight": 0.4,
              "weighted_score": 0.043404274419799535
            },
            "graph": {
              "raw_score": 2.076805295676665,
              "query_max": 2.5522250016317787,
              "query_min": 1.6320000000000003,
              "normalized_score": 0.7417161770273805,
              "weight": 0.25,
              "weighted_score": 0.18542904425684512
            }
          },
          "contribution_percentages": {
            "dense": 44.46045630833603,
            "sparse": 10.534539329693633,
            "graph": 45.00500436197035
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.41201872299680165,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5356243398958421
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5356243398958421
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.5891867738854264
            }
          },
          "combined_score": 0.5891867738854264
        }
      },
      "similarity": 0.5891867738854264
    },
    {
      "metadata": {
        "doc_id": "CWE-124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "type": "Base",
        "original_content": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "relationships": [],
        "original_sparse_score": 108.57658153135613,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5281796544061484,
            "sparse": 108.57658153135613,
            "graph": 2.0783940347821748
          },
          "normalized_scores": {
            "dense": 0.5281796544061484,
            "sparse": 0.0868612652250849,
            "graph": 0.7422835838507768
          },
          "weighted_scores": {
            "dense": 0.18486287904215196,
            "sparse": 0.03474450609003396,
            "graph": 0.1855708959626942
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5281796544061484,
              "query_max": 0.5611239604821734,
              "query_min": 0.48428681682207897,
              "normalized_score": 0.5281796544061484,
              "weight": 0.35,
              "weighted_score": 0.18486287904215196
            },
            "sparse": {
              "raw_score": 108.57658153135613,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.0868612652250849,
              "weight": 0.4,
              "weighted_score": 0.03474450609003396
            },
            "graph": {
              "raw_score": 2.0783940347821748,
              "query_max": 2.5522250016317787,
              "query_min": 1.6320000000000003,
              "normalized_score": 0.7422835838507768,
              "weight": 0.25,
              "weighted_score": 0.1855708959626942
            }
          },
          "contribution_percentages": {
            "dense": 45.62507115204007,
            "sparse": 8.57511562469408,
            "graph": 45.79981322326586
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4051782810948801,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5267317654233441
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5267317654233441
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5794049419656786
            }
          },
          "combined_score": 0.5794049419656786
        }
      },
      "similarity": 0.5794049419656786
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 129.16492074750084,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5296369847138089,
            "sparse": 129.16492074750084,
            "graph": 1.98922461287325
          },
          "normalized_scores": {
            "dense": 0.5296369847138089,
            "sparse": 0.10333193659800068,
            "graph": 0.7104373617404465
          },
          "weighted_scores": {
            "dense": 0.18537294464983312,
            "sparse": 0.04133277463920027,
            "graph": 0.17760934043511162
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5296369847138089,
              "query_max": 0.5611239604821734,
              "query_min": 0.48428681682207897,
              "normalized_score": 0.5296369847138089,
              "weight": 0.35,
              "weighted_score": 0.18537294464983312
            },
            "sparse": {
              "raw_score": 129.16492074750084,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.10333193659800068,
              "weight": 0.4,
              "weighted_score": 0.04133277463920027
            },
            "graph": {
              "raw_score": 1.98922461287325,
              "query_max": 2.5522250016317787,
              "query_min": 1.6320000000000003,
              "normalized_score": 0.7104373617404465,
              "weight": 0.25,
              "weighted_score": 0.17760934043511162
            }
          },
          "contribution_percentages": {
            "dense": 45.84863714359512,
            "sparse": 10.22291246519501,
            "graph": 43.92845039120988
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.404315059724145,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.485178071668974
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.485178071668974
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5336958788358714
            }
          },
          "combined_score": 0.5336958788358714
        }
      },
      "similarity": 0.5336958788358714
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 177.1249978843352,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5611239604821734,
            "sparse": 177.1249978843352
          },
          "normalized_scores": {
            "dense": 0.5611239604821734,
            "sparse": 0.14169999830746816
          },
          "weighted_scores": {
            "dense": 0.19639338616876068,
            "sparse": 0.056679999322987264
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5611239604821734,
              "query_max": 0.5611239604821734,
              "query_min": 0.48428681682207897,
              "normalized_score": 0.5611239604821734,
              "weight": 0.35,
              "weighted_score": 0.19639338616876068
            },
            "sparse": {
              "raw_score": 177.1249978843352,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.14169999830746816,
              "weight": 0.4,
              "weighted_score": 0.056679999322987264
            }
          },
          "contribution_percentages": {
            "dense": 77.60333461661638,
            "sparse": 22.396665383383606
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.25307338549174796,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.30368806259009756
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.30368806259009756
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.33405686884910735
            }
          },
          "combined_score": 0.33405686884910735
        }
      },
      "similarity": 0.33405686884910735
    },
    {
      "metadata": {
        "doc_id": "CWE-170",
        "name": "Improper Null Termination",
        "type": "Base",
        "original_content": "The product does not terminate or incorrectly terminates a string or array with a null character or equivalent terminator.",
        "relationships": [],
        "original_sparse_score": 110.48161474989935,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 110.48161474989935,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.08838529179991948,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.03535411671996779,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 110.48161474989935,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.08838529179991948,
              "weight": 0.4,
              "weighted_score": 0.03535411671996779
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 2.5522250016317787,
              "query_min": 1.6320000000000003,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 15.19459927586772,
            "graph": 84.80540072413227
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.23267554529139642,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3024782088788154
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3024782088788154
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.33272602976669696
            }
          },
          "combined_score": 0.33272602976669696
        }
      },
      "similarity": 0.33272602976669696
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 116.8651269395335,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.49585486115037736,
            "sparse": 116.8651269395335
          },
          "normalized_scores": {
            "dense": 0.49585486115037736,
            "sparse": 0.0934921015516268
          },
          "weighted_scores": {
            "dense": 0.17354920140263205,
            "sparse": 0.03739684062065072
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.49585486115037736,
              "query_max": 0.5611239604821734,
              "query_min": 0.48428681682207897,
              "normalized_score": 0.49585486115037736,
              "weight": 0.35,
              "weighted_score": 0.17354920140263205
            },
            "sparse": {
              "raw_score": 116.8651269395335,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.0934921015516268,
              "weight": 0.4,
              "weighted_score": 0.03739684062065072
            }
          },
          "contribution_percentages": {
            "dense": 82.27184532027242,
            "sparse": 17.728154679727584
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.21094604202328276,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2742298546302676
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2742298546302676
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3016528400932944
            }
          },
          "combined_score": 0.3016528400932944
        }
      },
      "similarity": 0.3016528400932944
    },
    {
      "metadata": {
        "doc_id": "CWE-476",
        "name": "NULL Pointer Dereference",
        "type": "Base",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "relationships": [],
        "original_sparse_score": 116.40762750503605,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.48994076140987247,
            "sparse": 116.40762750503605
          },
          "normalized_scores": {
            "dense": 0.48994076140987247,
            "sparse": 0.09312610200402884
          },
          "weighted_scores": {
            "dense": 0.17147926649345535,
            "sparse": 0.03725044080161154
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.48994076140987247,
              "query_max": 0.5611239604821734,
              "query_min": 0.48428681682207897,
              "normalized_score": 0.48994076140987247,
              "weight": 0.35,
              "weighted_score": 0.17147926649345535
            },
            "sparse": {
              "raw_score": 116.40762750503605,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.09312610200402884,
              "weight": 0.4,
              "weighted_score": 0.03725044080161154
            }
          },
          "contribution_percentages": {
            "dense": 82.15374261558603,
            "sparse": 17.84625738441397
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2087297072950669,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.27134861948358696
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.27134861948358696
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2984834814319457
            }
          },
          "combined_score": 0.2984834814319457
        }
      },
      "similarity": 0.2984834814319457
    },
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 108.25305330579305,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.49515382674224523,
            "sparse": 108.25305330579305
          },
          "normalized_scores": {
            "dense": 0.49515382674224523,
            "sparse": 0.08660244264463443
          },
          "weighted_scores": {
            "dense": 0.17330383935978583,
            "sparse": 0.034640977057853774
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.49515382674224523,
              "query_max": 0.5611239604821734,
              "query_min": 0.48428681682207897,
              "normalized_score": 0.49515382674224523,
              "weight": 0.35,
              "weighted_score": 0.17330383935978583
            },
            "sparse": {
              "raw_score": 108.25305330579305,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.08660244264463443,
              "weight": 0.4,
              "weighted_score": 0.034640977057853774
            }
          },
          "contribution_percentages": {
            "dense": 83.3412644495642,
            "sparse": 16.658735550435793
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2079448164176396,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2703282613429315
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2703282613429315
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2973610874772247
            }
          },
          "combined_score": 0.2973610874772247
        }
      },
      "similarity": 0.2973610874772247
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 114.5879733698553,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5181575338366763,
            "sparse": 114.5879733698553
          },
          "normalized_scores": {
            "dense": 0.5181575338366763,
            "sparse": 0.09167037869588425
          },
          "weighted_scores": {
            "dense": 0.1813551368428367,
            "sparse": 0.0366681514783537
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5181575338366763,
              "query_max": 0.5611239604821734,
              "query_min": 0.48428681682207897,
              "normalized_score": 0.5181575338366763,
              "weight": 0.35,
              "weighted_score": 0.1813551368428367
            },
            "sparse": {
              "raw_score": 114.5879733698553,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.09167037869588425,
              "weight": 0.4,
              "weighted_score": 0.0366681514783537
            }
          },
          "contribution_percentages": {
            "dense": 83.18154369622458,
            "sparse": 16.818456303775417
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2180232883211904,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.26162794598542843
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.26162794598542843
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2877907405839713
            }
          },
          "combined_score": 0.2877907405839713
        }
      },
      "similarity": 0.2877907405839713
    },
    {
      "metadata": {
        "doc_id": "CWE-843",
        "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
        "type": "Base",
        "original_content": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.",
        "relationships": [],
        "original_sparse_score": 101.61787904793225,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 101.61787904793225,
            "graph": 1.6848000000000003
          },
          "normalized_scores": {
            "sparse": 0.0812943032383458,
            "graph": 0.6017142857142859
          },
          "weighted_scores": {
            "sparse": 0.03251772129533832,
            "graph": 0.15042857142857147
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 101.61787904793225,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.0812943032383458,
              "weight": 0.4,
              "weighted_score": 0.03251772129533832
            },
            "graph": {
              "raw_score": 1.6848000000000003,
              "query_max": 2.5522250016317787,
              "query_min": 1.6320000000000003,
              "normalized_score": 0.6017142857142859,
              "weight": 0.25,
              "weighted_score": 0.15042857142857147
            }
          },
          "contribution_percentages": {
            "sparse": 17.774463101262118,
            "graph": 82.2255368987379
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.18294629272390978,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2378301805410827
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2378301805410827
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.261613198595191
            }
          },
          "combined_score": 0.261613198595191
        }
      },
      "similarity": 0.261613198595191
    },
    {
      "metadata": {
        "doc_id": "CWE-195",
        "name": "Signed to Unsigned Conversion Error",
        "type": "Variant",
        "original_content": "The product uses a signed primitive and performs a cast to an unsigned primitive, which can produce an unexpected value if the value of the signed primitive can not be represented using an unsigned primitive.",
        "relationships": [],
        "original_sparse_score": 112.00173253919745,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 112.00173253919745,
            "graph": 1.6320000000000003
          },
          "normalized_scores": {
            "sparse": 0.08960138603135796,
            "graph": 0.582857142857143
          },
          "weighted_scores": {
            "sparse": 0.035840554412543184,
            "graph": 0.14571428571428574
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 112.00173253919745,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.08960138603135796,
              "weight": 0.4,
              "weighted_score": 0.035840554412543184
            },
            "graph": {
              "raw_score": 1.6320000000000003,
              "query_max": 2.5522250016317787,
              "query_min": 1.6320000000000003,
              "normalized_score": 0.582857142857143,
              "weight": 0.25,
              "weighted_score": 0.14571428571428574
            }
          },
          "contribution_percentages": {
            "sparse": 19.74089723386389,
            "graph": 80.25910276613611
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.18155484012682893,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.21786580815219472
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.21786580815219472
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.23965238896741423
            }
          },
          "combined_score": 0.23965238896741423
        }
      },
      "similarity": 0.23965238896741423
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 106.46723573228141,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.48428681682207897,
            "sparse": 106.46723573228141
          },
          "normalized_scores": {
            "dense": 0.48428681682207897,
            "sparse": 0.08517378858582512
          },
          "weighted_scores": {
            "dense": 0.16950038588772762,
            "sparse": 0.03406951543433005
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.48428681682207897,
              "query_max": 0.5611239604821734,
              "query_min": 0.48428681682207897,
              "normalized_score": 0.48428681682207897,
              "weight": 0.35,
              "weighted_score": 0.16950038588772762
            },
            "sparse": {
              "raw_score": 106.46723573228141,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.08517378858582512,
              "weight": 0.4,
              "weighted_score": 0.03406951543433005
            }
          },
          "contribution_percentages": {
            "dense": 83.26397212305449,
            "sparse": 16.73602787694552
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.20356990132205766,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.16285592105764612
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.16285592105764612
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.1302847368461169
            }
          },
          "combined_score": 0.1302847368461169
        }
      },
      "similarity": 0.1302847368461169
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 124.33438213981844,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 124.33438213981844
          },
          "normalized_scores": {
            "sparse": 0.09946750571185475
          },
          "weighted_scores": {
            "sparse": 0.039787002284741906
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 124.33438213981844,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.09946750571185475,
              "weight": 0.4,
              "weighted_score": 0.039787002284741906
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.039787002284741906,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.051723102970164476
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.051723102970164476
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.05689541326718093
            }
          },
          "combined_score": 0.05689541326718093
        }
      },
      "similarity": 0.05689541326718093
    },
    {
      "metadata": {
        "doc_id": "CWE-681",
        "name": "Incorrect Conversion between Numeric Types",
        "type": "Base",
        "original_content": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
        "relationships": [],
        "original_sparse_score": 122.19481640830142,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 122.19481640830142
          },
          "normalized_scores": {
            "sparse": 0.09775585312664113
          },
          "weighted_scores": {
            "sparse": 0.03910234125065645
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 122.19481640830142,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.09775585312664113,
              "weight": 0.4,
              "weighted_score": 0.03910234125065645
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.03910234125065645,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.05083304362585339
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.05083304362585339
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.05591634798843873
            }
          },
          "combined_score": 0.05591634798843873
        }
      },
      "similarity": 0.05591634798843873
    },
    {
      "metadata": {
        "doc_id": "CWE-770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [],
        "original_sparse_score": 109.76097781390135,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 109.76097781390135
          },
          "normalized_scores": {
            "sparse": 0.08780878225112108
          },
          "weighted_scores": {
            "sparse": 0.035123512900448434
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 109.76097781390135,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.08780878225112108,
              "weight": 0.4,
              "weighted_score": 0.035123512900448434
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.035123512900448434,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.045660566770582965
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.045660566770582965
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.05022662344764126
            }
          },
          "combined_score": 0.05022662344764126
        }
      },
      "similarity": 0.05022662344764126
    },
    {
      "metadata": {
        "doc_id": "CWE-197",
        "name": "Numeric Truncation Error",
        "type": "Base",
        "original_content": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
        "relationships": [],
        "original_sparse_score": 107.98896386284497,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 107.98896386284497
          },
          "normalized_scores": {
            "sparse": 0.08639117109027597
          },
          "weighted_scores": {
            "sparse": 0.03455646843611039
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 107.98896386284497,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.08639117109027597,
              "weight": 0.4,
              "weighted_score": 0.03455646843611039
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.03455646843611039,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.04492340896694351
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04492340896694351
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.049415749863637864
            }
          },
          "combined_score": 0.049415749863637864
        }
      },
      "similarity": 0.049415749863637864
    },
    {
      "metadata": {
        "doc_id": "CWE-130",
        "name": "Improper Handling of Length Parameter Inconsistency",
        "type": "Base",
        "original_content": "The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.",
        "relationships": [],
        "original_sparse_score": 106.11439015400025,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 106.11439015400025
          },
          "normalized_scores": {
            "sparse": 0.0848915121232002
          },
          "weighted_scores": {
            "sparse": 0.033956604849280085
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 106.11439015400025,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.0848915121232002,
              "weight": 0.4,
              "weighted_score": 0.033956604849280085
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.033956604849280085,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.04414358630406411
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04414358630406411
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.04855794493447053
            }
          },
          "combined_score": 0.04855794493447053
        }
      },
      "similarity": 0.04855794493447053
    },
    {
      "metadata": {
        "doc_id": "CWE-909",
        "name": "Missing Initialization of Resource",
        "type": "Class",
        "original_content": "The product does not initialize a critical resource.",
        "relationships": [],
        "original_sparse_score": 102.16164415836313,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 102.16164415836313
          },
          "normalized_scores": {
            "sparse": 0.0817293153266905
          },
          "weighted_scores": {
            "sparse": 0.0326917261306762
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 102.16164415836313,
              "query_max": 177.1249978843352,
              "query_min": 101.61787904793225,
              "normalized_score": 0.0817293153266905,
              "weight": 0.4,
              "weighted_score": 0.0326917261306762
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.0326917261306762,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.026153380904540963
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.026153380904540963
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.027461049949768012
            }
          },
          "combined_score": 0.027461049949768012
        }
      },
      "similarity": 0.027461049949768012
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-119",
      "CWE-787"
    ],
    "critic_additional": [
      "CWE-122",
      "CWE-190",
      "CWE-193",
      "CWE-125"
    ]
  }
}