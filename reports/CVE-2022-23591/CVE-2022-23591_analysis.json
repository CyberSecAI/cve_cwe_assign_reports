{
  "cve_id": "CVE-2022-23591",
  "description": "Tensorflow is an Open Source Machine Learning Framework. The `GraphDef` format in TensorFlow does not allow self recursive functions. The runtime assumes that this invariant is satisfied. However, a `GraphDef` containing a fragment such as the following can be consumed when loading a `SavedModel`. This would result in a stack overflow during execution as resolving each `NodeDef` means resolving the function itself and its nodes. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "stack overflow",
    "impact": "",
    "vector": "GraphDef containing a self recursive function",
    "attacker": "",
    "product": "Tensorflow",
    "version": "2.8.0 and prior versions",
    "component": ""
  },
  "reference_content": "Based on the provided content, here's an analysis of CVE-2022-23591:\n\n**Root Cause:**\nThe vulnerability stems from the lack of validation for self-recursive functions within the `GraphDef` format in TensorFlow. The runtime incorrectly assumes that `GraphDef` will not contain self-recursive functions, leading to a stack overflow when a malicious `GraphDef` with such a structure is loaded.\n\n**Weaknesses/Vulnerabilities:**\n- Absence of checks for self-recursive function definitions within `GraphDef`.\n- The runtime's assumption that `GraphDef` will not contain self-recursive functions.\n- Failure to properly handle the recursive function calls during the resolution of nodes in the graph.\n\n**Impact of Exploitation:**\n- A stack overflow during the execution of the model, leading to a denial-of-service condition.\n- The application using TensorFlow can crash or become unresponsive.\n\n**Attack Vectors:**\n- Crafting a malicious `GraphDef` containing a self-recursive function definition.\n- Loading the crafted `GraphDef` using `SavedModel` loading mechanisms in TensorFlow.\n\n**Required Attacker Capabilities/Position:**\n- An attacker needs to be able to provide a malicious `GraphDef` to the TensorFlow runtime. This could be through supplying a specifically crafted SavedModel, which when loaded triggers the vulnerability.\n- No specific position/privileges are mentioned, so ability to supply input model is the only requirement.\n\n**Additional Details:**\n- The vulnerability is present in TensorFlow versions prior to 2.8.0. Patches have been backported to 2.5.3, 2.6.3, and 2.7.1\n- The vulnerability is addressed by adding a check in `tensorflow/cc/saved_model/loader.cc` that prevents self-recursive functions.\n- The provided code snippet highlights a function `ValidateFunctionNotRecursive` which is added to prevent this issue from happening.\n- The fix is available in the GitHub commit [448a16182065bd08a202d9057dd8ca541e67996c](https://github.com/tensorflow/tensorflow/commit/448a16182065bd08a202d9057dd8ca541e67996c).",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-674 | Improper Control of Recursion | 0.9 | Class | Primary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states that a `GraphDef` containing a self-recursive function can cause a **stack overflow** during execution in TensorFlow. This aligns directly with CWE-674 (Improper Control of Recursion), which describes a situation where a product does not properly control the amount of recursion, leading to excessive resource consumption. The CVE Reference Links Content Summary reinforces this by stating that the root cause is the lack of validation for self-recursive functions within the `GraphDef` format. CWE-674 is a Class-level CWE, and there might be Base-level children that are more appropriate. However, without more information about the specific mechanism of the recursion, CWE-674 is the most appropriate high-level classification.\n  \n  - *Relationship Analysis:* There are no direct relationships for CWE-674 in the provided data. However, stack overflows are a classic symptom of uncontrolled recursion.\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.9 (High evidence from technical description and CVE reference materials)\n\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-674 | Improper Control of Recursion | 0.9 | Class | Primary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states that a `GraphDef` containing a self-recursive function can cause a **stack overflow** during execution in TensorFlow. This aligns directly with CWE-674 (Improper Control of Recursion), which describes a situation where a product does not properly control the amount of recursion, leading to excessive resource consumption. The CVE Reference Links Content Summary reinforces this by stating that the root cause is the lack of validation for self-recursive functions within the `GraphDef` format. CWE-674 is a Class-level CWE, and there might be Base-level children that are more appropriate. However, without more information about the specific mechanism of the recursion, CWE-674 is the most appropriate high-level classification.\n  \n  - *Relationship Analysis:* There are no direct relationships for CWE-674 in the provided data. However, stack overflows are a classic symptom of uncontrolled recursion.\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.9 (High evidence from technical description and CVE reference materials)\n\n---",
  "criticism": "Okay, let's review the analysis for CWE mapping, focusing on the provided full CWE specifications.\n\n**Overall Assessment:**\n\nThe initial assessment correctly identifies `CWE-674: Improper Control of Recursion` as the primary weakness. The justification is sound, linking the stack overflow directly to uncontrolled recursion. The confidence level of 0.9 is appropriate given the strong evidence in the vulnerability description and CVE summary.\n\nHowever, the analysis could be improved by considering more specific, Base-level CWEs that reflect the *cause* of the uncontrolled recursion. The \"Allowed-with-Review\" guidance for CWE-674 explicitly suggests exploring more specific child CWEs.\n\n**Detailed Critique:**\n\n1.  **CWE-674: Improper Control of Recursion:**\n\n    *   **Strengths:**\n        *   The identification of CWE-674 is accurate at a high level.\n        *   The justification clearly explains the link between self-recursive functions in `GraphDef` and stack overflow.\n        *   The confidence score is justified.\n    *   **Weaknesses:**\n        *   It's a Class-level CWE. The mapping guidance advises looking for a more specific Base-level CWE.\n        *   The analysis doesn't sufficiently explore *why* the recursion is uncontrolled.  Is it due to a lack of input validation, or a flawed algorithm?\n    *   **Improvement Suggestions:**\n        *   **Consider the *cause* of the uncontrolled recursion.**  Is it because the input (`GraphDef`) isn't validated to prevent self-recursive functions? If so, consider CWEs related to input validation.\n        *   Explicitly mention the \"Allowed-with-Review\" mapping guidance and why a more specific CWE might be preferable *if* one can be identified.\n\n2.  **Review of Retriever Results and Potentially More Specific CWEs:**\n\nLet's examine the retriever results to see if they shed light on the *cause* of the uncontrolled recursion:\n\n    *   **CWE-663: Use of a Non-reentrant Function in a Concurrent Context:** This is likely irrelevant.  The description doesn't suggest concurrency issues are involved.\n\n    *   **CWE-824: Access of Uninitialized Pointer:**  Also likely irrelevant.  The description doesn't mention uninitialized pointers.\n\n    *   **CWE-1284: Improper Validation of Specified Quantity in Input:** This is a *possibility*, although it doesn't directly fit. One could argue that the depth of recursion is a \"quantity\" and that the code isn't validating this quantity (i.e., limiting recursion depth). However, this is a stretch.\n\n    *   **CWE-1287: Improper Validation of Specified Type of Input:** Again, not a great fit. The 'type' of data isn't the problem; it's the self-referential *structure* of the data.\n\n    *   **CWE-787: Out-of-bounds Write:** This is a *consequence* of the stack overflow, not the *cause*. The stack overflow happens *before* memory is corrupted.\n\n    *   **CWE-835: Loop with Unreachable Exit Condition ('Infinite Loop'):** This is related, but not the primary issue. The recursion is a *form* of loop, but the core problem is the *lack of control* over its depth due to a self-referential structure.\n\n    *   **CWE-681: Incorrect Conversion between Numeric Types:** Irrelevant.\n\n    *   **CWE-617: Reachable Assertion:** Irrelevant to the described root cause.\n\n    *   **CWE-125: Out-of-bounds Read:** Same as CWE-787, a *consequence* of the stack overflow.\n\n    *   **CWE-1286: Improper Validation of Syntactic Correctness of Input:** **This is the best alternative among the retriever results.** The `GraphDef` format has a defined syntax, and the vulnerability stems from the *improper validation* of that syntax. Specifically, the code doesn't validate that the `GraphDef` *doesn't* contain self-recursive function definitions.\n\n3.  **Revised Recommendation:**\n\n    *   **Primary CWE:** `CWE-1286: Improper Validation of Syntactic Correctness of Input` (Confidence: 0.8).\n        *   **Justification:** The vulnerability arises because the TensorFlow runtime doesn't properly validate the syntactic correctness of the `GraphDef` input. It allows a `GraphDef` containing self-recursive functions, which violates the intended structure and leads to a stack overflow. The fix involves adding a check (`ValidateFunctionNotRecursive`) to enforce the syntactic constraint that functions cannot be self-recursive.\n        *   **Notes:** This is a Base-level CWE, which is preferred. It directly addresses the *cause* of the problem: a lack of validation.\n\n    *   **Secondary CWE (Consider):** `CWE-674: Improper Control of Recursion` (Confidence: 0.6).\n        *   **Justification:** While not the root cause, it's the direct *manifestation* of the vulnerability.  The lack of validation leads to uncontrolled recursion and the resulting stack overflow.\n        *   **Notes:** Use this as a secondary CWE to highlight the consequence.\n\n**Revised Summary Table:**\n\n| CWE ID  | CWE Name                                               | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes                                                                                                                                      |\n| :------ | :----------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| CWE-1286 | Improper Validation of Syntactic Correctness of Input | 0.8        | Base                    | Primary                       | Best reflects the root cause: the lack of input validation on the GraphDef structure to prevent self-recursion.                                                      |\n| CWE-674  | Improper Control of Recursion                          | 0.6        | Class                   | Secondary                     | Captures the direct consequence: uncontrolled recursion leading to a stack overflow. Use as a secondary CWE to emphasize the impact.                               |\n\n**Final Notes:**\n\nBy focusing on the *cause* of the vulnerability (improper input validation), the analysis becomes more precise and actionable. CWE-1286 provides a clearer direction for mitigation efforts (e.g., stronger input validation routines). Remember that accurately identifying the root cause allows for the most effective remediation strategy. Using the CWE specifications to guide the analysis is essential for improving the accuracy and usefulness of the CWE mapping.",
  "resolution": "# Summary\n| CWE ID   | CWE Name                                               | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes                                                                                                                                      |\n| :------- | :----------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| CWE-1286 | Improper Validation of Syntactic Correctness of Input | 0.8        | Base                    | Primary                       | Best reflects the **root cause**: the lack of input validation on the GraphDef structure to prevent self-recursion.                                                      |\n| CWE-674  | Improper Control of Recursion                          | 0.6        | Class                   | Secondary                     | Captures the direct consequence: uncontrolled recursion leading to a **stack overflow**. Use as a secondary CWE to emphasize the impact.                               |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the Parent-Child relationship between CWE-20 (Improper Input Validation) and CWE-1286 (Improper Validation of Syntactic Correctness of Input), and the observation that **stack overflow** can result from uncontrolled recursion. The decision favored the more specific CWE-1286 as it directly relates to the vulnerability's **root cause**: the lack of syntactic validation in the `GraphDef` format, which allows self-recursive functions. The relationship analysis also considered that CWE-674 (Improper Control of Recursion) is a class-level CWE, making CWE-1286 (a Base CWE) a more precise classification.\n\n```mermaid\ngraph TD\n    cwe1286[\"CWE-1286: Improper Validation of Syntactic Correctness of Input\"]\n    cwe674[\"CWE-674: Improper Control of Recursion\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe835[\"CWE-835: Loop with Unreachable Exit Condition ('Infinite Loop')\"]\n\n    cwe1286 -->|CHILDOF| cwe20\n    cwe674 -->|CANFOLLOW| cwe835\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe1286 primary\n    class cwe674 secondary\n    class cwe20,cwe835 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **Improper Validation of Syntactic Correctness of Input (CWE-1286)**. Specifically, the `GraphDef` format is not validated to prevent self-recursive functions. This leads to **Improper Control of Recursion (CWE-674)**, where the amount of recursion is not properly managed. The consequence is a **stack overflow** during execution as the runtime attempts to resolve the self-recursive `NodeDef` instances. The lack of validation is the **root cause**, while the stack overflow is the impact.\n\n## Summary of Analysis\nThe initial analysis correctly identified CWE-674 (Improper Control of Recursion) but at a higher level. The criticism pointed out the importance of identifying the **root cause** and suggested exploring more specific Base-level CWEs. The analysis of the retriever results identified CWE-1286 (Improper Validation of Syntactic Correctness of Input) as the most suitable primary CWE. This decision is based on the evidence that the vulnerability arises because the TensorFlow runtime doesn't properly validate the syntactic correctness of the `GraphDef` input, allowing self-recursive functions.\n\nThe vulnerability description states: \"The `GraphDef` format in TensorFlow does not allow self recursive functions. The runtime assumes that this invariant is satisfied. However, a `GraphDef` containing a fragment such as the following can be consumed when loading a `SavedModel`. This would result in a stack overflow during execution\".\n\nThis statement clearly indicates that the **root cause** is the lack of validation for self-recursive functions within the `GraphDef` format. Therefore, CWE-1286 is the optimal level of specificity because it directly addresses the lack of validation on the input syntax, which is the **root cause** of the vulnerability.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-663",
        "name": "Use of a Non-reentrant Function in a Concurrent Context",
        "type": "Base",
        "original_content": "The product calls a non-reentrant function in a concurrent context in which a competing code sequence (e.g. thread or signal handler) may have an opportunity to call the same function or otherwise influence its state.",
        "relationships": [],
        "original_sparse_score": 648.6635179823115,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4370013911466436,
            "sparse": 648.6635179823115,
            "graph": 1.5977916887904389
          },
          "normalized_scores": {
            "dense": 0.4370013911466436,
            "sparse": 0.5189308143858492,
            "graph": 0.5706398888537282
          },
          "weighted_scores": {
            "dense": 0.15295048690132526,
            "sparse": 0.2075723257543397,
            "graph": 0.14265997221343205
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4370013911466436,
              "query_max": 0.4370013911466436,
              "query_min": 0.3284323391247668,
              "normalized_score": 0.4370013911466436,
              "weight": 0.35,
              "weighted_score": 0.15295048690132526
            },
            "sparse": {
              "raw_score": 648.6635179823115,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.5189308143858492,
              "weight": 0.4,
              "weighted_score": 0.2075723257543397
            },
            "graph": {
              "raw_score": 1.5977916887904389,
              "query_max": 2.353,
              "query_min": 1.5552000000000004,
              "normalized_score": 0.5706398888537282,
              "weight": 0.25,
              "weighted_score": 0.14265997221343205
            }
          },
          "contribution_percentages": {
            "dense": 30.396605667086824,
            "sparse": 41.251873473441584,
            "graph": 28.35152085947158
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5031827848690971,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6541376203298263
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6541376203298263
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7195513823628089
            }
          },
          "combined_score": 0.7195513823628089
        }
      },
      "similarity": 0.7195513823628089
    },
    {
      "metadata": {
        "doc_id": "CWE-824",
        "name": "Access of Uninitialized Pointer",
        "type": "Base",
        "original_content": "The product accesses or uses a pointer that has not been initialized.",
        "relationships": [],
        "original_sparse_score": 720.1838403154376,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.3720775051362153,
            "sparse": 720.1838403154376,
            "graph": 1.5672018812438642
          },
          "normalized_scores": {
            "dense": 0.3720775051362153,
            "sparse": 0.5761470722523501,
            "graph": 0.5597149575870943
          },
          "weighted_scores": {
            "dense": 0.13022712679767534,
            "sparse": 0.23045882890094005,
            "graph": 0.13992873939677358
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.3720775051362153,
              "query_max": 0.4370013911466436,
              "query_min": 0.3284323391247668,
              "normalized_score": 0.3720775051362153,
              "weight": 0.35,
              "weighted_score": 0.13022712679767534
            },
            "sparse": {
              "raw_score": 720.1838403154376,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.5761470722523501,
              "weight": 0.4,
              "weighted_score": 0.23045882890094005
            },
            "graph": {
              "raw_score": 1.5672018812438642,
              "query_max": 2.353,
              "query_min": 1.5552000000000004,
              "normalized_score": 0.5597149575870943,
              "weight": 0.25,
              "weighted_score": 0.13992873939677358
            }
          },
          "contribution_percentages": {
            "dense": 26.013444685809993,
            "sparse": 46.03517059303016,
            "graph": 27.951384721159865
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5006146950953889,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6507991036240056
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6507991036240056
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7158790139864062
            }
          },
          "combined_score": 0.7158790139864062
        }
      },
      "similarity": 0.7158790139864062
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 700.3806764676904,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.38674768274778226,
            "sparse": 700.3806764676904,
            "graph": 1.565981019336677
          },
          "normalized_scores": {
            "dense": 0.38674768274778226,
            "sparse": 0.5603045411741523,
            "graph": 0.5592789354773847
          },
          "weighted_scores": {
            "dense": 0.1353616889617238,
            "sparse": 0.22412181646966092,
            "graph": 0.13981973386934618
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.38674768274778226,
              "query_max": 0.4370013911466436,
              "query_min": 0.3284323391247668,
              "normalized_score": 0.38674768274778226,
              "weight": 0.35,
              "weighted_score": 0.1353616889617238
            },
            "sparse": {
              "raw_score": 700.3806764676904,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.5603045411741523,
              "weight": 0.4,
              "weighted_score": 0.22412181646966092
            },
            "graph": {
              "raw_score": 1.565981019336677,
              "query_max": 2.353,
              "query_min": 1.5552000000000004,
              "normalized_score": 0.5592789354773847,
              "weight": 0.25,
              "weighted_score": 0.13981973386934618
            }
          },
          "contribution_percentages": {
            "dense": 27.110116319552912,
            "sparse": 44.88691416934151,
            "graph": 28.002969511105576
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.49930323930073095,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6490942110909502
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6490942110909502
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7140036322000453
            }
          },
          "combined_score": 0.7140036322000453
        }
      },
      "similarity": 0.7140036322000453
    },
    {
      "metadata": {
        "doc_id": "CWE-1287",
        "name": "Improper Validation of Specified Type of Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to be of a certain type, but it does not validate or incorrectly validates that the input is actually of the expected type.",
        "relationships": [],
        "original_sparse_score": 481.7901213993287,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.3822570237882915,
            "sparse": 481.7901213993287,
            "graph": 1.606642305481742
          },
          "normalized_scores": {
            "dense": 0.3822570237882915,
            "sparse": 0.38543209711946297,
            "graph": 0.5738008233863364
          },
          "weighted_scores": {
            "dense": 0.13378995832590201,
            "sparse": 0.1541728388477852,
            "graph": 0.1434502058465841
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.3822570237882915,
              "query_max": 0.4370013911466436,
              "query_min": 0.3284323391247668,
              "normalized_score": 0.3822570237882915,
              "weight": 0.35,
              "weighted_score": 0.13378995832590201
            },
            "sparse": {
              "raw_score": 481.7901213993287,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.38543209711946297,
              "weight": 0.4,
              "weighted_score": 0.1541728388477852
            },
            "graph": {
              "raw_score": 1.606642305481742,
              "query_max": 2.353,
              "query_min": 1.5552000000000004,
              "normalized_score": 0.5738008233863364,
              "weight": 0.25,
              "weighted_score": 0.1434502058465841
            }
          },
          "contribution_percentages": {
            "dense": 31.012036584260184,
            "sparse": 35.736715807924064,
            "graph": 33.25124760781576
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4314130030202713,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5608369039263527
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5608369039263527
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6169205943189879
            }
          },
          "combined_score": 0.6169205943189879
        }
      },
      "similarity": 0.6169205943189879
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 534.8390201810184,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 534.8390201810184,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.42787121614481477,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.1711484864579259,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 534.8390201810184,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.42787121614481477,
              "weight": 0.4,
              "weighted_score": 0.1711484864579259
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 2.353,
              "query_min": 1.5552000000000004,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 46.44842888849994,
            "graph": 53.55157111150005
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.36846991502935456,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.47901088953816096
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.47901088953816096
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5269119784919771
            }
          },
          "combined_score": 0.5269119784919771
        }
      },
      "similarity": 0.5269119784919771
    },
    {
      "metadata": {
        "doc_id": "CWE-835",
        "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "type": "Base",
        "original_content": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
        "relationships": [],
        "original_sparse_score": 688.8300778694359,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 688.8300778694359,
            "graph": 1.5871912087170827
          },
          "normalized_scores": {
            "sparse": 0.5510640622955487,
            "graph": 0.5668540031132439
          },
          "weighted_scores": {
            "sparse": 0.2204256249182195,
            "graph": 0.14171350077831096
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 688.8300778694359,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.5510640622955487,
              "weight": 0.4,
              "weighted_score": 0.2204256249182195
            },
            "graph": {
              "raw_score": 1.5871912087170827,
              "query_max": 2.353,
              "query_min": 1.5552000000000004,
              "normalized_score": 0.5668540031132439,
              "weight": 0.25,
              "weighted_score": 0.14171350077831096
            }
          },
          "contribution_percentages": {
            "sparse": 60.86766363459283,
            "graph": 39.13233636540717
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.36213912569653045,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4707808634054896
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4707808634054896
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5178589497460386
            }
          },
          "combined_score": 0.5178589497460386
        }
      },
      "similarity": 0.5178589497460386
    },
    {
      "metadata": {
        "doc_id": "CWE-681",
        "name": "Incorrect Conversion between Numeric Types",
        "type": "Base",
        "original_content": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
        "relationships": [],
        "original_sparse_score": 679.1824535934379,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.34571771623709274,
            "sparse": 679.1824535934379
          },
          "normalized_scores": {
            "dense": 0.34571771623709274,
            "sparse": 0.5433459628747503
          },
          "weighted_scores": {
            "dense": 0.12100120068298245,
            "sparse": 0.21733838514990014
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.34571771623709274,
              "query_max": 0.4370013911466436,
              "query_min": 0.3284323391247668,
              "normalized_score": 0.34571771623709274,
              "weight": 0.35,
              "weighted_score": 0.12100120068298245
            },
            "sparse": {
              "raw_score": 679.1824535934379,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.5433459628747503,
              "weight": 0.4,
              "weighted_score": 0.21733838514990014
            }
          },
          "contribution_percentages": {
            "dense": 35.76324076448715,
            "sparse": 64.23675923551285
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3383395858328826,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4398414615827474
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4398414615827474
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4838256077410222
            }
          },
          "combined_score": 0.4838256077410222
        }
      },
      "similarity": 0.4838256077410222
    },
    {
      "metadata": {
        "doc_id": "CWE-617",
        "name": "Reachable Assertion",
        "type": "Base",
        "original_content": "The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary.",
        "relationships": [],
        "original_sparse_score": 653.9892829502318,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.3536302404779003,
            "sparse": 653.9892829502318
          },
          "normalized_scores": {
            "dense": 0.3536302404779003,
            "sparse": 0.5231914263601855
          },
          "weighted_scores": {
            "dense": 0.12377058416726511,
            "sparse": 0.2092765705440742
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.3536302404779003,
              "query_max": 0.4370013911466436,
              "query_min": 0.3284323391247668,
              "normalized_score": 0.3536302404779003,
              "weight": 0.35,
              "weighted_score": 0.12377058416726511
            },
            "sparse": {
              "raw_score": 653.9892829502318,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.5231914263601855,
              "weight": 0.4,
              "weighted_score": 0.2092765705440742
            }
          },
          "contribution_percentages": {
            "dense": 37.16308108818414,
            "sparse": 62.836918911815864
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3330471547113393,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.43296130112474107
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.43296130112474107
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4762574312372152
            }
          },
          "combined_score": 0.4762574312372152
        }
      },
      "similarity": 0.4762574312372152
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 621.095991538439,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.33654314682459063,
            "sparse": 621.095991538439
          },
          "normalized_scores": {
            "dense": 0.33654314682459063,
            "sparse": 0.4968767932307512
          },
          "weighted_scores": {
            "dense": 0.11779010138860671,
            "sparse": 0.19875071729230048
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.33654314682459063,
              "query_max": 0.4370013911466436,
              "query_min": 0.3284323391247668,
              "normalized_score": 0.33654314682459063,
              "weight": 0.35,
              "weighted_score": 0.11779010138860671
            },
            "sparse": {
              "raw_score": 621.095991538439,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.4968767932307512,
              "weight": 0.4,
              "weighted_score": 0.19875071729230048
            }
          },
          "contribution_percentages": {
            "dense": 37.21166258413783,
            "sparse": 62.78833741586216
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3165408186809072,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4115030642851794
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4115030642851794
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4526533707136974
            }
          },
          "combined_score": 0.4526533707136974
        }
      },
      "similarity": 0.4526533707136974
    },
    {
      "metadata": {
        "doc_id": "CWE-1286",
        "name": "Improper Validation of Syntactic Correctness of Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.",
        "relationships": [],
        "original_sparse_score": 580.8032098437178,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.3328401906913394,
            "sparse": 580.8032098437178
          },
          "normalized_scores": {
            "dense": 0.3328401906913394,
            "sparse": 0.46464256787497427
          },
          "weighted_scores": {
            "dense": 0.11649406674196879,
            "sparse": 0.18585702714998972
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.3328401906913394,
              "query_max": 0.4370013911466436,
              "query_min": 0.3284323391247668,
              "normalized_score": 0.3328401906913394,
              "weight": 0.35,
              "weighted_score": 0.11649406674196879
            },
            "sparse": {
              "raw_score": 580.8032098437178,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.46464256787497427,
              "weight": 0.4,
              "weighted_score": 0.18585702714998972
            }
          },
          "contribution_percentages": {
            "dense": 38.52940144598799,
            "sparse": 61.470598554012
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3023510938919585,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3930564220595461
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3930564220595461
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4323620642655008
            }
          },
          "combined_score": 0.4323620642655008
        }
      },
      "similarity": 0.4323620642655008
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 648.582104905724,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.32851148351321713,
            "sparse": 648.582104905724
          },
          "normalized_scores": {
            "dense": 0.32851148351321713,
            "sparse": 0.5188656839245792
          },
          "weighted_scores": {
            "dense": 0.11497901922962599,
            "sparse": 0.20754627356983169
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.32851148351321713,
              "query_max": 0.4370013911466436,
              "query_min": 0.3284323391247668,
              "normalized_score": 0.32851148351321713,
              "weight": 0.35,
              "weighted_score": 0.11497901922962599
            },
            "sparse": {
              "raw_score": 648.582104905724,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.5188656839245792,
              "weight": 0.4,
              "weighted_score": 0.20754627356983169
            }
          },
          "contribution_percentages": {
            "dense": 35.649613161073404,
            "sparse": 64.3503868389266
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3225252927994577,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3870303513593492
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3870303513593492
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4257333864952842
            }
          },
          "combined_score": 0.4257333864952842
        }
      },
      "similarity": 0.4257333864952842
    },
    {
      "metadata": {
        "doc_id": "CWE-843",
        "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
        "type": "Base",
        "original_content": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.",
        "relationships": [],
        "original_sparse_score": 558.6974913292582,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.3361356374980853,
            "sparse": 558.6974913292582
          },
          "normalized_scores": {
            "dense": 0.3361356374980853,
            "sparse": 0.4469579930634066
          },
          "weighted_scores": {
            "dense": 0.11764747312432984,
            "sparse": 0.17878319722536265
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.3361356374980853,
              "query_max": 0.4370013911466436,
              "query_min": 0.3284323391247668,
              "normalized_score": 0.3361356374980853,
              "weight": 0.35,
              "weighted_score": 0.11764747312432984
            },
            "sparse": {
              "raw_score": 558.6974913292582,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.4469579930634066,
              "weight": 0.4,
              "weighted_score": 0.17878319722536265
            }
          },
          "contribution_percentages": {
            "dense": 39.68802316762425,
            "sparse": 60.31197683237575
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2964306703496925,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.38535987145460027
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.38535987145460027
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.42389585860006035
            }
          },
          "combined_score": 0.42389585860006035
        }
      },
      "similarity": 0.42389585860006035
    },
    {
      "metadata": {
        "doc_id": "CWE-476",
        "name": "NULL Pointer Dereference",
        "type": "Base",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "relationships": [],
        "original_sparse_score": 551.1547690163021,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.3380796062424736,
            "sparse": 551.1547690163021
          },
          "normalized_scores": {
            "dense": 0.3380796062424736,
            "sparse": 0.4409238152130417
          },
          "weighted_scores": {
            "dense": 0.11832786218486574,
            "sparse": 0.1763695260852167
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.3380796062424736,
              "query_max": 0.4370013911466436,
              "query_min": 0.3284323391247668,
              "normalized_score": 0.3380796062424736,
              "weight": 0.35,
              "weighted_score": 0.11832786218486574
            },
            "sparse": {
              "raw_score": 551.1547690163021,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.4409238152130417,
              "weight": 0.4,
              "weighted_score": 0.1763695260852167
            }
          },
          "contribution_percentages": {
            "dense": 40.15232808117776,
            "sparse": 59.84767191882226
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2946973882700824,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.38310660475110714
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.38310660475110714
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.42141726522621786
            }
          },
          "combined_score": 0.42141726522621786
        }
      },
      "similarity": 0.42141726522621786
    },
    {
      "metadata": {
        "doc_id": "CWE-415",
        "name": "Double Free",
        "type": "Variant",
        "original_content": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
        "relationships": [],
        "original_sparse_score": 586.6460494934513,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.37443152842223043,
            "sparse": 586.6460494934513
          },
          "normalized_scores": {
            "dense": 0.37443152842223043,
            "sparse": 0.46931683959476106
          },
          "weighted_scores": {
            "dense": 0.13105103494778064,
            "sparse": 0.18772673583790445
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.37443152842223043,
              "query_max": 0.4370013911466436,
              "query_min": 0.3284323391247668,
              "normalized_score": 0.37443152842223043,
              "weight": 0.35,
              "weighted_score": 0.13105103494778064
            },
            "sparse": {
              "raw_score": 586.6460494934513,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.46931683959476106,
              "weight": 0.4,
              "weighted_score": 0.18772673583790445
            }
          },
          "contribution_percentages": {
            "dense": 41.11046846986282,
            "sparse": 58.889531530137184
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3187777707856851,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3825333249428221
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3825333249428221
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.42078665743710436
            }
          },
          "combined_score": 0.42078665743710436
        }
      },
      "similarity": 0.42078665743710436
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 557.2084106928402,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.3284323391247668,
            "sparse": 557.2084106928402
          },
          "normalized_scores": {
            "dense": 0.3284323391247668,
            "sparse": 0.44576672855427213
          },
          "weighted_scores": {
            "dense": 0.11495131869366838,
            "sparse": 0.17830669142170885
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.3284323391247668,
              "query_max": 0.4370013911466436,
              "query_min": 0.3284323391247668,
              "normalized_score": 0.3284323391247668,
              "weight": 0.35,
              "weighted_score": 0.11495131869366838
            },
            "sparse": {
              "raw_score": 557.2084106928402,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.44576672855427213,
              "weight": 0.4,
              "weighted_score": 0.17830669142170885
            }
          },
          "contribution_percentages": {
            "dense": 39.19801496588032,
            "sparse": 60.80198503411969
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2932580101153772,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3812354131499904
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3812354131499904
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.41935895446498944
            }
          },
          "combined_score": 0.41935895446498944
        }
      },
      "similarity": 0.41935895446498944
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 895.9152431006099,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4316393973411218,
            "sparse": 895.9152431006099
          },
          "normalized_scores": {
            "dense": 0.4316393973411218,
            "sparse": 0.716732194480488
          },
          "weighted_scores": {
            "dense": 0.15107378906939262,
            "sparse": 0.2866928777921952
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4316393973411218,
              "query_max": 0.4370013911466436,
              "query_min": 0.3284323391247668,
              "normalized_score": 0.4316393973411218,
              "weight": 0.35,
              "weighted_score": 0.15107378906939262
            },
            "sparse": {
              "raw_score": 895.9152431006099,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.716732194480488,
              "weight": 0.4,
              "weighted_score": 0.2866928777921952
            }
          },
          "contribution_percentages": {
            "dense": 34.510117033912685,
            "sparse": 65.48988296608732
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.4377666668615878,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.3502133334892703
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3502133334892703
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.36772400016373386
            }
          },
          "combined_score": 0.36772400016373386
        }
      },
      "similarity": 0.36772400016373386
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 629.1121531273508,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 629.1121531273508
          },
          "normalized_scores": {
            "sparse": 0.5032897225018806
          },
          "weighted_scores": {
            "sparse": 0.20131588900075226
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 629.1121531273508,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.5032897225018806,
              "weight": 0.4,
              "weighted_score": 0.20131588900075226
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.20131588900075226,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.26171065570097796
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.26171065570097796
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.28788172127107575
            }
          },
          "combined_score": 0.28788172127107575
        }
      },
      "similarity": 0.28788172127107575
    },
    {
      "metadata": {
        "doc_id": "CWE-95",
        "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. \"eval\").",
        "relationships": [],
        "original_sparse_score": 616.5462700175619,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 616.5462700175619
          },
          "normalized_scores": {
            "sparse": 0.49323701601404957
          },
          "weighted_scores": {
            "sparse": 0.19729480640561983
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 616.5462700175619,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.49323701601404957,
              "weight": 0.4,
              "weighted_score": 0.19729480640561983
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.19729480640561983,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.23675376768674378
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.23675376768674378
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.26042914445541815
            }
          },
          "combined_score": 0.26042914445541815
        }
      },
      "similarity": 0.26042914445541815
    },
    {
      "metadata": {
        "doc_id": "CWE-367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "type": "Base",
        "original_content": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
        "relationships": [],
        "original_sparse_score": 476.73550472551113,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 476.73550472551113
          },
          "normalized_scores": {
            "sparse": 0.3813884037804089
          },
          "weighted_scores": {
            "sparse": 0.15255536151216356
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 476.73550472551113,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.3813884037804089,
              "weight": 0.4,
              "weighted_score": 0.15255536151216356
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.15255536151216356,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.19832196996581264
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.19832196996581264
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.21815416696239393
            }
          },
          "combined_score": 0.21815416696239393
        }
      },
      "similarity": 0.21815416696239393
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 553.7193633531298,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 553.7193633531298
          },
          "normalized_scores": {
            "sparse": 0.4429754906825038
          },
          "weighted_scores": {
            "sparse": 0.17719019627300153
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 553.7193633531298,
              "query_max": 895.9152431006099,
              "query_min": 476.73550472551113,
              "normalized_score": 0.4429754906825038,
              "weight": 0.4,
              "weighted_score": 0.17719019627300153
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.17719019627300153,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.14175215701840124
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.14175215701840124
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.113401725614721
            }
          },
          "combined_score": 0.113401725614721
        }
      },
      "similarity": 0.113401725614721
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-674"
    ],
    "critic_additional": [
      "CWE-824",
      "CWE-663",
      "CWE-787",
      "CWE-835",
      "CWE-1284",
      "CWE-617",
      "CWE-681",
      "CWE-1286",
      "CWE-1287",
      "CWE-125"
    ]
  }
}