{
  "cve_id": "CVE-2021-29529",
  "description": "TensorFlow is an end-to-end open source platform for machine learning. An attacker can trigger a heap buffer overflow in `tf.raw_ops.QuantizedResizeBilinear` by manipulating input values so that float rounding results in off-by-one error in accessing image elements. This is because the implementation(https//github.com/tensorflow/tensorflow/blob/44b7f486c0143f68b56c34e2d01e146ee445134a/tensorflow/core/kernels/quantized_resize_bilinear_op.cc#L62-L66) computes two integers (representing the upper and lower bounds for interpolation) by ceiling and flooring a floating point value. For some values of `in`, `interpolation->upper[i]` might be smaller than `interpolation->lower[i]`. This is an issue if `interpolation->upper[i]` is capped at `in_size-1` as it means that `interpolation->lower[i]` points outside of the image. Then, in the interpolation code(https//github.com/tensorflow/tensorflow/blob/44b7f486c0143f68b56c34e2d01e146ee445134a/tensorflow/core/kernels/quantized_resize_bilinear_op.cc#L245-L264), this would result in heap buffer overflow. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "key_phrases": {
    "rootcause": "float rounding results in off-by-one error",
    "weakness": "heap buffer overflow",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "TensorFlow",
    "version": "2.5.0",
    "component": "tf.raw_ops.QuantizedResizeBilinear"
  },
  "reference_content": "Based on the provided content, here's an analysis of CVE-2021-29529:\n\n**Root Cause:**\nThe vulnerability stems from a floating-point rounding error during the calculation of interpolation bounds in the `tf.raw_ops.QuantizedResizeBilinear` operation. When resizing images, the code calculates lower and upper bounds for interpolation using `floor` and `ceil` operations on a floating-point value representing the input coordinate. Due to floating-point imprecision, the calculated upper bound can become less than the lower bound. This, combined with clamping the upper bound to `in_size - 1`, could lead to out-of-bounds memory access.\n\n**Weaknesses/Vulnerabilities:**\n- Heap buffer overflow: The core vulnerability is a heap buffer overflow in the `OutputLerpForChannels` function.\n- Off-by-one error: This arises because incorrect interpolation bounds are calculated due to rounding issues, leading to an out-of-bounds read.\n- Incorrect boundary checks: The clamping of the upper bound to `in_size - 1` combined with the rounding issue, created the conditions for out-of-bounds access.\n\n**Impact of Exploitation:**\n- An attacker can trigger a heap buffer overflow, which can lead to a crash, denial of service, or potentially arbitrary code execution. The provided description and sample code demonstrate how specific input parameters can trigger this overflow.\n\n**Attack Vectors:**\n- By crafting specific input values (image data, size, min, max, and alignment parameters) to `tf.raw_ops.QuantizedResizeBilinear`, an attacker can manipulate the internal floating-point values to induce the rounding error.\n\n**Required Attacker Capabilities/Position:**\n- The attacker needs to be able to provide input to the `tf.raw_ops.QuantizedResizeBilinear` function and control the relevant input parameters, such as the images, the target size, the quantization range, and the alignment settings.\n\n**More Details:**\n\nThe provided content includes a code snippet that demonstrates how to trigger the vulnerability:\n```python\nimport tensorflow as tf\n\nl = [256, 328, 361, 17, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 384]\nimages = tf.constant(l, shape=[1, 1, 15, 1], dtype=tf.qint32)\nsize = tf.constant([12, 6], shape=[2], dtype=tf.int32)\nmin = tf.constant(80.22522735595703)\nmax = tf.constant(80.39215850830078)\n\ntf.raw_ops.QuantizedResizeBilinear(images=images, size=size, min=min, max=max,\n                                   align_corners=True, half_pixel_centers=True)\n```\nThis code highlights how specific combinations of input values can trigger the vulnerability, especially when `align_corners` and `half_pixel_centers` are set to True, which is necessary for the bug to be exploitable.\n\nThe fix introduces a check that enforces that the lower bound (`interpolation->lower[i]`) is less or equal to the upper bound `interpolation->upper[i]`:\n```c++\ninterpolation->lower[i] = std::max(static_cast<int64>(in_f), static_cast<int64>(0));\ninterpolation->upper[i] = std::min(static_cast<int64>(std::ceil(in)), in_size - 1);\ninterpolation->lower[i] = std::min(interpolation->lower[i], interpolation->upper[i]);\n```\nThis ensures the lower bound is capped by the upper bound, preventing the out-of-bounds access.\n\nThe affected versions are < 2.5.0. Patched versions include 2.1.4, 2.2.3, 2.3.3, and 2.4.2.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "```markdown\n# Summary \n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.95 | Variant | Allowed | Primary CWE |\n| CWE-193 | Off-by-one Error | 0.85 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states a \"**heap buffer overflow**\" occurs due to a \"**float rounding results in off-by-one error**\". This directly corresponds to CWE-122 (Heap-based Buffer Overflow), which is a buffer overflow where the buffer is allocated on the heap. The provided code snippet and the CVE reference summary confirm this. CWE-193 (Off-by-one Error) is also relevant as it describes the specific error leading to the overflow. The floating-point rounding leading to `interpolation->upper[i]` potentially being smaller than `interpolation->lower[i]` causing out-of-bounds access is a clear instance of an off-by-one error. The MITRE mapping guidance allows the usage of both CWE-122 and CWE-193.\n  \n  - *Relationship Analysis:* CWE-122 is a variant of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), making it a more specific choice given the heap allocation detail. CWE-193 can precede CWE-119, indicating it's a contributing factor to the buffer overflow. The integer overflow related CWEs aren't directly related as the problem is with floating points, not integers.\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.95 (High evidence from technical description and CVE reference materials)\n\n---\n```",
  "analysis_with_relationships": "```markdown\n# Summary \n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.95 | Variant | Allowed | Primary CWE |\n| CWE-193 | Off-by-one Error | 0.85 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states a \"**heap buffer overflow**\" occurs due to a \"**float rounding results in off-by-one error**\". This directly corresponds to CWE-122 (Heap-based Buffer Overflow), which is a buffer overflow where the buffer is allocated on the heap. The provided code snippet and the CVE reference summary confirm this. CWE-193 (Off-by-one Error) is also relevant as it describes the specific error leading to the overflow. The floating-point rounding leading to `interpolation->upper[i]` potentially being smaller than `interpolation->lower[i]` causing out-of-bounds access is a clear instance of an off-by-one error. The MITRE mapping guidance allows the usage of both CWE-122 and CWE-193.\n  \n  - *Relationship Analysis:* CWE-122 is a variant of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), making it a more specific choice given the heap allocation detail. CWE-193 can precede CWE-119, indicating it's a contributing factor to the buffer overflow. The integer overflow related CWEs aren't directly related as the problem is with floating points, not integers.\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.95 (High evidence from technical description and CVE reference materials)\n\n---\n```",
  "criticism": "Okay, here's a detailed review of the provided analysis, considering the full CWE specifications:\n\n**Overall Assessment:**\n\nThe analysis is generally good and accurately identifies the primary and secondary CWEs. The confidence scores are appropriate, given the evidence. The justification is also well-reasoned.  However, some minor adjustments and additions could strengthen the analysis further, particularly in recognizing more CWEs that contribute to the overall vulnerability.\n\n**Detailed Review:**\n\n| CWE ID  | Name                         | Confidence | Abstraction Level | Mapping Label | Critique                                                                                                                                                                                                                                                                                                                                                                                          |\n|---------|------------------------------|------------|-------------------|---------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| CWE-122 | Heap-based Buffer Overflow  | 0.95       | Variant           | Allowed       | **Accurate.** This is the direct consequence of the vulnerability. The explanation clearly links the vulnerability description to the CWE definition. The confidence level is justified.                                                                                                                                                                                                 |\n| CWE-193 | Off-by-one Error             | 0.85       | Base              | Allowed       | **Accurate.**  The analysis correctly identifies the off-by-one error as a contributing factor leading to the buffer overflow.  This is a key step in the chain of events.  The confidence is good, as it's not the direct, exploitable weakness, but a necessary precursor.                                                                                                                  |\n|           | **Additional CWE Candidates:** |            |                   |               |                                                                                                                                                                                                                                                                                                                                                                                          |\n| CWE-681 | Incorrect Conversion between Numeric Types | 0.70       | Base              | Allowed       |**Potentially Relevant.** While the analysis focuses on floating-point rounding errors, the conversion of the floating-point results (after `floor` and `ceil`) to integers (`int64`) for array indexing *could* be considered an incorrect conversion if the range of the resulting floating-point values is not properly validated *before* the conversion.  This is less certain than the other CWEs, as it depends on whether the potential out-of-range float values are considered to be directly caused by the conversion or by lack of validation earlier in the process. A lower confidence (0.70) would be suitable. The retriever results suggest this is relevant.                                                                  |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.75 | Base | Allowed | **Potentially Relevant.** The size and dimensions of the input image, along with the resizing parameters, are effectively \"quantities.\" The vulnerability arises because these quantities, in combination with the `align_corners` and `half_pixel_centers` flags, are not adequately validated to prevent the off-by-one error and subsequent overflow. The Retriever results suggested this and is likely a good fit.                                                                                                                    |\n| CWE-1339 | Insufficient Precision or Accuracy of a Real Number | 0.75 | Base | Allowed | **Potentially Relevant.** The core issue begins with the lack of sufficient precision when using floating-point numbers to compute image coordinates. The floating-point representation's inability to perfectly represent certain real numbers, and subsequent rounding, is what leads to the `upper` and `lower` bound discrepancies. While the *direct* consequence is the buffer overflow, the root cause is the limited precision of the float type. This is a contributing factor.  The retriever results did not show this as a result but is relevant. |\n| CWE-787 | Out-of-bounds Write | 0.70 | Base | Allowed | **Implicit Consequence.** While CWE-122 is the Heap-based variant, CWE-787 is the broader, more general class. Since we are explicitly dealing with writing out-of-bounds, it is a valid CWE, though CWE-122 is more specific, and therefore, preferred.                                                                                                                            |\n\n**Revised Summary Table (with Additions):**\n\n| CWE ID  | Name                                           | Confidence | Abstraction Level | Mapping Label |\n|---------|-------------------------------------------------|------------|-------------------|---------------|\n| CWE-122 | Heap-based Buffer Overflow                      | 0.95       | Variant           | Allowed       |\n| CWE-193 | Off-by-one Error                                | 0.85       | Base              | Allowed       |\n| CWE-681 | Incorrect Conversion between Numeric Types  | 0.70       | Base              | Allowed       |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.75 | Base | Allowed |\n| CWE-1339 | Insufficient Precision or Accuracy of a Real Number | 0.75 | Base | Allowed |\n| CWE-787 | Out-of-bounds Write | 0.70 | Base | Allowed |\n\n**Justification for Additional CWEs:**\n\n*   **CWE-681:** The conversion from float to int is a potential point of vulnerability if the float value is outside the valid range for the integer. The fact that integers are used as indices to access memory makes this conversion critical and a possible point of failure.\n*   **CWE-1284:** The vulnerability can be triggered by specific input image dimensions combined with specific scaling parameters and corner alignment options. This demonstrates improper validation of these \"quantities\" that define the image and scaling operation.\n*   **CWE-1339:** The fundamental problem is that floating-point numbers have limited precision, and relying on them for precise calculations that determine memory access boundaries is inherently risky. This is the \"Insufficient Precision\" weakness.\n* CWE-787: Out-of-bounds Write: Since CWE-122 is a variant of CWE-787, it would likely be present. This is supported by the Retriever Results.\n\n**Mitigation Considerations (based on CWE specifications):**\n\nThe CWE specifications provide valuable insight into mitigation strategies.  Here's how the proposed CWEs and the corresponding mitigations relate to this vulnerability:\n\n*   **CWE-122 (Heap-based Buffer Overflow):**  Mitigations center on using languages/compilers with automatic bounds checking, using safe abstraction libraries, and employing compiler-based overflow detection mechanisms. The fix already implements bounds checking of sorts, which is consistent with the general advice.\n*   **CWE-193 (Off-by-one Error):**  The primary mitigation focuses on careful implementation, particularly when copying character arrays. In this case, that translates to ensuring correct calculations for image coordinate boundaries. The fix implements a check to prevent the lower bound from exceeding the upper bound, which addresses this directly.\n*   **CWE-681 (Incorrect Conversion between Numeric Types):** Mitigations suggest avoiding conversions between numeric types or carefully checking for allowed ranges. In this case, before converting the floating-point values to integers, range checks should be added.\n*   **CWE-1284 (Improper Validation of Specified Quantity in Input):** The suggested mitigation is to use an \"accept known good\" input validation strategy. In the context of the vulnerability, this means thoroughly validating the size, dimensions, and scaling parameters to ensure they are within acceptable limits and do not create conditions that could lead to the overflow.\n*   **CWE-1339 (Insufficient Precision or Accuracy of a Real Number):** This highlights the need to consider alternative, more precise representations (e.g., ratios of BigInts) or using Unum reals. While a full switch to a different number representation might be impractical, the code should, at least, be aware of the inherent limitations of floating-point numbers.\n\n**Refined Justification for Confidence Scores:**\n\nThe refined confidence scores reflect a more nuanced understanding of the relationships between the weaknesses:\n\n*   **CWE-122 (0.95):** High confidence, as this is the direct, exploitable result.\n*   **CWE-193 (0.85):** High confidence, as this is a strong contributing factor.\n*   **CWE-681 (0.70):** Moderate confidence, as it depends on whether or not the conversion of the float values is out of range.\n*   **CWE-1284 (0.75):** Moderate confidence, the parameters were not adequately validated.\n*   **CWE-1339 (0.75):** Moderate confidence, it is relevant to the root cause, but not as direct as the overflow itself.\n* CWE-787(0.70): Moderate confidence, CWE-122 is a variant.\n\n**Conclusion:**\n\nThe original analysis was strong, but incorporating these additional CWEs provides a more complete and accurate picture of the vulnerability's root causes and contributing factors. The mitigation advice, informed by the full CWE specifications, becomes more targeted and effective with these additions. This revised analysis more fully captures the complexity of the vulnerability.",
  "resolution": "# Summary \n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.95 | Variant | Allowed | Primary CWE |\n| CWE-193 | Off-by-one Error | 0.85 | Base | Allowed | Secondary Candidate |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.75 | Base | Allowed | Secondary Candidate |\n| CWE-1339 | Insufficient Precision or Accuracy of a Real Number | 0.75 | Base | Allowed | Secondary Candidate |\n| CWE-681 | Incorrect Conversion between Numeric Types | 0.70 | Base | Allowed | Secondary Candidate |\n| CWE-787 | Out-of-bounds Write | 0.70 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-122 (Heap-based Buffer Overflow)**, which is a specific type of buffer overflow. **CWE-193 (Off-by-one Error)** is a contributing factor. **CWE-1284 (Improper Validation of Specified Quantity in Input)** and **CWE-1339 (Insufficient Precision or Accuracy of a Real Number)** contribute to the root cause by highlighting issues with input validation and the limitations of floating-point arithmetic. **CWE-681 (Incorrect Conversion between Numeric Types)** is a less direct but still relevant factor. **CWE-787 (Out-of-bounds Write)** is a more general form of **CWE-122**.\n\n```mermaid\ngraph TD\n    cwe122[\"CWE-122: Heap-based Buffer Overflow\"]\n    cwe193[\"CWE-193: Off-by-one Error\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    cwe1339[\"CWE-1339: Insufficient Precision or Accuracy of a Real Number\"]\n    cwe681[\"CWE-681: Incorrect Conversion between Numeric Types\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    cwe682[\"CWE-682: Incorrect Calculation\"]\n\n    cwe122 -->|CHILDOF| cwe787\n    cwe787 -->|CHILDOF| cwe119\n    cwe193 -->|CANPRECEDE| cwe122\n    cwe1339 -->|CANPRECEDE| cwe122\n    cwe1284 -->|CANPRECEDE| cwe122\n    cwe681 -->|CANPRECEDE| cwe122\n    cwe193 -->|CHILDOF| cwe682\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n\n    class cwe122 primary\n    class cwe193,cwe1284,cwe1339,cwe681,cwe787 secondary\n    class cwe119,cwe682 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-1339 (Insufficient Precision or Accuracy of a Real Number)**, leading to incorrect floating-point calculations. This results in **CWE-193 (Off-by-one Error)** when calculating image element boundaries. The incorrect boundaries, combined with inadequate validation of input parameters (**CWE-1284 (Improper Validation of Specified Quantity in Input)**), and potential issues during float to int conversion (**CWE-681 (Incorrect Conversion between Numeric Types)**), leads to **CWE-787 (Out-of-bounds Write)**, specifically a **CWE-122 (Heap-based Buffer Overflow)**.\n\n## Summary of Analysis\nThe initial analysis correctly identified **CWE-122 (Heap-based Buffer Overflow)** and **CWE-193 (Off-by-one Error)** as the primary and secondary CWEs, respectively. The criticism expanded on this by identifying additional contributing factors, namely **CWE-1284 (Improper Validation of Specified Quantity in Input)**, **CWE-1339 (Insufficient Precision or Accuracy of a Real Number)**, **CWE-681 (Incorrect Conversion between Numeric Types)**, and **CWE-787 (Out-of-bounds Write)**.\n\nThe graph relationships influenced the final selection by illustrating how **CWE-193**, **CWE-1284**, and **CWE-1339** can precede **CWE-122** and contribute to the vulnerability. **CWE-122** is a child of **CWE-787**, making it a more specific choice.\n\nThe selected CWEs are at the optimal level of specificity. **CWE-122** is a variant that accurately describes the heap-based nature of the buffer overflow. **CWE-193**, **CWE-1284**, and **CWE-1339** are base-level CWEs that represent contributing factors without being overly specific. **CWE-681** is included as a potential contributing factor.\n\nThe evidence for **CWE-122** is the statement \"an attacker can trigger a heap buffer overflow\". The evidence for **CWE-193** is the phrase \"float rounding results in off-by-one error\". The evidence for **CWE-1284** is the vulnerability arising because input parameters, in combination with flags, are not adequately validated. The evidence for **CWE-1339** is how the core issue begins with the lack of sufficient precision when using floating-point numbers. The evidence for **CWE-681** is the conversion of the floating-point results to integers for array indexing. The evidence for **CWE-787** is that we are explicitly dealing with writing out-of-bounds.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 1641.8680337705198,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5543907146392761,
            "sparse": 1641.8680337705198,
            "graph": 2.5207295794957227
          },
          "normalized_scores": {
            "dense": 0.5543907146392761,
            "sparse": 1.0,
            "graph": 0.9002605641056153
          },
          "weighted_scores": {
            "dense": 0.19403675012374663,
            "sparse": 0.4,
            "graph": 0.22506514102640382
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5543907146392761,
              "query_max": 0.5543907146392761,
              "query_min": 0.4628333535307965,
              "normalized_score": 0.5543907146392761,
              "weight": 0.35,
              "weighted_score": 0.19403675012374663
            },
            "sparse": {
              "raw_score": 1641.8680337705198,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 2.5207295794957227,
              "query_max": 2.7196000000000002,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.9002605641056153,
              "weight": 0.25,
              "weighted_score": 0.22506514102640382
            }
          },
          "contribution_percentages": {
            "dense": 23.688963756546567,
            "sparse": 48.83397344356462,
            "graph": 27.477062799888824
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.8191018911501504,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 1.0648324584951956
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 1.0648324584951956
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 1.1713157043447153
            }
          },
          "combined_score": 1.1713157043447153
        }
      },
      "similarity": 1.1713157043447153
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 3386.260454944181,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.498443159428302,
            "sparse": 3386.260454944181,
            "graph": 2.1047128292035273
          },
          "normalized_scores": {
            "dense": 0.498443159428302,
            "sparse": 1.0,
            "graph": 0.7516831532869741
          },
          "weighted_scores": {
            "dense": 0.17445510579990567,
            "sparse": 0.4,
            "graph": 0.18792078832174353
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.498443159428302,
              "query_max": 0.5543907146392761,
              "query_min": 0.4628333535307965,
              "normalized_score": 0.498443159428302,
              "weight": 0.35,
              "weighted_score": 0.17445510579990567
            },
            "sparse": {
              "raw_score": 3386.260454944181,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 2.1047128292035273,
              "query_max": 2.7196000000000002,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.7516831532869741,
              "weight": 0.25,
              "weighted_score": 0.18792078832174353
            }
          },
          "contribution_percentages": {
            "dense": 22.883082629586475,
            "sparse": 52.46755610771891,
            "graph": 24.649361262694615
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.7623758941216492,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.991088662358144
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.991088662358144
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 1.0901975285939585
            }
          },
          "combined_score": 1.0901975285939585
        }
      },
      "similarity": 1.0901975285939585
    },
    {
      "metadata": {
        "doc_id": "CWE-681",
        "name": "Incorrect Conversion between Numeric Types",
        "type": "Base",
        "original_content": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
        "relationships": [],
        "original_sparse_score": 2388.2831450950002,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5234014574748049,
            "sparse": 2388.2831450950002,
            "graph": 1.9889168598361748
          },
          "normalized_scores": {
            "dense": 0.5234014574748049,
            "sparse": 1.0,
            "graph": 0.7103274499414911
          },
          "weighted_scores": {
            "dense": 0.1831905101161817,
            "sparse": 0.4,
            "graph": 0.17758186248537278
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5234014574748049,
              "query_max": 0.5543907146392761,
              "query_min": 0.4628333535307965,
              "normalized_score": 0.5234014574748049,
              "weight": 0.35,
              "weighted_score": 0.1831905101161817
            },
            "sparse": {
              "raw_score": 2388.2831450950002,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 1.9889168598361748,
              "query_max": 2.7196000000000002,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.7103274499414911,
              "weight": 0.25,
              "weighted_score": 0.17758186248537278
            }
          },
          "contribution_percentages": {
            "dense": 24.079542937362362,
            "sparse": 52.57814484405512,
            "graph": 23.342312218582517
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.7607723726015545,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.9890040843820209
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.9890040843820209
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 1.087904492820223
            }
          },
          "combined_score": 1.087904492820223
        }
      },
      "similarity": 1.087904492820223
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 2206.787542601728,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5302284537850639,
            "sparse": 2206.787542601728,
            "graph": 1.6238319038321505
          },
          "normalized_scores": {
            "dense": 0.5302284537850639,
            "sparse": 1.0,
            "graph": 0.5799399656543395
          },
          "weighted_scores": {
            "dense": 0.18557995882477235,
            "sparse": 0.4,
            "graph": 0.14498499141358487
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5302284537850639,
              "query_max": 0.5543907146392761,
              "query_min": 0.4628333535307965,
              "normalized_score": 0.5302284537850639,
              "weight": 0.35,
              "weighted_score": 0.18557995882477235
            },
            "sparse": {
              "raw_score": 2206.787542601728,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 1.6238319038321505,
              "query_max": 2.7196000000000002,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.5799399656543395,
              "weight": 0.25,
              "weighted_score": 0.14498499141358487
            }
          },
          "contribution_percentages": {
            "dense": 25.402253251298774,
            "sparse": 54.75214761801731,
            "graph": 19.845599130683926
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.7305649502383572,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.9497344353098645
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.9497344353098645
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 1.044707878840851
            }
          },
          "combined_score": 1.044707878840851
        }
      },
      "similarity": 1.044707878840851
    },
    {
      "metadata": {
        "doc_id": "CWE-824",
        "name": "Access of Uninitialized Pointer",
        "type": "Base",
        "original_content": "The product accesses or uses a pointer that has not been initialized.",
        "relationships": [],
        "original_sparse_score": 2452.527105698608,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5101425787663676,
            "sparse": 2452.527105698608,
            "graph": 1.6631231383272105
          },
          "normalized_scores": {
            "dense": 0.5101425787663676,
            "sparse": 1.0,
            "graph": 0.5939725494025752
          },
          "weighted_scores": {
            "dense": 0.17854990256822864,
            "sparse": 0.4,
            "graph": 0.1484931373506438
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5101425787663676,
              "query_max": 0.5543907146392761,
              "query_min": 0.4628333535307965,
              "normalized_score": 0.5101425787663676,
              "weight": 0.35,
              "weighted_score": 0.17854990256822864
            },
            "sparse": {
              "raw_score": 2452.527105698608,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 1.6631231383272105,
              "query_max": 2.7196000000000002,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.5939725494025752,
              "weight": 0.25,
              "weighted_score": 0.1484931373506438
            }
          },
          "contribution_percentages": {
            "dense": 24.558367629535695,
            "sparse": 55.01737559369722,
            "graph": 20.424256776767095
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.7270430399188724,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.9451559518945342
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.9451559518945342
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 1.0396715470839877
            }
          },
          "combined_score": 1.0396715470839877
        }
      },
      "similarity": 1.0396715470839877
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 1654.8311301425465,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1654.8311301425465,
            "graph": 2.7196000000000002
          },
          "normalized_scores": {
            "sparse": 1.0,
            "graph": 0.9712857142857144
          },
          "weighted_scores": {
            "sparse": 0.4,
            "graph": 0.2428214285714286
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1654.8311301425465,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 2.7196000000000002,
              "query_max": 2.7196000000000002,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.9712857142857144,
              "weight": 0.25,
              "weighted_score": 0.2428214285714286
            }
          },
          "contribution_percentages": {
            "sparse": 62.225679204400244,
            "graph": 37.774320795599756
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.6428214285714287,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.8356678571428573
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.8356678571428573
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.9192346428571431
            }
          },
          "combined_score": 0.9192346428571431
        }
      },
      "similarity": 0.9192346428571431
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 1467.7060676562262,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5053998120337457,
            "sparse": 1467.7060676562262
          },
          "normalized_scores": {
            "dense": 0.5053998120337457,
            "sparse": 1.0
          },
          "weighted_scores": {
            "dense": 0.17688993421181098,
            "sparse": 0.4
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5053998120337457,
              "query_max": 0.5543907146392761,
              "query_min": 0.4628333535307965,
              "normalized_score": 0.5053998120337457,
              "weight": 0.35,
              "weighted_score": 0.17688993421181098
            },
            "sparse": {
              "raw_score": 1467.7060676562262,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "dense": 30.662683420450193,
            "sparse": 69.3373165795498
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.576889934211811,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7499569144753543
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7499569144753543
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.8249526059228898
            }
          },
          "combined_score": 0.8249526059228898
        }
      },
      "similarity": 0.8249526059228898
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 2226.3645015079564,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5458403921573138,
            "sparse": 2226.3645015079564
          },
          "normalized_scores": {
            "dense": 0.5458403921573138,
            "sparse": 1.0
          },
          "weighted_scores": {
            "dense": 0.19104413725505984,
            "sparse": 0.4
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5458403921573138,
              "query_max": 0.5543907146392761,
              "query_min": 0.4628333535307965,
              "normalized_score": 0.5458403921573138,
              "weight": 0.35,
              "weighted_score": 0.19104413725505984
            },
            "sparse": {
              "raw_score": 2226.3645015079564,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "dense": 32.32315917087194,
            "sparse": 67.67684082912805
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5910441372550599,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.7092529647060718
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7092529647060718
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.780178261176679
            }
          },
          "combined_score": 0.780178261176679
        }
      },
      "similarity": 0.780178261176679
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 1892.9464597275803,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1892.9464597275803,
            "graph": 1.5301691744148012
          },
          "normalized_scores": {
            "sparse": 1.0,
            "graph": 0.546488990862429
          },
          "weighted_scores": {
            "sparse": 0.4,
            "graph": 0.13662224771560724
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1892.9464597275803,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 1.5301691744148012,
              "query_max": 2.7196000000000002,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.546488990862429,
              "weight": 0.25,
              "weighted_score": 0.13662224771560724
            }
          },
          "contribution_percentages": {
            "sparse": 74.54033106208212,
            "graph": 25.459668937917883
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5366222477156073,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6976089220302895
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6976089220302895
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7673698142333185
            }
          },
          "combined_score": 0.7673698142333185
        }
      },
      "similarity": 0.7673698142333185
    },
    {
      "metadata": {
        "doc_id": "CWE-617",
        "name": "Reachable Assertion",
        "type": "Base",
        "original_content": "The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary.",
        "relationships": [],
        "original_sparse_score": 1833.8473890682224,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1833.8473890682224,
            "graph": 1.519273155401407
          },
          "normalized_scores": {
            "sparse": 1.0,
            "graph": 0.5425975555005025
          },
          "weighted_scores": {
            "sparse": 0.4,
            "graph": 0.13564938887512562
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1833.8473890682224,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 1.519273155401407,
              "query_max": 2.7196000000000002,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.5425975555005025,
              "weight": 0.25,
              "weighted_score": 0.13564938887512562
            }
          },
          "contribution_percentages": {
            "sparse": 74.67571293976604,
            "graph": 25.324287060233935
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5356493888751257,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6963442055376634
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6963442055376634
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7659786260914299
            }
          },
          "combined_score": 0.7659786260914299
        }
      },
      "similarity": 0.7659786260914299
    },
    {
      "metadata": {
        "doc_id": "CWE-415",
        "name": "Double Free",
        "type": "Variant",
        "original_content": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
        "relationships": [],
        "original_sparse_score": 1855.3878932282921,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4854796520927957,
            "sparse": 1855.3878932282921
          },
          "normalized_scores": {
            "dense": 0.4854796520927957,
            "sparse": 1.0
          },
          "weighted_scores": {
            "dense": 0.16991787823247848,
            "sparse": 0.4
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4854796520927957,
              "query_max": 0.5543907146392761,
              "query_min": 0.4628333535307965,
              "normalized_score": 0.4854796520927957,
              "weight": 0.35,
              "weighted_score": 0.16991787823247848
            },
            "sparse": {
              "raw_score": 1855.3878932282921,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "dense": 29.814449541301506,
            "sparse": 70.18555045869849
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5699178782324785,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.6839014538789742
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6839014538789742
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7522915992668716
            }
          },
          "combined_score": 0.7522915992668716
        }
      },
      "similarity": 0.7522915992668716
    },
    {
      "metadata": {
        "doc_id": "CWE-1287",
        "name": "Improper Validation of Specified Type of Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to be of a certain type, but it does not validate or incorrectly validates that the input is actually of the expected type.",
        "relationships": [],
        "original_sparse_score": 899.9104601545353,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5101352027262555,
            "sparse": 899.9104601545353
          },
          "normalized_scores": {
            "dense": 0.5101352027262555,
            "sparse": 0.7199283681236283
          },
          "weighted_scores": {
            "dense": 0.1785473209541894,
            "sparse": 0.28797134724945134
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5101352027262555,
              "query_max": 0.5543907146392761,
              "query_min": 0.4628333535307965,
              "normalized_score": 0.5101352027262555,
              "weight": 0.35,
              "weighted_score": 0.1785473209541894
            },
            "sparse": {
              "raw_score": 899.9104601545353,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 0.7199283681236283,
              "weight": 0.4,
              "weighted_score": 0.28797134724945134
            }
          },
          "contribution_percentages": {
            "dense": 38.27227785796804,
            "sparse": 61.72772214203196
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.46651866820364074,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.606474268664733
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.606474268664733
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6671216955312064
            }
          },
          "combined_score": 0.6671216955312064
        }
      },
      "similarity": 0.6671216955312064
    },
    {
      "metadata": {
        "doc_id": "CWE-835",
        "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "type": "Base",
        "original_content": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
        "relationships": [],
        "original_sparse_score": 2019.9735608935987,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 2019.9735608935987
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 2019.9735608935987,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.52
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.52
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5720000000000001
            }
          },
          "combined_score": 0.5720000000000001
        }
      },
      "similarity": 0.5720000000000001
    },
    {
      "metadata": {
        "doc_id": "CWE-476",
        "name": "NULL Pointer Dereference",
        "type": "Base",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "relationships": [],
        "original_sparse_score": 1775.7368539738413,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1775.7368539738413
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1775.7368539738413,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.52
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.52
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5720000000000001
            }
          },
          "combined_score": 0.5720000000000001
        }
      },
      "similarity": 0.5720000000000001
    },
    {
      "metadata": {
        "doc_id": "CWE-1286",
        "name": "Improper Validation of Syntactic Correctness of Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.",
        "relationships": [],
        "original_sparse_score": 1572.5595894138103,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1572.5595894138103
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1572.5595894138103,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.52
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.52
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5720000000000001
            }
          },
          "combined_score": 0.5720000000000001
        }
      },
      "similarity": 0.5720000000000001
    },
    {
      "metadata": {
        "doc_id": "CWE-843",
        "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
        "type": "Base",
        "original_content": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.",
        "relationships": [],
        "original_sparse_score": 1561.8115577698275,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1561.8115577698275
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1561.8115577698275,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.52
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.52
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5720000000000001
            }
          },
          "combined_score": 0.5720000000000001
        }
      },
      "similarity": 0.5720000000000001
    },
    {
      "metadata": {
        "doc_id": "CWE-663",
        "name": "Use of a Non-reentrant Function in a Concurrent Context",
        "type": "Base",
        "original_content": "The product calls a non-reentrant function in a concurrent context in which a competing code sequence (e.g. thread or signal handler) may have an opportunity to call the same function or otherwise influence its state.",
        "relationships": [],
        "original_sparse_score": 1559.3732785009677,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1559.3732785009677
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1559.3732785009677,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.52
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.52
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5720000000000001
            }
          },
          "combined_score": 0.5720000000000001
        }
      },
      "similarity": 0.5720000000000001
    },
    {
      "metadata": {
        "doc_id": "CWE-95",
        "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. \"eval\").",
        "relationships": [],
        "original_sparse_score": 1635.932713049707,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1635.932713049707
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1635.932713049707,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.48
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.48
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.528
            }
          },
          "combined_score": 0.528
        }
      },
      "similarity": 0.528
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 1817.9085010016424,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1817.9085010016424
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1817.9085010016424,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.32000000000000006
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.32000000000000006
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.3360000000000001
            }
          },
          "combined_score": 0.3360000000000001
        }
      },
      "similarity": 0.3360000000000001
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 1620.0657676835904,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1620.0657676835904
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1620.0657676835904,
              "query_max": 3386.260454944181,
              "query_min": 899.9104601545353,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.32000000000000006
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.32000000000000006
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.25600000000000006
            }
          },
          "combined_score": 0.25600000000000006
        }
      },
      "similarity": 0.25600000000000006
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-122",
      "CWE-119",
      "CWE-193"
    ],
    "critic_additional": [
      "CWE-681",
      "CWE-1339",
      "CWE-787",
      "CWE-1284"
    ]
  }
}