{
  "query": "yajl-ruby is a C binding to the YAJL JSON parsing and generation library. The 1.x branch and the 2.x branch of `yajl` contain an integer overflow which leads to subsequent heap memory corruption when dealing with large (~2GB) inputs. The reallocation logic at `yajl_buf.c#L64` may result in the `need` 32bit integer wrapping to 0 when `need` approaches a value of 0x80000000 (i.e. ~2GB of data), which results in a reallocation of buf->alloc into a small heap chunk. These integers are declared as `size_t` in the 2.x branch of `yajl`, which practically prevents the issue from triggering on 64bit platforms, however this does not preclude this issue triggering on 32bit builds on which `size_t` is a 32bit integer. Subsequent population of this under-allocated heap chunk is based on the original buffer size, leading to heap memory corruption. This vulnerability mostly impacts process availability. Maintainers believe exploitation for arbitrary code execution is unlikely. A patch is available and anticipated to be part of yajl-ruby version 1.4.2. As a workaround, avoid passing large inputs to YAJL.",
  "count": 20,
  "results": [
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 1481.9124913273488,
      "original_score": 1481.9124913273488,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 1054.0640938617203,
      "original_score": 1054.0640938617203,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "197",
      "name": "Numeric Truncation Error",
      "abstraction": "Base",
      "score": 1048.794300579134,
      "original_score": 1048.794300579134,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 994.7626518341233,
      "original_score": 994.7626518341233,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "704",
      "name": "Incorrect Type Conversion or Cast",
      "abstraction": "Class",
      "score": 979.0650368851834,
      "original_score": 979.0650368851834,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "abstraction": "Base",
      "score": 978.4511986123007,
      "original_score": 978.4511986123007,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "score": 968.6234335277452,
      "original_score": 968.6234335277452,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 956.2515157422956,
      "original_score": 956.2515157422956,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 953.7742467495143,
      "original_score": 953.7742467495143,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 952.7120064418698,
      "original_score": 952.7120064418698,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "681",
      "name": "Incorrect Conversion between Numeric Types",
      "abstraction": "Base",
      "score": 950.1467806348293,
      "original_score": 950.1467806348293,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "131",
      "name": "Incorrect Calculation of Buffer Size",
      "abstraction": "Base",
      "score": 922.1359777061341,
      "original_score": 922.1359777061341,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 911.7746095743215,
      "original_score": 911.7746095743215,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "20",
      "name": "Improper Input Validation",
      "abstraction": "Class",
      "score": 906.2720227283853,
      "original_score": 906.2720227283853,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "abstraction": "Base",
      "score": 902.0348363367984,
      "original_score": 902.0348363367984,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "abstraction": "Base",
      "score": 894.7016038994125,
      "original_score": 894.7016038994125,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "194",
      "name": "Unexpected Sign Extension",
      "abstraction": "Variant",
      "score": 892.4154413387282,
      "original_score": 892.4154413387282,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "295",
      "name": "Improper Certificate Validation",
      "abstraction": "Base",
      "score": 889.9218956840238,
      "original_score": 889.9218956840238,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 884.3459045149799,
      "original_score": 884.3459045149799,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 874.125575732083,
      "original_score": 874.125575732083,
      "mapping_usage": "Allowed-with-Review"
    }
  ],
  "statistics": {
    "min": 874.125575732083,
    "max": 1481.9124913273488,
    "mean": 969.8142811855465,
    "median": 951.4293935383496,
    "count": 20
  }
}