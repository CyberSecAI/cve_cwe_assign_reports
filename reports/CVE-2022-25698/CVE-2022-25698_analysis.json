{
  "cve_id": "CVE-2022-25698",
  "description": "Memory corruption in SPI buses due to improper input validation while reading address configuration from spi buses in Snapdragon Mobile, Snapdragon Wearables",
  "key_phrases": {
    "rootcause": "improper input validation",
    "weakness": "memory corruption",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "Snapdragon Mobile, Snapdragon Wearables",
    "version": "",
    "component": "SPI buses"
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1285 | Improper Validation of Specified Index, Position, or Offset in Input | 0.85 | Base | Allowed | Primary CWE.  The product receives input that is expected to specify an index, position, or offset into an indexable resource but it does not validate or incorrectly validates that the specified index/position/offset has the required properties. |\n| CWE-787 | Out-of-bounds Write | 0.65 | Base | Allowed | Secondary CWE. The product writes data past the end, or before the beginning, of the intended buffer. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.75\n*   **Evidence Strength:** MEDIUM\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description states \"**improper input validation**\" as the root cause leading to \"**memory corruption**\" in SPI buses. This strongly suggests that the input, which specifies an index, position, or offset, is not properly validated before being used.  CWE-1285 (Improper Validation of Specified Index, Position, or Offset in Input) directly addresses this scenario.  The description for CWE-1285 states: \"The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.\" This aligns well with the provided vulnerability description. CWE-787 (Out-of-bounds Write) is a potential consequence of the improper validation of specified indices or offsets. If an index/offset is not validated and is out of range, writing data using that index can lead to memory corruption due to an out-of-bounds write.\n\n  - *Relationship Analysis:* CWE-1285 is a base-level CWE which is appropriate.  CWE-129 (Improper Validation of Array Index) is a child of CWE-1285, but the description only talks about array indices. The vulnerability mentions addresses on spi buses which may be used in other indexed structures other than arrays. CWE-787 is a parent of CWE-122 (Heap Overflow), CWE-121 (Stack Overflow), and CWE-124 (Buffer Underwrite).\n\n- **Confidence Score:**\n  - Confidence: 0.85 (The vulnerability description explicitly mentions improper input validation which aligns with CWE-1285 and subsequent memory corruption which aligns with CWE-787.)",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1285 | Improper Validation of Specified Index, Position, or Offset in Input | 0.85 | Base | Allowed | Primary CWE.  The product receives input that is expected to specify an index, position, or offset into an indexable resource but it does not validate or incorrectly validates that the specified index/position/offset has the required properties. |\n| CWE-787 | Out-of-bounds Write | 0.65 | Base | Allowed | Secondary CWE. The product writes data past the end, or before the beginning, of the intended buffer. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.75\n*   **Evidence Strength:** MEDIUM\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description states \"**improper input validation**\" as the root cause leading to \"**memory corruption**\" in SPI buses. This strongly suggests that the input, which specifies an index, position, or offset, is not properly validated before being used.  CWE-1285 (Improper Validation of Specified Index, Position, or Offset in Input) directly addresses this scenario.  The description for CWE-1285 states: \"The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.\" This aligns well with the provided vulnerability description. CWE-787 (Out-of-bounds Write) is a potential consequence of the improper validation of specified indices or offsets. If an index/offset is not validated and is out of range, writing data using that index can lead to memory corruption due to an out-of-bounds write.\n\n  - *Relationship Analysis:* CWE-1285 is a base-level CWE which is appropriate.  CWE-129 (Improper Validation of Array Index) is a child of CWE-1285, but the description only talks about array indices. The vulnerability mentions addresses on spi buses which may be used in other indexed structures other than arrays. CWE-787 is a parent of CWE-122 (Heap Overflow), CWE-121 (Stack Overflow), and CWE-124 (Buffer Underwrite).\n\n- **Confidence Score:**\n  - Confidence: 0.85 (The vulnerability description explicitly mentions improper input validation which aligns with CWE-1285 and subsequent memory corruption which aligns with CWE-787.)",
  "criticism": "Okay, I've reviewed the analysis against the provided full CWE specifications. Here's my critique:\n\n**Overall Assessment:**\n\nThe analysis is generally well-reasoned and the selected CWEs, CWE-1285 and CWE-787, are appropriate given the vulnerability description. The confidence scores are also reasonable. The justifications are clear and logically connect the vulnerability description to the chosen CWEs.\n\n**Detailed Review:**\n\n*   **CWE-1285: Improper Validation of Specified Index, Position, or Offset in Input**\n\n    *   **Selection Justification:** The analysis correctly identifies that the core problem is the lack of or incorrect validation of an index, position, or offset obtained from input.  The justification quotes the CWE description, showing a clear match.\n    *   **Abstraction Level:**  The selection of a Base-level CWE is appropriate. While a more specific Variant *could* be used (e.g., CWE-129 if it's *definitely* an array index), the broader CWE-1285 is safer because the SPI bus addresses might map to other indexed resources than arrays (as the analysis also mentioned).\n    *   **Mitigation Alignment:** The suggested mitigation for CWE-1285, which emphasizes an \"accept known good\" input validation strategy, is directly relevant and applicable to the described vulnerability. It highlights the need for strict validation of the address configuration read from the SPI bus.\n    *   **Confidence:** The confidence score of 0.85 is appropriate.  The vulnerability description explicitly states \"improper input validation.\"\n*   **CWE-787: Out-of-bounds Write**\n\n    *   **Selection Justification:** The analysis correctly identifies CWE-787 as a likely *consequence* of the improper input validation.  If the offset isn't validated, a write operation using that offset is likely to result in writing outside the intended buffer.\n    *   **Abstraction Level:** Base-level CWE is appropriate.\n    *   **Mitigation Alignment:** The mitigations for CWE-787 (language selection, safe libraries, and compiler-based overflow detection) are relevant, though less directly applicable than the mitigations for CWE-1285. They represent defense-in-depth measures. Using a memory-safe language for SPI bus interaction or enabling compiler-level buffer overflow protection would help prevent the *consequences* of the invalid offset.\n    *   **Relationship Analysis (Chain):** The analysis correctly identifies this relationship, and it is very important. CWE-787 is not a cause of the vulnerability, but a consequence of the original vulnerability, CWE-1285. The relationship is such that CWE-1285 -> CWE-787. It is likely the case that CWE-1285 can lead to other memory corruption or code execution vulnerabilities other than CWE-787 (e.g. CWE-126).\n    *   **Confidence:** A confidence score of 0.65 is appropriate. While the connection is strong, it's not as direct as the connection to CWE-1285.  It's *possible* that improper validation could lead to other memory corruption issues besides out-of-bounds writes, although this is a strong possibility.\n*   **Top Retriever Results Analysis:**\n    *   The retriever results section listed several CWEs, but not all of them are equal. In addition to CWE-1285 and CWE-787, the retriever results also listed CWE-822, CWE-823, CWE-367, CWE-129, CWE-190, CWE-390, CWE-1284, CWE-126.\n    *   CWE-822: \"Untrusted Pointer Dereference\" and CWE-823: \"Use of Out-of-range Pointer Offset\" are plausible, as the addresses on SPI buses could be considered a form of pointer. However, they are not as applicable as CWE-1285 as the pointers are not inherently \"untrusted\" in all cases, it is more applicable that the offset be validated first (CWE-1285).\n    *   CWE-367 \"Time-of-check Time-of-use (TOCTOU) Race Condition\" is less applicable. The description of the vulnerability makes no mention of race conditions. It is possible, but unlikely, and would need more specific details to justify.\n    *   CWE-129 \"Improper Validation of Array Index\" is similar to CWE-1285, but it only talks about arrays which is not necessarily the case.\n    *   CWE-190 \"Integer Overflow or Wraparound\" is less applicable as the vulnerability description makes no mention of overflows or wraparounds.\n    *   CWE-390 \"Detection of Error Condition Without Action\" and CWE-1284 \"Improper Validation of Specified Quantity in Input\" are not directly applicable.\n    *   CWE-126 \"Buffer Over-read\" is another potential consequence, if the code reads from an unvalidated index. However, the description mentions memory corruption, which is more closely related to memory writes.\n*   **Minor Suggestions:**\n\n    *   **Explicitly State Chain of Causation:** In the \"Analysis and Justification\" section, it would be helpful to explicitly state the chain of causation: \"Improper input validation (CWE-1285) *leads to* an out-of-bounds write (CWE-787), resulting in memory corruption.\"\n    *   **Link to Specific Buffer Type (if known):** If it's known whether the corrupted buffer is on the heap or stack, consider mentioning the more specific CWE-122 (Heap-based Buffer Overflow) or CWE-121 (Stack-based Buffer Overflow) as *potential* (but not definite) refinements of CWE-787. But only include these if you have reason to believe the buffer location is fixed.\n    *   **Consider CWE-20:** While the analysis correctly avoids using the very broad CWE-20 (\"Improper Input Validation\" itself), it's worth briefly mentioning why it was *not* selected. Something like: \"CWE-20 was not selected because CWE-1285 provides a more specific and accurate representation of the input validation problem.\" This helps demonstrate a thorough evaluation.\n\n**In summary:** The analysis is accurate and well-supported. The rationale behind the choice of CWE-1285 as the primary weakness and CWE-787 as a secondary effect is well explained. The suggestions above are minor refinements that could further strengthen the analysis.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1285 | Improper Validation of Specified Index, Position, or Offset in Input | 0.90 | Base | Allowed | Primary CWE. The product receives input that is expected to specify an index, position, or offset into an indexable resource but it does not validate or incorrectly validates that the specified index/position/offset has the required properties. |\n| CWE-787 | Out-of-bounds Write | 0.75 | Base | Allowed | Secondary CWE. The product writes data past the end, or before the beginning, of the intended buffer. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is a chain: **CWE-1285** (Improper Input Validation) can precede **CWE-787** (Out-of-bounds Write). **CWE-1285** is the root cause; by failing to validate the input, it directly leads to the out-of-bounds write. Both are at the Base level, which is appropriate. There are other potential consequences of **CWE-1285**, but **CWE-787** aligns best with the \"memory corruption\" mentioned in the vulnerability description. **CWE-129** (Improper Validation of Array Index) is a child of **CWE-1285** but is too specific.\n\n```mermaid\ngraph TD\n    cwe1285[\"CWE-1285: Improper Validation of Specified Index, Position, or Offset in Input\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe129[\"CWE-129: Improper Validation of Array Index\"]\n    \n    cwe787 -->|CANFOLLOW| cwe1285\n    cwe129 -->|CHILDOF| cwe1285\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe1285 primary\n    class cwe787 secondary\n    class cwe129 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **ROOTCAUSE** of **CWE-1285** (Improper Validation of Specified Index, Position, or Offset in Input). The product receives an input specifying an address configuration from the SPI bus but fails to properly validate this input. This **WEAKNESS** leads to **CWE-787** (Out-of-bounds Write), as the unvalidated address is used in a write operation, corrupting memory. The consequence is memory corruption in the SPI bus.\n\n## Summary of Analysis\nThe initial analysis and criticism are both well-reasoned. The explicit mention of \"improper input validation\" in the vulnerability description provides strong evidence for selecting **CWE-1285** as the primary weakness. The resulting \"memory corruption\" supports **CWE-787** as a likely consequence.\n\nThe relationship analysis strengthens this conclusion. The chain relationship between **CWE-1285** and **CWE-787** clearly shows how the initial input validation failure leads to the memory corruption. The Base abstraction level of both CWEs is appropriate for this scenario.\n\nThe decision to select **CWE-1285** and **CWE-787** is based on:\n\n1.  Direct evidence from the vulnerability description (\"improper input validation,\" \"memory corruption\").\n2.  The chain relationship between **CWE-1285** and **CWE-787**.\n3.  The appropriateness of the Base abstraction level.\n\nThe selected CWEs are at the optimal level of specificity because:\n\n*   **CWE-1285** accurately captures the root cause of the vulnerability, which is the failure to validate the input specifying an index, position, or offset. It's also more general than **CWE-129**, as it may not always be an array index.\n*   **CWE-787** represents the direct consequence of the invalid input, which is an out-of-bounds write leading to memory corruption.\n\nConfidence has been increased to 0.90 for CWE-1285 and 0.75 for CWE-787 based on the strong evidence. The overall confidence is 0.85.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-822",
        "name": "Untrusted Pointer Dereference",
        "type": "Base",
        "original_content": "The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.",
        "relationships": [],
        "original_sparse_score": 288.6097494338606,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5337668989989718,
            "sparse": 288.6097494338606,
            "graph": 2.5187324082497122
          },
          "normalized_scores": {
            "dense": 0.5337668989989718,
            "sparse": 0.2308877995470885,
            "graph": 0.8995472886606116
          },
          "weighted_scores": {
            "dense": 0.1868184146496401,
            "sparse": 0.0923551198188354,
            "graph": 0.2248868221651529
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5337668989989718,
              "query_max": 0.5807352708071585,
              "query_min": 0.5167551991823451,
              "normalized_score": 0.5337668989989718,
              "weight": 0.35,
              "weighted_score": 0.1868184146496401
            },
            "sparse": {
              "raw_score": 288.6097494338606,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.2308877995470885,
              "weight": 0.4,
              "weighted_score": 0.0923551198188354
            },
            "graph": {
              "raw_score": 2.5187324082497122,
              "query_max": 2.6784000000000003,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.8995472886606116,
              "weight": 0.25,
              "weighted_score": 0.2248868221651529
            }
          },
          "contribution_percentages": {
            "dense": 37.06270731094756,
            "sparse": 18.322234352177567,
            "graph": 44.61505833687489
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5040603566336284,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6552784636237169
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6552784636237169
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7208063099860886
            }
          },
          "combined_score": 0.7208063099860886
        }
      },
      "similarity": 0.7208063099860886
    },
    {
      "metadata": {
        "doc_id": "CWE-823",
        "name": "Use of Out-of-range Pointer Offset",
        "type": "Base",
        "original_content": "The product performs pointer arithmetic on a valid pointer, but it uses an offset that can point outside of the intended range of valid memory locations for the resulting pointer.",
        "relationships": [],
        "original_sparse_score": 289.0572524788132,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5225957868996293,
            "sparse": 289.0572524788132,
            "graph": 2.081649378700586
          },
          "normalized_scores": {
            "dense": 0.5225957868996293,
            "sparse": 0.23124580198305056,
            "graph": 0.7434462066787808
          },
          "weighted_scores": {
            "dense": 0.18290852541487024,
            "sparse": 0.09249832079322023,
            "graph": 0.1858615516696952
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5225957868996293,
              "query_max": 0.5807352708071585,
              "query_min": 0.5167551991823451,
              "normalized_score": 0.5225957868996293,
              "weight": 0.35,
              "weighted_score": 0.18290852541487024
            },
            "sparse": {
              "raw_score": 289.0572524788132,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.23124580198305056,
              "weight": 0.4,
              "weighted_score": 0.09249832079322023
            },
            "graph": {
              "raw_score": 2.081649378700586,
              "query_max": 2.6784000000000003,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.7434462066787808,
              "weight": 0.25,
              "weighted_score": 0.1858615516696952
            }
          },
          "contribution_percentages": {
            "dense": 39.65338320517946,
            "sparse": 20.05303663090484,
            "graph": 40.2935801639157
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4612683978777857,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5996489172411213
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5996489172411213
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6596138089652336
            }
          },
          "combined_score": 0.6596138089652336
        }
      },
      "similarity": 0.6596138089652336
    },
    {
      "metadata": {
        "doc_id": "CWE-1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
        "relationships": [],
        "original_sparse_score": 272.9802766111118,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5807352708071585,
            "sparse": 272.9802766111118,
            "graph": 1.6935520665001131
          },
          "normalized_scores": {
            "dense": 0.5807352708071585,
            "sparse": 0.21838422128888943,
            "graph": 0.6048400237500404
          },
          "weighted_scores": {
            "dense": 0.20325734478250546,
            "sparse": 0.08735368851555578,
            "graph": 0.1512100059375101
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5807352708071585,
              "query_max": 0.5807352708071585,
              "query_min": 0.5167551991823451,
              "normalized_score": 0.5807352708071585,
              "weight": 0.35,
              "weighted_score": 0.20325734478250546
            },
            "sparse": {
              "raw_score": 272.9802766111118,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.21838422128888943,
              "weight": 0.4,
              "weighted_score": 0.08735368851555578
            },
            "graph": {
              "raw_score": 1.6935520665001131,
              "query_max": 2.6784000000000003,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.6048400237500404,
              "weight": 0.25,
              "weighted_score": 0.1512100059375101
            }
          },
          "contribution_percentages": {
            "dense": 46.00445128963905,
            "sparse": 19.771283111979713,
            "graph": 34.22426559838123
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.44182103923557137,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5743673510062428
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5743673510062428
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6318040861068671
            }
          },
          "combined_score": 0.6318040861068671
        }
      },
      "similarity": 0.6318040861068671
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 260.8190219903248,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 260.8190219903248,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.20865521759225986,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.08346208703690394,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 260.8190219903248,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.20865521759225986,
              "weight": 0.4,
              "weighted_score": 0.08346208703690394
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 2.6784000000000003,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 29.724710461039294,
            "graph": 70.27528953896069
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2807835156083326,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3650185702908324
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3650185702908324
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.40152042731991566
            }
          },
          "combined_score": 0.40152042731991566
        }
      },
      "similarity": 0.40152042731991566
    },
    {
      "metadata": {
        "doc_id": "CWE-367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "type": "Base",
        "original_content": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
        "relationships": [],
        "original_sparse_score": 277.3983752009532,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 277.3983752009532,
            "graph": 2.1189999999999998
          },
          "normalized_scores": {
            "sparse": 0.22191870016076254,
            "graph": 0.7567857142857143
          },
          "weighted_scores": {
            "sparse": 0.08876748006430502,
            "graph": 0.18919642857142857
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 277.3983752009532,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.22191870016076254,
              "weight": 0.4,
              "weighted_score": 0.08876748006430502
            },
            "graph": {
              "raw_score": 2.1189999999999998,
              "query_max": 2.6784000000000003,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.7567857142857143,
              "weight": 0.25,
              "weighted_score": 0.18919642857142857
            }
          },
          "contribution_percentages": {
            "sparse": 31.9348941738451,
            "graph": 68.06510582615489
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2779639086357336,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3613530812264537
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3613530812264537
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.39748838934909914
            }
          },
          "combined_score": 0.39748838934909914
        }
      },
      "similarity": 0.39748838934909914
    },
    {
      "metadata": {
        "doc_id": "CWE-129",
        "name": "Improper Validation of Array Index",
        "type": "Variant",
        "original_content": "The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.",
        "relationships": [],
        "original_sparse_score": 122.07376603841044,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 122.07376603841044,
            "graph": 2.6784000000000003
          },
          "normalized_scores": {
            "sparse": 0.09765901283072835,
            "graph": 0.9565714285714287
          },
          "weighted_scores": {
            "sparse": 0.039063605132291346,
            "graph": 0.23914285714285718
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 122.07376603841044,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.09765901283072835,
              "weight": 0.4,
              "weighted_score": 0.039063605132291346
            },
            "graph": {
              "raw_score": 2.6784000000000003,
              "query_max": 2.6784000000000003,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.9565714285714287,
              "weight": 0.25,
              "weighted_score": 0.23914285714285718
            }
          },
          "contribution_percentages": {
            "sparse": 14.041228522455063,
            "graph": 85.95877147754493
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.27820646227514856,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.33384775473017825
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.33384775473017825
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.36723253020319613
            }
          },
          "combined_score": 0.36723253020319613
        }
      },
      "similarity": 0.36723253020319613
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 263.9082806945911,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 263.9082806945911,
            "graph": 1.5350400000000004
          },
          "normalized_scores": {
            "sparse": 0.21112662455567288,
            "graph": 0.5482285714285716
          },
          "weighted_scores": {
            "sparse": 0.08445064982226916,
            "graph": 0.1370571428571429
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 263.9082806945911,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.21112662455567288,
              "weight": 0.4,
              "weighted_score": 0.08445064982226916
            },
            "graph": {
              "raw_score": 1.5350400000000004,
              "query_max": 2.6784000000000003,
              "query_min": 1.5350400000000004,
              "normalized_score": 0.5482285714285716,
              "weight": 0.25,
              "weighted_score": 0.1370571428571429
            }
          },
          "contribution_percentages": {
            "sparse": 38.125362905175294,
            "graph": 61.874637094824706
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.22150779267941206,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2879601304832357
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2879601304832357
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.3167561435315593
            }
          },
          "combined_score": 0.3167561435315593
        }
      },
      "similarity": 0.3167561435315593
    },
    {
      "metadata": {
        "doc_id": "CWE-390",
        "name": "Detection of Error Condition Without Action",
        "type": "Base",
        "original_content": "The product detects a specific error, but takes no actions to handle the error.",
        "relationships": [],
        "original_sparse_score": 254.87930355763046,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 254.87930355763046
          },
          "normalized_scores": {
            "sparse": 0.20390344284610437
          },
          "weighted_scores": {
            "sparse": 0.08156137713844175
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 254.87930355763046,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.20390344284610437,
              "weight": 0.4,
              "weighted_score": 0.08156137713844175
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.08156137713844175,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.10602979027997428
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.10602979027997428
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.11663276930797171
            }
          },
          "combined_score": 0.11663276930797171
        }
      },
      "similarity": 0.11663276930797171
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 248.4959715491815,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 248.4959715491815
          },
          "normalized_scores": {
            "sparse": 0.1987967772393452
          },
          "weighted_scores": {
            "sparse": 0.07951871089573809
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 248.4959715491815,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.1987967772393452,
              "weight": 0.4,
              "weighted_score": 0.07951871089573809
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.07951871089573809,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.10337432416445952
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.10337432416445952
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.11371175658090547
            }
          },
          "combined_score": 0.11371175658090547
        }
      },
      "similarity": 0.11371175658090547
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 262.4070239307322,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 262.4070239307322
          },
          "normalized_scores": {
            "sparse": 0.20992561914458574
          },
          "weighted_scores": {
            "sparse": 0.0839702476578343
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 262.4070239307322,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.20992561914458574,
              "weight": 0.4,
              "weighted_score": 0.0839702476578343
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.0839702476578343,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.10076429718940115
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.10076429718940115
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.11084072690834128
            }
          },
          "combined_score": 0.11084072690834128
        }
      },
      "similarity": 0.11084072690834128
    },
    {
      "metadata": {
        "doc_id": "CWE-415",
        "name": "Double Free",
        "type": "Variant",
        "original_content": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
        "relationships": [],
        "original_sparse_score": 256.7665935371054,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 256.7665935371054
          },
          "normalized_scores": {
            "sparse": 0.20541327482968433
          },
          "weighted_scores": {
            "sparse": 0.08216530993187374
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 256.7665935371054,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.20541327482968433,
              "weight": 0.4,
              "weighted_score": 0.08216530993187374
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.08216530993187374,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.09859837191824848
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.09859837191824848
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.10845820911007334
            }
          },
          "combined_score": 0.10845820911007334
        }
      },
      "similarity": 0.10845820911007334
    },
    {
      "metadata": {
        "doc_id": "CWE-252",
        "name": "Unchecked Return Value",
        "type": "Base",
        "original_content": "The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.",
        "relationships": [],
        "original_sparse_score": 232.56070923763897,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 232.56070923763897
          },
          "normalized_scores": {
            "sparse": 0.1860485673901112
          },
          "weighted_scores": {
            "sparse": 0.07441942695604448
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 232.56070923763897,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.1860485673901112,
              "weight": 0.4,
              "weighted_score": 0.07441942695604448
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.07441942695604448,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.09674525504285782
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.09674525504285782
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.10641978054714361
            }
          },
          "combined_score": 0.10641978054714361
        }
      },
      "similarity": 0.10641978054714361
    },
    {
      "metadata": {
        "doc_id": "CWE-124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "type": "Base",
        "original_content": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "relationships": [],
        "original_sparse_score": 222.4641347361487,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 222.4641347361487
          },
          "normalized_scores": {
            "sparse": 0.17797130778891895
          },
          "weighted_scores": {
            "sparse": 0.07118852311556759
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 222.4641347361487,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.17797130778891895,
              "weight": 0.4,
              "weighted_score": 0.07118852311556759
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.07118852311556759,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.09254508005023787
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.09254508005023787
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.10179958805526167
            }
          },
          "combined_score": 0.10179958805526167
        }
      },
      "similarity": 0.10179958805526167
    },
    {
      "metadata": {
        "doc_id": "CWE-476",
        "name": "NULL Pointer Dereference",
        "type": "Base",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "relationships": [],
        "original_sparse_score": 215.57465543444036,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 215.57465543444036
          },
          "normalized_scores": {
            "sparse": 0.1724597243475523
          },
          "weighted_scores": {
            "sparse": 0.06898388973902092
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 215.57465543444036,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.1724597243475523,
              "weight": 0.4,
              "weighted_score": 0.06898388973902092
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06898388973902092,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.0896790566607272
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0896790566607272
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.09864696232679993
            }
          },
          "combined_score": 0.09864696232679993
        }
      },
      "similarity": 0.09864696232679993
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 211.17329792823998,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 211.17329792823998
          },
          "normalized_scores": {
            "sparse": 0.16893863834259198
          },
          "weighted_scores": {
            "sparse": 0.0675754553370368
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 211.17329792823998,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.16893863834259198,
              "weight": 0.4,
              "weighted_score": 0.0675754553370368
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.0675754553370368,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.08109054640444414
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08109054640444414
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08919960104488857
            }
          },
          "combined_score": 0.08919960104488857
        }
      },
      "similarity": 0.08919960104488857
    },
    {
      "metadata": {
        "doc_id": "CWE-704",
        "name": "Incorrect Type Conversion or Cast",
        "type": "Class",
        "original_content": "The product does not correctly convert an object, resource, or structure from one type to a different type.",
        "relationships": [],
        "original_sparse_score": 269.68407096590386,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 269.68407096590386
          },
          "normalized_scores": {
            "sparse": 0.21574725677272308
          },
          "weighted_scores": {
            "sparse": 0.08629890270908924
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 269.68407096590386,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.21574725677272308,
              "weight": 0.4,
              "weighted_score": 0.08629890270908924
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.08629890270908924,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.0690391221672714
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0690391221672714
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.07249107827563497
            }
          },
          "combined_score": 0.07249107827563497
        }
      },
      "similarity": 0.07249107827563497
    },
    {
      "metadata": {
        "doc_id": "CWE-362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "type": "Class",
        "original_content": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.",
        "relationships": [],
        "original_sparse_score": 218.94847176297296,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 218.94847176297296
          },
          "normalized_scores": {
            "sparse": 0.17515877741037836
          },
          "weighted_scores": {
            "sparse": 0.07006351096415135
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 218.94847176297296,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.17515877741037836,
              "weight": 0.4,
              "weighted_score": 0.07006351096415135
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.07006351096415135,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.056050808771321084
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.056050808771321084
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.05885334920988714
            }
          },
          "combined_score": 0.05885334920988714
        }
      },
      "similarity": 0.05885334920988714
    },
    {
      "metadata": {
        "doc_id": "CWE-347",
        "name": "Improper Verification of Cryptographic Signature",
        "type": "Base",
        "original_content": "The product does not verify, or incorrectly verifies, the cryptographic signature for data.",
        "relationships": [],
        "original_sparse_score": 125.48290958641894,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 125.48290958641894
          },
          "normalized_scores": {
            "sparse": 0.10038632766913515
          },
          "weighted_scores": {
            "sparse": 0.04015453106765406
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 125.48290958641894,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.10038632766913515,
              "weight": 0.4,
              "weighted_score": 0.04015453106765406
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.04015453106765406,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.05220089038795028
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.05220089038795028
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.05742097942674532
            }
          },
          "combined_score": 0.05742097942674532
        }
      },
      "similarity": 0.05742097942674532
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 253.74362042424775,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 253.74362042424775
          },
          "normalized_scores": {
            "sparse": 0.2029948963393982
          },
          "weighted_scores": {
            "sparse": 0.08119795853575928
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 253.74362042424775,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.2029948963393982,
              "weight": 0.4,
              "weighted_score": 0.08119795853575928
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.08119795853575928,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.06495836682860744
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06495836682860744
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.05196669346288595
            }
          },
          "combined_score": 0.05196669346288595
        }
      },
      "similarity": 0.05196669346288595
    },
    {
      "metadata": {
        "doc_id": "CWE-416",
        "name": "Use After Free",
        "type": "Variant",
        "original_content": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
        "relationships": [],
        "original_sparse_score": 121.78628081892924,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 121.78628081892924
          },
          "normalized_scores": {
            "sparse": 0.09742902465514339
          },
          "weighted_scores": {
            "sparse": 0.03897160986205736
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 121.78628081892924,
              "query_max": 289.0572524788132,
              "query_min": 121.78628081892924,
              "normalized_score": 0.09742902465514339,
              "weight": 0.4,
              "weighted_score": 0.03897160986205736
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.03897160986205736,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.04676593183446883
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04676593183446883
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.05144252501791572
            }
          },
          "combined_score": 0.05144252501791572
        }
      },
      "similarity": 0.05144252501791572
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-787",
      "CWE-122",
      "CWE-124",
      "CWE-121",
      "CWE-1285",
      "CWE-129"
    ],
    "critic_additional": [
      "CWE-823",
      "CWE-190",
      "CWE-390",
      "CWE-1284",
      "CWE-367",
      "CWE-20",
      "CWE-126",
      "CWE-822"
    ]
  }
}