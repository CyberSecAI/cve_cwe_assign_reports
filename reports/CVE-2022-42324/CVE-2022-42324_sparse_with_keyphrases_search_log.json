{
  "method": "sparse_with_keyphrases",
  "query": "Oxenstored 32->31 bit integer truncation issues Integers in Ocaml are 63 or 31 bits of signed precision. The Ocaml Xenbus library takes a C uint32_t out of the ring and casts it directly to an Ocaml integer. In 64-bit Ocaml builds this is fine, but in 32-bit builds, it truncates off the most significant bit, and then creates unsigned/signed confusion in the remainder. This in turn can feed a negative value into logic not expecting a negative value, resulting in unexpected exceptions being thrown. The unexpected exception is not handled suitably, creating a busy-loop trying (and failing) to take the bad packet out of the xenstore ring.",
  "keyphrases": {
    "rootcause": "integer truncation"
  },
  "timestamp": "2025-03-18T19:03:24.761594",
  "results_count": 20,
  "results_summary": [
    {
      "doc_id": "CWE-197",
      "name": "Numeric Truncation Error",
      "score": 1474.2433764641921
    },
    {
      "doc_id": "CWE-681",
      "name": "Incorrect Conversion between Numeric Types",
      "score": 697.5934916018148
    },
    {
      "doc_id": "CWE-194",
      "name": "Unexpected Sign Extension",
      "score": 673.4127662775381
    },
    {
      "doc_id": "CWE-1335",
      "name": "Incorrect Bitwise Shift of Integer",
      "score": 636.5467176685761
    },
    {
      "doc_id": "CWE-190",
      "name": "Integer Overflow or Wraparound",
      "score": 627.1131271558875
    }
  ]
}