{
  "cve_id": "CVE-2021-41061",
  "description": "In RIOT-OS 2021.01, nonce reuse in 802.15.4 encryption in the ieee820154_security component allows attackers to break encryption by triggering reboots.",
  "key_phrases": {
    "rootcause": "nonce reuse",
    "weakness": "",
    "impact": "break encryption",
    "vector": "reboots",
    "attacker": "attackers",
    "product": "RIOT-OS",
    "version": "2021.01",
    "component": "ieee820154_security component"
  },
  "reference_content": "```\n{\n  \"CVE_data_meta\": {\n    \"ID\": \"CVE-2021-41061\",\n    \"ASSIGNER\": \"cve@mitre.org\"\n  },\n  \"description\": {\n    \"description_data\": [\n      {\n        \"lang\": \"en\",\n        \"value\": \"The frame counter used with ieee802154_security is initialized with 0 at startup. While it is protected against overflow, it is not protected against being reset, and that reset happens whenever the device restarts. As the key is flashed into the device in ieee802154_security's normal operation, and the sender LL address is constant per device, the same nonce (varying only through the resetting frame counter) is used in the AES encryption multiple times. Reuse of the same (nonce, key) breaks confidentiality guarantees.\"\n      }\n    ]\n  },\n  \"relevant_content\": [\n    {\n      \"source\": \"github.com_dfdaca53_20250115_134016.html\",\n      \"vulnerability\": \"The security module introduced in [#15150](https://github.com/RIOT-OS/RIOT/pull/15150) was not intended for security-critical use, as it waives using a proper key store to mitigate complexity. This wasn't clear in the documentation, which could give the wrong impression.\"\n    },\n    {\n      \"source\": \"www.rfc-editor.org_a9ba5859_20250115_134020.html\",\n      \"vulnerability\": \"This document describes a minimal mode of operation for an IPv6 over the TSCH mode of IEEE 802.15.4e (6TiSCH) network.  This minimal mode of operation specifies the baseline set of protocols that need to be supported and the recommended configurations and modes of operation sufficient to enable a 6TiSCH functional network.\",\n       \"details\": \"Link-layer frames MUST be secured by the link-layer security mechanisms defined in IEEE Std 802.15.4. Link-layer authentication MUST be applied to the entire frame, including the 802.15.4 header.  Link-layer encryption MAY be applied to 802.15.4 Payload IEs and the 802.15.4 payload. This specification assumes the existence of two cryptographic keys: Key K1 is used to authenticate EBs and Key K2 is used to authenticate and encrypt DATA and ACKNOWLEDGMENT frames. In the event of a network reset, the new network MUST either use new cryptographic keys or ensure that the ASN remains monotonically increasing.\"\n    },\n     {\n      \"source\": \"datatracker.ietf.org_8db6d217_20250115_134018.html\",\n      \"vulnerability\": \"This document describes a procedure for augmenting the authenticated Diffie-Hellman key exchange EDHOC with third-party assisted authorization targeting constrained IoT deployments (RFC 7228). The procedure involves a device, a domain authenticator, and an authorization server. The device and authenticator perform mutual authentication and authorization, assisted by the authorization server which provides relevant authorization information to the device (a 'voucher') and to the authenticator.\"\n    },\n    {\n      \"source\": \"github.com_09e22a56_20250115_134020.html\",\n      \"vulnerability\": \"This pull request adds functions to read and set the next message ID in gcoap. This was needed to maintain the next message ID between reboots, which was causing issues when the server had a larger message cache. A randomly generated message ID, if reused after reboot, can cause a server to respond with a cached response from a previous request due to the same message ID. Although this is not technically wrong of the server, gcoap couldn't match the response due to token mismatch.\",\n      \"details\": \"The next message ID is randomly generated during initialization, but this is not always wanted; a manual setting is sometimes needed. The API is named 'read' to make it clear that this is not part of gcoap's regular use case.\"\n   },\n   {\n      \"source\": \"github.com_211a9ec8_20250115_091133.html\",\n      \"vulnerability\": \"The frame counter used with ieee802154_security is initialized with 0 at startup. While it is protected against overflow, it is not protected against being reset, and that reset happens whenever the device restarts. As the key is flashed into the device in ieee802154_security's normal operation, and the sender LL address is constant per device, the same nonce (varying only through the resetting frame counter) is used in the AES encryption multiple times. Reuse of the same (nonce, key) breaks confidentiality guarantees.\",\n     \"details\": \"The issue was found by sniffing packets after rebooting, which showed the sequence numbers start from zero again and byte-wise identical requests in regions of equal content. The module in question has been marked as experimental, CVE-2021-41061 has been assigned to this issue. Fixing this issue is non trivial. A potential mitigation may involve a random initialization at startup. Backup RAM and RTC memory could be other backends to solve this. A key could also include an absolute timestamp.\"\n    },\n    {\n      \"source\": \"crypto.stackexchange.com_20b236ca_20250115_134014.html\",\n      \"vulnerability\": \"Reusing an IV with AES/GCM even once, can be catastrophic, as it leaks the XOR of plaintexts. Moreover, with GCM, a single IV reuse leaks significant information about the key used for authentication, as it is a stream cipher and is malleable if the MAC fails. NIST's GCM is designed for 96-bit IVs, and if you specify a different-length one there are weaknesses in the function used to compute the 'real' IV.\"\n    }\n  ]\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :------- | :--------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-323 | Reusing a Nonce, Key Pair in Encryption | 0.90       | Base                  | Allowed                         | Primary CWE                     |\n| CWE-1204 | Generation of Weak Initialization Vector (IV) | 0.70       | Base                  | Allowed                         | Secondary Candidate            |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability is due to **nonce reuse** in 802.15.4 encryption. The frame counter is initialized to 0 at startup and reset whenever the device restarts. Since the key is flashed into the device and the sender LL address is constant, the same **nonce** is used multiple times, which breaks confidentiality guarantees. This aligns directly with CWE-323 (Reusing a Nonce, Key Pair in Encryption), which is a Base level CWE and ALLOWED for mapping. The 'CVE Reference Links Content Summary' section explicitly states that reusing the same (nonce, key) breaks confidentiality guarantees. While CWE-330 (Use of Insufficiently Random Values) is a related concern, CWE-323 is more specific to the vulnerability of nonce reuse.\n  \n  - *Relationship Analysis:* CWE-323 is a Base level CWE. No direct relationships were listed in the provided information. However, reusing a nonce often stems from issues in generating or managing the nonce properly.\n\n- **Confidence Score:**  \n  - Confidence: 0.90 (High confidence due to direct evidence of nonce reuse from the vulnerability description and CVE reference links)\n\n---\n- **Analysis and Justification:**  \n  - *Explanation:* CWE-1204 (Generation of Weak Initialization Vector (IV)) is also considered as a secondary candidate. The description notes that the frame counter is initialized with 0 at startup and is reset, implying a predictable or weak initialization vector. The crypto.stackexchange.com content summary highlights the catastrophic consequences of reusing an IV with AES/GCM, which is consistent with the vulnerability description. CWE-1204 is a Base level CWE and ALLOWED for mapping. Though the primary issue is nonce reuse, the method of generating the nonce is weak, making this a relevant secondary concern.\n  \n  - *Relationship Analysis:* While not explicitly stated, a weak IV generation process can lead to nonce reuse, strengthening the connection between CWE-1204 and CWE-323.\n\n- **Confidence Score:**  \n  - Confidence: 0.70 (Moderate confidence as it is a contributing factor rather than the root cause)",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :------- | :--------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-323 | Reusing a Nonce, Key Pair in Encryption | 0.90       | Base                  | Allowed                         | Primary CWE                     |\n| CWE-1204 | Generation of Weak Initialization Vector (IV) | 0.70       | Base                  | Allowed                         | Secondary Candidate            |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability is due to **nonce reuse** in 802.15.4 encryption. The frame counter is initialized to 0 at startup and reset whenever the device restarts. Since the key is flashed into the device and the sender LL address is constant, the same **nonce** is used multiple times, which breaks confidentiality guarantees. This aligns directly with CWE-323 (Reusing a Nonce, Key Pair in Encryption), which is a Base level CWE and ALLOWED for mapping. The 'CVE Reference Links Content Summary' section explicitly states that reusing the same (nonce, key) breaks confidentiality guarantees. While CWE-330 (Use of Insufficiently Random Values) is a related concern, CWE-323 is more specific to the vulnerability of nonce reuse.\n  \n  - *Relationship Analysis:* CWE-323 is a Base level CWE. No direct relationships were listed in the provided information. However, reusing a nonce often stems from issues in generating or managing the nonce properly.\n\n- **Confidence Score:**  \n  - Confidence: 0.90 (High confidence due to direct evidence of nonce reuse from the vulnerability description and CVE reference links)\n\n---\n- **Analysis and Justification:**  \n  - *Explanation:* CWE-1204 (Generation of Weak Initialization Vector (IV)) is also considered as a secondary candidate. The description notes that the frame counter is initialized with 0 at startup and is reset, implying a predictable or weak initialization vector. The crypto.stackexchange.com content summary highlights the catastrophic consequences of reusing an IV with AES/GCM, which is consistent with the vulnerability description. CWE-1204 is a Base level CWE and ALLOWED for mapping. Though the primary issue is nonce reuse, the method of generating the nonce is weak, making this a relevant secondary concern.\n  \n  - *Relationship Analysis:* While not explicitly stated, a weak IV generation process can lead to nonce reuse, strengthening the connection between CWE-1204 and CWE-323.\n\n- **Confidence Score:**  \n  - Confidence: 0.70 (Moderate confidence as it is a contributing factor rather than the root cause)",
  "criticism": "Okay, here's a review of the provided CWE analysis, incorporating the full CWE specifications:\n\n**Overall Assessment:**\n\nThe analysis is generally good.  The primary CWE mapping to CWE-323 (Reusing a Nonce, Key Pair in Encryption) is accurate and well-justified. The inclusion of CWE-1204 (Generation of Weak Initialization Vector (IV)) as a secondary concern is also reasonable and well-explained. The confidence scores seem appropriate given the evidence.\n\n**Detailed Review:**\n\n**1. CWE-323: Reusing a Nonce, Key Pair in Encryption**\n\n*   **Correctness:**  The mapping is highly accurate. The vulnerability description clearly states that the nonce is reused due to the resetting frame counter upon device restarts.  The CVE reference links content summary reinforces the point that \"Reuse of the same (nonce, key) breaks confidentiality guarantees.\" This aligns perfectly with the CWE-323 description: \"Nonces should be used for the present occasion and only once.\"\n\n*   **Justification:** Excellent.  The explanation clearly connects the vulnerability to the CWE description and supporting evidence.\n\n*   **Confidence:** A confidence score of 0.90 is justified. The evidence is direct and compelling.\n\n*   **CWE Specification Adherence:**\n    *   **Abstraction Level:** Base. Correctly identified.\n    *   **Mapping Guidance (Usage: Allowed):** The analysis correctly notes that CWE-323 is at the Base level of abstraction, which is the preferred level.\n    *   **Mitigations:** The potential mitigations listed in the CWE specification are:\n        *   Refuse to reuse nonce values.\n        *   Use techniques such as requiring incrementing, time-based, and/or challenge-response to assure uniqueness of nonces.\n        These are directly applicable to the described vulnerability. The analysis could explicitly mention these mitigations as possible solutions in RIOT-OS.\n\n*   **Relationships:**\n    *  The analysis mentions the 'ChildOf -> CWE-344' relationship, but does not elaborate. While technically correct, the connection between invariant values and nonce reuse in this specific case isn't the strongest point.\n\n**2. CWE-1204: Generation of Weak Initialization Vector (IV)**\n\n*   **Correctness:**  The mapping is reasonable, though less direct than CWE-323.  The issue isn't *necessarily* that the IV generation is inherently flawed beyond the resetting.  The problem is that the *same* IV (due to the reset) is used. However, initializing the counter to zero and resetting it certainly *contributes* to the weakness.\n\n*   **Justification:** The explanation connects the predictable frame counter initialization and reset to the concept of a weak IV.  The crypto.stackexchange.com reference adds further support.\n\n*   **Confidence:** A confidence score of 0.70 is appropriate. It's a contributing factor but not the primary cause.\n\n*   **CWE Specification Adherence:**\n    *   **Abstraction Level:** Base. Correctly identified.\n    *   **Mapping Guidance (Usage: Allowed):** Correct.\n    *   **Mitigations:** The CWE specification mentions:\n        *   Different cipher modes have different requirements for their IVs. Understand those requirements.\n        *   Generally, it is safest to generate a random IV.\n        *   NIST recommendations exist for IV generation in various modes.\n        These mitigations are very relevant here. The analysis could suggest that RIOT-OS should use a more robust IV generation method, possibly involving a random number generator seeded from a hardware source or RTC.\n\n*   **Relationships:**\n\n*   The analysis mentions that the CWE-1204 is 'ChildOf -> CWE-330'. Elaborating on how the predictable IV stems from 'Use of Insufficiently Random Values' could strengthen the explanation. However, the analysis already does a good job mentioning it.\n\n**Suggestions for Improvement:**\n\n1.  **Explicitly Mention Mitigations:**  For both CWE-323 and CWE-1204, explicitly state that the mitigations provided in the CWE specification are relevant and how they could be applied to the RIOT-OS vulnerability. For example, state:  \"To mitigate this vulnerability, RIOT-OS could implement a strategy to refuse the reuse of nonce values (CWE-323 mitigation) by storing the last used value in non-volatile memory. Alternatively, the system could initialize the frame counter with a random value at startup sourced from a hardware random number generator to increase the unpredictability of the IV (CWE-1204 mitigation).\"\n\n2.  **Consider CWE-330:** While CWE-323 and CWE-1204 are more specific, consider briefly discussing why CWE-330 (Use of Insufficiently Random Values) was *not* chosen as the primary CWE.  Explain that while the root of the problem involves insufficient randomness, CWE-323 is more directly related to the consequence of reusing the nonce itself, and CWE-1204 is directly about weak IV generation. This demonstrates a thorough analysis.\n\n3. **Relationships:** Consider elaborating on the relationships between the CWEs. For example, you could say that CWE-323 can be caused by CWE-330, which in turn has children CWE-1204.\n\n**Revised Summary Table (incorporating suggestions):**\n\n| CWE ID  | CWE Name                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :------- | :--------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-323 | Reusing a Nonce, Key Pair in Encryption | 0.90       | Base                  | Allowed                         | Primary CWE. Mitigations include refusing nonce reuse and using incrementing or challenge-response techniques. |\n| CWE-1204 | Generation of Weak Initialization Vector (IV) | 0.70       | Base                  | Allowed                         | Secondary Candidate. Contributes to nonce reuse.  Mitigations include using random IVs or NIST-recommended methods. |\n\nBy adding explicit mitigation suggestions and a brief discussion of why CWE-330 was not chosen, the analysis would be even more robust.",
  "resolution": "# Summary\n| CWE ID  | CWE Name                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :------- | :--------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-323 | Reusing a Nonce, Key Pair in Encryption | 0.95       | Base                  | Allowed                         | Primary CWE. Mitigations include refusing nonce reuse and using incrementing or challenge-response techniques. |\n| CWE-1204 | Improper Initialization Vector (IV) Generation | 0.75       | Base                  | Allowed                         | Secondary Candidate. Contributes to **nonce reuse**.  Mitigations include using random IVs or NIST-recommended methods. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship considered was the potential for **CWE-1204** (Improper Initialization Vector (IV) Generation) to contribute to **CWE-323** (**Reusing a Nonce**, Key Pair in Encryption). While **CWE-323** is the more direct and specific cause, the predictable IV generation exacerbates the problem. I also considered **CWE-330** (Use of Insufficiently Random Values) but determined it was too high-level. The Base level of **CWE-323** and **CWE-1204** makes them suitable for direct mapping.mermaid\ngraph TD\n    cwe323[\"CWE-323: Reusing a Nonce, Key Pair in Encryption\"]\n    cwe1204[\"CWE-1204: Improper Initialization Vector (IV) Generation\"]\n    cwe330[\"CWE-330: Use of Insufficiently Random Values\"]\n\n    cwe1204 -->|CHILDOF| cwe330\n    cwe1204 -->|CANPRECEDE| cwe323\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe323 primary\n    class cwe1204 secondary\n    class cwe330 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **ROOTCAUSE** being the initialization of the frame counter to 0 at startup and its reset upon device reboots. This leads to **CWE-1204** (Improper Initialization Vector (IV) Generation) since the IV becomes predictable. The predictable IV, combined with a fixed key, directly results in **CWE-323** (**Reusing a Nonce**, Key Pair in Encryption). The consequence is the ability for attackers to break encryption and compromise confidentiality.\n\n## Summary of Analysis\nThe initial analysis correctly identified **CWE-323** as the primary **WEAKNESS** due to the explicit **nonce reuse** described in the vulnerability. The criticism's suggestions to explicitly mention mitigations and to briefly discuss why **CWE-330** was not chosen were valuable. The evidence is strong, stating \"the frame counter is initialized to 0 at startup and reset whenever the device restarts... the same **nonce** is used multiple times, which breaks confidentiality guarantees.\" This directly supports **CWE-323**. **CWE-1204** is included as a secondary contributing factor due to the weak IV generation method. The final decision is to retain **CWE-323** and **CWE-1204** at the Base level of abstraction because they are the most specific and relevant to the described vulnerability.\n```",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-323",
        "name": "Reusing a Nonce, Key Pair in Encryption",
        "type": "Base",
        "original_content": "Nonces should be used for the present occasion and only once.",
        "relationships": [],
        "original_sparse_score": 378.11782665489727,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6647462608571577,
            "sparse": 378.11782665489727,
            "graph": 1.555491261480711
          },
          "normalized_scores": {
            "dense": 0.6647462608571577,
            "sparse": 0.3024942613239178,
            "graph": 0.5555325933859683
          },
          "weighted_scores": {
            "dense": 0.23266119130000518,
            "sparse": 0.12099770452956714,
            "graph": 0.13888314834649207
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6647462608571577,
              "query_max": 0.6647462608571577,
              "query_min": 0.4881374652467456,
              "normalized_score": 0.6647462608571577,
              "weight": 0.35,
              "weighted_score": 0.23266119130000518
            },
            "sparse": {
              "raw_score": 378.11782665489727,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.3024942613239178,
              "weight": 0.4,
              "weighted_score": 0.12099770452956714
            },
            "graph": {
              "raw_score": 1.555491261480711,
              "query_max": 2.2100000000000004,
              "query_min": 0.9623999999999999,
              "normalized_score": 0.5555325933859683,
              "weight": 0.25,
              "weighted_score": 0.13888314834649207
            }
          },
          "contribution_percentages": {
            "dense": 47.23681847083859,
            "sparse": 24.56596466439223,
            "graph": 28.197216864769175
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4925420441760644,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6403046574288838
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6403046574288838
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7043351231717722
            }
          },
          "combined_score": 0.7043351231717722
        }
      },
      "similarity": 0.7043351231717722
    },
    {
      "metadata": {
        "doc_id": "CWE-294",
        "name": "Authentication Bypass by Capture-replay",
        "type": "Base",
        "original_content": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
        "relationships": [],
        "original_sparse_score": 129.14019218085082,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5186359105158989,
            "sparse": 129.14019218085082,
            "graph": 1.5192700694393135
          },
          "normalized_scores": {
            "dense": 0.5186359105158989,
            "sparse": 0.10331215374468065,
            "graph": 0.5425964533711835
          },
          "weighted_scores": {
            "dense": 0.1815225686805646,
            "sparse": 0.04132486149787226,
            "graph": 0.13564911334279586
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5186359105158989,
              "query_max": 0.6647462608571577,
              "query_min": 0.4881374652467456,
              "normalized_score": 0.5186359105158989,
              "weight": 0.35,
              "weighted_score": 0.1815225686805646
            },
            "sparse": {
              "raw_score": 129.14019218085082,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.10331215374468065,
              "weight": 0.4,
              "weighted_score": 0.04132486149787226
            },
            "graph": {
              "raw_score": 1.5192700694393135,
              "query_max": 2.2100000000000004,
              "query_min": 0.9623999999999999,
              "normalized_score": 0.5425964533711835,
              "weight": 0.25,
              "weighted_score": 0.13564911334279586
            }
          },
          "contribution_percentages": {
            "dense": 50.63439856284515,
            "sparse": 11.527269159130597,
            "graph": 37.838332278024254
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3584965435212327,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4660455065776026
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4660455065776026
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5126500572353628
            }
          },
          "combined_score": 0.5126500572353628
        }
      },
      "similarity": 0.5126500572353628
    },
    {
      "metadata": {
        "doc_id": "CWE-226",
        "name": "Sensitive Information in Resource Not Removed Before Reuse",
        "type": "Base",
        "original_content": "The product releases a resource such as memory or a file so that it can be made available for reuse, but it does not clear or \"zeroize\" the information contained in the resource before the product performs a critical state transition or makes the resource available for reuse by other entities.",
        "relationships": [],
        "original_sparse_score": 128.0768121219433,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5052227739803079,
            "sparse": 128.0768121219433,
            "graph": 1.5121445981006405
          },
          "normalized_scores": {
            "dense": 0.5052227739803079,
            "sparse": 0.10246144969755465,
            "graph": 0.5400516421788002
          },
          "weighted_scores": {
            "dense": 0.17682797089310776,
            "sparse": 0.04098457987902186,
            "graph": 0.13501291054470005
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5052227739803079,
              "query_max": 0.6647462608571577,
              "query_min": 0.4881374652467456,
              "normalized_score": 0.5052227739803079,
              "weight": 0.35,
              "weighted_score": 0.17682797089310776
            },
            "sparse": {
              "raw_score": 128.0768121219433,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.10246144969755465,
              "weight": 0.4,
              "weighted_score": 0.04098457987902186
            },
            "graph": {
              "raw_score": 1.5121445981006405,
              "query_max": 2.2100000000000004,
              "query_min": 0.9623999999999999,
              "normalized_score": 0.5400516421788002,
              "weight": 0.25,
              "weighted_score": 0.13501291054470005
            }
          },
          "contribution_percentages": {
            "dense": 50.11768998562154,
            "sparse": 11.616106084310788,
            "graph": 38.26620393006767
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3528254613168297,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4586730997118786
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4586730997118786
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5045404096830665
            }
          },
          "combined_score": 0.5045404096830665
        }
      },
      "similarity": 0.5045404096830665
    },
    {
      "metadata": {
        "doc_id": "CWE-1204",
        "name": "Generation of Weak Initialization Vector (IV)",
        "type": "Base",
        "original_content": "The product uses a cryptographic primitive that uses an Initialization\n\t\t\tVector (IV), but the product does not generate IVs that are\n\t\t\tsufficiently unpredictable or unique according to the expected\n\t\t\tcryptographic requirements for that primitive.\n\t\t\t",
        "relationships": [],
        "original_sparse_score": 144.41525714511607,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4909300615908286,
            "sparse": 144.41525714511607,
            "graph": 1.5025959181195725
          },
          "normalized_scores": {
            "dense": 0.4909300615908286,
            "sparse": 0.11553220571609286,
            "graph": 0.5366413993284188
          },
          "weighted_scores": {
            "dense": 0.17182552155678998,
            "sparse": 0.04621288228643715,
            "graph": 0.1341603498321047
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4909300615908286,
              "query_max": 0.6647462608571577,
              "query_min": 0.4881374652467456,
              "normalized_score": 0.4909300615908286,
              "weight": 0.35,
              "weighted_score": 0.17182552155678998
            },
            "sparse": {
              "raw_score": 144.41525714511607,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.11553220571609286,
              "weight": 0.4,
              "weighted_score": 0.04621288228643715
            },
            "graph": {
              "raw_score": 1.5025959181195725,
              "query_max": 2.2100000000000004,
              "query_min": 0.9623999999999999,
              "normalized_score": 0.5366413993284188,
              "weight": 0.25,
              "weighted_score": 0.1341603498321047
            }
          },
          "contribution_percentages": {
            "dense": 48.78652174765624,
            "sparse": 13.12125094259637,
            "graph": 38.09222730974739
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3521987536753318,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.45785837977793137
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.45785837977793137
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5036442177557245
            }
          },
          "combined_score": 0.5036442177557245
        }
      },
      "similarity": 0.5036442177557245
    },
    {
      "metadata": {
        "doc_id": "CWE-757",
        "name": "Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade')",
        "type": "Base",
        "original_content": "A protocol or its implementation supports interaction between multiple actors and allows those actors to negotiate which algorithm should be used as a protection mechanism such as encryption or authentication, but it does not select the strongest algorithm that is available to both parties.",
        "relationships": [],
        "original_sparse_score": 124.64267530129011,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4881374652467456,
            "sparse": 124.64267530129011
          },
          "normalized_scores": {
            "dense": 0.4881374652467456,
            "sparse": 0.09971414024103209
          },
          "weighted_scores": {
            "dense": 0.17084811283636095,
            "sparse": 0.03988565609641284
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4881374652467456,
              "query_max": 0.6647462608571577,
              "query_min": 0.4881374652467456,
              "normalized_score": 0.4881374652467456,
              "weight": 0.35,
              "weighted_score": 0.17084811283636095
            },
            "sparse": {
              "raw_score": 124.64267530129011,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.09971414024103209,
              "weight": 0.4,
              "weighted_score": 0.03988565609641284
            }
          },
          "contribution_percentages": {
            "dense": 81.07296410138389,
            "sparse": 18.927035898616122
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2107337689327738,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2739538996126059
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2739538996126059
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.30134928957386653
            }
          },
          "combined_score": 0.30134928957386653
        }
      },
      "similarity": 0.30134928957386653
    },
    {
      "metadata": {
        "doc_id": "CWE-321",
        "name": "Use of Hard-coded Cryptographic Key",
        "type": "Variant",
        "original_content": "The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.",
        "relationships": [],
        "original_sparse_score": 116.29386932114042,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5055477462597684,
            "sparse": 116.29386932114042
          },
          "normalized_scores": {
            "dense": 0.5055477462597684,
            "sparse": 0.09303509545691234
          },
          "weighted_scores": {
            "dense": 0.17694171119091892,
            "sparse": 0.03721403818276494
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5055477462597684,
              "query_max": 0.6647462608571577,
              "query_min": 0.4881374652467456,
              "normalized_score": 0.5055477462597684,
              "weight": 0.35,
              "weighted_score": 0.17694171119091892
            },
            "sparse": {
              "raw_score": 116.29386932114042,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.09303509545691234,
              "weight": 0.4,
              "weighted_score": 0.03721403818276494
            }
          },
          "contribution_percentages": {
            "dense": 82.62290959192062,
            "sparse": 17.377090408079383
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.21415574937368387,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.2569868992484206
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2569868992484206
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2826855891732627
            }
          },
          "combined_score": 0.2826855891732627
        }
      },
      "similarity": 0.2826855891732627
    },
    {
      "metadata": {
        "doc_id": "CWE-327",
        "name": "Use of a Broken or Risky Cryptographic Algorithm",
        "type": "Class",
        "original_content": "The product uses a broken or risky cryptographic algorithm or protocol.",
        "relationships": [],
        "original_sparse_score": 131.19533440747452,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4888542270826797,
            "sparse": 131.19533440747452,
            "graph": 1.125451052519207
          },
          "normalized_scores": {
            "dense": 0.4888542270826797,
            "sparse": 0.10495626752597961,
            "graph": 0.4019468044711454
          },
          "weighted_scores": {
            "dense": 0.1710989794789379,
            "sparse": 0.04198250701039185,
            "graph": 0.10048670111778635
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4888542270826797,
              "query_max": 0.6647462608571577,
              "query_min": 0.4881374652467456,
              "normalized_score": 0.4888542270826797,
              "weight": 0.35,
              "weighted_score": 0.1710989794789379
            },
            "sparse": {
              "raw_score": 131.19533440747452,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.10495626752597961,
              "weight": 0.4,
              "weighted_score": 0.04198250701039185
            },
            "graph": {
              "raw_score": 1.125451052519207,
              "query_max": 2.2100000000000004,
              "query_min": 0.9623999999999999,
              "normalized_score": 0.4019468044711454,
              "weight": 0.25,
              "weighted_score": 0.10048670111778635
            }
          },
          "contribution_percentages": {
            "dense": 54.56515878878492,
            "sparse": 13.38863719906231,
            "graph": 32.046204012152764
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.31356818760711613,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.2508545500856929
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2508545500856929
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.26339727758997755
            }
          },
          "combined_score": 0.26339727758997755
        }
      },
      "similarity": 0.26339727758997755
    },
    {
      "metadata": {
        "doc_id": "CWE-1391",
        "name": "Use of Weak Credentials",
        "type": "Class",
        "original_content": "The product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.",
        "relationships": [],
        "original_sparse_score": 126.23384412069657,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.49741022242636174,
            "sparse": 126.23384412069657
          },
          "normalized_scores": {
            "dense": 0.49741022242636174,
            "sparse": 0.10098707529655726
          },
          "weighted_scores": {
            "dense": 0.1740935778492266,
            "sparse": 0.04039483011862291
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.49741022242636174,
              "query_max": 0.6647462608571577,
              "query_min": 0.4881374652467456,
              "normalized_score": 0.49741022242636174,
              "weight": 0.35,
              "weighted_score": 0.1740935778492266
            },
            "sparse": {
              "raw_score": 126.23384412069657,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.10098707529655726,
              "weight": 0.4,
              "weighted_score": 0.04039483011862291
            }
          },
          "contribution_percentages": {
            "dense": 81.16689358583992,
            "sparse": 18.83310641416008
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.21448840796784951,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.17159072637427963
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.17159072637427963
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.18017026269299363
            }
          },
          "combined_score": 0.18017026269299363
        }
      },
      "similarity": 0.18017026269299363
    },
    {
      "metadata": {
        "doc_id": "CWE-613",
        "name": "Insufficient Session Expiration",
        "type": "Base",
        "original_content": "According to WASC, \"Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.\"",
        "relationships": [],
        "original_sparse_score": 121.44517889760917,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 121.44517889760917
          },
          "normalized_scores": {
            "sparse": 0.09715614311808733
          },
          "weighted_scores": {
            "sparse": 0.03886245724723494
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 121.44517889760917,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.09715614311808733,
              "weight": 0.4,
              "weighted_score": 0.03886245724723494
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.03886245724723494,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.05052119442140542
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.05052119442140542
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.05557331386354597
            }
          },
          "combined_score": 0.05557331386354597
        }
      },
      "similarity": 0.05557331386354597
    },
    {
      "metadata": {
        "doc_id": "CWE-257",
        "name": "Storing Passwords in a Recoverable Format",
        "type": "Base",
        "original_content": "The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.",
        "relationships": [],
        "original_sparse_score": 119.3025706834017,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 119.3025706834017
          },
          "normalized_scores": {
            "sparse": 0.09544205654672136
          },
          "weighted_scores": {
            "sparse": 0.038176822618688544
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 119.3025706834017,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.09544205654672136,
              "weight": 0.4,
              "weighted_score": 0.038176822618688544
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.038176822618688544,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.04962986940429511
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04962986940429511
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.054592856344724626
            }
          },
          "combined_score": 0.054592856344724626
        }
      },
      "similarity": 0.054592856344724626
    },
    {
      "metadata": {
        "doc_id": "CWE-290",
        "name": "Authentication Bypass by Spoofing",
        "type": "Base",
        "original_content": "This attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks.",
        "relationships": [],
        "original_sparse_score": 112.2345572935547,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 112.2345572935547
          },
          "normalized_scores": {
            "sparse": 0.08978764583484376
          },
          "weighted_scores": {
            "sparse": 0.03591505833393751
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 112.2345572935547,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.08978764583484376,
              "weight": 0.4,
              "weighted_score": 0.03591505833393751
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.03591505833393751,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.046689575834118764
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.046689575834118764
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.05135853341753065
            }
          },
          "combined_score": 0.05135853341753065
        }
      },
      "similarity": 0.05135853341753065
    },
    {
      "metadata": {
        "doc_id": "CWE-304",
        "name": "Missing Critical Step in Authentication",
        "type": "Base",
        "original_content": "The product implements an authentication technique, but it skips a step that weakens the technique.",
        "relationships": [],
        "original_sparse_score": 110.05648132054816,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 110.05648132054816
          },
          "normalized_scores": {
            "sparse": 0.08804518505643853
          },
          "weighted_scores": {
            "sparse": 0.035218074022575416
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 110.05648132054816,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.08804518505643853,
              "weight": 0.4,
              "weighted_score": 0.035218074022575416
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.035218074022575416,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.04578349622934804
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04578349622934804
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.05036184585228285
            }
          },
          "combined_score": 0.05036184585228285
        }
      },
      "similarity": 0.05036184585228285
    },
    {
      "metadata": {
        "doc_id": "CWE-798",
        "name": "Use of Hard-coded Credentials",
        "type": "Base",
        "original_content": "The product contains hard-coded credentials, such as a password or cryptographic key.",
        "relationships": [],
        "original_sparse_score": 107.62568199260414,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 107.62568199260414
          },
          "normalized_scores": {
            "sparse": 0.08610054559408331
          },
          "weighted_scores": {
            "sparse": 0.034440218237633324
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 107.62568199260414,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.08610054559408331,
              "weight": 0.4,
              "weighted_score": 0.034440218237633324
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.034440218237633324,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.044772283708923326
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.044772283708923326
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.04924951207981566
            }
          },
          "combined_score": 0.04924951207981566
        }
      },
      "similarity": 0.04924951207981566
    },
    {
      "metadata": {
        "doc_id": "CWE-708",
        "name": "Incorrect Ownership Assignment",
        "type": "Base",
        "original_content": "The product assigns an owner to a resource, but the owner is outside of the intended control sphere.",
        "relationships": [],
        "original_sparse_score": 107.35855388443818,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 107.35855388443818
          },
          "normalized_scores": {
            "sparse": 0.08588684310755054
          },
          "weighted_scores": {
            "sparse": 0.03435473724302022
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 107.35855388443818,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.08588684310755054,
              "weight": 0.4,
              "weighted_score": 0.03435473724302022
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.03435473724302022,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.044661158415926286
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.044661158415926286
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.04912727425751892
            }
          },
          "combined_score": 0.04912727425751892
        }
      },
      "similarity": 0.04912727425751892
    },
    {
      "metadata": {
        "doc_id": "CWE-532",
        "name": "Insertion of Sensitive Information into Log File",
        "type": "Base",
        "original_content": "The product writes sensitive information to a log file.",
        "relationships": [],
        "original_sparse_score": 104.75753610568978,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 104.75753610568978
          },
          "normalized_scores": {
            "sparse": 0.08380602888455183
          },
          "weighted_scores": {
            "sparse": 0.033522411553820734
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 104.75753610568978,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.08380602888455183,
              "weight": 0.4,
              "weighted_score": 0.033522411553820734
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.033522411553820734,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.04357913501996696
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04357913501996696
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.047937048521963656
            }
          },
          "combined_score": 0.047937048521963656
        }
      },
      "similarity": 0.047937048521963656
    },
    {
      "metadata": {
        "doc_id": "CWE-313",
        "name": "Cleartext Storage in a File or on Disk",
        "type": "Variant",
        "original_content": "The product stores sensitive information in cleartext in a file, or on disk.",
        "relationships": [],
        "original_sparse_score": 107.912855250999,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 107.912855250999
          },
          "normalized_scores": {
            "sparse": 0.0863302842007992
          },
          "weighted_scores": {
            "sparse": 0.034532113680319686
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 107.912855250999,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.0863302842007992,
              "weight": 0.4,
              "weighted_score": 0.034532113680319686
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.034532113680319686,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.04143853641638362
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04143853641638362
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.04558239005802198
            }
          },
          "combined_score": 0.04558239005802198
        }
      },
      "similarity": 0.04558239005802198
    },
    {
      "metadata": {
        "doc_id": "CWE-329",
        "name": "Generation of Predictable IV with CBC Mode",
        "type": "Variant",
        "original_content": "The product generates and uses a predictable initialization Vector (IV) with Cipher Block Chaining (CBC) Mode, which causes algorithms to be susceptible to dictionary attacks when they are encrypted under the same key.",
        "relationships": [],
        "original_sparse_score": 106.70176563311499,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 106.70176563311499
          },
          "normalized_scores": {
            "sparse": 0.08536141250649198
          },
          "weighted_scores": {
            "sparse": 0.03414456500259679
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 106.70176563311499,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.08536141250649198,
              "weight": 0.4,
              "weighted_score": 0.03414456500259679
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.03414456500259679,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.04097347800311615
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04097347800311615
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.045070825803427764
            }
          },
          "combined_score": 0.045070825803427764
        }
      },
      "similarity": 0.045070825803427764
    },
    {
      "metadata": {
        "doc_id": "CWE-352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "type": "Compound",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "relationships": [],
        "original_sparse_score": 105.0910800211403,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
          "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
          "reasons": [
            "Other"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 105.0910800211403
          },
          "normalized_scores": {
            "sparse": 0.08407286401691225
          },
          "weighted_scores": {
            "sparse": 0.0336291456067649
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 105.0910800211403,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.08407286401691225,
              "weight": 0.4,
              "weighted_score": 0.0336291456067649
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.0,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.0336291456067649,
            "abstraction": {
              "type": "compound",
              "factor": 1.0,
              "score_after": 0.0336291456067649
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0336291456067649
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
                "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
                "reasons": [
                  "Other"
                ]
              },
              "score_after": 0.036992060167441394
            }
          },
          "combined_score": 0.036992060167441394
        }
      },
      "similarity": 0.036992060167441394
    },
    {
      "metadata": {
        "doc_id": "CWE-1390",
        "name": "Weak Authentication",
        "type": "Class",
        "original_content": "The product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.",
        "relationships": [],
        "original_sparse_score": 108.67670070095208,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 108.67670070095208
          },
          "normalized_scores": {
            "sparse": 0.08694136056076167
          },
          "weighted_scores": {
            "sparse": 0.03477654422430467
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 108.67670070095208,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.08694136056076167,
              "weight": 0.4,
              "weighted_score": 0.03477654422430467
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.03477654422430467,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.02782123537944374
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.02782123537944374
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.029212297148415927
            }
          },
          "combined_score": 0.029212297148415927
        }
      },
      "similarity": 0.029212297148415927
    },
    {
      "metadata": {
        "doc_id": "CWE-287",
        "name": "Improper Authentication",
        "type": "Class",
        "original_content": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
        "relationships": [],
        "original_sparse_score": 107.93808683655777,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1390",
              "Comment": "Weak Authentication"
            },
            {
              "CweID": "306",
              "Comment": "Missing Authentication for Critical Function"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 107.93808683655777
          },
          "normalized_scores": {
            "sparse": 0.08635046946924622
          },
          "weighted_scores": {
            "sparse": 0.03454018778769849
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 107.93808683655777,
              "query_max": 378.11782665489727,
              "query_min": 104.75753610568978,
              "normalized_score": 0.08635046946924622,
              "weight": 0.4,
              "weighted_score": 0.03454018778769849
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.03454018778769849,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.027632150230158792
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.027632150230158792
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1390",
                    "Comment": "Weak Authentication"
                  },
                  {
                    "CweID": "306",
                    "Comment": "Missing Authentication for Critical Function"
                  }
                ]
              },
              "score_after": 0.022105720184127035
            }
          },
          "combined_score": 0.022105720184127035
        }
      },
      "similarity": 0.022105720184127035
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-323",
      "CWE-1204",
      "CWE-330"
    ],
    "critic_additional": [
      "CWE-344"
    ]
  }
}