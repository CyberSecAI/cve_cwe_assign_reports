{
  "cve_id": "CVE-2020-11256",
  "description": "Memory corruption due to lack of check of validation of pointer to buffer passed to trustzone in Snapdragon Wired Infrastructure and Networking",
  "key_phrases": {
    "rootcause": "",
    "weakness": "Memory corruption",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "Snapdragon Wired Infrastructure and Networking",
    "version": "",
    "component": "trustzone"
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-822 | Untrusted Pointer Dereference | 0.75 | Base | Allowed | The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer. |\n| CWE-787 | Out-of-bounds Write | 0.5 | Base | Allowed | The product writes data past the end, or before the beginning, of the intended buffer. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.6\n*   **Evidence Strength:** MEDIUM\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description mentions \"**Memory corruption** due to lack of check of validation of pointer to buffer passed to trustzone\". This suggests that a pointer is being used without proper validation, which could lead to it pointing to an unexpected memory location. CWE-822 (Untrusted Pointer Dereference) describes a scenario where \"The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.\" This aligns well with the provided description, since the pointer to buffer is passed to trustzone, and if the pointer is not validated, then trustzone will dereference an untrusted pointer, leading to memory corruption. The retriever results also list CWE-822 as the top candidate. CWE-787 (Out-of-bounds Write) is also a possibility given the \"**Memory corruption**\" description, where memory outside the intended buffer is written to, which causes memory corruption.\n  \n  - *Relationship Analysis:* CWE-822 is a Base level CWE, which is appropriate for mapping root causes. It is related to pointer dereferences. CWE-787 is a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), indicating that it is a more specific form of buffer-related weakness.\n\n- **Confidence Score:**  \n  - Confidence: 0.75 (Due to the clear indication of pointer validation issues)\n\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-822 | Untrusted Pointer Dereference | 0.75 | Base | Allowed | The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer. |\n| CWE-787 | Out-of-bounds Write | 0.5 | Base | Allowed | The product writes data past the end, or before the beginning, of the intended buffer. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.6\n*   **Evidence Strength:** MEDIUM\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description mentions \"**Memory corruption** due to lack of check of validation of pointer to buffer passed to trustzone\". This suggests that a pointer is being used without proper validation, which could lead to it pointing to an unexpected memory location. CWE-822 (Untrusted Pointer Dereference) describes a scenario where \"The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.\" This aligns well with the provided description, since the pointer to buffer is passed to trustzone, and if the pointer is not validated, then trustzone will dereference an untrusted pointer, leading to memory corruption. The retriever results also list CWE-822 as the top candidate. CWE-787 (Out-of-bounds Write) is also a possibility given the \"**Memory corruption**\" description, where memory outside the intended buffer is written to, which causes memory corruption.\n  \n  - *Relationship Analysis:* CWE-822 is a Base level CWE, which is appropriate for mapping root causes. It is related to pointer dereferences. CWE-787 is a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), indicating that it is a more specific form of buffer-related weakness.\n\n- **Confidence Score:**  \n  - Confidence: 0.75 (Due to the clear indication of pointer validation issues)\n\n---",
  "criticism": "Okay, I've reviewed the analysis and the full CWE specifications. Here's my critique:\n\n**Overall Assessment:**\n\nThe analysis correctly identifies potential CWEs related to the vulnerability description.  The core reasoning is sound, linking the lack of pointer validation to memory corruption. However, I have some suggestions regarding the confidence scores and the inclusion of other potential, related CWEs.\n\n**Specific Comments:**\n\n1.  **CWE-822: Untrusted Pointer Dereference:**\n\n    *   **Confidence:** The analysis provides a confidence of 0.75. While pointer validation is clearly a concern, the description doesn't explicitly state that the pointer's *source* is untrusted. It only says it lacks validation. While highly probable given the context of trustzone interactions, this is an assumption. Therefore, a confidence of 0.65 - 0.70 might be more appropriate. The top combined retriever result also confirms this choice.\n    *   **Justification:** The justification is well-written and accurately describes the vulnerability and relationship to CWE-822. The connection to trustzone and the potential for dereferencing an unvalidated pointer to an unexpected memory location is well-reasoned.\n    *   **CWE Examples:** The provided examples are relevant and illustrate how untrusted pointer dereferences can manifest in real-world vulnerabilities.\n    *   **CWE Specifications:** The analysis appropriately references the description, relationships, and mapping guidance for CWE-822.\n    *   **Missing Consideration:** The specification includes the alternative of Inadvertently accepting the value from an untrusted control sphere when it did not have to be accepted as input at all. The analysis does not account for this.\n\n2.  **CWE-787: Out-of-Bounds Write:**\n\n    *   **Confidence:** The analysis gives a confidence of 0.5. This seems reasonable, as the vulnerability description only mentions \"memory corruption,\" which is a broader term than just out-of-bounds writes.  Memory corruption could be caused by other issues such as dangling pointers or memory leaks.\n    *   **Justification:** The explanation that \"memory outside the intended buffer is written to\" is a valid interpretation of the \"memory corruption\" description. However, without more specific information, it remains a possibility rather than a certainty.\n    *   **CWE Examples:** The provided examples are relevant and illustrate how out-of-bounds writes can lead to significant vulnerabilities.\n    *   **CWE Specifications:** The analysis appropriately references the description, relationships, and mapping guidance for CWE-787.\n\n3.  **Additional CWEs to Consider (from Retriever Results):**\n    *   **CWE-823: Use of Out-of-Range Pointer Offset:**  This CWE is closely related to CWE-822. If the pointer itself is considered \"trusted\" but the offset used to access memory relative to that pointer is not validated, then CWE-823 would be a good fit. This should be added as a possibility with a low confidence of ~0.3, because if the root cause is lack of validation, then the offset is out-of-range.\n    *   **CWE-1285: Improper Validation of Specified Index, Position, or Offset in Input:** This CWE is closely related to the memory corruption as it could be caused by improper validation. It could be added as a possibility with a low confidence of ~0.3.\n\n4.  **Mitigation:**\n    * The mitigation recommendations from the CWE specifications are generally applicable. For CWE-822, focusing on validating pointers before dereferencing is critical. For CWE-787, using memory-safe languages or libraries and enabling buffer overflow detection mechanisms are helpful.\n    * Given the context of TrustZone, mitigation strategies should explicitly mention the importance of secure communication channels and validated data transfer between normal world and secure world.\n\n**Revised Summary Table:**\n\n| CWE ID  | CWE Name                                    | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes                                                                                                                                                                                                                            |\n| :------ | :------------------------------------------ | :--------- | :-------------------- | :------------------------------ | :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| CWE-822 | Untrusted Pointer Dereference               | 0.65       | Base                  | Allowed                         | The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer. It is unclear whether the pointer's source is truly untrusted, or simply unvalidated.                           |\n| CWE-787 | Out-of-bounds Write                         | 0.5        | Base                  | Allowed                         | The product writes data past the end, or before the beginning, of the intended buffer. This is a possible consequence of the memory corruption but is not explicitly stated.                                                                                    |\n| CWE-823 | Use of Out-of-Range Pointer Offset          | 0.3        | Base                  | Allowed                         | The product performs pointer arithmetic on a valid pointer, but uses an offset that is out-of-range.  Requires pointer arithmetic to be the root cause.                                                                                                     |\n| CWE-1285| Improper Validation of Specified Index, Position, or Offset in Input|0.3|Base|Allowed| The product receives input to specify an index, position or offset into a resource, but it does not validate that the specified index/position/offset has the required properties.\n**Recommendations:**\n\n*   **Refine Confidence Scores:** Adjust confidence scores based on the certainty of the information provided in the vulnerability description.  Avoid overstating confidence based on assumptions.\n*   **Consider Additional CWEs:** Don't solely rely on the top retriever result if others are plausible.\n*   **Be More Specific in Justifications:** Clearly state the evidence supporting each CWE assignment and acknowledge any assumptions being made.\n*   **Enhance Mitigation Strategies:** Tailor mitigation recommendations to the specific environment (e.g., TrustZone) and address the root cause.\n*   **Review code:** Static or dynamic analysis could be used to review the code and see which CWEs are more applicable.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-822 | **Untrusted Pointer Dereference** | 0.70 | Base | Allowed | The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.  |\n| CWE-787 | **Out-of-bounds Write** | 0.5 | Base | Allowed | The product writes data past the end, or before the beginning, of the intended buffer. |\n| CWE-1285 | **Improper Validation of Specified Index, Position, or Offset in Input** | 0.3 | Base | Allowed | The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties. |\n\n  - The Primary CWE should be first and noted as the Primary CWEs\n  - The secondary candidate CWEs should be next and noted as secondary candidates.\n  - The confidence is a confidence score 0 to 1 to rate your confidence in your assessment for that CWE.\n  - The CWE Abstraction Level as one of these values: Base, Variant, Pillar, Class, Compound\n  - The Mapping Notes Usage as one of these values: Allowed, Allowed-with-Review, Prohibited, Discouraged\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship that impacted the decision was the parent-child relationship between CWE-787 (**Out-of-bounds Write**) and CWE-119 (**Improper Restriction of Operations within the Bounds of a Memory Buffer**), with CWE-787 being a child of CWE-119. This indicated that while **out-of-bounds write** is a possible consequence, the immediate cause is the **lack of validation of the pointer**. The other relationships considered include chain relationships where an improper pointer dereference (**CWE-822**) or use of out-of-range offset (**CWE-823**) or **Improper validation of input** (**CWE-1285**) can precede an out-of-bounds write (**CWE-787**). I selected CWEs at the Base level to ensure sufficient specificity.\n\n```mermaid\ngraph TD\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe822[\"CWE-822: Untrusted Pointer Dereference\"]\n    cwe1285[\"CWE-1285: Improper Validation of Specified Index, Position, or Offset in Input\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations\"]\n    \n    cwe787 -->|CHILDOF| cwe119\n    cwe822 -->|CANPRECEDE| cwe787\n    cwe1285 -->|CANPRECEDE| cwe787\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe822 primary\n    class cwe787,cwe1285 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of validation of a pointer** passed to the trustzone. This **unvalidated pointer** is then dereferenced (**CWE-822**), potentially leading to memory corruption. The memory corruption can manifest as an **out-of-bounds write** (**CWE-787**). **Improper validation of input** (**CWE-1285**) can precede this chain.\n\n## Summary of Analysis\nThe initial analysis correctly identified CWE-822 (**Untrusted Pointer Dereference**) and CWE-787 (**Out-of-bounds Write**) as potential weaknesses. The criticism provided a more nuanced view, which I largely agree with.\n\nThe vulnerability description states: \"Memory corruption due to **lack of check of validation of pointer** to buffer passed to trustzone\". Based on this, the primary issue is the **lack of validation**, which directly leads to potential for an **untrusted pointer dereference** (**CWE-822**). This confirms my decision to keep **CWE-822** as the primary CWE. I agree with the criticism that a confidence score of 0.7 is more appropriate because the untrusted source of the pointer is an assumption. The description does not explicitly state that the pointer's *source* is untrusted.\n\nI've kept CWE-787 (**Out-of-bounds Write**) as a secondary CWE, as it is a possible consequence of the memory corruption, but not explicitly stated. A low confidence score of 0.5 is assigned to it as well.\n\nI have added CWE-1285 (**Improper Validation of Specified Index, Position, or Offset in Input**) to account for the **lack of validation** of the pointer or offset used to access the buffer. I have assigned a confidence score of 0.3.\n\nThe selected CWEs are at the Base level of abstraction, providing sufficient specificity.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-822",
        "name": "Untrusted Pointer Dereference",
        "type": "Base",
        "original_content": "The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.",
        "relationships": [],
        "original_sparse_score": 158.1957039256393,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.56208241426313,
            "sparse": 158.1957039256393,
            "graph": 2.8466148466509624
          },
          "normalized_scores": {
            "dense": 0.56208241426313,
            "sparse": 0.12655656314051145,
            "graph": 1.0
          },
          "weighted_scores": {
            "dense": 0.19672884499209548,
            "sparse": 0.05062262525620458,
            "graph": 0.25
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.56208241426313,
              "query_max": 0.5728437676294009,
              "query_min": 0.510473894326483,
              "normalized_score": 0.56208241426313,
              "weight": 0.35,
              "weighted_score": 0.19672884499209548
            },
            "sparse": {
              "raw_score": 158.1957039256393,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.12655656314051145,
              "weight": 0.4,
              "weighted_score": 0.05062262525620458
            },
            "graph": {
              "raw_score": 2.8466148466509624,
              "query_max": 4.329000000000001,
              "query_min": 1.5513005793479104,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "dense": 39.55529575370103,
            "sparse": 10.178440858118206,
            "graph": 50.26626338818077
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.49735147024830006,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6465569113227901
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6465569113227901
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7112126024550692
            }
          },
          "combined_score": 0.7112126024550692
        }
      },
      "similarity": 0.7112126024550692
    },
    {
      "metadata": {
        "doc_id": "CWE-823",
        "name": "Use of Out-of-range Pointer Offset",
        "type": "Base",
        "original_content": "The product performs pointer arithmetic on a valid pointer, but it uses an offset that can point outside of the intended range of valid memory locations for the resulting pointer.",
        "relationships": [],
        "original_sparse_score": 175.7503276645108,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5302727129184444,
            "sparse": 175.7503276645108,
            "graph": 2.834653797376424
          },
          "normalized_scores": {
            "dense": 0.5302727129184444,
            "sparse": 0.14060026213160864,
            "graph": 1.0
          },
          "weighted_scores": {
            "dense": 0.1855954495214555,
            "sparse": 0.05624010485264346,
            "graph": 0.25
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5302727129184444,
              "query_max": 0.5728437676294009,
              "query_min": 0.510473894326483,
              "normalized_score": 0.5302727129184444,
              "weight": 0.35,
              "weighted_score": 0.1855954495214555
            },
            "sparse": {
              "raw_score": 175.7503276645108,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.14060026213160864,
              "weight": 0.4,
              "weighted_score": 0.05624010485264346
            },
            "graph": {
              "raw_score": 2.834653797376424,
              "query_max": 4.329000000000001,
              "query_min": 1.5513005793479104,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "dense": 37.735264941885085,
            "sparse": 11.434737556583032,
            "graph": 50.829997501531885
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.491835554374099,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6393862206863287
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6393862206863287
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7033248427549615
            }
          },
          "combined_score": 0.7033248427549615
        }
      },
      "similarity": 0.7033248427549615
    },
    {
      "metadata": {
        "doc_id": "CWE-1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
        "relationships": [],
        "original_sparse_score": 174.7445974758279,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5728437676294009,
            "sparse": 174.7445974758279,
            "graph": 1.6914708858502676
          },
          "normalized_scores": {
            "dense": 0.5728437676294009,
            "sparse": 0.1397956779806623,
            "graph": 0.6040967449465242
          },
          "weighted_scores": {
            "dense": 0.2004953186702903,
            "sparse": 0.055918271192264925,
            "graph": 0.15102418623663105
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5728437676294009,
              "query_max": 0.5728437676294009,
              "query_min": 0.510473894326483,
              "normalized_score": 0.5728437676294009,
              "weight": 0.35,
              "weighted_score": 0.2004953186702903
            },
            "sparse": {
              "raw_score": 174.7445974758279,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.1397956779806623,
              "weight": 0.4,
              "weighted_score": 0.055918271192264925
            },
            "graph": {
              "raw_score": 1.6914708858502676,
              "query_max": 4.329000000000001,
              "query_min": 1.5513005793479104,
              "normalized_score": 0.6040967449465242,
              "weight": 0.25,
              "weighted_score": 0.15102418623663105
            }
          },
          "contribution_percentages": {
            "dense": 49.20881921893317,
            "sparse": 13.724370805188233,
            "graph": 37.06680997587859
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4074377760991863,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5296691089289423
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5296691089289423
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5826360198218365
            }
          },
          "combined_score": 0.5826360198218365
        }
      },
      "similarity": 0.5826360198218365
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 194.31257215494855,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 194.31257215494855,
            "graph": 4.329000000000001
          },
          "normalized_scores": {
            "sparse": 0.15545005772395884,
            "graph": 1.0
          },
          "weighted_scores": {
            "sparse": 0.062180023089583536,
            "graph": 0.25
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 194.31257215494855,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.15545005772395884,
              "weight": 0.4,
              "weighted_score": 0.062180023089583536
            },
            "graph": {
              "raw_score": 4.329000000000001,
              "query_max": 4.329000000000001,
              "query_min": 1.5513005793479104,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "sparse": 19.918001950989762,
            "graph": 80.08199804901024
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.31218002308958354,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4058340300164586
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4058340300164586
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.44641743301810455
            }
          },
          "combined_score": 0.44641743301810455
        }
      },
      "similarity": 0.44641743301810455
    },
    {
      "metadata": {
        "doc_id": "CWE-252",
        "name": "Unchecked Return Value",
        "type": "Base",
        "original_content": "The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.",
        "relationships": [],
        "original_sparse_score": 193.16704055476745,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 193.16704055476745,
            "graph": 2.1189999999999998
          },
          "normalized_scores": {
            "sparse": 0.15453363244381396,
            "graph": 0.7567857142857143
          },
          "weighted_scores": {
            "sparse": 0.061813452977525586,
            "graph": 0.18919642857142857
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 193.16704055476745,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.15453363244381396,
              "weight": 0.4,
              "weighted_score": 0.061813452977525586
            },
            "graph": {
              "raw_score": 2.1189999999999998,
              "query_max": 4.329000000000001,
              "query_min": 1.5513005793479104,
              "normalized_score": 0.7567857142857143,
              "weight": 0.25,
              "weighted_score": 0.18919642857142857
            }
          },
          "contribution_percentages": {
            "sparse": 24.62590420587493,
            "graph": 75.37409579412507
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.25100988154895415,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3263128460136404
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3263128460136404
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.35894413061500446
            }
          },
          "combined_score": 0.35894413061500446
        }
      },
      "similarity": 0.35894413061500446
    },
    {
      "metadata": {
        "doc_id": "CWE-124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "type": "Base",
        "original_content": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "relationships": [],
        "original_sparse_score": 170.14303578526776,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5137689771438683,
            "sparse": 170.14303578526776
          },
          "normalized_scores": {
            "dense": 0.5137689771438683,
            "sparse": 0.1361144286282142
          },
          "weighted_scores": {
            "dense": 0.17981914200035387,
            "sparse": 0.054445771451285686
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5137689771438683,
              "query_max": 0.5728437676294009,
              "query_min": 0.510473894326483,
              "normalized_score": 0.5137689771438683,
              "weight": 0.35,
              "weighted_score": 0.17981914200035387
            },
            "sparse": {
              "raw_score": 170.14303578526776,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.1361144286282142,
              "weight": 0.4,
              "weighted_score": 0.054445771451285686
            }
          },
          "contribution_percentages": {
            "dense": 76.75888776979606,
            "sparse": 23.241112230203946
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.23426491345163955,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3045443874871314
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3045443874871314
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3349988262358446
            }
          },
          "combined_score": 0.3349988262358446
        }
      },
      "similarity": 0.3349988262358446
    },
    {
      "metadata": {
        "doc_id": "CWE-1314",
        "name": "Missing Write Protection for Parametric Data Values",
        "type": "Base",
        "original_content": "The device does not write-protect the parametric data values for sensors that scale the sensor value, allowing untrusted software to manipulate the apparent result and potentially damage hardware or cause operational failure.",
        "relationships": [],
        "original_sparse_score": 154.89802497944035,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5154505431526077,
            "sparse": 154.89802497944035
          },
          "normalized_scores": {
            "dense": 0.5154505431526077,
            "sparse": 0.12391841998355228
          },
          "weighted_scores": {
            "dense": 0.1804076901034127,
            "sparse": 0.049567367993420916
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5154505431526077,
              "query_max": 0.5728437676294009,
              "query_min": 0.510473894326483,
              "normalized_score": 0.5154505431526077,
              "weight": 0.35,
              "weighted_score": 0.1804076901034127
            },
            "sparse": {
              "raw_score": 154.89802497944035,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.12391841998355228,
              "weight": 0.4,
              "weighted_score": 0.049567367993420916
            }
          },
          "contribution_percentages": {
            "dense": 78.44663312464519,
            "sparse": 21.55336687535481
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2299750580968336,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2989675755258837
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2989675755258837
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3288643330784721
            }
          },
          "combined_score": 0.3288643330784721
        }
      },
      "similarity": 0.3288643330784721
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 187.64228046117307,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5351413578351591,
            "sparse": 187.64228046117307
          },
          "normalized_scores": {
            "dense": 0.5351413578351591,
            "sparse": 0.15011382436893847
          },
          "weighted_scores": {
            "dense": 0.1872994752423057,
            "sparse": 0.06004552974757539
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5351413578351591,
              "query_max": 0.5728437676294009,
              "query_min": 0.510473894326483,
              "normalized_score": 0.5351413578351591,
              "weight": 0.35,
              "weighted_score": 0.1872994752423057
            },
            "sparse": {
              "raw_score": 187.64228046117307,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.15011382436893847,
              "weight": 0.4,
              "weighted_score": 0.06004552974757539
            }
          },
          "contribution_percentages": {
            "dense": 75.72397722362257,
            "sparse": 24.276022776377417
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2473450049898811,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.2968140059878573
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2968140059878573
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.32649540658664306
            }
          },
          "combined_score": 0.32649540658664306
        }
      },
      "similarity": 0.32649540658664306
    },
    {
      "metadata": {
        "doc_id": "CWE-476",
        "name": "NULL Pointer Dereference",
        "type": "Base",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "relationships": [],
        "original_sparse_score": 168.7645255901061,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 168.7645255901061,
            "graph": 1.5514486412990107
          },
          "normalized_scores": {
            "sparse": 0.13501162047208487,
            "graph": 0.5540888004639324
          },
          "weighted_scores": {
            "sparse": 0.05400464818883395,
            "graph": 0.1385222001159831
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 168.7645255901061,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.13501162047208487,
              "weight": 0.4,
              "weighted_score": 0.05400464818883395
            },
            "graph": {
              "raw_score": 1.5514486412990107,
              "query_max": 4.329000000000001,
              "query_min": 1.5513005793479104,
              "normalized_score": 0.5540888004639324,
              "weight": 0.25,
              "weighted_score": 0.1385222001159831
            }
          },
          "contribution_percentages": {
            "sparse": 28.05045045111391,
            "graph": 71.9495495488861
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.19252684830481703,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.25028490279626214
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.25028490279626214
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.27531339307588837
            }
          },
          "combined_score": 0.27531339307588837
        }
      },
      "similarity": 0.27531339307588837
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 173.76483237447314,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 173.76483237447314
          },
          "normalized_scores": {
            "sparse": 0.1390118658995785
          },
          "weighted_scores": {
            "sparse": 0.055604746359831404
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 173.76483237447314,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.1390118658995785,
              "weight": 0.4,
              "weighted_score": 0.055604746359831404
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.055604746359831404,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.07228617026778082
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07228617026778082
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.07951478729455891
            }
          },
          "combined_score": 0.07951478729455891
        }
      },
      "similarity": 0.07951478729455891
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 173.4564150008419,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 173.4564150008419
          },
          "normalized_scores": {
            "sparse": 0.13876513200067353
          },
          "weighted_scores": {
            "sparse": 0.05550605280026941
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 173.4564150008419,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.13876513200067353,
              "weight": 0.4,
              "weighted_score": 0.05550605280026941
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.05550605280026941,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.07215786864035025
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07215786864035025
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.07937365550438527
            }
          },
          "combined_score": 0.07937365550438527
        }
      },
      "similarity": 0.07937365550438527
    },
    {
      "metadata": {
        "doc_id": "CWE-415",
        "name": "Double Free",
        "type": "Variant",
        "original_content": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
        "relationships": [],
        "original_sparse_score": 168.33520757524752,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 168.33520757524752
          },
          "normalized_scores": {
            "sparse": 0.13466816606019802
          },
          "weighted_scores": {
            "sparse": 0.05386726642407921
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 168.33520757524752,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.13466816606019802,
              "weight": 0.4,
              "weighted_score": 0.05386726642407921
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.05386726642407921,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.06464071970889505
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06464071970889505
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.07110479167978456
            }
          },
          "combined_score": 0.07110479167978456
        }
      },
      "similarity": 0.07110479167978456
    },
    {
      "metadata": {
        "doc_id": "CWE-367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "type": "Base",
        "original_content": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
        "relationships": [],
        "original_sparse_score": 154.61676220265548,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 154.61676220265548
          },
          "normalized_scores": {
            "sparse": 0.12369340976212438
          },
          "weighted_scores": {
            "sparse": 0.049477363904849754
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 154.61676220265548,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.12369340976212438,
              "weight": 0.4,
              "weighted_score": 0.049477363904849754
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.049477363904849754,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.06432057307630468
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06432057307630468
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.07075263038393514
            }
          },
          "combined_score": 0.07075263038393514
        }
      },
      "similarity": 0.07075263038393514
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 158.42924623655574,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 158.42924623655574
          },
          "normalized_scores": {
            "sparse": 0.12674339698924458
          },
          "weighted_scores": {
            "sparse": 0.05069735879569784
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 158.42924623655574,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.12674339698924458,
              "weight": 0.4,
              "weighted_score": 0.05069735879569784
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.05069735879569784,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.06083683055483741
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06083683055483741
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.06692051361032116
            }
          },
          "combined_score": 0.06692051361032116
        }
      },
      "similarity": 0.06692051361032116
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 156.93357850641397,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 156.93357850641397
          },
          "normalized_scores": {
            "sparse": 0.12554686280513117
          },
          "weighted_scores": {
            "sparse": 0.05021874512205247
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 156.93357850641397,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.12554686280513117,
              "weight": 0.4,
              "weighted_score": 0.05021874512205247
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.05021874512205247,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.06026249414646296
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06026249414646296
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.06628874356110927
            }
          },
          "combined_score": 0.06628874356110927
        }
      },
      "similarity": 0.06628874356110927
    },
    {
      "metadata": {
        "doc_id": "CWE-416",
        "name": "Use After Free",
        "type": "Variant",
        "original_content": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
        "relationships": [],
        "original_sparse_score": 156.0151905429664,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 156.0151905429664
          },
          "normalized_scores": {
            "sparse": 0.12481215243437312
          },
          "weighted_scores": {
            "sparse": 0.04992486097374925
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 156.0151905429664,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.12481215243437312,
              "weight": 0.4,
              "weighted_score": 0.04992486097374925
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.04992486097374925,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.0599098331684991
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0599098331684991
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.06590081648534901
            }
          },
          "combined_score": 0.06590081648534901
        }
      },
      "similarity": 0.06590081648534901
    },
    {
      "metadata": {
        "doc_id": "CWE-362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "type": "Class",
        "original_content": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.",
        "relationships": [],
        "original_sparse_score": 161.62358036896515,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 161.62358036896515
          },
          "normalized_scores": {
            "sparse": 0.12929886429517212
          },
          "weighted_scores": {
            "sparse": 0.05171954571806885
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 161.62358036896515,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.12929886429517212,
              "weight": 0.4,
              "weighted_score": 0.05171954571806885
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.05171954571806885,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.04137563657445509
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04137563657445509
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.043444418403177844
            }
          },
          "combined_score": 0.043444418403177844
        }
      },
      "similarity": 0.043444418403177844
    },
    {
      "metadata": {
        "doc_id": "CWE-704",
        "name": "Incorrect Type Conversion or Cast",
        "type": "Class",
        "original_content": "The product does not correctly convert an object, resource, or structure from one type to a different type.",
        "relationships": [],
        "original_sparse_score": 156.4973202720624,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 156.4973202720624
          },
          "normalized_scores": {
            "sparse": 0.12519785621764992
          },
          "weighted_scores": {
            "sparse": 0.05007914248705997
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 156.4973202720624,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.12519785621764992,
              "weight": 0.4,
              "weighted_score": 0.05007914248705997
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.05007914248705997,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.04006331398964798
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04006331398964798
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.04206647968913038
            }
          },
          "combined_score": 0.04206647968913038
        }
      },
      "similarity": 0.04206647968913038
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 171.72537176193174,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 171.72537176193174
          },
          "normalized_scores": {
            "sparse": 0.13738029740954538
          },
          "weighted_scores": {
            "sparse": 0.05495211896381816
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 171.72537176193174,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.13738029740954538,
              "weight": 0.4,
              "weighted_score": 0.05495211896381816
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.05495211896381816,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.04396169517105453
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04396169517105453
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.035169356136843626
            }
          },
          "combined_score": 0.035169356136843626
        }
      },
      "similarity": 0.035169356136843626
    },
    {
      "metadata": {
        "doc_id": "CWE-665",
        "name": "Improper Initialization",
        "type": "Class",
        "original_content": "The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.",
        "relationships": [],
        "original_sparse_score": 157.94642107409962,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 157.94642107409962
          },
          "normalized_scores": {
            "sparse": 0.12635713685927968
          },
          "weighted_scores": {
            "sparse": 0.050542854743711875
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 157.94642107409962,
              "query_max": 194.31257215494855,
              "query_min": 154.61676220265548,
              "normalized_score": 0.12635713685927968,
              "weight": 0.4,
              "weighted_score": 0.050542854743711875
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.050542854743711875,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.0404342837949695
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0404342837949695
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.0323474270359756
            }
          },
          "combined_score": 0.0323474270359756
        }
      },
      "similarity": 0.0323474270359756
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-822",
      "CWE-787",
      "CWE-119"
    ],
    "critic_additional": [
      "CWE-1285",
      "CWE-823"
    ]
  }
}