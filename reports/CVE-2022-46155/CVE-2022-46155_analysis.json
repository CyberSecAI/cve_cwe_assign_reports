{
  "cve_id": "CVE-2022-46155",
  "description": "Airtable.js is the JavaScript client for Airtable. Prior to version 0.11.6, Airtable.js had a misconfigured build script in its source package. When the build script is run, it would bundle environment variables into the build target of a transpiled bundle. Specifically, the AIRTABLE_API_KEY and AIRTABLE_ENDPOINT_URL environment variables are inserted during Browserify builds due to being referenced in Airtable.js code. This only affects copies of Airtable.js built from its source, not those installed via npm or yarn. Airtable API keys set in users environments via the AIRTABLE_API_KEY environment variable may be bundled into local copies of Airtable.js source code if all of the following conditions are met 1) the user has cloned the Airtable.js source onto their machine, 2) the user runs the `npm prepare` script, and 3) the user has the AIRTABLE_API_KEY environment variable set. If these conditions are met, a users local build of Airtable.js would be modified to include the value of the AIRTABLE_API_KEY environment variable, which could then be accidentally shipped in the bundled code. Users who do not meet all three of these conditions are not impacted by this issue. Users should upgrade to Airtable.js version 0.11.6 or higher or, as a workaround unset the AIRTABLE_API_KEY environment variable in their shell and/or remove it from your .bashrc, .zshrc, or other shell configuration files. Users should also regenerate any Airtable API keys they use, as the keysy may be present in bundled code.",
  "key_phrases": {
    "rootcause": "misconfigured build script",
    "weakness": "inclusion of sensitive information in build target",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "Airtable.js",
    "version": "prior to 0.11.6",
    "component": ""
  },
  "reference_content": "Based on the provided content, here's a breakdown of the vulnerability:\n\n**Root cause of vulnerability:**\n\n*   A misconfigured build script in the `airtable.js` package was bundling environment variables into the browser build. Specifically, `AIRTABLE_API_KEY` and `AIRTABLE_ENDPOINT_URL` were being included in the generated bundle when referenced in the code.\n\n**Weaknesses/vulnerabilities present:**\n\n*   **Credentials Exposure:** The primary vulnerability is the unintentional inclusion of the `AIRTABLE_API_KEY` within the browser build of the library, potentially exposing sensitive API keys.\n*   **Build Process Misconfiguration:** The core issue stems from the build script's failure to properly exclude environment variables during the bundling process, which was using `envify` to inject the environment variables.\n\n**Impact of exploitation:**\n\n*   **Unauthorized API access:** If the bundled `airtable.js` code containing the API key is distributed, attackers could extract the key and gain unauthorized access to the corresponding Airtable account.\n*   **Data Breach/Modification:** With access to the API key, attackers could potentially view, modify, or delete data stored in the associated Airtable base.\n\n**Attack vectors:**\n\n*   **Accidental Distribution of Bundled Code:** The primary attack vector involves a developer who cloned the `airtable.js` source code, ran the `npm prepare` script (triggering the problematic build process), and then inadvertently distributed the modified bundle containing the API key (e.g., by including it in their website or application).\n*   **Man-in-the-Middle (Potentially):** While less likely, an attacker who could intercept the distribution channel might also be able to access the bundled javascript and extract the API key.\n\n**Required attacker capabilities/position:**\n\n*   The attacker needs access to a copy of the modified `airtable.js` code bundled by a developer who cloned the repository, ran the build script with the environment variable set.\n\n**Additional details:**\n\n*   The vulnerability only affects developers who build `airtable.js` from the source using `npm prepare` with the `AIRTABLE_API_KEY` environment variable set. Users who install `airtable.js` through npm or yarn are not affected.\n*   The fix involves modifying the build script to explicitly mask out the environment variables `AIRTABLE_ENDPOINT_URL` and `AIRTABLE_API_KEY` using the `envify` transform by setting them to empty strings during the build process.\n*   The fixed version of the package is `0.11.6`.\n*   The advisory recommends upgrading to `airtable.js` version `0.11.6` or higher, unsetting the `AIRTABLE_API_KEY` environment variable, and regenerating any Airtable API keys that were used during affected builds.\n*   The vulnerability is categorized under CWE-522: Insufficiently Protected Credentials\n*   CVSS v3 base metrics are: AV:N/AC:H/PR:H/UI:R/S:C/C:H/I:H/A:H which translates to: Network Attack Vector, High Attack Complexity, High Privileges Required, User Interaction Required, Scope Changed, High Confidentiality, High Integrity, High Availability\n\nThe provided information is more detailed than a typical CVE description.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-526 | Cleartext Storage of Sensitive Information in an Environment Variable | 0.95 | Variant | Allowed | Primary CWE |\n| CWE-201 | Insertion of Sensitive Information Into Sent Data | 0.75 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability involves a **misconfigured build script** that inadvertently bundles the `AIRTABLE_API_KEY` environment variable into the build output, leading to **exposure of sensitive information**. This aligns well with CWE-526, \"Cleartext Storage of Sensitive Information in an Environment Variable,\" because the API key, a sensitive credential, which is stored in the environment variables and included in the build artifact without proper protection. The vulnerability description and CVE reference links content summary explicitly state that the `AIRTABLE_API_KEY` environment variable is bundled into the built `airtable.js` file. This is a clear example of storing sensitive information (the API key) in an environment variable and then including it in cleartext in the final product. CWE-526 is a Variant level CWE, which is a preferred level of abstraction. MITRE mapping guidance indicates that CWE-526 is ALLOWED.\n  \n  - *Relationship Analysis:* CWE-526 has no direct relationships, but it can be considered a specific case of more general weaknesses related to information exposure. It is related to the broader issue of credentials management and secure coding practices. The environment variable itself is not the problem, but rather the inclusion of its value within the built artifact.\n\n- **Confidence Score:**  \n  - Confidence: 0.95 (High evidence from technical description, CVE reference materials, and alignment with CWE characteristics)\n\n---\n- **Analysis and Justification:**  \n  - *Explanation:* CWE-201, \"Insertion of Sensitive Information Into Sent Data,\" is a potential secondary candidate because the bundled `airtable.js` file, containing the API key, is essentially \"sent\" (distributed) to users or systems where it should not be accessible. This aligns with the CWE's description: \"The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.\" While the primary issue is the storage and inclusion of the API key in the environment variable and build output (CWE-526), the distribution of this output containing the key can be seen as an instance of CWE-201. However, it is the direct consequence of CWE-526, making CWE-526 the root cause. CWE-201 is a Base level CWE, which is a preferred level of abstraction. MITRE mapping guidance indicates that CWE-201 is ALLOWED.\n  \n  - *Relationship Analysis:* CWE-201 is related to weaknesses like CWE-212 (Improper Removal of Sensitive Information Before Storage or Transfer) and CWE-226 (Sensitive Information in Resource Not Removed Before Reuse). The relationship analysis reveals that CWE-212 could be a related weakness because the sensitive information wasn't removed before the build process bundled the environment variable.\n\n- **Confidence Score:**  \n  - Confidence: 0.75 (Moderate evidence, primarily as a consequence of the primary weakness)",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-526 | Cleartext Storage of Sensitive Information in an Environment Variable | 0.95 | Variant | Allowed | Primary CWE |\n| CWE-201 | Insertion of Sensitive Information Into Sent Data | 0.75 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability involves a **misconfigured build script** that inadvertently bundles the `AIRTABLE_API_KEY` environment variable into the build output, leading to **exposure of sensitive information**. This aligns well with CWE-526, \"Cleartext Storage of Sensitive Information in an Environment Variable,\" because the API key, a sensitive credential, which is stored in the environment variables and included in the build artifact without proper protection. The vulnerability description and CVE reference links content summary explicitly state that the `AIRTABLE_API_KEY` environment variable is bundled into the built `airtable.js` file. This is a clear example of storing sensitive information (the API key) in an environment variable and then including it in cleartext in the final product. CWE-526 is a Variant level CWE, which is a preferred level of abstraction. MITRE mapping guidance indicates that CWE-526 is ALLOWED.\n  \n  - *Relationship Analysis:* CWE-526 has no direct relationships, but it can be considered a specific case of more general weaknesses related to information exposure. It is related to the broader issue of credentials management and secure coding practices. The environment variable itself is not the problem, but rather the inclusion of its value within the built artifact.\n\n- **Confidence Score:**  \n  - Confidence: 0.95 (High evidence from technical description, CVE reference materials, and alignment with CWE characteristics)\n\n---\n- **Analysis and Justification:**  \n  - *Explanation:* CWE-201, \"Insertion of Sensitive Information Into Sent Data,\" is a potential secondary candidate because the bundled `airtable.js` file, containing the API key, is essentially \"sent\" (distributed) to users or systems where it should not be accessible. This aligns with the CWE's description: \"The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.\" While the primary issue is the storage and inclusion of the API key in the environment variable and build output (CWE-526), the distribution of this output containing the key can be seen as an instance of CWE-201. However, it is the direct consequence of CWE-526, making CWE-526 the root cause. CWE-201 is a Base level CWE, which is a preferred level of abstraction. MITRE mapping guidance indicates that CWE-201 is ALLOWED.\n  \n  - *Relationship Analysis:* CWE-201 is related to weaknesses like CWE-212 (Improper Removal of Sensitive Information Before Storage or Transfer) and CWE-226 (Sensitive Information in Resource Not Removed Before Reuse). The relationship analysis reveals that CWE-212 could be a related weakness because the sensitive information wasn't removed before the build process bundled the environment variable.\n\n- **Confidence Score:**  \n  - Confidence: 0.75 (Moderate evidence, primarily as a consequence of the primary weakness)",
  "criticism": "Okay, let's review the CWE analysis provided.\n\n**Overall Assessment:**\n\nThe analysis is well-structured and provides a good justification for the chosen CWE mappings. The confidence scores are reasonable, and the inclusion of example CVEs and relevant portions of the CWE specifications is helpful. The choice of CWE-526 as the primary CWE is accurate. The decision to include CWE-201 as a secondary candidate is also reasonable, given that the sensitive information is ultimately \"sent\" or distributed in the bundled file.\n\n**Detailed Critique:**\n\n**1. CWE-526: Cleartext Storage of Sensitive Information in an Environment Variable (Primary)**\n\n*   **Assessment:** Excellent choice as the primary CWE.\n*   **Justification Strength:** Very strong. The description clearly states the API key, a sensitive credential, is stored in an environment variable and then included in the build output.\n*   **Mapping Guidance Alignment:**  The mapping aligns perfectly with the CWE-526 description: \"The product uses an environment variable to store unencrypted sensitive information.\"\n*   **Mitigation Analysis:**\n    *   Mitigation 1 suggests encryption or using a properly protected configuration file. This directly addresses the core issue.\n    *   Mitigation 2 suggests removing or clearing the environment variable entirely. While effective, it might not be feasible if the variable is legitimately needed during development (though it should definitely be unset before building the final product in this scenario).\n*   **Confidence Score:** 0.95 is justified.\n\n**2. CWE-201: Insertion of Sensitive Information Into Sent Data (Secondary)**\n\n*   **Assessment:** Reasonable as a secondary CWE, but the justification needs some refining.\n*   **Justification Strength:**  The rationale that the bundled `airtable.js` file is \"sent\" to users is valid, but it's a consequence of the root cause (CWE-526). The \"sending\" aspect is the distribution of the artifact that *contains* the exposed credential.\n*   **Mapping Guidance Alignment:** The mapping to \"The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor\" is generally correct, but it's important to understand that CWE-201 is more about the immediate transmission of sensitive data, whereas the distribution of the `airtable.js` bundle is a later consequence.\n*   **Mitigation Analysis:**\n    *   Mitigation 1 suggests specifying which data should be regarded as sensitive. This applies here since knowing the API key was sensitive would have prevented its inclusion.\n    *   Mitigation 2 suggests verifying sensitive data with designers. This also applies as the design of the build process should not include sensitive data into sent code.\n    *   Mitigation 3 suggests setting up default error messages to prevent sensitive info being disclosed, which is not relevant in this case.\n*   **Confidence Score:** 0.75 is appropriate, reflecting its secondary role.\n*   **Alternative CWE Considerations**\n    * CWE-212 might also be considered as a tertiary mapping. \"Improper Removal of Sensitive Information Before Storage or Transfer.\" As the API Key was not removed from the build artifact before it was distributed. However, CWE-212 feels like a further step removed then CWE-201.\n\n**3. Addressing the automatic retriever results**\n\nThe results of the automatic retriever included several CWEs which would likely not be relevant in this case.\n\n* CWE-79 is completely irrlevant as there is no Cross-site Scripting involved.\n* CWE-212 has been discussed above and might be a valid tertiary mapping.\n* CWE-184 is not relevant as there is no list of disallowed inputs involved in this vulnerability.\n* CWE-1333 is not relevant as there are no inefficient Regular Expressions involved.\n* CWE-78 is not relevant as there is no OS Command Injection involved.\n* CWE-1336 is not relevant as there is no improper nuetralization of data used in a Template Engine.\n* CWE-335 is not relevant as there is no Pseudo-Random Number Generator (PRNG) used.\n* CWE-526 is the valid primary mapping.\n* CWE-61 is not relevant as there are no UNIX Symbolic Links involved.\n\n**Suggestions for Improvement:**\n\n*   **Clarify Justification for CWE-201:** When explaining CWE-201, emphasize that it is the *distribution* of the already-compromised bundle that constitutes the \"insertion into sent data,\" and that this is a consequence of the primary weakness.\n*   **Consider CWE-522:** While the analysis correctly maps to CWE-526 and could map to CWE-201, it might be worth *briefly* mentioning CWE-522 \"Insufficiently Protected Credentials.\" This is a Class level CWE so it's not a preferred mapping, but it describes the high level vulnerability of the exposure of credentials. Since the automatic retriever suggested CWE-522, you should discuss why you choose not to include it.\n*   **Review Mitigation Applicability:**  For both CWEs, explicitly state which mitigations from the CWE specifications *are* and *are not* relevant in this specific case. This demonstrates a deeper understanding of the vulnerability and the suggested remedies.\n*   **Add Explanation of Automatic Retriever results:** Add a section on why the rest of the automatic retriever results were not included.\n\n**Revised Summary Table:**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-526 | Cleartext Storage of Sensitive Information in an Environment Variable | 0.95 | Variant | Allowed | Primary CWE |\n| CWE-201 | Insertion of Sensitive Information Into Sent Data | 0.75 | Base | Allowed | Secondary Candidate |\n\nBy incorporating these suggestions, you can further strengthen the analysis and demonstrate a comprehensive understanding of the vulnerability and its corresponding CWE mappings.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| **CWE-526** | Cleartext Storage of Sensitive Information in an Environment Variable | 0.95 | Variant | Allowed | Primary **CWE** |\n| **CWE-201** | Insertion of Sensitive Information Into Sent Data | 0.75 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.93\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary **CWE**, **CWE-526** (Cleartext Storage of Sensitive Information in an Environment Variable), is a variant-level **CWE** and doesn't have direct relationships with other **CWE**s in terms of parent-child. However, it represents a specific instance of storing sensitive information insecurely. The secondary **CWE**, **CWE-201** (Insertion of Sensitive Information Into Sent Data), is a base-level **CWE** and has child relationships to **CWE-200** (Exposure of Sensitive Information to an Unauthorized Actor). The vulnerability chain progresses from storing the API key in an environment variable (**CWE-526**) to including it in the built artifact and distributing it (**CWE-201**). The abstraction levels influenced the decision to prioritize the more specific **CWE-526** as the primary cause while acknowledging the contribution of **CWE-201** as a consequence.\n\n```mermaid\ngraph TD\n    cwe526[\"CWE-526: Cleartext Storage of Sensitive Information in an Environment Variable\"]\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\"]\n    \n    cwe201 -->|CHILDOF| cwe200\n    cwe526 -->|CANPRECEDE| cwe201\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe526 primary\n    class cwe201 secondary\n    class cwe200 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **ROOTCAUSE** of storing the API key in an environment variable (**CWE-526**). This is followed by the **WEAKNESS** of including this sensitive information in the build process and subsequently in the distributed `airtable.js` file (**CWE-201**). This leads to the impact of exposing the API key to unauthorized actors. There are no missing links in the chain, as the description clearly outlines how the API key is bundled into the built code due to the misconfigured build script.\n\n## Summary of Analysis\nThe initial analysis correctly identified **CWE-526** as the primary **CWE** due to the direct inclusion of the API key from the environment variable into the build artifact. The criticism highlighted the need to refine the justification for **CWE-201**, emphasizing that it's the distribution of the already-compromised bundle that constitutes the \"insertion into sent data.\"\n\nThe analysis is primarily based on the provided evidence from the vulnerability description, which states: \"When the build script is run, it would bundle environment variables into the build target of a transpiled bundle. Specifically, the AIRTABLE_API_KEY and AIRTABLE_ENDPOINT_URL environment variables are inserted during Browserify builds due to being referenced in Airtable.js code.\"\n\nThe graph relationships influenced the final selection by illustrating how **CWE-526** leads to **CWE-201**. The decision to select **CWE-526** as the primary **CWE** is justified because it represents the root cause of the vulnerability. It is also at the optimal level of specificity, being a Variant **CWE**. **CWE-201** is included as a secondary **CWE** to highlight the consequence of distributing the built artifact containing the sensitive information.\n\nThe suggestion in the criticism to consider **CWE-522** (Insufficiently Protected Credentials) was considered. However, **CWE-522** is a Class level **CWE** and is therefore less specific than **CWE-526**. Since the vulnerability description clearly states that the API key is stored in an environment variable, **CWE-526** is the more appropriate choice.\n\nThe automatic retriever results were reviewed, and the irrelevant **CWE**s (e.g., **CWE-79**, **CWE-78**, **CWE-1336**) were excluded because they do not align with the technical details of the vulnerability.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "type": "Base",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "relationships": [],
        "original_sparse_score": 1815.2995900297694,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.36442066364975395,
            "sparse": 1815.2995900297694,
            "graph": 1.842695088902585
          },
          "normalized_scores": {
            "dense": 0.36442066364975395,
            "sparse": 1.0,
            "graph": 0.6581053888937805
          },
          "weighted_scores": {
            "dense": 0.12754723227741388,
            "sparse": 0.4,
            "graph": 0.1645263472234451
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.36442066364975395,
              "query_max": 0.45409409375102155,
              "query_min": 0.3266189425983376,
              "normalized_score": 0.36442066364975395,
              "weight": 0.35,
              "weighted_score": 0.12754723227741388
            },
            "sparse": {
              "raw_score": 1815.2995900297694,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 1.842695088902585,
              "query_max": 4.329000000000001,
              "query_min": 1.521,
              "normalized_score": 0.6581053888937805,
              "weight": 0.25,
              "weighted_score": 0.1645263472234451
            }
          },
          "contribution_percentages": {
            "dense": 18.42972135555358,
            "sparse": 57.7973226905281,
            "graph": 23.77295595391832
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.692073579500859,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.8996956533511168
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.8996956533511168
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.9896652186862286
            }
          },
          "combined_score": 0.9896652186862286
        }
      },
      "similarity": 0.9896652186862286
    },
    {
      "metadata": {
        "doc_id": "CWE-212",
        "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
        "type": "Base",
        "original_content": "The product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.",
        "relationships": [],
        "original_sparse_score": 1984.423655256855,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1984.423655256855,
            "graph": 4.329000000000001
          },
          "normalized_scores": {
            "sparse": 1.0,
            "graph": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4,
            "graph": 0.25
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1984.423655256855,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 4.329000000000001,
              "query_max": 4.329000000000001,
              "query_min": 1.521,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "sparse": 61.53846153846154,
            "graph": 38.46153846153846
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.65,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.8450000000000001
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.8450000000000001
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.9295000000000002
            }
          },
          "combined_score": 0.9295000000000002
        }
      },
      "similarity": 0.9295000000000002
    },
    {
      "metadata": {
        "doc_id": "CWE-201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "type": "Base",
        "original_content": "The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.",
        "relationships": [],
        "original_sparse_score": 1951.971376577448,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1951.971376577448,
            "graph": 2.7286382913264746
          },
          "normalized_scores": {
            "sparse": 1.0,
            "graph": 0.974513675473741
          },
          "weighted_scores": {
            "sparse": 0.4,
            "graph": 0.24362841886843525
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1951.971376577448,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 2.7286382913264746,
              "query_max": 4.329000000000001,
              "query_min": 1.521,
              "normalized_score": 0.974513675473741,
              "weight": 0.25,
              "weighted_score": 0.24362841886843525
            }
          },
          "contribution_percentages": {
            "sparse": 62.14765977910687,
            "graph": 37.85234022089313
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.6436284188684352,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.8367169445289658
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.8367169445289658
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.9203886389818625
            }
          },
          "combined_score": 0.9203886389818625
        }
      },
      "similarity": 0.9203886389818625
    },
    {
      "metadata": {
        "doc_id": "CWE-184",
        "name": "Incomplete List of Disallowed Inputs",
        "type": "Base",
        "original_content": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.",
        "relationships": [],
        "original_sparse_score": 1824.5025121111817,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1824.5025121111817,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 1.0,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.4,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1824.5025121111817,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 4.329000000000001,
              "query_min": 1.521,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 66.96562032884901,
            "graph": 33.03437967115098
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5973214285714287,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7765178571428573
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7765178571428573
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.854169642857143
            }
          },
          "combined_score": 0.854169642857143
        }
      },
      "similarity": 0.854169642857143
    },
    {
      "metadata": {
        "doc_id": "CWE-1333",
        "name": "Inefficient Regular Expression Complexity",
        "type": "Base",
        "original_content": "The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles.",
        "relationships": [],
        "original_sparse_score": 1982.3448337146854,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1982.3448337146854,
            "graph": 2.1189999999999998
          },
          "normalized_scores": {
            "sparse": 1.0,
            "graph": 0.7567857142857143
          },
          "weighted_scores": {
            "sparse": 0.4,
            "graph": 0.18919642857142857
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1982.3448337146854,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 2.1189999999999998,
              "query_max": 4.329000000000001,
              "query_min": 1.521,
              "normalized_score": 0.7567857142857143,
              "weight": 0.25,
              "weighted_score": 0.18919642857142857
            }
          },
          "contribution_percentages": {
            "sparse": 67.88907410213668,
            "graph": 32.11092589786331
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5891964285714286,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7659553571428572
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7659553571428572
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.842550892857143
            }
          },
          "combined_score": 0.842550892857143
        }
      },
      "similarity": 0.842550892857143
    },
    {
      "metadata": {
        "doc_id": "CWE-78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 1823.5936306985047,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1823.5936306985047,
            "graph": 1.7680000000000005
          },
          "normalized_scores": {
            "sparse": 1.0,
            "graph": 0.6314285714285717
          },
          "weighted_scores": {
            "sparse": 0.4,
            "graph": 0.15785714285714292
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1823.5936306985047,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 1.7680000000000005,
              "query_max": 4.329000000000001,
              "query_min": 1.521,
              "normalized_score": 0.6314285714285717,
              "weight": 0.25,
              "weighted_score": 0.15785714285714292
            }
          },
          "contribution_percentages": {
            "sparse": 71.70294494238155,
            "graph": 28.297055057618444
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5578571428571429,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7252142857142858
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7252142857142858
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7977357142857144
            }
          },
          "combined_score": 0.7977357142857144
        }
      },
      "similarity": 0.7977357142857144
    },
    {
      "metadata": {
        "doc_id": "CWE-1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "type": "Base",
        "original_content": "The product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine.",
        "relationships": [],
        "original_sparse_score": 1829.1594488111202,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.3429864534892121,
            "sparse": 1829.1594488111202
          },
          "normalized_scores": {
            "dense": 0.3429864534892121,
            "sparse": 1.0
          },
          "weighted_scores": {
            "dense": 0.12004525872122422,
            "sparse": 0.4
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.3429864534892121,
              "query_max": 0.45409409375102155,
              "query_min": 0.3266189425983376,
              "normalized_score": 0.3429864534892121,
              "weight": 0.35,
              "weighted_score": 0.12004525872122422
            },
            "sparse": {
              "raw_score": 1829.1594488111202,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "dense": 23.08361757136522,
            "sparse": 76.91638242863479
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5200452587212242,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6760588363375915
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6760588363375915
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7436647199713506
            }
          },
          "combined_score": 0.7436647199713506
        }
      },
      "similarity": 0.7436647199713506
    },
    {
      "metadata": {
        "doc_id": "CWE-335",
        "name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
        "type": "Base",
        "original_content": "The product uses a Pseudo-Random Number Generator (PRNG) but does not correctly manage seeds.",
        "relationships": [],
        "original_sparse_score": 1826.5766016081507,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.33894884700295247,
            "sparse": 1826.5766016081507
          },
          "normalized_scores": {
            "dense": 0.33894884700295247,
            "sparse": 1.0
          },
          "weighted_scores": {
            "dense": 0.11863209645103336,
            "sparse": 0.4
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.33894884700295247,
              "query_max": 0.45409409375102155,
              "query_min": 0.3266189425983376,
              "normalized_score": 0.33894884700295247,
              "weight": 0.35,
              "weighted_score": 0.11863209645103336
            },
            "sparse": {
              "raw_score": 1826.5766016081507,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "dense": 22.874036771504365,
            "sparse": 77.12596322849564
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5186320964510334,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6742217253863434
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6742217253863434
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7416438979249778
            }
          },
          "combined_score": 0.7416438979249778
        }
      },
      "similarity": 0.7416438979249778
    },
    {
      "metadata": {
        "doc_id": "CWE-526",
        "name": "Cleartext Storage of Sensitive Information in an Environment Variable",
        "type": "Variant",
        "original_content": "The product uses an environment variable to store unencrypted sensitive information.",
        "relationships": [],
        "original_sparse_score": 5083.202155709022,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.45409409375102155,
            "sparse": 5083.202155709022
          },
          "normalized_scores": {
            "dense": 0.45409409375102155,
            "sparse": 1.0
          },
          "weighted_scores": {
            "dense": 0.15893293281285753,
            "sparse": 0.4
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.45409409375102155,
              "query_max": 0.45409409375102155,
              "query_min": 0.3266189425983376,
              "normalized_score": 0.45409409375102155,
              "weight": 0.35,
              "weighted_score": 0.15893293281285753
            },
            "sparse": {
              "raw_score": 5083.202155709022,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "dense": 28.435063221810836,
            "sparse": 71.56493677818916
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5589329328128576,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.6707195193754291
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6707195193754291
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7377914713129721
            }
          },
          "combined_score": 0.7377914713129721
        }
      },
      "similarity": 0.7377914713129721
    },
    {
      "metadata": {
        "doc_id": "CWE-61",
        "name": "UNIX Symbolic Link (Symlink) Following",
        "type": "Compound",
        "original_content": "The product, when opening a file or directory, does not sufficiently account for when the file is a symbolic link that resolves to a target outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
        "relationships": [],
        "original_sparse_score": 1972.1687798559844,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
          "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine which weaknesses allow symlink following to occur, and map to those weaknesses. For example, predictable file names might be intended functionality, but creation in a directory with insecure permissions might not.",
          "reasons": [
            "Other"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1972.1687798559844,
            "graph": 1.6480000000000001
          },
          "normalized_scores": {
            "sparse": 1.0,
            "graph": 0.5885714285714286
          },
          "weighted_scores": {
            "sparse": 0.4,
            "graph": 0.14714285714285716
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1972.1687798559844,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 1.6480000000000001,
              "query_max": 4.329000000000001,
              "query_min": 1.521,
              "normalized_score": 0.5885714285714286,
              "weight": 0.25,
              "weighted_score": 0.14714285714285716
            }
          },
          "contribution_percentages": {
            "sparse": 73.10704960835508,
            "graph": 26.89295039164491
          },
          "abstraction_factor": 1.0,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5471428571428572,
            "abstraction": {
              "type": "compound",
              "factor": 1.0,
              "score_after": 0.5471428571428572
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5471428571428572
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
                "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine which weaknesses allow symlink following to occur, and map to those weaknesses. For example, predictable file names might be intended functionality, but creation in a directory with insecure permissions might not.",
                "reasons": [
                  "Other"
                ]
              },
              "score_after": 0.6018571428571429
            }
          },
          "combined_score": 0.6018571428571429
        }
      },
      "similarity": 0.6018571428571429
    },
    {
      "metadata": {
        "doc_id": "CWE-427",
        "name": "Uncontrolled Search Path Element",
        "type": "Base",
        "original_content": "The product uses a fixed or controlled search path to find resources, but one or more locations in that path can be under the control of unintended actors.",
        "relationships": [],
        "original_sparse_score": 1925.074001731044,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1925.074001731044
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1925.074001731044,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.52
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.52
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5720000000000001
            }
          },
          "combined_score": 0.5720000000000001
        }
      },
      "similarity": 0.5720000000000001
    },
    {
      "metadata": {
        "doc_id": "CWE-347",
        "name": "Improper Verification of Cryptographic Signature",
        "type": "Base",
        "original_content": "The product does not verify, or incorrectly verifies, the cryptographic signature for data.",
        "relationships": [],
        "original_sparse_score": 1851.4757970833612,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1851.4757970833612
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1851.4757970833612,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.52
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.52
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5720000000000001
            }
          },
          "combined_score": 0.5720000000000001
        }
      },
      "similarity": 0.5720000000000001
    },
    {
      "metadata": {
        "doc_id": "CWE-214",
        "name": "Invocation of Process Using Visible Sensitive Information",
        "type": "Base",
        "original_content": "A process is invoked with sensitive command-line arguments, environment variables, or other elements that can be seen by other processes on the operating system.",
        "relationships": [],
        "original_sparse_score": 1827.9140662802713,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1827.9140662802713
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1827.9140662802713,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.52
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.52
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5720000000000001
            }
          },
          "combined_score": 0.5720000000000001
        }
      },
      "similarity": 0.5720000000000001
    },
    {
      "metadata": {
        "doc_id": "CWE-88",
        "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
        "type": "Base",
        "original_content": "The product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.",
        "relationships": [],
        "original_sparse_score": 1810.3633069449472,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1810.3633069449472
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1810.3633069449472,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.52
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.52
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5720000000000001
            }
          },
          "combined_score": 0.5720000000000001
        }
      },
      "similarity": 0.5720000000000001
    },
    {
      "metadata": {
        "doc_id": "CWE-94",
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
        "relationships": [],
        "original_sparse_score": 1945.642787965116,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
          "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
          "reasons": [
            "Frequent Misuse",
            "Frequent Misinterpretation"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1945.642787965116
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1945.642787965116,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.52
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.52
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
                "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
                "reasons": [
                  "Frequent Misuse",
                  "Frequent Misinterpretation"
                ]
              },
              "score_after": 0.546
            }
          },
          "combined_score": 0.546
        }
      },
      "similarity": 0.546
    },
    {
      "metadata": {
        "doc_id": "CWE-1321",
        "name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.",
        "relationships": [],
        "original_sparse_score": 1855.9968244816337,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1855.9968244816337
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1855.9968244816337,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.48
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.48
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.528
            }
          },
          "combined_score": 0.528
        }
      },
      "similarity": 0.528
    },
    {
      "metadata": {
        "doc_id": "CWE-552",
        "name": "Files or Directories Accessible to External Parties",
        "type": "Base",
        "original_content": "The product makes files or directories accessible to unauthorized actors, even though they should not be.",
        "relationships": [],
        "original_sparse_score": 1107.1637630797895,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1107.1637630797895
          },
          "normalized_scores": {
            "sparse": 0.8857310104638316
          },
          "weighted_scores": {
            "sparse": 0.35429240418553265
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1107.1637630797895,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 0.8857310104638316,
              "weight": 0.4,
              "weighted_score": 0.35429240418553265
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.35429240418553265,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4605801254411925
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4605801254411925
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5066381379853118
            }
          },
          "combined_score": 0.5066381379853118
        }
      },
      "similarity": 0.5066381379853118
    },
    {
      "metadata": {
        "doc_id": "CWE-732",
        "name": "Incorrect Permission Assignment for Critical Resource",
        "type": "Class",
        "original_content": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.",
        "relationships": [],
        "original_sparse_score": 1839.421472103029,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "While the name itself indicates an assignment of permissions for resources, this is often misused for vulnerabilities in which \"permissions\" are not checked, which is an \"authorization\" weakness (CWE-285 or descendants) within CWE's model [REF-1287].",
          "comments": "Closely analyze the specific mistake that is allowing the resource to be exposed, and perform a CWE mapping for that mistake.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1839.421472103029,
            "graph": 1.6016
          },
          "normalized_scores": {
            "sparse": 1.0,
            "graph": 0.572
          },
          "weighted_scores": {
            "sparse": 0.4,
            "graph": 0.143
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1839.421472103029,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 1.6016,
              "query_max": 4.329000000000001,
              "query_min": 1.521,
              "normalized_score": 0.572,
              "weight": 0.25,
              "weighted_score": 0.143
            }
          },
          "contribution_percentages": {
            "sparse": 73.66482504604052,
            "graph": 26.335174953959477
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.543,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.43440000000000006
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.43440000000000006
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "While the name itself indicates an assignment of permissions for resources, this is often misused for vulnerabilities in which \"permissions\" are not checked, which is an \"authorization\" weakness (CWE-285 or descendants) within CWE's model [REF-1287].",
                "comments": "Closely analyze the specific mistake that is allowing the resource to be exposed, and perform a CWE mapping for that mistake.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.4561200000000001
            }
          },
          "combined_score": 0.4561200000000001
        }
      },
      "similarity": 0.4561200000000001
    },
    {
      "metadata": {
        "doc_id": "CWE-863",
        "name": "Incorrect Authorization",
        "type": "Class",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "relationships": [],
        "original_sparse_score": 1917.762859173924,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.35007770196681787,
            "sparse": 1917.762859173924
          },
          "normalized_scores": {
            "dense": 0.35007770196681787,
            "sparse": 1.0
          },
          "weighted_scores": {
            "dense": 0.12252719568838624,
            "sparse": 0.4
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.35007770196681787,
              "query_max": 0.45409409375102155,
              "query_min": 0.3266189425983376,
              "normalized_score": 0.35007770196681787,
              "weight": 0.35,
              "weighted_score": 0.12252719568838624
            },
            "sparse": {
              "raw_score": 1917.762859173924,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "dense": 23.448960494193383,
            "sparse": 76.55103950580661
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.5225271956883862,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.418021756550709
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.418021756550709
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.43892284437824447
            }
          },
          "combined_score": 0.43892284437824447
        }
      },
      "similarity": 0.43892284437824447
    },
    {
      "metadata": {
        "doc_id": "CWE-138",
        "name": "Improper Neutralization of Special Elements",
        "type": "Class",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 1849.6164436974723,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1849.6164436974723
          },
          "normalized_scores": {
            "sparse": 1.0
          },
          "weighted_scores": {
            "sparse": 0.4
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1849.6164436974723,
              "query_max": 5083.202155709022,
              "query_min": 1107.1637630797895,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.4,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.32000000000000006
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.32000000000000006
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.25600000000000006
            }
          },
          "combined_score": 0.25600000000000006
        }
      },
      "similarity": 0.25600000000000006
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-201",
      "CWE-212",
      "CWE-226",
      "CWE-526"
    ],
    "critic_additional": [
      "CWE-1333",
      "CWE-1336",
      "CWE-335",
      "CWE-78",
      "CWE-184",
      "CWE-522",
      "CWE-61",
      "CWE-79"
    ]
  }
}