{
  "cve_id": "CVE-2021-26112",
  "description": "Multiple stack-based buffer overflow vulnerabilities [CWE-121] both in network daemons and in the command line interpreter of FortiWAN before 4.5.9 may allow an unauthenticated attacker to potentially corrupt control data in memory and execute arbitrary code via specifically crafted requests.",
  "key_phrases": {
    "rootcause": "stack-based buffer overflow",
    "weakness": "CWE-121",
    "impact": [
      "corrupt control data in memory",
      "execute arbitrary code"
    ],
    "vector": "specifically crafted requests",
    "attacker": "unauthenticated attacker",
    "product": "FortiWAN",
    "version": "before 4.5.9",
    "component": [
      "network daemons",
      "command line interpreter"
    ]
  },
  "reference_content": "- **Root cause of vulnerability**: Stack-based buffer overflow vulnerabilities exist in both network daemons and the command line interpreter of FortiWAN.\n- **Weaknesses/vulnerabilities present**: Stack-based buffer overflows [CWE-121].\n- **Impact of exploitation**: An unauthenticated attacker can potentially corrupt control data in memory and execute arbitrary code.\n- **Attack vectors**: Specifically crafted requests to network daemons or the command line interpreter.\n- **Required attacker capabilities/position**: An unauthenticated attacker can send malicious requests.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| **CWE-121** | Stack-based Buffer Overflow | 1.00 | Variant | Primary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.00\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description explicitly states that there are multiple **stack-based buffer overflow** vulnerabilities [**CWE-121**] in FortiWAN. The CVE Reference Links Content Summary reinforces this, confirming that **stack-based buffer overflows** [**CWE-121**] are the root cause of the vulnerability. This aligns directly with the definition of CWE-121, which describes a buffer overflow condition where the buffer being overwritten is allocated on the stack. The impact of the vulnerability is that an unauthenticated attacker can corrupt control data in memory and execute arbitrary code by sending specifically crafted requests.\n  \n  - *Relationship Analysis:* CWE-121 is a variant of CWE-120 (Buffer Copy without Checking Size of Input) and CWE-787 (Out-of-bounds Write). While CWE-120 could be considered, the explicit mention of \"stack-based\" makes CWE-121 a more specific and appropriate choice.\n\n- **Confidence Score:**  \n  - Confidence: 1.00 (The vulnerability description explicitly identifies CWE-121 as the weakness.)",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| **CWE-121** | Stack-based Buffer Overflow | 1.00 | Variant | Primary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.00\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description explicitly states that there are multiple **stack-based buffer overflow** vulnerabilities [**CWE-121**] in FortiWAN. The CVE Reference Links Content Summary reinforces this, confirming that **stack-based buffer overflows** [**CWE-121**] are the root cause of the vulnerability. This aligns directly with the definition of CWE-121, which describes a buffer overflow condition where the buffer being overwritten is allocated on the stack. The impact of the vulnerability is that an unauthenticated attacker can corrupt control data in memory and execute arbitrary code by sending specifically crafted requests.\n  \n  - *Relationship Analysis:* CWE-121 is a variant of CWE-120 (Buffer Copy without Checking Size of Input) and CWE-787 (Out-of-bounds Write). While CWE-120 could be considered, the explicit mention of \"stack-based\" makes CWE-121 a more specific and appropriate choice.\n\n- **Confidence Score:**  \n  - Confidence: 1.00 (The vulnerability description explicitly identifies CWE-121 as the weakness.)",
  "criticism": "Okay, I've reviewed the analysis with the full CWE specifications you provided. Here's my critique, focusing on the accuracy, completeness, and justification of the CWE mapping, and considering alternative CWEs and their relationships.\n\n**Overall Assessment:**\n\nThe analysis is generally **accurate** in identifying CWE-121 as the primary weakness. The description explicitly mentions \"stack-based buffer overflow,\" which directly maps to CWE-121. The confidence score of 1.0 is justified based on the provided information. However, the analysis could be improved by exploring potential related weaknesses and providing more context within the full CWE specifications.\n\n**Detailed Review:**\n\n*   **CWE-121: Stack-based Buffer Overflow**\n    *   **Accuracy:** Correct. The vulnerability description explicitly states \"stack-based buffer overflow.\"\n    *   **Completeness:** Good. The description highlights the key characteristics: the buffer is allocated on the stack.\n    *   **Justification:** Strong. The explanation connects the \"stack-based\" aspect to the definition of CWE-121. The impact described (corrupting control data, arbitrary code execution) is a typical consequence of stack-based buffer overflows.\n    *   **Areas for Improvement:**\n        *   Consider mentioning CWE-787 (Out-of-bounds Write) as a parent. While CWE-121 is more specific, the vulnerability fundamentally involves writing data beyond the allocated buffer's boundaries.\n        *   Discuss how the attacker achieves the overflow. Is it through a `strcpy`-like function without length checks (leading to CWE-120 potentially)? Or is there some incorrect calculation of buffer size (leading to CWE-131 potentially)?\n\n*   **Alternative CWEs Considered and Why They Were Rejected:**\n    *   **CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')**\n        *   The analysis correctly states that CWE-121 is a specialization of CWE-120.\n        *   Justification for choosing CWE-121 is that the description explicitly calls out stack-based. This is valid.\n    *   **CWE-787: Out-of-bounds Write**\n         *  CWE-787 is a parent of CWE-121\n         *  The relationship is a parent child relationship not necessarily a rejection.\n*   **Retriever Results**\n      *   The retriever results are interesting to look at.\n      *   CWE-120, CWE-193, CWE-124 and CWE-190 all have higher scores than CWE-121.\n      *   The retriever results are worth mentioning even though the explicity name is CWE-121\n\n**Recommendations for Enhancements:**\n\n1.  **Chain Analysis:** Explore potential CWE chains. A stack-based buffer overflow often stems from underlying causes like:\n    *   **CWE-20: Improper Input Validation** -> **CWE-121:** Lack of proper input validation might allow an attacker to send overly long input that causes the overflow. If there's a validation attempt, consider sub-CWEs of CWE-20 like **CWE-1284** (Improper Validation of Specified Quantity in Input) if the quantity of input was incorrectly validated.\n    *   **CWE-131: Incorrect Calculation of Buffer Size** -> **CWE-121:** An incorrect buffer size calculation could lead to a buffer being too small, causing a subsequent copy operation to overflow it.\n    *   **CWE-676: Use of Potentially Dangerous Function** -> **CWE-121:** Use of functions like `strcpy` without proper bounds checking.\n2.  **Mitigation Strategies:** Briefly mention relevant mitigation strategies derived from the CWE specifications. For example:\n    *   \"Mitigation strategies to prevent CWE-121 include using languages or compilers that offer automatic bounds checking, employing safe string handling libraries, and using compiler extensions that provide buffer overflow detection mechanisms (as outlined in the CWE-121 specification).\"\n3.  **Parent-Child Relationships:** While selecting the most specific CWE is good, acknowledging the parent-child relationships provides a broader context.  Mention that CWE-121 is a child of CWE-787 (Out-of-bounds Write) to indicate that it's a specific type of out-of-bounds write.\n4.  **Context from Observed Examples:** The \"Observed Examples\" section in the full CWE specifications can be used to provide concrete real-world instances of similar vulnerabilities, adding weight to the analysis.\n\n**Revised Summary Table:**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| **CWE-121** | Stack-based Buffer Overflow | 1.00 | Variant | Primary | Allowed |\n| CWE-787 | Out-of-bounds Write | 0.80 | Base | Supporting | Parent of CWE-121, the root write that causes the overflow |\n| CWE-20 | Improper Input Validation | 0.60 | Class | Contributing | Lack of input validation can lead to the overflow. Consider CWE-1284 if the vulnerability revolves around length. |\n\n**In Conclusion:**\n\nThe analysis is correct and well-justified. However, by considering potential chains, related CWEs, and integrating mitigation information from the full CWE specifications, the analysis can become more comprehensive and provide a richer understanding of the vulnerability. The retrievers results provide some good pointers.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| **CWE-121** | Stack-based Buffer Overflow | 1.00 | Variant | Primary | Allowed |\n| CWE-787 | Out-of-bounds Write | 0.80 | Base | Supporting | Parent of CWE-121, the root write that causes the overflow |\n| CWE-20 | Improper Input Validation | 0.60 | Class | Contributing | Lack of input validation can lead to the overflow. Consider CWE-1284 if the vulnerability revolves around length. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the parent-child relationship between CWE-787 (**Out-of-bounds Write**) and CWE-121 (**Stack-based Buffer Overflow**). The vulnerability description explicitly mentioned a stack-based buffer overflow, leading to the selection of CWE-121 as the primary weakness. However, recognizing that a stack-based buffer overflow is a specific type of out-of-bounds write led to the inclusion of CWE-787 as a supporting CWE. Additionally, the potential for **improper input validation** (CWE-20) to contribute to the vulnerability was considered, as a lack of validation could allow an attacker to send overly long input, triggering the overflow. The abstraction levels were also considered, with CWE-121 being a Variant, CWE-787 being a Base, and CWE-20 being a Class. The selection of CWE-121 provides the most specific description of the vulnerability, while the inclusion of CWE-787 and CWE-20 provides broader context.\n\n```mermaid\ngraph TD\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    \n    cwe121 -->|CHILDOF| cwe787\n    cwe20 -->|CANPRECEDE| cwe121\n    cwe1284 -->|CHILDOF| cwe20\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe121 primary\n    class cwe787 secondary\n    class cwe20 tertiary\n    class cwe1284 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a potential lack of **improper input validation** (CWE-20), which allows an attacker to send a specifically crafted request with overly long input. This input then triggers a **stack-based buffer overflow** (CWE-121), which is a specific type of **out-of-bounds write** (CWE-787). The overflow corrupts control data in memory, ultimately leading to the execution of arbitrary code.\n\n**Chain:** CWE-20 (Improper Input Validation) -> CWE-121 (Stack-based Buffer Overflow) -> CWE-787 (Out-of-bounds Write) -> Arbitrary Code Execution\n\n## Summary of Analysis\nThe initial analysis correctly identified CWE-121 as the primary weakness based on the explicit mention of \"stack-based buffer overflow\" in the vulnerability description. The criticism suggested considering potential related weaknesses and providing more context, which led to the inclusion of CWE-787 and CWE-20.\n\nThe decision to include CWE-787 was influenced by the parent-child relationship with CWE-121. Recognizing that a stack-based buffer overflow is a specific type of out-of-bounds write provided a more comprehensive understanding of the vulnerability.\n\nThe inclusion of CWE-20 was based on the potential for **improper input validation** to contribute to the vulnerability. While not explicitly mentioned in the vulnerability description, the possibility that a lack of validation could allow an attacker to send overly long input was considered. \"may allow an unauthenticated attacker to potentially corrupt control data in memory and execute arbitrary code via specifically crafted requests\"\n\nThe retriever results were also considered. While CWE-120, CWE-193, CWE-124 and CWE-190 all had higher scores than CWE-121, the explicit mention of \"stack-based\" in the vulnerability description made CWE-121 the most appropriate choice.\n\nThe selected CWEs are at the optimal level of specificity. CWE-121 provides the most specific description of the vulnerability, while the inclusion of CWE-787 and CWE-20 provides broader context and identifies potential contributing factors.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "type": "Base",
        "original_content": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 501.5505598763985,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
          "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6403134404480253,
            "sparse": 501.5505598763985,
            "graph": 2.748251364653
          },
          "normalized_scores": {
            "dense": 0.6403134404480253,
            "sparse": 0.4012404479011188,
            "graph": 0.9815183445189286
          },
          "weighted_scores": {
            "dense": 0.22410970415680884,
            "sparse": 0.16049617916044753,
            "graph": 0.24537958612973215
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6403134404480253,
              "query_max": 0.6877597695373,
              "query_min": 0.6007846241720753,
              "normalized_score": 0.6403134404480253,
              "weight": 0.35,
              "weighted_score": 0.22410970415680884
            },
            "sparse": {
              "raw_score": 501.5505598763985,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.4012404479011188,
              "weight": 0.4,
              "weighted_score": 0.16049617916044753
            },
            "graph": {
              "raw_score": 2.748251364653,
              "query_max": 2.748251364653,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.9815183445189286,
              "weight": 0.25,
              "weighted_score": 0.24537958612973215
            }
          },
          "contribution_percentages": {
            "dense": 35.57378940081522,
            "sparse": 25.476171585565883,
            "graph": 38.95003901361889
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.6299854694469885,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.8189811102810851
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.8189811102810851
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
                "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.8599301657951394
            }
          },
          "combined_score": 0.8599301657951394
        }
      },
      "similarity": 0.8599301657951394
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 472.88699798236166,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6082760694753602,
            "sparse": 472.88699798236166,
            "graph": 2.5833676421809635
          },
          "normalized_scores": {
            "dense": 0.6082760694753602,
            "sparse": 0.37830959838588935,
            "graph": 0.9226313007789156
          },
          "weighted_scores": {
            "dense": 0.21289662431637604,
            "sparse": 0.15132383935435575,
            "graph": 0.2306578251947289
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6082760694753602,
              "query_max": 0.6877597695373,
              "query_min": 0.6007846241720753,
              "normalized_score": 0.6082760694753602,
              "weight": 0.35,
              "weighted_score": 0.21289662431637604
            },
            "sparse": {
              "raw_score": 472.88699798236166,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.37830959838588935,
              "weight": 0.4,
              "weighted_score": 0.15132383935435575
            },
            "graph": {
              "raw_score": 2.5833676421809635,
              "query_max": 2.748251364653,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.9226313007789156,
              "weight": 0.25,
              "weighted_score": 0.2306578251947289
            }
          },
          "contribution_percentages": {
            "dense": 35.78826598671267,
            "sparse": 25.437781507030184,
            "graph": 38.773952506257146
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5948782888654607,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7733417755250989
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7733417755250989
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.8506759530776088
            }
          },
          "combined_score": 0.8506759530776088
        }
      },
      "similarity": 0.8506759530776088
    },
    {
      "metadata": {
        "doc_id": "CWE-124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "type": "Base",
        "original_content": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "relationships": [],
        "original_sparse_score": 446.44987343028043,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6169630775245539,
            "sparse": 446.44987343028043,
            "graph": 2.640286824107792
          },
          "normalized_scores": {
            "dense": 0.6169630775245539,
            "sparse": 0.3571598987442243,
            "graph": 0.9429595800384972
          },
          "weighted_scores": {
            "dense": 0.21593707713359386,
            "sparse": 0.14286395949768974,
            "graph": 0.2357398950096243
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6169630775245539,
              "query_max": 0.6877597695373,
              "query_min": 0.6007846241720753,
              "normalized_score": 0.6169630775245539,
              "weight": 0.35,
              "weighted_score": 0.21593707713359386
            },
            "sparse": {
              "raw_score": 446.44987343028043,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.3571598987442243,
              "weight": 0.4,
              "weighted_score": 0.14286395949768974
            },
            "graph": {
              "raw_score": 2.640286824107792,
              "query_max": 2.748251364653,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.9429595800384972,
              "weight": 0.25,
              "weighted_score": 0.2357398950096243
            }
          },
          "contribution_percentages": {
            "dense": 36.319968170671885,
            "sparse": 24.02928913630744,
            "graph": 39.65074269302067
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5945409316409079,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7729032111331804
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7729032111331804
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.8501935322464985
            }
          },
          "combined_score": 0.8501935322464985
        }
      },
      "similarity": 0.8501935322464985
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 457.851473891407,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6007846241720753,
            "sparse": 457.851473891407,
            "graph": 2.3876426826930115
          },
          "normalized_scores": {
            "dense": 0.6007846241720753,
            "sparse": 0.36628117911312563,
            "graph": 0.8527295295332185
          },
          "weighted_scores": {
            "dense": 0.21027461846022635,
            "sparse": 0.14651247164525025,
            "graph": 0.2131823823833046
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6007846241720753,
              "query_max": 0.6877597695373,
              "query_min": 0.6007846241720753,
              "normalized_score": 0.6007846241720753,
              "weight": 0.35,
              "weighted_score": 0.21027461846022635
            },
            "sparse": {
              "raw_score": 457.851473891407,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.36628117911312563,
              "weight": 0.4,
              "weighted_score": 0.14651247164525025
            },
            "graph": {
              "raw_score": 2.3876426826930115,
              "query_max": 2.748251364653,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.8527295295332185,
              "weight": 0.25,
              "weighted_score": 0.2131823823833046
            }
          },
          "contribution_percentages": {
            "dense": 36.89225978052101,
            "sparse": 25.70531909463521,
            "graph": 37.40242112484379
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5699694724887812,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7409603142354155
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7409603142354155
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.8150563456589571
            }
          },
          "combined_score": 0.8150563456589571
        }
      },
      "similarity": 0.8150563456589571
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 544.4963498604297,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6877597695373,
            "sparse": 544.4963498604297
          },
          "normalized_scores": {
            "dense": 0.6877597695373,
            "sparse": 0.4355970798883438
          },
          "weighted_scores": {
            "dense": 0.24071591933805497,
            "sparse": 0.17423883195533751
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6877597695373,
              "query_max": 0.6877597695373,
              "query_min": 0.6007846241720753,
              "normalized_score": 0.6877597695373,
              "weight": 0.35,
              "weighted_score": 0.24071591933805497
            },
            "sparse": {
              "raw_score": 544.4963498604297,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.4355970798883438,
              "weight": 0.4,
              "weighted_score": 0.17423883195533751
            }
          },
          "contribution_percentages": {
            "dense": 58.01016100858127,
            "sparse": 41.98983899141873
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4149547512933925,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.49794570155207096
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.49794570155207096
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5477402717072781
            }
          },
          "combined_score": 0.5477402717072781
        }
      },
      "similarity": 0.5477402717072781
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 456.1736956735383,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 456.1736956735383,
            "graph": 2.3295999999999997
          },
          "normalized_scores": {
            "sparse": 0.36493895653883063,
            "graph": 0.832
          },
          "weighted_scores": {
            "sparse": 0.14597558261553226,
            "graph": 0.208
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 456.1736956735383,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.36493895653883063,
              "weight": 0.4,
              "weighted_score": 0.14597558261553226
            },
            "graph": {
              "raw_score": 2.3295999999999997,
              "query_max": 2.748251364653,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.832,
              "weight": 0.25,
              "weighted_score": 0.208
            }
          },
          "contribution_percentages": {
            "sparse": 41.23888476626437,
            "graph": 58.76111523373564
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.35397558261553225,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.46016825740019196
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.46016825740019196
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5061850831402112
            }
          },
          "combined_score": 0.5061850831402112
        }
      },
      "similarity": 0.5061850831402112
    },
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 406.929481997909,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6087613252615833,
            "sparse": 406.929481997909
          },
          "normalized_scores": {
            "dense": 0.6087613252615833,
            "sparse": 0.32554358559832725
          },
          "weighted_scores": {
            "dense": 0.21306646384155414,
            "sparse": 0.1302174342393309
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6087613252615833,
              "query_max": 0.6877597695373,
              "query_min": 0.6007846241720753,
              "normalized_score": 0.6087613252615833,
              "weight": 0.35,
              "weighted_score": 0.21306646384155414
            },
            "sparse": {
              "raw_score": 406.929481997909,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.32554358559832725,
              "weight": 0.4,
              "weighted_score": 0.1302174342393309
            }
          },
          "contribution_percentages": {
            "dense": 62.06713016039893,
            "sparse": 37.93286983960107
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.34328389808088505,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4462690675051506
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4462690675051506
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4908959742556657
            }
          },
          "combined_score": 0.4908959742556657
        }
      },
      "similarity": 0.4908959742556657
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 444.65340738389483,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6166191005862893,
            "sparse": 444.65340738389483
          },
          "normalized_scores": {
            "dense": 0.6166191005862893,
            "sparse": 0.35572272590711584
          },
          "weighted_scores": {
            "dense": 0.21581668520520125,
            "sparse": 0.14228909036284634
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6166191005862893,
              "query_max": 0.6877597695373,
              "query_min": 0.6007846241720753,
              "normalized_score": 0.6166191005862893,
              "weight": 0.35,
              "weighted_score": 0.21581668520520125
            },
            "sparse": {
              "raw_score": 444.65340738389483,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.35572272590711584,
              "weight": 0.4,
              "weighted_score": 0.14228909036284634
            }
          },
          "contribution_percentages": {
            "dense": 60.26618388459685,
            "sparse": 39.73381611540316
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.35810577556804757,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.42972693068165707
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.42972693068165707
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.47269962374982283
            }
          },
          "combined_score": 0.47269962374982283
        }
      },
      "similarity": 0.47269962374982283
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 412.7869508099221,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6145767547374953,
            "sparse": 412.7869508099221
          },
          "normalized_scores": {
            "dense": 0.6145767547374953,
            "sparse": 0.3302295606479377
          },
          "weighted_scores": {
            "dense": 0.21510186415812335,
            "sparse": 0.13209182425917507
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6145767547374953,
              "query_max": 0.6877597695373,
              "query_min": 0.6007846241720753,
              "normalized_score": 0.6145767547374953,
              "weight": 0.35,
              "weighted_score": 0.21510186415812335
            },
            "sparse": {
              "raw_score": 412.7869508099221,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.3302295606479377,
              "weight": 0.4,
              "weighted_score": 0.13209182425917507
            }
          },
          "contribution_percentages": {
            "dense": 61.954428128770736,
            "sparse": 38.045571871229264
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3471936884172984,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.41663242610075807
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.41663242610075807
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.45829566871083394
            }
          },
          "combined_score": 0.45829566871083394
        }
      },
      "similarity": 0.45829566871083394
    },
    {
      "metadata": {
        "doc_id": "CWE-676",
        "name": "Use of Potentially Dangerous Function",
        "type": "Base",
        "original_content": "The product invokes a potentially dangerous function that could introduce a vulnerability if it is used incorrectly, but the function can also be used safely.",
        "relationships": [],
        "original_sparse_score": 245.39978865808578,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6036946048409876,
            "sparse": 245.39978865808578
          },
          "normalized_scores": {
            "dense": 0.6036946048409876,
            "sparse": 0.19631983092646862
          },
          "weighted_scores": {
            "dense": 0.21129311169434564,
            "sparse": 0.07852793237058746
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6036946048409876,
              "query_max": 0.6877597695373,
              "query_min": 0.6007846241720753,
              "normalized_score": 0.6036946048409876,
              "weight": 0.35,
              "weighted_score": 0.21129311169434564
            },
            "sparse": {
              "raw_score": 245.39978865808578,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.19631983092646862,
              "weight": 0.4,
              "weighted_score": 0.07852793237058746
            }
          },
          "contribution_percentages": {
            "dense": 72.90468239670214,
            "sparse": 27.095317603297858
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2898210440649331,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.376767357284413
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.376767357284413
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.41444409301285434
            }
          },
          "combined_score": 0.41444409301285434
        }
      },
      "similarity": 0.41444409301285434
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 440.0339211002337,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6015745636389336,
            "sparse": 440.0339211002337
          },
          "normalized_scores": {
            "dense": 0.6015745636389336,
            "sparse": 0.352027136880187
          },
          "weighted_scores": {
            "dense": 0.21055109727362675,
            "sparse": 0.1408108547520748
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6015745636389336,
              "query_max": 0.6877597695373,
              "query_min": 0.6007846241720753,
              "normalized_score": 0.6015745636389336,
              "weight": 0.35,
              "weighted_score": 0.21055109727362675
            },
            "sparse": {
              "raw_score": 440.0339211002337,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.352027136880187,
              "weight": 0.4,
              "weighted_score": 0.1408108547520748
            }
          },
          "contribution_percentages": {
            "dense": 59.924273547474286,
            "sparse": 40.07572645252572
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.35136195202570153,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.28108956162056126
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.28108956162056126
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.224871649296449
            }
          },
          "combined_score": 0.224871649296449
        }
      },
      "similarity": 0.224871649296449
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 423.5015126758315,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 423.5015126758315
          },
          "normalized_scores": {
            "sparse": 0.3388012101406652
          },
          "weighted_scores": {
            "sparse": 0.1355204840562661
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 423.5015126758315,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.3388012101406652,
              "weight": 0.4,
              "weighted_score": 0.1355204840562661
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.1355204840562661,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.17617662927314592
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.17617662927314592
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.19379429220046054
            }
          },
          "combined_score": 0.19379429220046054
        }
      },
      "similarity": 0.19379429220046054
    },
    {
      "metadata": {
        "doc_id": "CWE-197",
        "name": "Numeric Truncation Error",
        "type": "Base",
        "original_content": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
        "relationships": [],
        "original_sparse_score": 407.94812996766143,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 407.94812996766143
          },
          "normalized_scores": {
            "sparse": 0.32635850397412913
          },
          "weighted_scores": {
            "sparse": 0.13054340158965166
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 407.94812996766143,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.32635850397412913,
              "weight": 0.4,
              "weighted_score": 0.13054340158965166
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.13054340158965166,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.16970642206654718
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.16970642206654718
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1866770642732019
            }
          },
          "combined_score": 0.1866770642732019
        }
      },
      "similarity": 0.1866770642732019
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 406.6748253266152,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 406.6748253266152
          },
          "normalized_scores": {
            "sparse": 0.32533986026129214
          },
          "weighted_scores": {
            "sparse": 0.13013594410451687
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 406.6748253266152,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.32533986026129214,
              "weight": 0.4,
              "weighted_score": 0.13013594410451687
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.13013594410451687,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.16917672733587194
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.16917672733587194
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.18609440006945915
            }
          },
          "combined_score": 0.18609440006945915
        }
      },
      "similarity": 0.18609440006945915
    },
    {
      "metadata": {
        "doc_id": "CWE-770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [],
        "original_sparse_score": 394.51697854761403,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 394.51697854761403
          },
          "normalized_scores": {
            "sparse": 0.3156135828380912
          },
          "weighted_scores": {
            "sparse": 0.12624543313523648
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 394.51697854761403,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.3156135828380912,
              "weight": 0.4,
              "weighted_score": 0.12624543313523648
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.12624543313523648,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.16411906307580743
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.16411906307580743
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1805309693833882
            }
          },
          "combined_score": 0.1805309693833882
        }
      },
      "similarity": 0.1805309693833882
    },
    {
      "metadata": {
        "doc_id": "CWE-457",
        "name": "Use of Uninitialized Variable",
        "type": "Variant",
        "original_content": "The code uses a variable that has not been initialized, leading to unpredictable or unintended results.",
        "relationships": [],
        "original_sparse_score": 375.9852875807396,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 375.9852875807396
          },
          "normalized_scores": {
            "sparse": 0.3007882300645917
          },
          "weighted_scores": {
            "sparse": 0.12031529202583668
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 375.9852875807396,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.3007882300645917,
              "weight": 0.4,
              "weighted_score": 0.12031529202583668
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.12031529202583668,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.14437835043100403
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.14437835043100403
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.15881618547410445
            }
          },
          "combined_score": 0.15881618547410445
        }
      },
      "similarity": 0.15881618547410445
    },
    {
      "metadata": {
        "doc_id": "CWE-130",
        "name": "Improper Handling of Length Parameter Inconsistency",
        "type": "Base",
        "original_content": "The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.",
        "relationships": [],
        "original_sparse_score": 248.88553010189662,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 248.88553010189662
          },
          "normalized_scores": {
            "sparse": 0.1991084240815173
          },
          "weighted_scores": {
            "sparse": 0.07964336963260693
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 248.88553010189662,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.1991084240815173,
              "weight": 0.4,
              "weighted_score": 0.07964336963260693
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.07964336963260693,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.10353638052238902
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.10353638052238902
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.11389001857462792
            }
          },
          "combined_score": 0.11389001857462792
        }
      },
      "similarity": 0.11389001857462792
    },
    {
      "metadata": {
        "doc_id": "CWE-1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
        "relationships": [],
        "original_sparse_score": 233.22848386700224,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 233.22848386700224
          },
          "normalized_scores": {
            "sparse": 0.1865827870936018
          },
          "weighted_scores": {
            "sparse": 0.07463311483744071
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 233.22848386700224,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.1865827870936018,
              "weight": 0.4,
              "weighted_score": 0.07463311483744071
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.07463311483744071,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.09702304928867293
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.09702304928867293
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.10672535421754023
            }
          },
          "combined_score": 0.10672535421754023
        }
      },
      "similarity": 0.10672535421754023
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 432.1492107040029,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 432.1492107040029
          },
          "normalized_scores": {
            "sparse": 0.3457193685632023
          },
          "weighted_scores": {
            "sparse": 0.1382877474252809
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 432.1492107040029,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.3457193685632023,
              "weight": 0.4,
              "weighted_score": 0.1382877474252809
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.1382877474252809,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.11063019794022473
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.11063019794022473
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.08850415835217978
            }
          },
          "combined_score": 0.08850415835217978
        }
      },
      "similarity": 0.08850415835217978
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 248.80887635246629,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 248.80887635246629
          },
          "normalized_scores": {
            "sparse": 0.19904710108197302
          },
          "weighted_scores": {
            "sparse": 0.07961884043278922
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 248.80887635246629,
              "query_max": 544.4963498604297,
              "query_min": 233.22848386700224,
              "normalized_score": 0.19904710108197302,
              "weight": 0.4,
              "weighted_score": 0.07961884043278922
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.07961884043278922,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.06369507234623138
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06369507234623138
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.06687982596354296
            }
          },
          "combined_score": 0.06687982596354296
        }
      },
      "similarity": 0.06687982596354296
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-120",
      "CWE-121",
      "CWE-787"
    ],
    "critic_additional": [
      "CWE-676",
      "CWE-190",
      "CWE-1284",
      "CWE-124",
      "CWE-20",
      "CWE-131",
      "CWE-193"
    ]
  }
}