{
  "cve_id": "CVE-2021-45830",
  "description": "A heap-based buffer overflow vulnerability exists in HDF5 1.13.1-1 via H5F_addr_decode_len in /hdf5/src/H5Fint.c, which could cause a Denial of Service.",
  "key_phrases": {
    "rootcause": "heap-based buffer overflow",
    "weakness": "",
    "impact": "Denial of Service",
    "vector": "",
    "attacker": "",
    "product": "HDF5",
    "version": "1.13.1-1",
    "component": "H5F_addr_decode_len in /hdf5/src/H5Fint.c"
  },
  "reference_content": "The provided content is related to CVE-2021-45830.\n\n**Root cause of vulnerability:**\nThe root cause is a heap-buffer-overflow in the `H5F_addr_decode_len` function within the HDF5 library. This function is responsible for decoding the length of an address, and it appears that the code attempts to read beyond the allocated buffer when handling a crafted HDF5 file.\n\n**Weaknesses/vulnerabilities present:**\n- Heap-buffer-overflow: The vulnerability manifests as a heap-buffer-overflow, meaning the code writes data beyond the boundaries of an allocated memory buffer.\n\n**Impact of exploitation:**\n- Segmentation fault: The immediate impact of exploitation is a segmentation fault, causing the program (`h5format_convert`) to crash.\n- Potential for further exploitation: While the provided information only shows a crash, heap-buffer-overflows can be exploited to achieve arbitrary code execution with the permissions of the application.\n\n**Attack vectors:**\n- Crafted HDF5 file: The attack vector is a specially crafted HDF5 file that triggers the overflow when processed by HDF5 library functions. In the provided example, a file named `POC5.zip` containing this crafted file was used to reproduce the issue with the `h5format_convert` tool.\n\n**Required attacker capabilities/position:**\n- Ability to provide the crafted HDF5 file: The attacker needs to be able to provide a specially crafted HDF5 file as input to an application using the vulnerable version of the HDF5 library.\n- User interaction might be required: In the specific case described the `h5format_convert` tool is used, so a user needs to execute this tool with the crafted file as input.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.95 | Variant | Primary | Allowed |\n| CWE-125 | Out-of-bounds Read | 0.60 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description explicitly states a \"**heap-based buffer overflow**\" exists in HDF5. This directly aligns with CWE-122 (Heap-based Buffer Overflow), a Variant-level CWE. The CVE Reference Links Content Summary confirms that the root cause is a heap-buffer-overflow in the `H5F_addr_decode_len` function, where the code attempts to read beyond the allocated buffer, causing a segmentation fault. While other CWEs like CWE-120 (Buffer Copy without Checking Size of Input) and CWE-787 (Out-of-bounds Write) are related to buffer overflows, CWE-122 is the most specific and accurate representation of the described weakness. The MITRE mapping guidance allows the use of CWE-122 for heap-based buffer overflows. The retriever results confirm CWE-122 as a candidate for this vulnerability. Additionally, the content summary mentions reading beyond the allocated buffer, which may be an indication of CWE-125.\n\n  - *Relationship Analysis:* CWE-122 is a variant of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), indicating a hierarchical relationship. CWE-122 can lead to other weaknesses, such as CWE-20 (Improper Input Validation), as the crafted input triggers the overflow. CWE-125 can follow CWE-122 as the buffer is read out of bounds.\n\n- **Confidence Score:**  \n  - Confidence: 0.95 (High confidence due to explicit mention of \"heap-based buffer overflow\" and confirmation in the CVE reference summary)",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.95 | Variant | Primary | Allowed |\n| CWE-125 | Out-of-bounds Read | 0.60 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description explicitly states a \"**heap-based buffer overflow**\" exists in HDF5. This directly aligns with CWE-122 (Heap-based Buffer Overflow), a Variant-level CWE. The CVE Reference Links Content Summary confirms that the root cause is a heap-buffer-overflow in the `H5F_addr_decode_len` function, where the code attempts to read beyond the allocated buffer, causing a segmentation fault. While other CWEs like CWE-120 (Buffer Copy without Checking Size of Input) and CWE-787 (Out-of-bounds Write) are related to buffer overflows, CWE-122 is the most specific and accurate representation of the described weakness. The MITRE mapping guidance allows the use of CWE-122 for heap-based buffer overflows. The retriever results confirm CWE-122 as a candidate for this vulnerability. Additionally, the content summary mentions reading beyond the allocated buffer, which may be an indication of CWE-125.\n\n  - *Relationship Analysis:* CWE-122 is a variant of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), indicating a hierarchical relationship. CWE-122 can lead to other weaknesses, such as CWE-20 (Improper Input Validation), as the crafted input triggers the overflow. CWE-125 can follow CWE-122 as the buffer is read out of bounds.\n\n- **Confidence Score:**  \n  - Confidence: 0.95 (High confidence due to explicit mention of \"heap-based buffer overflow\" and confirmation in the CVE reference summary)",
  "criticism": "Okay, here's a review of the provided CWE analysis, incorporating the full CWE specifications:\n\n**Overall Assessment:**\n\nThe analysis correctly identifies the primary vulnerability as CWE-122, Heap-based Buffer Overflow, with a high degree of confidence. The inclusion of CWE-125, Out-of-bounds Read, as a secondary weakness is also plausible, given the potential for reading beyond the buffer boundaries during the decoding process. The analysis demonstrates a good understanding of the CWE hierarchy and relationships.\n\n**Detailed Review:**\n\n**1. CWE-122: Heap-based Buffer Overflow**\n\n*   **CWE Name:** Heap-based Buffer Overflow\n*   **CWE ID:** CWE-122\n*   **Confidence:** 0.95\n*   **CWE Abstraction Level:** Variant\n*   **CWE Vulnerability Mapping Label:** Primary\n*   **CWE-Vulnerability Mapping Notes:** Allowed\n\n*   **Review:**\n    *   The mapping to CWE-122 is strongly justified by the vulnerability description and the CVE Reference Links Content Summary, which explicitly mentions a \"heap-based buffer overflow\" in the affected function.\n    *   The Evidence and Justification section accurately explains why CWE-122 is the most specific and appropriate CWE, especially compared to higher-level CWE-119 or more general overflow CWEs like CWE-120 or CWE-787.  It correctly highlights that CWE-122 is a *Variant* of CWE-787, and CWE-119.\n    *   The use of \"Allowed\" for the CWE-Vulnerability Mapping Notes is correct, as the CWE specification allows for direct mapping to variant-level CWEs.\n    *   The confidence score of 0.95 is appropriate given the strong evidence.\n    *   The mitigations listed in the provided CWE specification (automatic bounds checking, abstraction libraries, compiler-based overflow detection) are relevant and can be applied to prevent this type of vulnerability.\n\n**2. CWE-125: Out-of-bounds Read**\n\n*   **CWE Name:** Out-of-bounds Read\n*   **CWE ID:** CWE-125\n*   **Confidence:** 0.60\n*   **CWE Abstraction Level:** Base\n*   **CWE Vulnerability Mapping Label:** Secondary\n*   **CWE-Vulnerability Mapping Notes:** Allowed\n\n*   **Review:**\n    *   The rationale for including CWE-125 is plausible. The CVE summary mentions that the code attempts to *read* beyond the allocated buffer.  This behavior could manifest as an out-of-bounds read *after* the overflow, when the code tries to process or use the corrupted data.  It is not always the case that an out-of-bounds *read* is the direct cause of the vulnerability, as implied by the name of CWE-125.\n    *   The confidence score of 0.6 is reasonable, as the evidence for CWE-125 is less direct than for CWE-122. It is a potential consequence of the overflow rather than the primary root cause in this specific scenario.\n    *   The analysis correctly identified that CWE-125 is a Base level CWE.\n    *   The \"Allowed\" CWE-Vulnerability Mapping Notes are correct.\n    *   The mitigations for CWE-125 (input validation, language selection with memory abstractions) are also applicable, although they primarily focus on *preventing* the overflow in the first place, which indirectly prevents the potential out-of-bounds read.\n\n**General Observations and Suggestions:**\n\n*   **Chain of Events:** The analysis could benefit from explicitly outlining the likely chain of events.  Something like:\n    1.  Crafted HDF5 file with a length value that, when decoded by `H5F_addr_decode_len`, results in a buffer size that is too small.\n    2.  The code allocates a heap buffer of the insufficient size.\n    3.  `H5F_addr_decode_len` attempts to write data beyond the allocated heap buffer (CWE-122).\n    4.  (Potentially) The code attempts to read or process the corrupted memory beyond the bounds of the original buffer (CWE-125).\n\n*   **Input Validation (CWE-20 family):**  Although not directly identified as a CWE, the core problem stems from a lack of *input validation* on the crafted HDF5 file, specifically the length values used in `H5F_addr_decode_len`. The code is not properly checking if the decoded length values are within acceptable bounds before using them to allocate memory and copy data. While not a *direct* mapping (the code doesn't simply fail to validate input), the *lack* of input validation is a crucial factor that *allows* the heap overflow to occur.  Consider mentioning the potential for CWE-1284, Improper Validation of Specified Quantity in Input.\n\n*   **CWE-787 vs CWE-122:** While CWE-122 is the *variant* of interest, CWE-787 can be a useful addition. Consider adding CWE-787 as a *related* CWE to CWE-122, noting that CWE-122 *is a* CWE-787.\n**Retriever Results Analysis:**\n\n*   The top retriever results do not contain CWEs suitable for this vulnerability.\n*   CWE-122 is the highest scoring out of the suitable CWEs.\n\n**Revised Analysis:**\n\n**Summary**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.95 | Variant | Primary | Allowed |\n| CWE-125 | Out-of-bounds Read | 0.60 | Base | Secondary | Allowed |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.40 | Base | Supporting | Allowed |\n| CWE-787 | Out-of-bounds Write | 0.20 | Base | Related | Allowed |\n\n**Evidence and Confidence:**\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability description explicitly states a \"**heap-based buffer overflow**\" exists in HDF5. This directly aligns with CWE-122 (Heap-based Buffer Overflow), a Variant-level CWE. The CVE Reference Links Content Summary confirms that the root cause is a heap-buffer-overflow in the `H5F_addr_decode_len` function, where the code attempts to write beyond the allocated buffer, causing a segmentation fault.  The MITRE mapping guidance allows the use of CWE-122 for heap-based buffer overflows.  Additionally, the content summary mentions reading beyond the allocated buffer, which may be an indication of CWE-125 as a consequence of the overflow. The code fails to properly validate the length values before allocating the heap buffer (CWE-1284).\n  - *Relationship Analysis:* CWE-122 is a variant of CWE-787 (Out-of-bounds Write), which in turn is a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), indicating a hierarchical relationship. The crafted input triggers the vulnerability because the code is not correctly validating the size of input data (CWE-20 family), specifically, the size is read from the file.  The specific lack of validation of the size of the input is CWE-1284. CWE-122 can lead to other weaknesses, such as CWE-125 (Out-of-bounds Read), if memory is read after the write.\n\n- **Confidence Score:**\n  - Confidence: 0.95 (High confidence due to explicit mention of \"heap-based buffer overflow\" and confirmation in the CVE reference summary)\n\n**Conclusion:**\n\nThe analysis is accurate and well-supported. The suggested improvements (chain of events, emphasizing input validation via family of CWE-20 and mentioning CWE-787) would further enhance the comprehensiveness of the analysis. The increased focus on chains of events provides a more practical perspective for developers and security engineers.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.95 | Variant | Primary | Allowed |\n| CWE-125 | Out-of-bounds Read | 0.60 | Base | Secondary | Allowed |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.40 | Base | Supporting | Allowed |\n| CWE-787 | Out-of-bounds Write | 0.20 | Base | Related | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-122 (Heap-based Buffer Overflow) is a variant of CWE-787 (**Out-of-bounds Write**), which is in turn a child of CWE-119 (**Improper Restriction of Operations within the Bounds of a Memory Buffer**). This establishes a clear hierarchical relationship. CWE-1284 (**Improper Validation of Specified Quantity in Input**) can precede CWE-122, as the lack of validation enables the overflow. CWE-125 (**Out-of-bounds Read**) can follow CWE-122, occurring as a result of reading from the corrupted memory.\n\n```mermaid\ngraph TD\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe122[\"CWE-122: Heap-based Buffer Overflow\"]\n    cwe125[\"CWE-125: Out-of-bounds Read\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    \n    cwe787 -->|CHILDOF| cwe119\n    cwe122 -->|CHILDOF| cwe787\n    cwe1284 -->|CANPRECEDE| cwe122\n    cwe122 -->|CANFOLLOW| cwe125\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe122 primary\n    class cwe125,cwe1284,cwe787 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with a crafted HDF5 file containing an invalid length value. The `H5F_addr_decode_len` function in HDF5 does not properly validate this length value (CWE-1284), leading to the allocation of an undersized heap buffer. Subsequently, the function attempts to write data beyond the allocated heap buffer, resulting in a heap-based buffer overflow (CWE-122). This **out-of-bounds write** (CWE-787) can then potentially lead to an **out-of-bounds read** (CWE-125) if the corrupted memory is accessed later.\n\n## Summary of Analysis\nThe analysis is accurate and well-supported by the provided information. The vulnerability description explicitly mentions a \"**heap-based buffer overflow**\", which strongly suggests CWE-122 as the primary CWE. The CVE Reference Links Content Summary confirms that the root cause is indeed a heap-buffer-overflow in the `H5F_addr_decode_len` function. The inclusion of CWE-125 as a secondary CWE is justified by the CVE summary mentioning the code attempting to *read* beyond the allocated buffer. I am adding CWE-1284 as the **ROOTCAUSE** as that is the lack of input validation that leads to the heap overflow condition.\n\nThe graph relationships influenced my decision by highlighting the hierarchical relationship between CWE-122 and CWE-787/CWE-119, as well as the chain relationship between CWE-1284, CWE-122, and CWE-125.\n\nThe selected CWEs are at the optimal level of specificity. CWE-122 is a Variant-level CWE that directly describes the heap-based buffer overflow. CWE-125 and CWE-1284 are Base-level CWEs that represent the consequences and enabling conditions of the overflow, respectively.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 206.32805719672393,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5664993331298241,
            "sparse": 206.32805719672393,
            "graph": 2.5840086550465013
          },
          "normalized_scores": {
            "dense": 0.5664993331298241,
            "sparse": 0.16506244575737913,
            "graph": 0.9228602339451791
          },
          "weighted_scores": {
            "dense": 0.19827476659543844,
            "sparse": 0.06602497830295166,
            "graph": 0.23071505848629478
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5664993331298241,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.5664993331298241,
              "weight": 0.35,
              "weighted_score": 0.19827476659543844
            },
            "sparse": {
              "raw_score": 206.32805719672393,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.16506244575737913,
              "weight": 0.4,
              "weighted_score": 0.06602497830295166
            },
            "graph": {
              "raw_score": 2.5840086550465013,
              "query_max": 2.5840086550465013,
              "query_min": 1.20096,
              "normalized_score": 0.9228602339451791,
              "weight": 0.25,
              "weighted_score": 0.23071505848629478
            }
          },
          "contribution_percentages": {
            "dense": 40.054310545811205,
            "sparse": 13.337980571793622,
            "graph": 46.60770888239518
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.49501480338468484,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6435192444000903
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6435192444000903
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7078711688400995
            }
          },
          "combined_score": 0.7078711688400995
        }
      },
      "similarity": 0.7078711688400995
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 211.90043836735094,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5722497955798982,
            "sparse": 211.90043836735094,
            "graph": 2.2631742335596408
          },
          "normalized_scores": {
            "dense": 0.5722497955798982,
            "sparse": 0.16952035069388074,
            "graph": 0.808276511985586
          },
          "weighted_scores": {
            "dense": 0.20028742845296435,
            "sparse": 0.0678081402775523,
            "graph": 0.2020691279963965
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5722497955798982,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.5722497955798982,
              "weight": 0.35,
              "weighted_score": 0.20028742845296435
            },
            "sparse": {
              "raw_score": 211.90043836735094,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.16952035069388074,
              "weight": 0.4,
              "weighted_score": 0.0678081402775523
            },
            "graph": {
              "raw_score": 2.2631742335596408,
              "query_max": 2.5840086550465013,
              "query_min": 1.20096,
              "normalized_score": 0.808276511985586,
              "weight": 0.25,
              "weighted_score": 0.2020691279963965
            }
          },
          "contribution_percentages": {
            "dense": 42.59941885200661,
            "sparse": 14.4222100786392,
            "graph": 42.97837106935419
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4701646967269132,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6112141057449871
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6112141057449871
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.6723355163194858
            }
          },
          "combined_score": 0.6723355163194858
        }
      },
      "similarity": 0.6723355163194858
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 201.9728925870674,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5489581731977905,
            "sparse": 201.9728925870674,
            "graph": 1.5767704629331782
          },
          "normalized_scores": {
            "dense": 0.5489581731977905,
            "sparse": 0.16157831406965392,
            "graph": 0.5631323081904208
          },
          "weighted_scores": {
            "dense": 0.19213536061922667,
            "sparse": 0.06463132562786157,
            "graph": 0.1407830770476052
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5489581731977905,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.5489581731977905,
              "weight": 0.35,
              "weighted_score": 0.19213536061922667
            },
            "sparse": {
              "raw_score": 201.9728925870674,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.16157831406965392,
              "weight": 0.4,
              "weighted_score": 0.06463132562786157
            },
            "graph": {
              "raw_score": 1.5767704629331782,
              "query_max": 2.5840086550465013,
              "query_min": 1.20096,
              "normalized_score": 0.5631323081904208,
              "weight": 0.25,
              "weighted_score": 0.1407830770476052
            }
          },
          "contribution_percentages": {
            "dense": 48.3298893267864,
            "sparse": 16.2574177109878,
            "graph": 35.41269296222579
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3975497632946935,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.47705971595363217
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.47705971595363217
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5247656875489954
            }
          },
          "combined_score": 0.5247656875489954
        }
      },
      "similarity": 0.5247656875489954
    },
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 177.6059844764946,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5360185806008216,
            "sparse": 177.6059844764946,
            "graph": 1.2507445687406293
          },
          "normalized_scores": {
            "dense": 0.5360185806008216,
            "sparse": 0.14208478758119567,
            "graph": 0.4466944888359391
          },
          "weighted_scores": {
            "dense": 0.18760650321028757,
            "sparse": 0.05683391503247827,
            "graph": 0.11167362220898477
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5360185806008216,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.5360185806008216,
              "weight": 0.35,
              "weighted_score": 0.18760650321028757
            },
            "sparse": {
              "raw_score": 177.6059844764946,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.14208478758119567,
              "weight": 0.4,
              "weighted_score": 0.05683391503247827
            },
            "graph": {
              "raw_score": 1.2507445687406293,
              "query_max": 2.5840086550465013,
              "query_min": 1.20096,
              "normalized_score": 0.4466944888359391,
              "weight": 0.25,
              "weighted_score": 0.11167362220898477
            }
          },
          "contribution_percentages": {
            "dense": 52.681580027650185,
            "sparse": 15.959470443900853,
            "graph": 31.358949528448953
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.35611404045175066,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.46294825258727584
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.46294825258727584
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5092430778460034
            }
          },
          "combined_score": 0.5092430778460034
        }
      },
      "similarity": 0.5092430778460034
    },
    {
      "metadata": {
        "doc_id": "CWE-120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "type": "Base",
        "original_content": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 177.97862904025126,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
          "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.518134310065629,
            "sparse": 177.97862904025126,
            "graph": 1.285893300640223
          },
          "normalized_scores": {
            "dense": 0.518134310065629,
            "sparse": 0.142382903232201,
            "graph": 0.4592476073715082
          },
          "weighted_scores": {
            "dense": 0.18134700852297014,
            "sparse": 0.05695316129288041,
            "graph": 0.11481190184287705
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.518134310065629,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.518134310065629,
              "weight": 0.35,
              "weighted_score": 0.18134700852297014
            },
            "sparse": {
              "raw_score": 177.97862904025126,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.142382903232201,
              "weight": 0.4,
              "weighted_score": 0.05695316129288041
            },
            "graph": {
              "raw_score": 1.285893300640223,
              "query_max": 2.5840086550465013,
              "query_min": 1.20096,
              "normalized_score": 0.4592476073715082,
              "weight": 0.25,
              "weighted_score": 0.11481190184287705
            }
          },
          "contribution_percentages": {
            "dense": 51.35678530362924,
            "sparse": 16.128919361308032,
            "graph": 32.51429533506274
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.3531120716587276,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4590456931563459
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4590456931563459
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
                "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.4819979778141632
            }
          },
          "combined_score": 0.4819979778141632
        }
      },
      "similarity": 0.4819979778141632
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 254.2568687498661,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6012640674088245,
            "sparse": 254.2568687498661
          },
          "normalized_scores": {
            "dense": 0.6012640674088245,
            "sparse": 0.20340549499989288
          },
          "weighted_scores": {
            "dense": 0.21044242359308857,
            "sparse": 0.08136219799995716
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6012640674088245,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.6012640674088245,
              "weight": 0.35,
              "weighted_score": 0.21044242359308857
            },
            "sparse": {
              "raw_score": 254.2568687498661,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.20340549499989288,
              "weight": 0.4,
              "weighted_score": 0.08136219799995716
            }
          },
          "contribution_percentages": {
            "dense": 72.11757731739223,
            "sparse": 27.88242268260777
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2918046215930457,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.35016554591165483
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.35016554591165483
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.38518210050282037
            }
          },
          "combined_score": 0.38518210050282037
        }
      },
      "similarity": 0.38518210050282037
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 195.05040438087298,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.548563558521049,
            "sparse": 195.05040438087298
          },
          "normalized_scores": {
            "dense": 0.548563558521049,
            "sparse": 0.15604032350469837
          },
          "weighted_scores": {
            "dense": 0.19199724548236713,
            "sparse": 0.06241612940187935
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.548563558521049,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.548563558521049,
              "weight": 0.35,
              "weighted_score": 0.19199724548236713
            },
            "sparse": {
              "raw_score": 195.05040438087298,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.15604032350469837,
              "weight": 0.4,
              "weighted_score": 0.06241612940187935
            }
          },
          "contribution_percentages": {
            "dense": 75.46664776162906,
            "sparse": 24.533352238370945
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2544133748842465,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.33073738734952046
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.33073738734952046
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3638111260844725
            }
          },
          "combined_score": 0.3638111260844725
        }
      },
      "similarity": 0.3638111260844725
    },
    {
      "metadata": {
        "doc_id": "CWE-170",
        "name": "Improper Null Termination",
        "type": "Base",
        "original_content": "The product does not terminate or incorrectly terminates a string or array with a null character or equivalent terminator.",
        "relationships": [],
        "original_sparse_score": 172.14362016711385,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 172.14362016711385,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.1377148961336911,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.05508595845347644,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 172.14362016711385,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.1377148961336911,
              "weight": 0.4,
              "weighted_score": 0.05508595845347644
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 2.5840086550465013,
              "query_min": 1.20096,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 21.824225947888404,
            "graph": 78.17577405211159
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.25240738702490506,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3281296031323766
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3281296031323766
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3609425634456143
            }
          },
          "combined_score": 0.3609425634456143
        }
      },
      "similarity": 0.3609425634456143
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 199.19832572703774,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.517668088949803,
            "sparse": 199.19832572703774
          },
          "normalized_scores": {
            "dense": 0.517668088949803,
            "sparse": 0.1593586605816302
          },
          "weighted_scores": {
            "dense": 0.18118383113243103,
            "sparse": 0.06374346423265208
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.517668088949803,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.517668088949803,
              "weight": 0.35,
              "weighted_score": 0.18118383113243103
            },
            "sparse": {
              "raw_score": 199.19832572703774,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.1593586605816302,
              "weight": 0.4,
              "weighted_score": 0.06374346423265208
            }
          },
          "contribution_percentages": {
            "dense": 73.97453634653601,
            "sparse": 26.02546365346398
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.24492729536508312,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.31840548397460805
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.31840548397460805
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.35024603237206886
            }
          },
          "combined_score": 0.35024603237206886
        }
      },
      "similarity": 0.35024603237206886
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 191.76708599426183,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5217559598387485,
            "sparse": 191.76708599426183
          },
          "normalized_scores": {
            "dense": 0.5217559598387485,
            "sparse": 0.15341366879540946
          },
          "weighted_scores": {
            "dense": 0.18261458594356195,
            "sparse": 0.06136546751816379
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5217559598387485,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.5217559598387485,
              "weight": 0.35,
              "weighted_score": 0.18261458594356195
            },
            "sparse": {
              "raw_score": 191.76708599426183,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.15341366879540946,
              "weight": 0.4,
              "weighted_score": 0.06136546751816379
            }
          },
          "contribution_percentages": {
            "dense": 74.84816211510893,
            "sparse": 25.151837884891055
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.24398005346172574,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.31717406950024346
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.31717406950024346
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.34889147645026786
            }
          },
          "combined_score": 0.34889147645026786
        }
      },
      "similarity": 0.34889147645026786
    },
    {
      "metadata": {
        "doc_id": "CWE-130",
        "name": "Improper Handling of Length Parameter Inconsistency",
        "type": "Base",
        "original_content": "The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.",
        "relationships": [],
        "original_sparse_score": 195.75950558283392,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5180248878124307,
            "sparse": 195.75950558283392
          },
          "normalized_scores": {
            "dense": 0.5180248878124307,
            "sparse": 0.15660760446626715
          },
          "weighted_scores": {
            "dense": 0.18130871073435073,
            "sparse": 0.06264304178650686
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5180248878124307,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.5180248878124307,
              "weight": 0.35,
              "weighted_score": 0.18130871073435073
            },
            "sparse": {
              "raw_score": 195.75950558283392,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.15660760446626715,
              "weight": 0.4,
              "weighted_score": 0.06264304178650686
            }
          },
          "contribution_percentages": {
            "dense": 74.32154467463768,
            "sparse": 25.678455325362314
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2439517525208576,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3171372782771149
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3171372782771149
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.34885100610482644
            }
          },
          "combined_score": 0.34885100610482644
        }
      },
      "similarity": 0.34885100610482644
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 200.8530775636467,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5705410083870327,
            "sparse": 200.8530775636467
          },
          "normalized_scores": {
            "dense": 0.5705410083870327,
            "sparse": 0.16068246205091735
          },
          "weighted_scores": {
            "dense": 0.19968935293546144,
            "sparse": 0.06427298482036695
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5705410083870327,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.5705410083870327,
              "weight": 0.35,
              "weighted_score": 0.19968935293546144
            },
            "sparse": {
              "raw_score": 200.8530775636467,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.16068246205091735,
              "weight": 0.4,
              "weighted_score": 0.06427298482036695
            }
          },
          "contribution_percentages": {
            "dense": 75.65069874482585,
            "sparse": 24.349301255174147
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2639623377558284,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.31675480530699407
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.31675480530699407
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.34843028583769353
            }
          },
          "combined_score": 0.34843028583769353
        }
      },
      "similarity": 0.34843028583769353
    },
    {
      "metadata": {
        "doc_id": "CWE-770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [],
        "original_sparse_score": 160.88881205358027,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5390737023400466,
            "sparse": 160.88881205358027
          },
          "normalized_scores": {
            "dense": 0.5390737023400466,
            "sparse": 0.1287110496428642
          },
          "weighted_scores": {
            "dense": 0.1886757958190163,
            "sparse": 0.051484419857145684
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5390737023400466,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.5390737023400466,
              "weight": 0.35,
              "weighted_score": 0.1886757958190163
            },
            "sparse": {
              "raw_score": 160.88881205358027,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.1287110496428642,
              "weight": 0.4,
              "weighted_score": 0.051484419857145684
            }
          },
          "contribution_percentages": {
            "dense": 78.56246934481081,
            "sparse": 21.43753065518918
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.240160215676162,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3122082803790106
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3122082803790106
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3434291084169117
            }
          },
          "combined_score": 0.3434291084169117
        }
      },
      "similarity": 0.3434291084169117
    },
    {
      "metadata": {
        "doc_id": "CWE-129",
        "name": "Improper Validation of Array Index",
        "type": "Variant",
        "original_content": "The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.",
        "relationships": [],
        "original_sparse_score": 164.78986521234182,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5377565283572046,
            "sparse": 164.78986521234182
          },
          "normalized_scores": {
            "dense": 0.5377565283572046,
            "sparse": 0.13183189216987345
          },
          "weighted_scores": {
            "dense": 0.18821478492502158,
            "sparse": 0.052732756867949385
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5377565283572046,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.5377565283572046,
              "weight": 0.35,
              "weighted_score": 0.18821478492502158
            },
            "sparse": {
              "raw_score": 164.78986521234182,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.13183189216987345,
              "weight": 0.4,
              "weighted_score": 0.052732756867949385
            }
          },
          "contribution_percentages": {
            "dense": 78.11442421219684,
            "sparse": 21.885575787803173
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.24094754179297095,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.28913705015156516
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.28913705015156516
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3180507551667217
            }
          },
          "combined_score": 0.3180507551667217
        }
      },
      "similarity": 0.3180507551667217
    },
    {
      "metadata": {
        "doc_id": "CWE-195",
        "name": "Signed to Unsigned Conversion Error",
        "type": "Variant",
        "original_content": "The product uses a signed primitive and performs a cast to an unsigned primitive, which can produce an unexpected value if the value of the signed primitive can not be represented using an unsigned primitive.",
        "relationships": [],
        "original_sparse_score": 171.35284159164937,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 171.35284159164937,
            "graph": 1.5552000000000004
          },
          "normalized_scores": {
            "sparse": 0.13708227327331948,
            "graph": 0.5554285714285716
          },
          "weighted_scores": {
            "sparse": 0.0548329093093278,
            "graph": 0.1388571428571429
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 171.35284159164937,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.13708227327331948,
              "weight": 0.4,
              "weighted_score": 0.0548329093093278
            },
            "graph": {
              "raw_score": 1.5552000000000004,
              "query_max": 2.5840086550465013,
              "query_min": 1.20096,
              "normalized_score": 0.5554285714285716,
              "weight": 0.25,
              "weighted_score": 0.1388571428571429
            }
          },
          "contribution_percentages": {
            "sparse": 28.309615644173913,
            "graph": 71.69038435582608
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.1936900521664707,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.23242806259976484
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.23242806259976484
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.25567086885974133
            }
          },
          "combined_score": 0.25567086885974133
        }
      },
      "similarity": 0.25567086885974133
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 202.6232135469305,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5363658542841065,
            "sparse": 202.6232135469305
          },
          "normalized_scores": {
            "dense": 0.5363658542841065,
            "sparse": 0.1620985708375444
          },
          "weighted_scores": {
            "dense": 0.1877280489994373,
            "sparse": 0.06483942833501775
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5363658542841065,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.5363658542841065,
              "weight": 0.35,
              "weighted_score": 0.1877280489994373
            },
            "sparse": {
              "raw_score": 202.6232135469305,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.1620985708375444,
              "weight": 0.4,
              "weighted_score": 0.06483942833501775
            }
          },
          "contribution_percentages": {
            "dense": 74.32787902095721,
            "sparse": 25.672120979042777
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.25256747733445506,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.20205398186756407
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.20205398186756407
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.21215668096094228
            }
          },
          "combined_score": 0.21215668096094228
        }
      },
      "similarity": 0.21215668096094228
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 177.46848790689543,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5283632004436902,
            "sparse": 177.46848790689543
          },
          "normalized_scores": {
            "dense": 0.5283632004436902,
            "sparse": 0.14197479032551635
          },
          "weighted_scores": {
            "dense": 0.18492712015529156,
            "sparse": 0.05678991613020654
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5283632004436902,
              "query_max": 0.6012640674088245,
              "query_min": 0.517668088949803,
              "normalized_score": 0.5283632004436902,
              "weight": 0.35,
              "weighted_score": 0.18492712015529156
            },
            "sparse": {
              "raw_score": 177.46848790689543,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.14197479032551635,
              "weight": 0.4,
              "weighted_score": 0.05678991613020654
            }
          },
          "contribution_percentages": {
            "dense": 76.50562119952086,
            "sparse": 23.494378800479144
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.2417170362854981,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.1933736290283985
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1933736290283985
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.15469890322271881
            }
          },
          "combined_score": 0.15469890322271881
        }
      },
      "similarity": 0.15469890322271881
    },
    {
      "metadata": {
        "doc_id": "CWE-197",
        "name": "Numeric Truncation Error",
        "type": "Base",
        "original_content": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
        "relationships": [],
        "original_sparse_score": 185.8522856398214,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 185.8522856398214
          },
          "normalized_scores": {
            "sparse": 0.1486818285118571
          },
          "weighted_scores": {
            "sparse": 0.059472731404742844
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 185.8522856398214,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.1486818285118571,
              "weight": 0.4,
              "weighted_score": 0.059472731404742844
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.059472731404742844,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.0773145508261657
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0773145508261657
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08504600590878228
            }
          },
          "combined_score": 0.08504600590878228
        }
      },
      "similarity": 0.08504600590878228
    },
    {
      "metadata": {
        "doc_id": "CWE-681",
        "name": "Incorrect Conversion between Numeric Types",
        "type": "Base",
        "original_content": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
        "relationships": [],
        "original_sparse_score": 170.58898338160864,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 170.58898338160864
          },
          "normalized_scores": {
            "sparse": 0.1364711867052869
          },
          "weighted_scores": {
            "sparse": 0.054588474682114765
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 170.58898338160864,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.1364711867052869,
              "weight": 0.4,
              "weighted_score": 0.054588474682114765
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.054588474682114765,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.0709650170867492
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0709650170867492
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.07806151879542413
            }
          },
          "combined_score": 0.07806151879542413
        }
      },
      "similarity": 0.07806151879542413
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 161.6953126039357,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 161.6953126039357
          },
          "normalized_scores": {
            "sparse": 0.12935625008314855
          },
          "weighted_scores": {
            "sparse": 0.05174250003325942
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 161.6953126039357,
              "query_max": 254.2568687498661,
              "query_min": 160.88881205358027,
              "normalized_score": 0.12935625008314855,
              "weight": 0.4,
              "weighted_score": 0.05174250003325942
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.05174250003325942,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.06726525004323725
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06726525004323725
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.07399177504756098
            }
          },
          "combined_score": 0.07399177504756098
        }
      },
      "similarity": 0.07399177504756098
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-119",
      "CWE-120",
      "CWE-787",
      "CWE-122",
      "CWE-20",
      "CWE-125"
    ],
    "critic_additional": [
      "CWE-1284"
    ]
  }
}