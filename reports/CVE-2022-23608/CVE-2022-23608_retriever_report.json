{
  "cve_id": "CVE-2022-23608",
  "query": "PJSIP is a free and open source multimedia communication library written in C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. In versions up to and including 2.11.1 when in a dialog set (or forking) scenario, a hash key shared by multiple UAC dialogs can potentially be prematurely freed when one of the dialogs is destroyed . The issue may cause a dialog set to be registered in the hash table multiple times (with different hash keys) leading to undefined behavior such as dialog list collision which eventually leading to endless loop. A patch is available in commit db3235953baa56d2fb0e276ca510fefca751643f which will be included in the next release. There are no known workarounds for this issue.",
  "keyphrases": {
    "rootcause": "hash key shared by multiple UAC dialogs can potentially be prematurely freed"
  },
  "timestamp": "2025-03-18T10:35:08.528361",
  "summary": {
    "total_unique_cwes": 10,
    "retrievers_used": {
      "dense": true,
      "sparse": true,
      "graph": true
    },
    "retriever_weights": {
      "dense": 0.35,
      "sparse": 0.4,
      "graph": 0.25
    }
  },
  "retriever_statistics": {
    "dense": {
      "hit_count": 6,
      "average_score": 0.3873076186877487,
      "unique_finds": 0
    },
    "sparse": {
      "hit_count": 10,
      "average_score": 0.5229068768866743,
      "unique_finds": 1
    },
    "graph": {
      "hit_count": 7,
      "average_score": 0.7026349620616018,
      "unique_finds": 0
    }
  },
  "results_table": [
    {
      "cwe_id": "CWE-770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "mapping_usage": "Not specified",
      "combined_score": 0.7177,
      "retriever_count": 0,
      "dense_score": 0.3807,
      "sparse_score": 0.5067,
      "graph_score": 0.6639
    },
    {
      "cwe_id": "CWE-416",
      "name": "Use After Free",
      "abstraction": "Variant",
      "mapping_usage": "Not specified",
      "combined_score": 0.7111,
      "retriever_count": 0,
      "dense_score": 0.4258,
      "sparse_score": 0.4997,
      "graph_score": 0.7592
    },
    {
      "cwe_id": "CWE-126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "mapping_usage": "Not specified",
      "combined_score": 0.6429,
      "retriever_count": 0,
      "dense_score": 0.3686,
      "sparse_score": 0.5289,
      "graph_score": 0.5859
    },
    {
      "cwe_id": "CWE-476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "mapping_usage": "Not specified",
      "combined_score": 0.5937,
      "retriever_count": 0,
      "dense_score": "-",
      "sparse_score": 0.497,
      "graph_score": 0.8654
    },
    {
      "cwe_id": "CWE-1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "mapping_usage": "Not specified",
      "combined_score": 0.5369,
      "retriever_count": 0,
      "dense_score": "-",
      "sparse_score": 0.5264,
      "graph_score": 0.6597
    },
    {
      "cwe_id": "CWE-415",
      "name": "Double Free",
      "abstraction": "Variant",
      "mapping_usage": "Not specified",
      "combined_score": 0.5261,
      "retriever_count": 0,
      "dense_score": "-",
      "sparse_score": 0.5115,
      "graph_score": 0.7757
    },
    {
      "cwe_id": "CWE-401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "mapping_usage": "Not specified",
      "combined_score": 0.4577,
      "retriever_count": 0,
      "dense_score": 0.4166,
      "sparse_score": 0.5024,
      "graph_score": "-"
    },
    {
      "cwe_id": "CWE-754",
      "name": "Improper Check for Unusual or Exceptional Conditions",
      "abstraction": "Class",
      "mapping_usage": "Not specified",
      "combined_score": 0.4285,
      "retriever_count": 0,
      "dense_score": 0.3771,
      "sparse_score": 0.5648,
      "graph_score": 0.6086
    },
    {
      "cwe_id": "CWE-667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "mapping_usage": "Not specified",
      "combined_score": 0.2977,
      "retriever_count": 0,
      "dense_score": 0.355,
      "sparse_score": 0.5754,
      "graph_score": "-"
    },
    {
      "cwe_id": "CWE-190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "mapping_usage": "Not specified",
      "combined_score": 0.2953,
      "retriever_count": 0,
      "dense_score": "-",
      "sparse_score": 0.5162,
      "graph_score": "-"
    }
  ]
}