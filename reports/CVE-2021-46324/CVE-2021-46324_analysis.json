{
  "cve_id": "CVE-2021-46324",
  "description": "Espruino 2v11.251 was discovered to contain a stack buffer overflow via src/jsvar.c in jsvNewFromString.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "stack buffer overflow",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "Espruino 2",
    "version": "v11.251",
    "component": "jsvNewFromString in src/jsvar.c"
  },
  "reference_content": "The provided content is related to CVE-2021-46324.\n\n**Root cause of vulnerability:** A stack buffer overflow occurs when converting an array to a function parameter due to an unterminated string. Specifically, the `jsvNewFromString` function in `src/jsvar.c` at line 910 overflows the buffer on the stack.\n\n**Weaknesses/vulnerabilities present:** Stack buffer overflow in `jsvNewFromString` function. The `jsvAddNamedChild` function in `src/jsvar.c` at line 2581 calls `jsvNewFromString` and is part of the call stack that leads to the overflow.\n\n**Impact of exploitation:** The stack buffer overflow can lead to a crash, potentially enabling arbitrary code execution by corrupting the stack.\n\n**Attack vectors:** The vulnerability can be triggered by providing a specific JavaScript code structure that includes an array being concatenated and then used as part of a function parameter. The provided test case demonstrates this.\n\n**Required attacker capabilities/position:** An attacker would need to be able to provide arbitrary JavaScript code to the Espruino interpreter.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {
          "CWE-787": 1
        },
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {
          "CWE-787": 1
        },
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "85": {
        "cwe_counts": {
          "CWE-787": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      },
      "80": {
        "cwe_counts": {
          "CWE-787": 3
        },
        "total_samples": 3,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 3,
            "proportion": 1.0
          }
        ]
      },
      "75": {
        "cwe_counts": {
          "CWE-787": 3
        },
        "total_samples": 3,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 3,
            "proportion": 1.0
          }
        ]
      },
      "70": {
        "cwe_counts": {
          "CWE-787": 3
        },
        "total_samples": 3,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 3,
            "proportion": 1.0
          }
        ]
      }
    },
    "cwe_consensus": "CWE-787",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 1,
        "90": 1,
        "85": 2,
        "80": 3,
        "75": 3,
        "70": 3
      },
      "top_cwes_by_threshold": {
        "95": [
          [
            "CWE-787",
            1
          ]
        ],
        "90": [
          [
            "CWE-787",
            1
          ]
        ],
        "85": [
          [
            "CWE-787",
            2
          ]
        ],
        "80": [
          [
            "CWE-787",
            3
          ]
        ],
        "75": [
          [
            "CWE-787",
            3
          ]
        ],
        "70": [
          [
            "CWE-787",
            3
          ]
        ]
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [
          "787"
        ],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [
          "787"
        ],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 85,
        "cwes": [
          "787"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      },
      {
        "similarity": 80,
        "cwes": [
          "787"
        ],
        "total": 3,
        "frequency": 3,
        "proportion": 1.0
      },
      {
        "similarity": 75,
        "cwes": [
          "787"
        ],
        "total": 3,
        "frequency": 3,
        "proportion": 1.0
      },
      {
        "similarity": 70,
        "cwes": [
          "787"
        ],
        "total": 3,
        "frequency": 3,
        "proportion": 1.0
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-787",
    "top_cwes": [
      [
        "CWE-787",
        13
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 13
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Out-of-bounds Write | 1.0 | Base | Primary | Allowed |\n| CWE-121 | Stack-based Buffer Overflow | 0.75 | Variant | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states a \"**stack buffer overflow**\" in `jsvNewFromString`. The CVE reference content summary confirms this, stating \"A **stack buffer overflow** occurs when converting an array to a function parameter due to an unterminated string\" and that the `jsvNewFromString` function is where the overflow occurs. This directly maps to CWE-787 (Out-of-bounds Write) because a buffer on the stack is being written to beyond its intended boundaries. While CWE-121 (Stack-based Buffer Overflow) is a more specific variant, CWE-787 is still appropriate and commonly used for buffer overflows. The primary weakness is writing beyond the buffer.\n  \n  - *Relationship Analysis:* CWE-787 (Out-of-bounds Write) is a parent of CWE-121 (Stack-based Buffer Overflow). Given the high-level description, mapping directly to the parent CWE-787 is appropriate.\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 1.0 (High evidence from vulnerability description and CVE reference materials)\n\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Out-of-bounds Write | 1.0 | Base | Primary | Allowed |\n| CWE-121 | Stack-based Buffer Overflow | 0.75 | Variant | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states a \"**stack buffer overflow**\" in `jsvNewFromString`. The CVE reference content summary confirms this, stating \"A **stack buffer overflow** occurs when converting an array to a function parameter due to an unterminated string\" and that the `jsvNewFromString` function is where the overflow occurs. This directly maps to CWE-787 (Out-of-bounds Write) because a buffer on the stack is being written to beyond its intended boundaries. While CWE-121 (Stack-based Buffer Overflow) is a more specific variant, CWE-787 is still appropriate and commonly used for buffer overflows. The primary weakness is writing beyond the buffer.\n  \n  - *Relationship Analysis:* CWE-787 (Out-of-bounds Write) is a parent of CWE-121 (Stack-based Buffer Overflow). Given the high-level description, mapping directly to the parent CWE-787 is appropriate.\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 1.0 (High evidence from vulnerability description and CVE reference materials)\n\n---",
  "criticism": "Okay, here's a review of the provided analysis, taking into account the full CWE specifications you've included.\n\n**Overall Assessment:**\n\nThe analysis is generally good and arrives at the correct primary CWE. The reasoning is sound and well-supported by the vulnerability description and CVE reference summary. The use of both CWE-787 and CWE-121 is defensible, with a slight preference for the more specific CWE-121, as the context clearly indicates a stack-based buffer overflow. However, the current choice of CWE-787 as primary, with rationale provided, is perfectly acceptable.\n\n**Detailed Review by Section:**\n\n**1. Summary Table:**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Out-of-bounds Write | 1.0 | Base | Primary | Allowed |\n| CWE-121 | Stack-based Buffer Overflow | 0.75 | Variant | Secondary Candidate | Allowed |\n\n*   **CWE-787:**  Correct. Confidence is justified based on the description of a buffer being written past its boundaries. The abstraction level is appropriate.\n*   **CWE-121:** Correct as a secondary candidate. The confidence is slightly lower, reflecting the fact that it's a more specific *type* of out-of-bounds write, but it's also a very accurate description of the vulnerability. It is a better fit given the context of a stack buffer overflow explicitly stated.\n\n**2. Evidence and Confidence (CWE-787):**\n\n*   **Confidence Score:** 0.9 (should be adjusted to 1.0, as the evidence strength is VERY HIGH)\n*   **Evidence Strength:** HIGH (should be changed to VERY HIGH)\n\n*   **Analysis and Justification:**\n    *   The explanation is good and accurately reflects the core issue. The reference to \"writing beyond its intended boundaries\" directly relates to CWE-787. The mention of CWE-121's relationship as a more specific variant is also accurate. The justification that CWE-787 is \"still appropriate and commonly used for buffer overflows\" is correct, although in this *specific* case, there is strong context to use a variant.\n    *   The relationship analysis is accurate: CWE-787 is a parent of CWE-121.\n\n*   **Confidence Score:**\n    *   The example is good. The level of confidence could be raised to 1.0 given the strong evidence.\n\n**3. CWE Examples from Database:**\n\n*   Good inclusion. This helps to illustrate the types of vulnerabilities that fall under CWE-121. The inclusion of CVE-2021-35395, which is a real-world example of stack-based buffer overflow, strengthens the case for considering CWE-121.\n\n**4. Relevant CWE Specifications:**\n\n*   Excellent. Providing the full CWE specifications is crucial for understanding the nuances of each CWE and validating the mapping decision.\n\n**5. Critique Based on CWE Specifications:**\n\n*   **CWE-787:**\n    *   The analysis correctly identifies that this vulnerability involves writing data outside the intended buffer.\n    *   The mapping guidance for CWE-787 states it's an \"Allowed\" mapping at the Base level of abstraction, which is a preferred level.\n    *   Mitigations listed are all applicable at a high level, such as using memory-safe languages or employing compiler-based buffer overflow detection.\n*   **CWE-121:**\n    *   The analysis correctly identifies this vulnerability as happening on the stack.\n    *   The mapping guidance for CWE-121 states it's an \"Allowed\" mapping at the Variant level of abstraction, which is a preferred level.\n    *   Mitigations listed are specifically relevant to stack buffer overflows, such as compiler-based stack protection mechanisms (canaries).\n\n**Improvements and Recommendations:**\n\n1.  **Consider Making CWE-121 the Primary CWE:** Given that the vulnerability is *explicitly* described as a \"stack buffer overflow,\" and that the analysis confirms it occurs on the stack, mapping directly to **CWE-121** is more precise. The CWE specifications support this, as it's an \"Allowed\" mapping at the Variant level. The level of confidence on CWE-121 should be increased to 1.0 if it is made primary.\n2.  **Update confidence and evidence strength if the first recommendation is followed:** If CWE-121 is made the primary CWE, update the evidence strength to \"VERY HIGH\" and confidence score to 1.0.\n3.  **Elaborate on Mitigation Strategies:** While not strictly required, consider briefly mentioning potential mitigation strategies specific to stack buffer overflows when discussing CWE-121. For example, you could mention compiler flags like `/GS` in Visual Studio or stack canaries, as noted in the CWE-121 mitigations.\n4.  **Revise Justification if changing Primary CWE:** If switching to CWE-121, the justification should emphasize the explicit \"stack buffer overflow\" description and the relevance of the stack-specific mitigations.\n\n**Revised Summary Table (if Recommendation 1 is followed):**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 1.0 | Variant | Primary | Allowed |\n| CWE-787 | Out-of-bounds Write | 0.75 | Base | Secondary Candidate | Allowed |\n\n**Conclusion:**\n\nThe analysis is well-reasoned and accurate. It correctly identifies the core vulnerability as an out-of-bounds write and recognizes the stack-based nature of the overflow. Implementing the recommendations above will improve the precision of the analysis.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 1.0 | Variant | Primary | Allowed |\n| CWE-787 | Out-of-bounds Write | 0.75 | Base | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** VERY HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the decision is the ParentOf/ChildOf relationship between **CWE-787 (Out-of-bounds Write)** and **CWE-121 (Stack-based Buffer Overflow)**. **CWE-121** is a specific type of out-of-bounds write that occurs on the stack. Since the vulnerability description explicitly mentions a \"stack buffer overflow,\" **CWE-121** is the more specific and appropriate classification. No relevant chain or peer relationships were identified that would suggest alternative classifications. The abstraction level of **CWE-121** as a Variant is also acceptable, as it provides a more granular view of the vulnerability.\n\n```mermaid\ngraph TD\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    \n    cwe121 -->|CHILDOF| cwe787\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe121 primary\n    class cwe787 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a flaw in the `jsvNewFromString` function, leading to a **stack buffer overflow (CWE-121)**. The root cause involves the improper handling of string conversions when creating function parameters from arrays, specifically due to an unterminated string. This results in writing data beyond the allocated buffer on the stack, potentially overwriting adjacent data or control flow information. The consequence is arbitrary code execution or denial of service.\n\n## Summary of Analysis\nThe initial analysis correctly identified **CWE-787 (Out-of-bounds Write)** as a potential classification but was slightly less specific. The criticism highlighted the explicit \"stack buffer overflow\" description in the vulnerability and CVE reference, making **CWE-121 (Stack-based Buffer Overflow)** a more precise fit.\n\nThe decision to classify the vulnerability as **CWE-121 (Stack-based Buffer Overflow)** is based on the following evidence:\n\n*   The vulnerability description explicitly states a \"**stack buffer overflow**\" in `jsvNewFromString`.\n*   The CVE reference confirms this, stating \"A **stack buffer overflow** occurs when converting an array to a function parameter due to an unterminated string\".\n\nThe relationship analysis confirms that **CWE-121** is a child of **CWE-787**, indicating that it is a more specific type of out-of-bounds write. The mapping guidance for **CWE-121** allows it to be used and is at the Variant level of abstraction.\n\nThe selection of **CWE-121** reflects the optimal level of specificity because it directly aligns with the explicit description of the vulnerability as a \"stack buffer overflow,\" whereas **CWE-787** is a more general description of an out-of-bounds write.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 113.70571399845836,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.533623192946673,
            "sparse": 113.70571399845836,
            "graph": 1.933463510778723
          },
          "normalized_scores": {
            "dense": 0.533623192946673,
            "sparse": 0.09096457119876669,
            "graph": 0.6905226824209726
          },
          "weighted_scores": {
            "dense": 0.18676811753133554,
            "sparse": 0.03638582847950668,
            "graph": 0.17263067060524315
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.533623192946673,
              "query_max": 0.566230593942717,
              "query_min": 0.4915430350269039,
              "normalized_score": 0.533623192946673,
              "weight": 0.35,
              "weighted_score": 0.18676811753133554
            },
            "sparse": {
              "raw_score": 113.70571399845836,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.09096457119876669,
              "weight": 0.4,
              "weighted_score": 0.03638582847950668
            },
            "graph": {
              "raw_score": 1.933463510778723,
              "query_max": 3.2318000000000002,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.6905226824209726,
              "weight": 0.25,
              "weighted_score": 0.17263067060524315
            }
          },
          "contribution_percentages": {
            "dense": 47.18933219996833,
            "sparse": 9.193340759578147,
            "graph": 43.61732704045353
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3957846166160853,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5145200016009109
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5145200016009109
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.565972001761002
            }
          },
          "combined_score": 0.565972001761002
        }
      },
      "similarity": 0.565972001761002
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 111.48605167881306,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5331000787705461,
            "sparse": 111.48605167881306,
            "graph": 1.9386872773878405
          },
          "normalized_scores": {
            "dense": 0.5331000787705461,
            "sparse": 0.08918884134305044,
            "graph": 0.6923883133528003
          },
          "weighted_scores": {
            "dense": 0.18658502756969111,
            "sparse": 0.03567553653722018,
            "graph": 0.17309707833820007
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5331000787705461,
              "query_max": 0.566230593942717,
              "query_min": 0.4915430350269039,
              "normalized_score": 0.5331000787705461,
              "weight": 0.35,
              "weighted_score": 0.18658502756969111
            },
            "sparse": {
              "raw_score": 111.48605167881306,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.08918884134305044,
              "weight": 0.4,
              "weighted_score": 0.03567553653722018
            },
            "graph": {
              "raw_score": 1.9386872773878405,
              "query_max": 3.2318000000000002,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.6923883133528003,
              "weight": 0.25,
              "weighted_score": 0.17309707833820007
            }
          },
          "contribution_percentages": {
            "dense": 47.193985277670514,
            "sparse": 9.02361120847009,
            "graph": 43.78240351385938
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3953576424451114,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.47442917093413367
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.47442917093413367
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.521872088027547
            }
          },
          "combined_score": 0.521872088027547
        }
      },
      "similarity": 0.521872088027547
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 129.258132304811,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5045209714201628,
            "sparse": 129.258132304811,
            "graph": 1.634252333896108
          },
          "normalized_scores": {
            "dense": 0.5045209714201628,
            "sparse": 0.1034065058438488,
            "graph": 0.5836615478200385
          },
          "weighted_scores": {
            "dense": 0.17658233999705697,
            "sparse": 0.04136260233753952,
            "graph": 0.14591538695500963
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5045209714201628,
              "query_max": 0.566230593942717,
              "query_min": 0.4915430350269039,
              "normalized_score": 0.5045209714201628,
              "weight": 0.35,
              "weighted_score": 0.17658233999705697
            },
            "sparse": {
              "raw_score": 129.258132304811,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.1034065058438488,
              "weight": 0.4,
              "weighted_score": 0.04136260233753952
            },
            "graph": {
              "raw_score": 1.634252333896108,
              "query_max": 3.2318000000000002,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.5836615478200385,
              "weight": 0.25,
              "weighted_score": 0.14591538695500963
            }
          },
          "contribution_percentages": {
            "dense": 48.530253446923695,
            "sparse": 11.367714204594678,
            "graph": 40.102032348481636
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3638603292896061,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4730184280764879
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4730184280764879
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5203202708841368
            }
          },
          "combined_score": 0.5203202708841368
        }
      },
      "similarity": 0.5203202708841368
    },
    {
      "metadata": {
        "doc_id": "CWE-120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "type": "Base",
        "original_content": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 129.74773837136019,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
          "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 129.74773837136019,
            "graph": 3.2318000000000002
          },
          "normalized_scores": {
            "sparse": 0.10379819069708815,
            "graph": 1.0
          },
          "weighted_scores": {
            "sparse": 0.04151927627883526,
            "graph": 0.25
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 129.74773837136019,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.10379819069708815,
              "weight": 0.4,
              "weighted_score": 0.04151927627883526
            },
            "graph": {
              "raw_score": 3.2318000000000002,
              "query_max": 3.2318000000000002,
              "query_min": 1.6016000000000004,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "sparse": 14.242377659830114,
            "graph": 85.75762234016989
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.2915192762788353,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.37897505916248586
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.37897505916248586
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
                "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.3979238121206102
            }
          },
          "combined_score": 0.3979238121206102
        }
      },
      "similarity": 0.3979238121206102
    },
    {
      "metadata": {
        "doc_id": "CWE-170",
        "name": "Improper Null Termination",
        "type": "Base",
        "original_content": "The product does not terminate or incorrectly terminates a string or array with a null character or equivalent terminator.",
        "relationships": [],
        "original_sparse_score": 105.19567679705376,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 105.19567679705376,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.084156541437643,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.0336626165750572,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 105.19567679705376,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.084156541437643,
              "weight": 0.4,
              "weighted_score": 0.0336626165750572
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 3.2318000000000002,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 14.57356786426915,
            "graph": 85.42643213573085
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.23098404514648582,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3002792586904316
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3002792586904316
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3303071845594748
            }
          },
          "combined_score": 0.3303071845594748
        }
      },
      "similarity": 0.3303071845594748
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 166.80625213359482,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5565692845756163,
            "sparse": 166.80625213359482
          },
          "normalized_scores": {
            "dense": 0.5565692845756163,
            "sparse": 0.13344500170687587
          },
          "weighted_scores": {
            "dense": 0.1947992496014657,
            "sparse": 0.05337800068275035
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5565692845756163,
              "query_max": 0.566230593942717,
              "query_min": 0.4915430350269039,
              "normalized_score": 0.5565692845756163,
              "weight": 0.35,
              "weighted_score": 0.1947992496014657
            },
            "sparse": {
              "raw_score": 166.80625213359482,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.13344500170687587,
              "weight": 0.4,
              "weighted_score": 0.05337800068275035
            }
          },
          "contribution_percentages": {
            "dense": 78.49198481262036,
            "sparse": 21.50801518737963
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.24817725028421606,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.2978127003410593
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2978127003410593
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.32759397037516524
            }
          },
          "combined_score": 0.32759397037516524
        }
      },
      "similarity": 0.32759397037516524
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 123.52964770642302,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5175404218507662,
            "sparse": 123.52964770642302
          },
          "normalized_scores": {
            "dense": 0.5175404218507662,
            "sparse": 0.09882371816513842
          },
          "weighted_scores": {
            "dense": 0.18113914764776817,
            "sparse": 0.039529487266055374
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5175404218507662,
              "query_max": 0.566230593942717,
              "query_min": 0.4915430350269039,
              "normalized_score": 0.5175404218507662,
              "weight": 0.35,
              "weighted_score": 0.18113914764776817
            },
            "sparse": {
              "raw_score": 123.52964770642302,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.09882371816513842,
              "weight": 0.4,
              "weighted_score": 0.039529487266055374
            }
          },
          "contribution_percentages": {
            "dense": 82.0864948561935,
            "sparse": 17.913505143806503
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.22066863491382355,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2868692253879706
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2868692253879706
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.31555614792676767
            }
          },
          "combined_score": 0.31555614792676767
        }
      },
      "similarity": 0.31555614792676767
    },
    {
      "metadata": {
        "doc_id": "CWE-124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "type": "Base",
        "original_content": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "relationships": [],
        "original_sparse_score": 116.25221890556135,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5180052179786887,
            "sparse": 116.25221890556135
          },
          "normalized_scores": {
            "dense": 0.5180052179786887,
            "sparse": 0.09300177512444908
          },
          "weighted_scores": {
            "dense": 0.18130182629254105,
            "sparse": 0.03720071004977964
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5180052179786887,
              "query_max": 0.566230593942717,
              "query_min": 0.4915430350269039,
              "normalized_score": 0.5180052179786887,
              "weight": 0.35,
              "weighted_score": 0.18130182629254105
            },
            "sparse": {
              "raw_score": 116.25221890556135,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.09300177512444908,
              "weight": 0.4,
              "weighted_score": 0.03720071004977964
            }
          },
          "contribution_percentages": {
            "dense": 82.97470103893964,
            "sparse": 17.025298961060347
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2185025363423207,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.28405329724501693
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.28405329724501693
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.31245862696951865
            }
          },
          "combined_score": 0.31245862696951865
        }
      },
      "similarity": 0.31245862696951865
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 134.5972796778813,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.541952063490905,
            "sparse": 134.5972796778813
          },
          "normalized_scores": {
            "dense": 0.541952063490905,
            "sparse": 0.10767782374230503
          },
          "weighted_scores": {
            "dense": 0.18968322222181672,
            "sparse": 0.04307112949692202
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.541952063490905,
              "query_max": 0.566230593942717,
              "query_min": 0.4915430350269039,
              "normalized_score": 0.541952063490905,
              "weight": 0.35,
              "weighted_score": 0.18968322222181672
            },
            "sparse": {
              "raw_score": 134.5972796778813,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.10767782374230503,
              "weight": 0.4,
              "weighted_score": 0.04307112949692202
            }
          },
          "contribution_percentages": {
            "dense": 81.49502719116963,
            "sparse": 18.504972808830374
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.23275435171873873,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.2793052220624865
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2793052220624865
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3072357442687352
            }
          },
          "combined_score": 0.3072357442687352
        }
      },
      "similarity": 0.3072357442687352
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 128.48082453086184,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4915430350269039,
            "sparse": 128.48082453086184
          },
          "normalized_scores": {
            "dense": 0.4915430350269039,
            "sparse": 0.10278465962468947
          },
          "weighted_scores": {
            "dense": 0.17204006225941634,
            "sparse": 0.04111386384987579
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4915430350269039,
              "query_max": 0.566230593942717,
              "query_min": 0.4915430350269039,
              "normalized_score": 0.4915430350269039,
              "weight": 0.35,
              "weighted_score": 0.17204006225941634
            },
            "sparse": {
              "raw_score": 128.48082453086184,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.10278465962468947,
              "weight": 0.4,
              "weighted_score": 0.04111386384987579
            }
          },
          "contribution_percentages": {
            "dense": 80.71165537490727,
            "sparse": 19.288344625092734
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.21315392610929212,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2771001039420798
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2771001039420798
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3048101143362878
            }
          },
          "combined_score": 0.3048101143362878
        }
      },
      "similarity": 0.3048101143362878
    },
    {
      "metadata": {
        "doc_id": "CWE-676",
        "name": "Use of Potentially Dangerous Function",
        "type": "Base",
        "original_content": "The product invokes a potentially dangerous function that could introduce a vulnerability if it is used incorrectly, but the function can also be used safely.",
        "relationships": [],
        "original_sparse_score": 102.84610126574056,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.49947330911586624,
            "sparse": 102.84610126574056
          },
          "normalized_scores": {
            "dense": 0.49947330911586624,
            "sparse": 0.08227688101259245
          },
          "weighted_scores": {
            "dense": 0.17481565819055317,
            "sparse": 0.032910752405036985
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.49947330911586624,
              "query_max": 0.566230593942717,
              "query_min": 0.4915430350269039,
              "normalized_score": 0.49947330911586624,
              "weight": 0.35,
              "weighted_score": 0.17481565819055317
            },
            "sparse": {
              "raw_score": 102.84610126574056,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.08227688101259245,
              "weight": 0.4,
              "weighted_score": 0.032910752405036985
            }
          },
          "contribution_percentages": {
            "dense": 84.15668363465399,
            "sparse": 15.843316365346011
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.20772641059559016,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.27004433377426723
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.27004433377426723
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.297048767151694
            }
          },
          "combined_score": 0.297048767151694
        }
      },
      "similarity": 0.297048767151694
    },
    {
      "metadata": {
        "doc_id": "CWE-770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [],
        "original_sparse_score": 103.00256488674933,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 103.00256488674933,
            "graph": 1.6016000000000004
          },
          "normalized_scores": {
            "sparse": 0.08240205190939946,
            "graph": 0.5720000000000002
          },
          "weighted_scores": {
            "sparse": 0.032960820763759786,
            "graph": 0.14300000000000004
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 103.00256488674933,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.08240205190939946,
              "weight": 0.4,
              "weighted_score": 0.032960820763759786
            },
            "graph": {
              "raw_score": 1.6016000000000004,
              "query_max": 3.2318000000000002,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.5720000000000002,
              "weight": 0.25,
              "weighted_score": 0.14300000000000004
            }
          },
          "contribution_percentages": {
            "sparse": 18.731908967401374,
            "graph": 81.26809103259863
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.17596082076375982,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.22874906699288777
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.22874906699288777
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2516239736921766
            }
          },
          "combined_score": 0.2516239736921766
        }
      },
      "similarity": 0.2516239736921766
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 137.6783450235458,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.566230593942717,
            "sparse": 137.6783450235458
          },
          "normalized_scores": {
            "dense": 0.566230593942717,
            "sparse": 0.11014267601883664
          },
          "weighted_scores": {
            "dense": 0.19818070787995096,
            "sparse": 0.044057070407534656
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.566230593942717,
              "query_max": 0.566230593942717,
              "query_min": 0.4915430350269039,
              "normalized_score": 0.566230593942717,
              "weight": 0.35,
              "weighted_score": 0.19818070787995096
            },
            "sparse": {
              "raw_score": 137.6783450235458,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.11014267601883664,
              "weight": 0.4,
              "weighted_score": 0.044057070407534656
            }
          },
          "contribution_percentages": {
            "dense": 81.81246925273228,
            "sparse": 18.187530747267722
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.2422377782874856,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.1937902226299885
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1937902226299885
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.20347973376148792
            }
          },
          "combined_score": 0.20347973376148792
        }
      },
      "similarity": 0.20347973376148792
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 114.48912936330305,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 114.48912936330305
          },
          "normalized_scores": {
            "sparse": 0.09159130349064244
          },
          "weighted_scores": {
            "sparse": 0.03663652139625698
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 114.48912936330305,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.09159130349064244,
              "weight": 0.4,
              "weighted_score": 0.03663652139625698
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.03663652139625698,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.04762747781513407
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04762747781513407
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.05239022559664749
            }
          },
          "combined_score": 0.05239022559664749
        }
      },
      "similarity": 0.05239022559664749
    },
    {
      "metadata": {
        "doc_id": "CWE-1325",
        "name": "Improperly Controlled Sequential Memory Allocation",
        "type": "Base",
        "original_content": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.",
        "relationships": [],
        "original_sparse_score": 105.67541186227005,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 105.67541186227005
          },
          "normalized_scores": {
            "sparse": 0.08454032948981605
          },
          "weighted_scores": {
            "sparse": 0.03381613179592642
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 105.67541186227005,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.08454032948981605,
              "weight": 0.4,
              "weighted_score": 0.03381613179592642
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.03381613179592642,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.04396097133470435
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04396097133470435
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.04835706846817479
            }
          },
          "combined_score": 0.04835706846817479
        }
      },
      "similarity": 0.04835706846817479
    },
    {
      "metadata": {
        "doc_id": "CWE-197",
        "name": "Numeric Truncation Error",
        "type": "Base",
        "original_content": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
        "relationships": [],
        "original_sparse_score": 104.22683058827946,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 104.22683058827946
          },
          "normalized_scores": {
            "sparse": 0.08338146447062357
          },
          "weighted_scores": {
            "sparse": 0.03335258578824943
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 104.22683058827946,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.08338146447062357,
              "weight": 0.4,
              "weighted_score": 0.03335258578824943
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.03335258578824943,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.043358361524724255
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.043358361524724255
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.04769419767719668
            }
          },
          "combined_score": 0.04769419767719668
        }
      },
      "similarity": 0.04769419767719668
    },
    {
      "metadata": {
        "doc_id": "CWE-681",
        "name": "Incorrect Conversion between Numeric Types",
        "type": "Base",
        "original_content": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
        "relationships": [],
        "original_sparse_score": 104.01996135315545,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 104.01996135315545
          },
          "normalized_scores": {
            "sparse": 0.08321596908252436
          },
          "weighted_scores": {
            "sparse": 0.03328638763300975
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 104.01996135315545,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.08321596908252436,
              "weight": 0.4,
              "weighted_score": 0.03328638763300975
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.03328638763300975,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.043272303922912675
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.043272303922912675
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.047599534315203945
            }
          },
          "combined_score": 0.047599534315203945
        }
      },
      "similarity": 0.047599534315203945
    },
    {
      "metadata": {
        "doc_id": "CWE-835",
        "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "type": "Base",
        "original_content": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
        "relationships": [],
        "original_sparse_score": 101.1348381591953,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 101.1348381591953
          },
          "normalized_scores": {
            "sparse": 0.08090787052735623
          },
          "weighted_scores": {
            "sparse": 0.032363148210942494
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 101.1348381591953,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.08090787052735623,
              "weight": 0.4,
              "weighted_score": 0.032363148210942494
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.032363148210942494,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.042072092674225244
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.042072092674225244
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.04627930194164777
            }
          },
          "combined_score": 0.04627930194164777
        }
      },
      "similarity": 0.04627930194164777
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 106.15796866638293,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 106.15796866638293
          },
          "normalized_scores": {
            "sparse": 0.08492637493310634
          },
          "weighted_scores": {
            "sparse": 0.03397054997324254
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 106.15796866638293,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.08492637493310634,
              "weight": 0.4,
              "weighted_score": 0.03397054997324254
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.03397054997324254,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.027176439978594032
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.027176439978594032
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.021741151982875226
            }
          },
          "combined_score": 0.021741151982875226
        }
      },
      "similarity": 0.021741151982875226
    },
    {
      "metadata": {
        "doc_id": "CWE-682",
        "name": "Incorrect Calculation",
        "type": "Pillar",
        "original_content": "The product performs a calculation that generates incorrect or unintended results that are later used in security-critical decisions or resource management.",
        "relationships": [],
        "original_sparse_score": 102.4948492001496,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is extremely high-level, a Pillar. In many cases, lower-level children or descendants are more appropriate. However, sometimes this weakness is forced to be used due to the lack of in-depth weakness research. See Research Gaps.",
          "comments": "Where feasible, consider children or descendants of this entry instead.",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 102.4948492001496
          },
          "normalized_scores": {
            "sparse": 0.08199587936011968
          },
          "weighted_scores": {
            "sparse": 0.032798351744047875
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 102.4948492001496,
              "query_max": 166.80625213359482,
              "query_min": 101.1348381591953,
              "normalized_score": 0.08199587936011968,
              "weight": 0.4,
              "weighted_score": 0.032798351744047875
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.6,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.032798351744047875,
            "abstraction": {
              "type": "pillar",
              "factor": 0.6,
              "score_after": 0.019679011046428725
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.019679011046428725
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is extremely high-level, a Pillar. In many cases, lower-level children or descendants are more appropriate. However, sometimes this weakness is forced to be used due to the lack of in-depth weakness research. See Research Gaps.",
                "comments": "Where feasible, consider children or descendants of this entry instead.",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.01574320883714298
            }
          },
          "combined_score": 0.01574320883714298
        }
      },
      "similarity": 0.01574320883714298
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-121",
      "CWE-787"
    ],
    "critic_additional": []
  }
}