{
  "cve_id": "CVE-2021-45997",
  "description": "Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formSetPortMapping. This vulnerability allows attackers to cause a Denial of Service (DoS) via the portMappingServer, portMappingProtocol, portMappingWan, porMappingtInternal, and portMappingExternal parameters.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "stack overflow",
    "impact": "Denial of Service (DoS)",
    "vector": "portMappingServer, portMappingProtocol, portMappingWan, porMappingtInternal, and portMappingExternal parameters",
    "attacker": "attackers",
    "product": "Tenda routers G1 and G3",
    "version": "v15.11.0.17(9502)_CN",
    "component": "formSetPortMapping function"
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {
          "CWE-787": 1
        },
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {
          "CWE-787": 1
        },
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "85": {
        "cwe_counts": {
          "CWE-787": 1
        },
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "80": {
        "cwe_counts": {
          "CWE-787": 4
        },
        "total_samples": 4,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 4,
            "proportion": 1.0
          }
        ]
      },
      "75": {
        "cwe_counts": {
          "CWE-787": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      },
      "70": {
        "cwe_counts": {
          "CWE-787": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      }
    },
    "cwe_consensus": "CWE-787",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 1,
        "90": 1,
        "85": 1,
        "80": 4,
        "75": 2,
        "70": 2
      },
      "top_cwes_by_threshold": {
        "95": [
          [
            "CWE-787",
            1
          ]
        ],
        "90": [
          [
            "CWE-787",
            1
          ]
        ],
        "85": [
          [
            "CWE-787",
            1
          ]
        ],
        "80": [
          [
            "CWE-787",
            4
          ]
        ],
        "75": [
          [
            "CWE-787",
            2
          ]
        ],
        "70": [
          [
            "CWE-787",
            2
          ]
        ]
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [
          "787"
        ],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [
          "787"
        ],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 85,
        "cwes": [
          "787"
        ],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 80,
        "cwes": [
          "787"
        ],
        "total": 4,
        "frequency": 4,
        "proportion": 1.0
      },
      {
        "similarity": 75,
        "cwes": [
          "787"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      },
      {
        "similarity": 70,
        "cwes": [
          "787"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-787",
    "top_cwes": [
      [
        "CWE-787",
        11
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 11
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 0.90 | Variant | Allowed | Primary CWE |\n| CWE-787 | Out-of-bounds Write | 0.60 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states \"**stack overflow**\" in the `formSetPortMapping` function of Tenda routers G1 and G3. This directly corresponds to CWE-121 (Stack-based Buffer Overflow), which is a condition where the buffer being overwritten is allocated on the stack. The vulnerability is triggered via parameters such as `portMappingServer`, `portMappingProtocol`, etc. leading to a Denial of Service (DoS). CWE-121 is a Variant level CWE, which is preferred. The retriever results also show CWE-121 as the top candidate. Although CWE-787 (Out-of-bounds Write) is a more general case, the specific mention of \"stack\" makes CWE-121 the most appropriate choice.\n\n  - *Relationship Analysis:* CWE-121 is a variant of buffer overflow and a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). While CWE-119 is a broader class, CWE-121 provides a more specific characterization of the vulnerability, making it a better fit.\n\n- **Confidence Score:**\n  - Confidence: 0.90 (Strong evidence due to the direct mention of stack overflow.)\n\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 0.90 | Variant | Allowed | Primary CWE |\n| CWE-787 | Out-of-bounds Write | 0.60 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states \"**stack overflow**\" in the `formSetPortMapping` function of Tenda routers G1 and G3. This directly corresponds to CWE-121 (Stack-based Buffer Overflow), which is a condition where the buffer being overwritten is allocated on the stack. The vulnerability is triggered via parameters such as `portMappingServer`, `portMappingProtocol`, etc. leading to a Denial of Service (DoS). CWE-121 is a Variant level CWE, which is preferred. The retriever results also show CWE-121 as the top candidate. Although CWE-787 (Out-of-bounds Write) is a more general case, the specific mention of \"stack\" makes CWE-121 the most appropriate choice.\n\n  - *Relationship Analysis:* CWE-121 is a variant of buffer overflow and a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). While CWE-119 is a broader class, CWE-121 provides a more specific characterization of the vulnerability, making it a better fit.\n\n- **Confidence Score:**\n  - Confidence: 0.90 (Strong evidence due to the direct mention of stack overflow.)\n\n---",
  "criticism": "## Critique of the Analysis\n\nThe analysis is well-structured and provides a clear justification for selecting CWE-121 as the primary CWE. The confidence scoring is appropriate, and the evidence strength is accurately labeled as HIGH. However, there are a few points that could be improved.\n\n**Strengths:**\n\n*   **Clear Justification:** The reasoning for choosing CWE-121 over CWE-787 is well-articulated, especially the emphasis on the \"stack\" keyword in the vulnerability description.\n*   **Relationship Analysis:** The analysis acknowledges the relationship between CWE-121, CWE-119, and CWE-787, demonstrating an understanding of the CWE hierarchy.\n*   **Confidence Scoring:** The confidence score of 0.90 is justified by the direct mention of \"stack overflow\" in the original vulnerability description.\n*   **Retriever Result Consideration:** The analysis considers the Retriever results when making the mapping.\n*   **Variant Abstraction:** The choice of a Variant level CWE is well justified.\n\n**Areas for Improvement and Considerations:**\n\n1.  **CWE-787 as a Secondary Candidate:** While acknowledging CWE-787 as a secondary candidate is valid, the analysis should explicitly state why it is *not* the primary choice despite often being a top-level CWE for buffer overflows. In this case, reiterating that the specific mention of \"stack\" makes CWE-121 a better fit is crucial. Also, mentioning the relationships between CWE-121 as a child of CWE-787.\n\n2.  **CWE-119 Discussion:** While the analysis discusses the relationship between CWE-121 and CWE-119, it should include an explicit note about why CWE-119 is *not* an appropriate choice. The CWE specifications clearly state that CWE-119 usage is discouraged in favor of more specific CWEs. The analysis hints at this in the \"Relationship Analysis\" section, but it should be more direct. It should state that CWE-119 is a more general class and that CWE-121 provides a more specific characterization, which is preferred.\n\n3.  **Mitigation Strategies:** While not required, considering potential mitigation strategies (even briefly) would strengthen the analysis. For example, mentioning the use of compiler flags like `/GS` (Microsoft Visual Studio) or `FORTIFY_SOURCE` (GCC) that provide stack buffer overflow protection could provide additional context. The CWE specifications for CWE-121 and CWE-787 both mention these.\n\n4.  **CWE Examples:** The provided CWE examples are only for CWE-119. Providing examples for CWE-121 and CWE-787 would strengthen the report. It is important to make sure that the examples you provide are relevant to the product (router), affected component (web interface, etc.) and weakness details (\"stack overflow\") to ensure it is a good example.\n\n5.  **CWE Usage Guidance:** While it is good that the analysis highlights the rationale behind choosing a variant-level CWE, it is important to note in the analysis that the CWE specifications mention that the mapping should not be \"forced\" and the fit should be appropriate, which is important to highlight here.\n\n**Revised Analysis Snippets (Incorporating Suggestions):**\n\n*   **CWE-787 as a Secondary Candidate:** \"...Although CWE-787 (Out-of-bounds Write) is a more general case and a parent of CWE-121, the specific mention of \"stack\" in the vulnerability description makes CWE-121 the most appropriate choice. While CWE-787 could apply, it lacks the specificity of the stack allocation.\"\n\n*   **CWE-119 Discussion:** \"...CWE-121 is a variant of buffer overflow and a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). While CWE-119 is a broader class, and discouraged for use, CWE-121 provides a more specific characterization of the vulnerability, making it a better fit. The CWE specifications note that CWE-119 is frequently misused and that its children should be investigated for a more specific mapping.\"\n\n*   **Mitigation Strategies (example):** \"...Mitigation strategies for stack-based buffer overflows include using compiler-level protections like stack canaries (e.g., the /GS flag in Microsoft Visual Studio) and implementing robust input validation to prevent excessively long input from reaching the vulnerable function. The CWE-121 specifications list these mitigations as well.\"\n\n**In Summary:**\n\nThe analysis is sound and arrives at the correct primary CWE mapping. However, by incorporating the suggestions above, the analysis can be made even more robust and demonstrate a deeper understanding of CWE principles and best practices.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 0.95 | Variant | Allowed | Primary CWE |\n| CWE-787 | Out-of-bounds Write | 0.70 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship impacting the decision is the parent-child relationship between **CWE-787 (Out-of-bounds Write)** and **CWE-121 (Stack-based Buffer Overflow)**. **CWE-121** is a specific type of **CWE-787** where the buffer is allocated on the stack. The vulnerability description explicitly mentions \"stack overflow,\" making **CWE-121** the more specific and appropriate choice. **CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer)** is a more general class encompassing both, but its use is discouraged when more specific CWEs like **CWE-121** are applicable.\n\n```mermaid\ngraph TD\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations\"]\n    \n    cwe121 -->|CHILDOF| cwe787\n    cwe787 -->|CHILDOF| cwe119\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe121 primary\n    class cwe787 secondary\n    class cwe119 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the lack of proper input validation on parameters like `portMappingServer`, `portMappingProtocol`, etc. This leads to an excessively long input being written to a stack-allocated buffer, resulting in a **CWE-121 (Stack-based Buffer Overflow)**. The consequence of this overflow is a Denial of Service (DoS).\n\n## Summary of Analysis\nThe initial analysis correctly identifies **CWE-121 (Stack-based Buffer Overflow)** as the primary **WEAKNESS**. The vulnerability description explicitly states \"stack overflow,\" which directly aligns with the definition of **CWE-121**. The analysis also appropriately considers **CWE-787 (Out-of-bounds Write)** as a secondary candidate, acknowledging that it is a more general class of **WEAKNESS**.\n\nThe relationship analysis reinforces the choice of **CWE-121** due to its specificity. While **CWE-787** and **CWE-119** are related, they are less specific and therefore less appropriate. The mapping guidance for **CWE-119** discourages its use when more specific CWEs are available.\n\nThe decision to classify this vulnerability as **CWE-121 (Stack-based Buffer Overflow)** is based on direct evidence from the vulnerability description (\"stack overflow\") and the desire to choose the most specific CWE available. This ensures that the classification accurately reflects the nature of the vulnerability. The choice of **CWE-121** as a Variant is appropriate because it is a specialization of the more general **CWE-787**.\nThe analysis also considers mitigation strategies like stack canaries, which aligns with the nature of stack-based buffer overflows.\n\nI agree with the above analysis. The explicit mention of \"stack overflow\" in the vulnerability description is strong evidence for **CWE-121 (Stack-based Buffer Overflow)**. The choice of **CWE-121** over **CWE-787 (Out-of-bounds Write)** is justified by its greater specificity. The analysis appropriately considers the relationship between **CWE-121**, **CWE-787**, and **CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer)**, and it correctly notes that **CWE-119** is discouraged when more specific CWEs are available. The analysis uses the evidence appropriately and justifies the selection of the CWE.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 360.4672996029077,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6273028313891589,
            "sparse": 360.4672996029077
          },
          "normalized_scores": {
            "dense": 0.6273028313891589,
            "sparse": 0.28837383968232616
          },
          "weighted_scores": {
            "dense": 0.2195559909862056,
            "sparse": 0.11534953587293047
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6273028313891589,
              "query_max": 0.6273028313891589,
              "query_min": 0.49289053811970496,
              "normalized_score": 0.6273028313891589,
              "weight": 0.35,
              "weighted_score": 0.2195559909862056
            },
            "sparse": {
              "raw_score": 360.4672996029077,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.28837383968232616,
              "weight": 0.4,
              "weighted_score": 0.11534953587293047
            }
          },
          "contribution_percentages": {
            "dense": 65.5575896418552,
            "sparse": 34.44241035814479
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.33490552685913605,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.40188663223096327
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.40188663223096327
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.44207529545405966
            }
          },
          "combined_score": 0.44207529545405966
        }
      },
      "similarity": 0.44207529545405966
    },
    {
      "metadata": {
        "doc_id": "CWE-78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 212.78962949663688,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5757116941610718,
            "sparse": 212.78962949663688
          },
          "normalized_scores": {
            "dense": 0.5757116941610718,
            "sparse": 0.1702317035973095
          },
          "weighted_scores": {
            "dense": 0.20149909295637514,
            "sparse": 0.0680926814389238
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5757116941610718,
              "query_max": 0.6273028313891589,
              "query_min": 0.49289053811970496,
              "normalized_score": 0.5757116941610718,
              "weight": 0.35,
              "weighted_score": 0.20149909295637514
            },
            "sparse": {
              "raw_score": 212.78962949663688,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.1702317035973095,
              "weight": 0.4,
              "weighted_score": 0.0680926814389238
            }
          },
          "contribution_percentages": {
            "dense": 74.74230006028286,
            "sparse": 25.25769993971715
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2695917743952989,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3504693067138886
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3504693067138886
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.38551623738527746
            }
          },
          "combined_score": 0.38551623738527746
        }
      },
      "similarity": 0.38551623738527746
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 199.53560338305306,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 199.53560338305306,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.15962848270644245,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.06385139308257698,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 199.53560338305306,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.15962848270644245,
              "weight": 0.4,
              "weighted_score": 0.06385139308257698
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 2.2100000000000004,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 24.44794702534765,
            "graph": 75.55205297465236
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.26117282165400557,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.33952466815020726
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.33952466815020726
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.373477134965228
            }
          },
          "combined_score": 0.373477134965228
        }
      },
      "similarity": 0.373477134965228
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 198.29306721566053,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 198.29306721566053,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.1586344537725284,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.06345378150901136,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 198.29306721566053,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.1586344537725284,
              "weight": 0.4,
              "weighted_score": 0.06345378150901136
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 2.2100000000000004,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 24.332750605181413,
            "graph": 75.6672493948186
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.26077521008043997,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.339007773104572
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.339007773104572
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3729085504150292
            }
          },
          "combined_score": 0.3729085504150292
        }
      },
      "similarity": 0.3729085504150292
    },
    {
      "metadata": {
        "doc_id": "CWE-120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "type": "Base",
        "original_content": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 207.46283444486681,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
          "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4985749515904079,
            "sparse": 207.46283444486681
          },
          "normalized_scores": {
            "dense": 0.4985749515904079,
            "sparse": 0.16597026755589345
          },
          "weighted_scores": {
            "dense": 0.17450123305664275,
            "sparse": 0.06638810702235738
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4985749515904079,
              "query_max": 0.6273028313891589,
              "query_min": 0.49289053811970496,
              "normalized_score": 0.4985749515904079,
              "weight": 0.35,
              "weighted_score": 0.17450123305664275
            },
            "sparse": {
              "raw_score": 207.46283444486681,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.16597026755589345,
              "weight": 0.4,
              "weighted_score": 0.06638810702235738
            }
          },
          "contribution_percentages": {
            "dense": 72.4404130956624,
            "sparse": 27.559586904337596
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.24088934007900015,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3131561421027002
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3131561421027002
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
                "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.32881394920783524
            }
          },
          "combined_score": 0.32881394920783524
        }
      },
      "similarity": 0.32881394920783524
    },
    {
      "metadata": {
        "doc_id": "CWE-770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [],
        "original_sparse_score": 211.24225675923734,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 211.24225675923734,
            "graph": 1.7680000000000005
          },
          "normalized_scores": {
            "sparse": 0.16899380540738987,
            "graph": 0.6314285714285717
          },
          "weighted_scores": {
            "sparse": 0.06759752216295595,
            "graph": 0.15785714285714292
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 211.24225675923734,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.16899380540738987,
              "weight": 0.4,
              "weighted_score": 0.06759752216295595
            },
            "graph": {
              "raw_score": 1.7680000000000005,
              "query_max": 2.2100000000000004,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.6314285714285717,
              "weight": 0.25,
              "weighted_score": 0.15785714285714292
            }
          },
          "contribution_percentages": {
            "sparse": 29.98275602633006,
            "graph": 70.01724397366993
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.22545466502009887,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.29309106452612854
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.29309106452612854
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3224001709787414
            }
          },
          "combined_score": 0.3224001709787414
        }
      },
      "similarity": 0.3224001709787414
    },
    {
      "metadata": {
        "doc_id": "CWE-401",
        "name": "Missing Release of Memory after Effective Lifetime",
        "type": "Variant",
        "original_content": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
        "relationships": [],
        "original_sparse_score": 188.88721377753708,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5214044407271924,
            "sparse": 188.88721377753708
          },
          "normalized_scores": {
            "dense": 0.5214044407271924,
            "sparse": 0.15110977102202966
          },
          "weighted_scores": {
            "dense": 0.18249155425451732,
            "sparse": 0.060443908408811864
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5214044407271924,
              "query_max": 0.6273028313891589,
              "query_min": 0.49289053811970496,
              "normalized_score": 0.5214044407271924,
              "weight": 0.35,
              "weighted_score": 0.18249155425451732
            },
            "sparse": {
              "raw_score": 188.88721377753708,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.15110977102202966,
              "weight": 0.4,
              "weighted_score": 0.060443908408811864
            }
          },
          "contribution_percentages": {
            "dense": 75.1193556732482,
            "sparse": 24.880644326751806
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2429354626633292,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.291522555195995
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.291522555195995
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.32067481071559456
            }
          },
          "combined_score": 0.32067481071559456
        }
      },
      "similarity": 0.32067481071559456
    },
    {
      "metadata": {
        "doc_id": "CWE-77",
        "name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
        "type": "Class",
        "original_content": "The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 235.25700868706852,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "CWE-77 is often misused when OS command injection (CWE-78) was intended instead [REF-1287].",
          "comments": "Ensure that the analysis focuses on the root-cause error that allows the execution of commands, as there are many weaknesses that can lead to this consequence. See Terminology Notes. If the weakness involves a command language besides OS shell invocation, then CWE-77 could be used.",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "78",
              "Comment": "OS Command Injection"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5573975451465571,
            "sparse": 235.25700868706852
          },
          "normalized_scores": {
            "dense": 0.5573975451465571,
            "sparse": 0.18820560694965482
          },
          "weighted_scores": {
            "dense": 0.195089140801295,
            "sparse": 0.07528224277986194
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5573975451465571,
              "query_max": 0.6273028313891589,
              "query_min": 0.49289053811970496,
              "normalized_score": 0.5573975451465571,
              "weight": 0.35,
              "weighted_score": 0.195089140801295
            },
            "sparse": {
              "raw_score": 235.25700868706852,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.18820560694965482,
              "weight": 0.4,
              "weighted_score": 0.07528224277986194
            }
          },
          "contribution_percentages": {
            "dense": 72.15598715266233,
            "sparse": 27.84401284733767
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.2703713835811569,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.21629710686492554
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.21629710686492554
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "CWE-77 is often misused when OS command injection (CWE-78) was intended instead [REF-1287].",
                "comments": "Ensure that the analysis focuses on the root-cause error that allows the execution of commands, as there are many weaknesses that can lead to this consequence. See Terminology Notes. If the weakness involves a command language besides OS shell invocation, then CWE-77 could be used.",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "78",
                    "Comment": "OS Command Injection"
                  }
                ]
              },
              "score_after": 0.2271119622081718
            }
          },
          "combined_score": 0.2271119622081718
        }
      },
      "similarity": 0.2271119622081718
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 261.3122043631844,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.49888027691354797,
            "sparse": 261.3122043631844
          },
          "normalized_scores": {
            "dense": 0.49888027691354797,
            "sparse": 0.2090497634905475
          },
          "weighted_scores": {
            "dense": 0.17460809691974177,
            "sparse": 0.083619905396219
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.49888027691354797,
              "query_max": 0.6273028313891589,
              "query_min": 0.49289053811970496,
              "normalized_score": 0.49888027691354797,
              "weight": 0.35,
              "weighted_score": 0.17460809691974177
            },
            "sparse": {
              "raw_score": 261.3122043631844,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.2090497634905475,
              "weight": 0.4,
              "weighted_score": 0.083619905396219
            }
          },
          "contribution_percentages": {
            "dense": 67.61780107259477,
            "sparse": 32.38219892740523
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.25822800231596077,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.20658240185276863
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.20658240185276863
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.16526592148221492
            }
          },
          "combined_score": 0.16526592148221492
        }
      },
      "similarity": 0.16526592148221492
    },
    {
      "metadata": {
        "doc_id": "CWE-400",
        "name": "Uncontrolled Resource Consumption",
        "type": "Class",
        "original_content": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
        "relationships": [],
        "original_sparse_score": 187.86000226179485,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5159872154145808,
            "sparse": 187.86000226179485
          },
          "normalized_scores": {
            "dense": 0.5159872154145808,
            "sparse": 0.15028800180943588
          },
          "weighted_scores": {
            "dense": 0.18059552539510326,
            "sparse": 0.060115200723774354
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5159872154145808,
              "query_max": 0.6273028313891589,
              "query_min": 0.49289053811970496,
              "normalized_score": 0.5159872154145808,
              "weight": 0.35,
              "weighted_score": 0.18059552539510326
            },
            "sparse": {
              "raw_score": 187.86000226179485,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.15028800180943588,
              "weight": 0.4,
              "weighted_score": 0.060115200723774354
            }
          },
          "contribution_percentages": {
            "dense": 75.02595680173978,
            "sparse": 24.974043198260222
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.24071072611887762,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.1925685808951021
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1925685808951021
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.15405486471608168
            }
          },
          "combined_score": 0.15405486471608168
        }
      },
      "similarity": 0.15405486471608168
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 194.82811697251964,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.49489800371187975,
            "sparse": 194.82811697251964
          },
          "normalized_scores": {
            "dense": 0.49489800371187975,
            "sparse": 0.1558624935780157
          },
          "weighted_scores": {
            "dense": 0.1732143012991579,
            "sparse": 0.062344997431206285
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.49489800371187975,
              "query_max": 0.6273028313891589,
              "query_min": 0.49289053811970496,
              "normalized_score": 0.49489800371187975,
              "weight": 0.35,
              "weighted_score": 0.1732143012991579
            },
            "sparse": {
              "raw_score": 194.82811697251964,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.1558624935780157,
              "weight": 0.4,
              "weighted_score": 0.062344997431206285
            }
          },
          "contribution_percentages": {
            "dense": 73.53320468890925,
            "sparse": 26.466795311090753
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.23555929873036419,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.18844743898429137
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.18844743898429137
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.1507579511874331
            }
          },
          "combined_score": 0.1507579511874331
        }
      },
      "similarity": 0.1507579511874331
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 211.00574394490894,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 211.00574394490894
          },
          "normalized_scores": {
            "sparse": 0.16880459515592716
          },
          "weighted_scores": {
            "sparse": 0.06752183806237087
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 211.00574394490894,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.16880459515592716,
              "weight": 0.4,
              "weighted_score": 0.06752183806237087
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06752183806237087,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.08777838948108214
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08777838948108214
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.09655622842919037
            }
          },
          "combined_score": 0.09655622842919037
        }
      },
      "similarity": 0.09655622842919037
    },
    {
      "metadata": {
        "doc_id": "CWE-835",
        "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "type": "Base",
        "original_content": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
        "relationships": [],
        "original_sparse_score": 208.96877215390484,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 208.96877215390484
          },
          "normalized_scores": {
            "sparse": 0.16717501772312388
          },
          "weighted_scores": {
            "sparse": 0.06687000708924955
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 208.96877215390484,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.16717501772312388,
              "weight": 0.4,
              "weighted_score": 0.06687000708924955
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06687000708924955,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.08693100921602441
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08693100921602441
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.09562411013762685
            }
          },
          "combined_score": 0.09562411013762685
        }
      },
      "similarity": 0.09562411013762685
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 203.16968864370102,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 203.16968864370102
          },
          "normalized_scores": {
            "sparse": 0.1625357509149608
          },
          "weighted_scores": {
            "sparse": 0.06501430036598432
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 203.16968864370102,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.1625357509149608,
              "weight": 0.4,
              "weighted_score": 0.06501430036598432
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06501430036598432,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.08451859047577963
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08451859047577963
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.0929704495233576
            }
          },
          "combined_score": 0.0929704495233576
        }
      },
      "similarity": 0.0929704495233576
    },
    {
      "metadata": {
        "doc_id": "CWE-776",
        "name": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
        "type": "Base",
        "original_content": "The product uses XML documents and allows their structure to be defined with a Document Type Definition (DTD), but it does not properly control the number of recursive definitions of entities.",
        "relationships": [],
        "original_sparse_score": 191.49572304495408,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 191.49572304495408
          },
          "normalized_scores": {
            "sparse": 0.15319657843596327
          },
          "weighted_scores": {
            "sparse": 0.06127863137438531
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 191.49572304495408,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.15319657843596327,
              "weight": 0.4,
              "weighted_score": 0.06127863137438531
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06127863137438531,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.0796622207867009
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0796622207867009
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.087628442865371
            }
          },
          "combined_score": 0.087628442865371
        }
      },
      "similarity": 0.087628442865371
    },
    {
      "metadata": {
        "doc_id": "CWE-1325",
        "name": "Improperly Controlled Sequential Memory Allocation",
        "type": "Base",
        "original_content": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.",
        "relationships": [],
        "original_sparse_score": 191.37437905565275,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 191.37437905565275
          },
          "normalized_scores": {
            "sparse": 0.1530995032445222
          },
          "weighted_scores": {
            "sparse": 0.061239801297808885
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 191.37437905565275,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.1530995032445222,
              "weight": 0.4,
              "weighted_score": 0.061239801297808885
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.061239801297808885,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.07961174168715156
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07961174168715156
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08757291585586673
            }
          },
          "combined_score": 0.08757291585586673
        }
      },
      "similarity": 0.08757291585586673
    },
    {
      "metadata": {
        "doc_id": "CWE-789",
        "name": "Memory Allocation with Excessive Size Value",
        "type": "Variant",
        "original_content": "The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.",
        "relationships": [],
        "original_sparse_score": 205.4529236309056,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 205.4529236309056
          },
          "normalized_scores": {
            "sparse": 0.16436233890472446
          },
          "weighted_scores": {
            "sparse": 0.06574493556188979
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 205.4529236309056,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.16436233890472446,
              "weight": 0.4,
              "weighted_score": 0.06574493556188979
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06574493556188979,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.07889392267426774
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07889392267426774
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08678331494169453
            }
          },
          "combined_score": 0.08678331494169453
        }
      },
      "similarity": 0.08678331494169453
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 204.4793079402363,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 204.4793079402363
          },
          "normalized_scores": {
            "sparse": 0.16358344635218905
          },
          "weighted_scores": {
            "sparse": 0.06543337854087562
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 204.4793079402363,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.16358344635218905,
              "weight": 0.4,
              "weighted_score": 0.06543337854087562
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06543337854087562,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.07852005424905074
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07852005424905074
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08637205967395582
            }
          },
          "combined_score": 0.08637205967395582
        }
      },
      "similarity": 0.08637205967395582
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 193.01834513559638,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 193.01834513559638
          },
          "normalized_scores": {
            "sparse": 0.1544146761084771
          },
          "weighted_scores": {
            "sparse": 0.06176587044339084
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 193.01834513559638,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.1544146761084771,
              "weight": 0.4,
              "weighted_score": 0.06176587044339084
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06176587044339084,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.07411904453206901
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07411904453206901
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08153094898527592
            }
          },
          "combined_score": 0.08153094898527592
        }
      },
      "similarity": 0.08153094898527592
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 239.787202030704,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 239.787202030704
          },
          "normalized_scores": {
            "sparse": 0.1918297616245632
          },
          "weighted_scores": {
            "sparse": 0.07673190464982528
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 239.787202030704,
              "query_max": 360.4672996029077,
              "query_min": 187.86000226179485,
              "normalized_score": 0.1918297616245632,
              "weight": 0.4,
              "weighted_score": 0.07673190464982528
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.07673190464982528,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.061385523719860224
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.061385523719860224
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.06445479990585323
            }
          },
          "combined_score": 0.06445479990585323
        }
      },
      "similarity": 0.06445479990585323
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-119",
      "CWE-121",
      "CWE-787"
    ],
    "critic_additional": []
  }
}