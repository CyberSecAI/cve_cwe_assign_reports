{
  "cve_id": "CVE-2022-25727",
  "description": "Memory Corruption in modem due to improper length check while copying into memory in Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Voice & Music",
  "key_phrases": {
    "rootcause": "improper length check while copying into memory",
    "weakness": "memory corruption",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": [
      "Snapdragon Consumer IOT",
      "Snapdragon Industrial IOT",
      "Snapdragon Voice & Music"
    ],
    "version": "",
    "component": ""
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.75 | Base | Allowed | Primary CWE |\n| CWE-787 | Out-of-bounds Write | 0.6 | Base | Allowed | Secondary Candidate |\n| CWE-131 | Incorrect Calculation of Buffer Size | 0.5 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description states \"**improper length check while copying into memory**\" leading to \"**memory corruption**\". CWE-1284 (Improper Validation of Specified Quantity in Input) aligns well with the **improper length check** aspect, as it focuses on the failure to validate the quantity (length) of input. CWE-787 (Out-of-bounds Write) is also relevant as the **improper length check** leads to writing data past the buffer's boundaries, causing **memory corruption**. While the description doesn't explicitly mention out-of-bounds write, it is a likely consequence of failing to validate the length. CWE-131 (Incorrect Calculation of Buffer Size) could also be a cause of the **memory corruption** because the buffer size may be incorrectly calculated.\n  \n  - *Relationship Analysis:* CWE-1284 is a child of CWE-20 (Improper Input Validation) and a parent of CWE-606 (Use of Client-side Input to Modify Critical Parameters). CWE-787 is a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). CWE-131 is a parent of CWE-467 (Use of sizeof() on a Pointer Type). The primary weakness is the input validation issue (CWE-1284), leading to the buffer overflow (CWE-787), and potentially related to the incorrect calculation of the buffer size (CWE-131).\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.7 (The vulnerability description clearly points to a **improper length check** as the root cause, but the consequence of out-of-bounds write is inferred and not explicitly stated. The retriever results also support this choice.)",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.75 | Base | Allowed | Primary CWE |\n| CWE-787 | Out-of-bounds Write | 0.6 | Base | Allowed | Secondary Candidate |\n| CWE-131 | Incorrect Calculation of Buffer Size | 0.5 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description states \"**improper length check while copying into memory**\" leading to \"**memory corruption**\". CWE-1284 (Improper Validation of Specified Quantity in Input) aligns well with the **improper length check** aspect, as it focuses on the failure to validate the quantity (length) of input. CWE-787 (Out-of-bounds Write) is also relevant as the **improper length check** leads to writing data past the buffer's boundaries, causing **memory corruption**. While the description doesn't explicitly mention out-of-bounds write, it is a likely consequence of failing to validate the length. CWE-131 (Incorrect Calculation of Buffer Size) could also be a cause of the **memory corruption** because the buffer size may be incorrectly calculated.\n  \n  - *Relationship Analysis:* CWE-1284 is a child of CWE-20 (Improper Input Validation) and a parent of CWE-606 (Use of Client-side Input to Modify Critical Parameters). CWE-787 is a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). CWE-131 is a parent of CWE-467 (Use of sizeof() on a Pointer Type). The primary weakness is the input validation issue (CWE-1284), leading to the buffer overflow (CWE-787), and potentially related to the incorrect calculation of the buffer size (CWE-131).\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.7 (The vulnerability description clearly points to a **improper length check** as the root cause, but the consequence of out-of-bounds write is inferred and not explicitly stated. The retriever results also support this choice.)",
  "criticism": "Okay, I've reviewed the provided analysis against the full CWE specifications. Here's my critique:\n\n**Overall Assessment:**\n\nThe analysis is generally good, demonstrating a solid understanding of the vulnerability and its relationship to common weaknesses. The choice of CWE-1284 as the primary CWE is justified, and the inclusion of CWE-787 and CWE-131 as secondary candidates is also reasonable. However, there are a few points where the analysis could be improved.\n\n**Specific Feedback:**\n\n1.  **CWE Selection and Confidence Levels:**\n\n    *   **CWE-1284 (Improper Validation of Specified Quantity in Input):** The confidence score of 0.75 is appropriate. The explanation is clear and well-justified, directly linking \"improper length check\" to the core concept of CWE-1284.\n\n    *   **CWE-787 (Out-of-bounds Write):** The confidence score of 0.6 is also reasonable. While the vulnerability description *implies* an out-of-bounds write, it doesn't explicitly state it. The analysis correctly notes this inference. However, consider making a stronger case by linking the *consequences* of memory corruption to the characteristics of an out-of-bounds write (data overwriting other variables/data structures). Out-of-bounds write is a *direct result* of improper length check, therefore the confidence score could be higher.\n\n    *   **CWE-131 (Incorrect Calculation of Buffer Size):**  The confidence score of 0.5 is on the lower side, which is appropriate because it's more of a *possible* contributing factor rather than a direct consequence. The explanation acknowledges it as a potential cause of memory corruption, but it's not as directly evident as CWE-1284 or CWE-787. The analysis appropriately identifies this as a potential cause rather than a guaranteed one.\n\n2.  **Relationship Analysis:**\n\n    *   The relationship analysis section is good at outlining the hierarchy and potential chaining between the CWEs. However, it could benefit from exploring specific scenarios where each CWE might manifest within the described vulnerability. For example:\n        *   *CWE-1284 -> CWE-787:* The length field in a packet is not validated. The code uses this unvalidated length to copy data into a buffer, resulting in an out-of-bounds write.\n        *   *CWE-131 -> CWE-787:* The buffer is allocated with the wrong size, calculated based on the improper length from the input, directly leading to an out-of-bounds write.\n    * Suggestion: Explicitly state that CWE-1284 (Improper Validation of Specified Quantity in Input) leads to CWE-787 (Out-of-Bounds Write), and that either of these two can be caused by CWE-131 (Incorrect Calculation of Buffer Size).\n\n3.  **Retriever Results:**\n\n    *   The retriever results section highlights some interesting alternative CWEs. For example, CWE-822 (Untrusted Pointer Dereference) and CWE-823 (Use of Out-of-range Pointer Offset) could be *indirectly* related *if* the copied data contains pointers that are then dereferenced. However, without more information, these are less likely than the chosen CWEs. Including a brief note on why these were *not* selected (despite their high scores) would strengthen the analysis.\n    *   CWE-126 (Buffer Over-read) is also relevant as the length might be incorrectly used in a read operation as well, not only in a write operation.\n\n4.  **CWE Examples from Database:**\n\n    *   The provided examples are all for CWE-119, which is discouraged according to CWE's mapping guidance. Examples for CWE-1284, CWE-787 and CWE-131 would be more useful.\n\n5. **Relevant CWE Specifications**\n   * The analysis correctly includes and references the relevant CWE specifications.\n   * Could provide some insights related to the \"Potential Mitigations\" for each of the proposed CWE.\n\n**Suggestions for Improvement:**\n\n*   **Strengthen Justification for CWE-787:** Elaborate on how failing to validate the length *directly* results in an out-of-bounds write.\n*   **Address Alternative CWEs from Retriever:** Briefly explain why highly-ranked CWEs like 822 and 823 are less likely in this specific scenario.\n*   **Include More Specific Examples:** Add examples related to the selected CWEs and consider including examples for CWE-1284, CWE-787, and CWE-131 from the CWE database.\n*   **Mention Potential Mitigations:** Highlight some of the potential mitigations in the CWE specifications, particularly those related to input validation, buffer size calculation, and language selection.\n*   **Consider CWE-126 (Buffer Over-read):** Add a sentence about why CWE-126 is or is not relevant.\n\n**Revised Analysis Snippet (Illustrative):**\n\n```\n# Analysis to Review\n# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.75 | Base | Allowed | Primary CWE |\n| CWE-787 | Out-of-bounds Write | 0.7 | Base | Allowed | Secondary Candidate |\n| CWE-131 | Incorrect Calculation of Buffer Size | 0.5 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description states \"**improper length check while copying into memory**\" leading to \"**memory corruption**\". CWE-1284 (Improper Validation of Specified Quantity in Input) aligns well with the **improper length check** aspect, as it focuses on the failure to validate the quantity (length) of input. CWE-787 (Out-of-bounds Write) is a *direct consequence* of this improper validation; If the length is not checked, the copy operation can write data beyond the allocated buffer, leading to memory corruption by overwriting adjacent data or code.  CWE-131 (Incorrect Calculation of Buffer Size) could also be a cause of the **memory corruption** because the buffer size may be incorrectly calculated based on an improper length from the input. This can then lead to an out-of-bounds write during the copy operation.\n\n  - *Relationship Analysis:* CWE-1284 is a child of CWE-20 (Improper Input Validation) and a parent of CWE-606 (Use of Client-side Input to Modify Critical Parameters). CWE-787 is a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). CWE-131 is a parent of CWE-467 (Use of sizeof() on a Pointer Type). The primary weakness is the input validation issue (CWE-1284), leading to the buffer overflow (CWE-787), and potentially related to the incorrect calculation of the buffer size (CWE-131).  Specifically, the unvalidated length field allows a copy operation to write beyond the buffer (CWE-787).\n\n- **Alternative CWEs:**\n  - *Untrusted Pointer Dereference (CWE-822) and Use of Out-of-range Pointer Offset (CWE-823):* While these CWEs have high retriever scores, they are less likely *unless* the data being copied contains pointers that are subsequently dereferenced. The provided description doesn't explicitly mention this.\n  - *Buffer Over-read (CWE-126):* Although less probable, if the length is incorrectly used in a read operation, then CWE-126 might be relevant.\n\n- **Mitigation Strategies (Examples):**\n  - *Input Validation (CWE-1284):*  Implement strict \"accept known good\" validation on the length field of the data being copied. Reject any values outside the expected range.\n  - *Language Selection (CWE-787):*  Consider using memory-safe languages or libraries that provide automatic bounds checking to prevent out-of-bounds writes.\n  - *Correct Buffer Size Calculation (CWE-131):* Ensure that buffer sizes are calculated correctly, taking into account all relevant factors.\n```\n\nBy incorporating these suggestions, the analysis would be more comprehensive and provide a clearer understanding of the vulnerability's root cause and potential mitigations.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.8 | Base | Allowed | Primary CWE |\n| CWE-787 | Out-of-bounds Write | 0.75 | Base | Allowed | Secondary Candidate |\n| CWE-131 | Incorrect Calculation of Buffer Size | 0.6 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary weakness is **CWE-1284 (Improper Validation of Specified Quantity in Input)**, as the vulnerability description explicitly mentions an \"improper length check.\" This can lead to **CWE-787 (Out-of-bounds Write)** if the unchecked length is used in a copy operation, causing data to be written beyond the buffer boundaries. **CWE-131 (Incorrect Calculation of Buffer Size)** is a potential contributing factor, as an incorrectly calculated buffer size, possibly based on an improper length from the input, could also result in **CWE-787**.\n\nThe relationships are as follows: CWE-1284 *CanPrecede* CWE-787, and CWE-131 *CanPrecede* CWE-787. CWE-1284 is a child of **CWE-20 (Improper Input Validation)**, while CWE-787 is a child of **CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer)**. The analysis considers the hierarchical relationships to ensure specificity. The chosen CWEs are at the Base level, which is preferred for vulnerability mapping.\n\n```mermaid\ngraph TD\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe131[\"CWE-131: Incorrect Calculation of Buffer Size\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations\"]\n\n    cwe1284 -- CANPRECEDE --> cwe787\n    cwe131 -- CANPRECEDE --> cwe787\n    cwe1284 -- CHILDOF --> cwe20\n    cwe787 -- CHILDOF --> cwe119\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe1284 primary\n    class cwe787,cwe131 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the lack of proper input validation (**CWE-1284**) on the length field. This leads to the use of an invalid length value, potentially compounded by an incorrect buffer size calculation (**CWE-131**). Finally, the unchecked length is used in a memory copy operation, resulting in an out-of-bounds write (**CWE-787**) and memory corruption. The root cause is **CWE-1284**, and the immediate impact is **CWE-787**.\n\n## Summary of Analysis\nThe initial analysis and the criticism provided a solid foundation for the final decision. The vulnerability description explicitly mentions an \"improper length check,\" which strongly supports the selection of **CWE-1284 (Improper Validation of Specified Quantity in Input)** as the primary **WEAKNESS**. The criticism's suggestion to increase the confidence score for **CWE-787 (Out-of-bounds Write)** due to its direct relationship with **CWE-1284** was taken into account. The relationship analysis helped confirm the vulnerability chain, with **CWE-1284** leading to **CWE-787**. The potential role of **CWE-131 (Incorrect Calculation of Buffer Size)** was also considered, making it a secondary candidate. Alternative CWEs, such as **CWE-822** and **CWE-823**, were deemed less likely given the available information. The analysis is primarily based on the provided vulnerability description: \"Memory Corruption in modem due to **improper length check** while copying into memory\". This clearly points to an input validation **ROOTCAUSE** related to length. The selected CWEs are at the optimal level of specificity (Base) for mapping the vulnerability.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-822",
        "name": "Untrusted Pointer Dereference",
        "type": "Base",
        "original_content": "The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.",
        "relationships": [],
        "original_sparse_score": 430.367243955115,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.48989803793791487,
            "sparse": 430.367243955115,
            "graph": 2.5012373509715253
          },
          "normalized_scores": {
            "dense": 0.48989803793791487,
            "sparse": 0.344293795164092,
            "graph": 0.8932990539184019
          },
          "weighted_scores": {
            "dense": 0.1714643132782702,
            "sparse": 0.13771751806563678,
            "graph": 0.22332476347960048
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.48989803793791487,
              "query_max": 0.5438061090881348,
              "query_min": 0.47673320625636406,
              "normalized_score": 0.48989803793791487,
              "weight": 0.35,
              "weighted_score": 0.1714643132782702
            },
            "sparse": {
              "raw_score": 430.367243955115,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.344293795164092,
              "weight": 0.4,
              "weighted_score": 0.13771751806563678
            },
            "graph": {
              "raw_score": 2.5012373509715253,
              "query_max": 3.4200400000000006,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.8932990539184019,
              "weight": 0.25,
              "weighted_score": 0.22332476347960048
            }
          },
          "contribution_percentages": {
            "dense": 32.19947225913697,
            "sparse": 25.862124413929838,
            "graph": 41.93840332693319
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5325065948235075,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6922585732705597
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6922585732705597
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7614844305976157
            }
          },
          "combined_score": 0.7614844305976157
        }
      },
      "similarity": 0.7614844305976157
    },
    {
      "metadata": {
        "doc_id": "CWE-823",
        "name": "Use of Out-of-range Pointer Offset",
        "type": "Base",
        "original_content": "The product performs pointer arithmetic on a valid pointer, but it uses an offset that can point outside of the intended range of valid memory locations for the resulting pointer.",
        "relationships": [],
        "original_sparse_score": 453.9540178461577,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4920950609477013,
            "sparse": 453.9540178461577,
            "graph": 2.110368293831782
          },
          "normalized_scores": {
            "dense": 0.4920950609477013,
            "sparse": 0.36316321427692616,
            "graph": 0.7537029620827793
          },
          "weighted_scores": {
            "dense": 0.17223327133169544,
            "sparse": 0.14526528571077046,
            "graph": 0.18842574052069483
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4920950609477013,
              "query_max": 0.5438061090881348,
              "query_min": 0.47673320625636406,
              "normalized_score": 0.4920950609477013,
              "weight": 0.35,
              "weighted_score": 0.17223327133169544
            },
            "sparse": {
              "raw_score": 453.9540178461577,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.36316321427692616,
              "weight": 0.4,
              "weighted_score": 0.14526528571077046
            },
            "graph": {
              "raw_score": 2.110368293831782,
              "query_max": 3.4200400000000006,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.7537029620827793,
              "weight": 0.25,
              "weighted_score": 0.18842574052069483
            }
          },
          "contribution_percentages": {
            "dense": 34.04328911682552,
            "sparse": 28.71285020515055,
            "graph": 37.243860678023935
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5059242975631607,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.657701586832109
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.657701586832109
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.72347174551532
            }
          },
          "combined_score": 0.72347174551532
        }
      },
      "similarity": 0.72347174551532
    },
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 343.66427241695015,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5089873640796416,
            "sparse": 343.66427241695015,
            "graph": 2.4223143796807807
          },
          "normalized_scores": {
            "dense": 0.5089873640796416,
            "sparse": 0.27493141793356013,
            "graph": 0.8651122784574217
          },
          "weighted_scores": {
            "dense": 0.17814557742787457,
            "sparse": 0.10997256717342406,
            "graph": 0.21627806961435542
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5089873640796416,
              "query_max": 0.5438061090881348,
              "query_min": 0.47673320625636406,
              "normalized_score": 0.5089873640796416,
              "weight": 0.35,
              "weighted_score": 0.17814557742787457
            },
            "sparse": {
              "raw_score": 343.66427241695015,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.27493141793356013,
              "weight": 0.4,
              "weighted_score": 0.10997256717342406
            },
            "graph": {
              "raw_score": 2.4223143796807807,
              "query_max": 3.4200400000000006,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.8651122784574217,
              "weight": 0.25,
              "weighted_score": 0.21627806961435542
            }
          },
          "contribution_percentages": {
            "dense": 35.318579403870906,
            "sparse": 21.80281375514159,
            "graph": 42.8786068409875
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5043962142156541,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6557150784803503
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6557150784803503
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7212865863283854
            }
          },
          "combined_score": 0.7212865863283854
        }
      },
      "similarity": 0.7212865863283854
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 479.0645068330931,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5049190082902948,
            "sparse": 479.0645068330931,
            "graph": 1.9206804694500625
          },
          "normalized_scores": {
            "dense": 0.5049190082902948,
            "sparse": 0.38325160546647447,
            "graph": 0.6859573105178796
          },
          "weighted_scores": {
            "dense": 0.17672165290160316,
            "sparse": 0.1533006421865898,
            "graph": 0.1714893276294699
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5049190082902948,
              "query_max": 0.5438061090881348,
              "query_min": 0.47673320625636406,
              "normalized_score": 0.5049190082902948,
              "weight": 0.35,
              "weighted_score": 0.17672165290160316
            },
            "sparse": {
              "raw_score": 479.0645068330931,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.38325160546647447,
              "weight": 0.4,
              "weighted_score": 0.1533006421865898
            },
            "graph": {
              "raw_score": 1.9206804694500625,
              "query_max": 3.4200400000000006,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.6859573105178796,
              "weight": 0.25,
              "weighted_score": 0.1714893276294699
            }
          },
          "contribution_percentages": {
            "dense": 35.237798068160146,
            "sparse": 30.567714733282227,
            "graph": 34.19448719855764
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5015116227176628,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.6018139472611953
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6018139472611953
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6619953419873149
            }
          },
          "combined_score": 0.6619953419873149
        }
      },
      "similarity": 0.6619953419873149
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 403.27242941927716,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 403.27242941927716,
            "graph": 3.4200400000000006
          },
          "normalized_scores": {
            "sparse": 0.3226179435354217,
            "graph": 1.0
          },
          "weighted_scores": {
            "sparse": 0.12904717741416868,
            "graph": 0.25
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 403.27242941927716,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.3226179435354217,
              "weight": 0.4,
              "weighted_score": 0.12904717741416868
            },
            "graph": {
              "raw_score": 3.4200400000000006,
              "query_max": 3.4200400000000006,
              "query_min": 1.7680000000000005,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "sparse": 34.04514928577461,
            "graph": 65.95485071422537
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3790471774141687,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.49276133063841937
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.49276133063841937
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5420374637022614
            }
          },
          "combined_score": 0.5420374637022614
        }
      },
      "similarity": 0.5420374637022614
    },
    {
      "metadata": {
        "doc_id": "CWE-124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "type": "Base",
        "original_content": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "relationships": [],
        "original_sparse_score": 409.3081881141561,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 409.3081881141561,
            "graph": 2.5734246965660383
          },
          "normalized_scores": {
            "sparse": 0.3274465504913249,
            "graph": 0.9190802487735852
          },
          "weighted_scores": {
            "sparse": 0.13097862019652995,
            "graph": 0.2297700621933963
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 409.3081881141561,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.3274465504913249,
              "weight": 0.4,
              "weighted_score": 0.13097862019652995
            },
            "graph": {
              "raw_score": 2.5734246965660383,
              "query_max": 3.4200400000000006,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.9190802487735852,
              "weight": 0.25,
              "weighted_score": 0.2297700621933963
            }
          },
          "contribution_percentages": {
            "sparse": 36.307442435772415,
            "graph": 63.692557564227585
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.36074868238992625,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4689732871069041
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4689732871069041
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5158706158175945
            }
          },
          "combined_score": 0.5158706158175945
        }
      },
      "similarity": 0.5158706158175945
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 338.81241354850533,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 338.81241354850533,
            "graph": 2.7196000000000002
          },
          "normalized_scores": {
            "sparse": 0.27104993083880424,
            "graph": 0.9712857142857144
          },
          "weighted_scores": {
            "sparse": 0.1084199723355217,
            "graph": 0.2428214285714286
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 338.81241354850533,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.27104993083880424,
              "weight": 0.4,
              "weighted_score": 0.1084199723355217
            },
            "graph": {
              "raw_score": 2.7196000000000002,
              "query_max": 3.4200400000000006,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.9712857142857144,
              "weight": 0.25,
              "weighted_score": 0.2428214285714286
            }
          },
          "contribution_percentages": {
            "sparse": 30.867651722025773,
            "graph": 69.13234827797422
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.35124140090695033,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.45661382117903543
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.45661382117903543
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.502275203296939
            }
          },
          "combined_score": 0.502275203296939
        }
      },
      "similarity": 0.502275203296939
    },
    {
      "metadata": {
        "doc_id": "CWE-1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
        "relationships": [],
        "original_sparse_score": 340.25924088653227,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5438061090881348,
            "sparse": 340.25924088653227
          },
          "normalized_scores": {
            "dense": 0.5438061090881348,
            "sparse": 0.27220739270922584
          },
          "weighted_scores": {
            "dense": 0.19033213818084715,
            "sparse": 0.10888295708369033
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5438061090881348,
              "query_max": 0.5438061090881348,
              "query_min": 0.47673320625636406,
              "normalized_score": 0.5438061090881348,
              "weight": 0.35,
              "weighted_score": 0.19033213818084715
            },
            "sparse": {
              "raw_score": 340.25924088653227,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.27220739270922584,
              "weight": 0.4,
              "weighted_score": 0.10888295708369033
            }
          },
          "contribution_percentages": {
            "dense": 63.6104732659205,
            "sparse": 36.38952673407951
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2992150952645375,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3889796238438987
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3889796238438987
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.42787758622828864
            }
          },
          "combined_score": 0.42787758622828864
        }
      },
      "similarity": 0.42787758622828864
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 356.80068025650235,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4779101722718996,
            "sparse": 356.80068025650235
          },
          "normalized_scores": {
            "dense": 0.4779101722718996,
            "sparse": 0.2854405442052019
          },
          "weighted_scores": {
            "dense": 0.16726856029516485,
            "sparse": 0.11417621768208075
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4779101722718996,
              "query_max": 0.5438061090881348,
              "query_min": 0.47673320625636406,
              "normalized_score": 0.4779101722718996,
              "weight": 0.35,
              "weighted_score": 0.16726856029516485
            },
            "sparse": {
              "raw_score": 356.80068025650235,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.2854405442052019,
              "weight": 0.4,
              "weighted_score": 0.11417621768208075
            }
          },
          "contribution_percentages": {
            "dense": 59.432106538742836,
            "sparse": 40.56789346125716
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2814447779772456,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3658782113704193
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3658782113704193
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.40246603250746127
            }
          },
          "combined_score": 0.40246603250746127
        }
      },
      "similarity": 0.40246603250746127
    },
    {
      "metadata": {
        "doc_id": "CWE-1314",
        "name": "Missing Write Protection for Parametric Data Values",
        "type": "Base",
        "original_content": "The device does not write-protect the parametric data values for sensors that scale the sensor value, allowing untrusted software to manipulate the apparent result and potentially damage hardware or cause operational failure.",
        "relationships": [],
        "original_sparse_score": 340.9681623528914,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.47699679955502505,
            "sparse": 340.9681623528914
          },
          "normalized_scores": {
            "dense": 0.47699679955502505,
            "sparse": 0.2727745298823131
          },
          "weighted_scores": {
            "dense": 0.16694887984425877,
            "sparse": 0.10910981195292524
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.47699679955502505,
              "query_max": 0.5438061090881348,
              "query_min": 0.47673320625636406,
              "normalized_score": 0.47699679955502505,
              "weight": 0.35,
              "weighted_score": 0.16694887984425877
            },
            "sparse": {
              "raw_score": 340.9681623528914,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.2727745298823131,
              "weight": 0.4,
              "weighted_score": 0.10910981195292524
            }
          },
          "contribution_percentages": {
            "dense": 60.47586430168027,
            "sparse": 39.52413569831973
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.276058691797184,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.35887629933633924
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.35887629933633924
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3947639292699732
            }
          },
          "combined_score": 0.3947639292699732
        }
      },
      "similarity": 0.3947639292699732
    },
    {
      "metadata": {
        "doc_id": "CWE-413",
        "name": "Improper Resource Locking",
        "type": "Base",
        "original_content": "The product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource.",
        "relationships": [],
        "original_sparse_score": 166.48503920929642,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5023951112492013,
            "sparse": 166.48503920929642
          },
          "normalized_scores": {
            "dense": 0.5023951112492013,
            "sparse": 0.13318803136743712
          },
          "weighted_scores": {
            "dense": 0.17583828893722045,
            "sparse": 0.05327521254697485
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5023951112492013,
              "query_max": 0.5438061090881348,
              "query_min": 0.47673320625636406,
              "normalized_score": 0.5023951112492013,
              "weight": 0.35,
              "weighted_score": 0.17583828893722045
            },
            "sparse": {
              "raw_score": 166.48503920929642,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.13318803136743712,
              "weight": 0.4,
              "weighted_score": 0.05327521254697485
            }
          },
          "contribution_percentages": {
            "dense": 76.74724003524084,
            "sparse": 23.25275996475916
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2291135014841953,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2978475519294539
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2978475519294539
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3276323071223993
            }
          },
          "combined_score": 0.3276323071223993
        }
      },
      "similarity": 0.3276323071223993
    },
    {
      "metadata": {
        "doc_id": "CWE-367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "type": "Base",
        "original_content": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
        "relationships": [],
        "original_sparse_score": 394.7302318410629,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 394.7302318410629
          },
          "normalized_scores": {
            "sparse": 0.3157841854728503
          },
          "weighted_scores": {
            "sparse": 0.12631367418914013
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 394.7302318410629,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.3157841854728503,
              "weight": 0.4,
              "weighted_score": 0.12631367418914013
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.12631367418914013,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.1642077764458822
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1642077764458822
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.18062855409047043
            }
          },
          "combined_score": 0.18062855409047043
        }
      },
      "similarity": 0.18062855409047043
    },
    {
      "metadata": {
        "doc_id": "CWE-390",
        "name": "Detection of Error Condition Without Action",
        "type": "Base",
        "original_content": "The product detects a specific error, but takes no actions to handle the error.",
        "relationships": [],
        "original_sparse_score": 372.8599362372441,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 372.8599362372441
          },
          "normalized_scores": {
            "sparse": 0.29828794898979527
          },
          "weighted_scores": {
            "sparse": 0.11931517959591811
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 372.8599362372441,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.29828794898979527,
              "weight": 0.4,
              "weighted_score": 0.11931517959591811
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11931517959591811,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.15510973347469356
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.15510973347469356
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.17062070682216293
            }
          },
          "combined_score": 0.17062070682216293
        }
      },
      "similarity": 0.17062070682216293
    },
    {
      "metadata": {
        "doc_id": "CWE-415",
        "name": "Double Free",
        "type": "Variant",
        "original_content": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
        "relationships": [],
        "original_sparse_score": 398.8818809636216,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 398.8818809636216
          },
          "normalized_scores": {
            "sparse": 0.3191055047708973
          },
          "weighted_scores": {
            "sparse": 0.12764220190835893
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 398.8818809636216,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.3191055047708973,
              "weight": 0.4,
              "weighted_score": 0.12764220190835893
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.12764220190835893,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.15317064229003072
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.15317064229003072
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1684877065190338
            }
          },
          "combined_score": 0.1684877065190338
        }
      },
      "similarity": 0.1684877065190338
    },
    {
      "metadata": {
        "doc_id": "CWE-252",
        "name": "Unchecked Return Value",
        "type": "Base",
        "original_content": "The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.",
        "relationships": [],
        "original_sparse_score": 342.87588819142786,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 342.87588819142786
          },
          "normalized_scores": {
            "sparse": 0.2743007105531423
          },
          "weighted_scores": {
            "sparse": 0.10972028422125693
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 342.87588819142786,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.2743007105531423,
              "weight": 0.4,
              "weighted_score": 0.10972028422125693
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10972028422125693,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.142636369487634
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.142636369487634
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.15690000643639743
            }
          },
          "combined_score": 0.15690000643639743
        }
      },
      "similarity": 0.15690000643639743
    },
    {
      "metadata": {
        "doc_id": "CWE-459",
        "name": "Incomplete Cleanup",
        "type": "Base",
        "original_content": "The product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.",
        "relationships": [],
        "original_sparse_score": 296.4673597552121,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 296.4673597552121
          },
          "normalized_scores": {
            "sparse": 0.23717388780416968
          },
          "weighted_scores": {
            "sparse": 0.09486955512166788
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 296.4673597552121,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.23717388780416968,
              "weight": 0.4,
              "weighted_score": 0.09486955512166788
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.09486955512166788,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.12333042165816825
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.12333042165816825
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1356634638239851
            }
          },
          "combined_score": 0.1356634638239851
        }
      },
      "similarity": 0.1356634638239851
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 267.3340061458287,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 267.3340061458287
          },
          "normalized_scores": {
            "sparse": 0.21386720491666297
          },
          "weighted_scores": {
            "sparse": 0.0855468819666652
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 267.3340061458287,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.21386720491666297,
              "weight": 0.4,
              "weighted_score": 0.0855468819666652
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.0855468819666652,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.10265625835999824
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.10265625835999824
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.11292188419599808
            }
          },
          "combined_score": 0.11292188419599808
        }
      },
      "similarity": 0.11292188419599808
    },
    {
      "metadata": {
        "doc_id": "CWE-362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "type": "Class",
        "original_content": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.",
        "relationships": [],
        "original_sparse_score": 287.2466791486959,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 287.2466791486959
          },
          "normalized_scores": {
            "sparse": 0.2297973433189567
          },
          "weighted_scores": {
            "sparse": 0.09191893732758269
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 287.2466791486959,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.2297973433189567,
              "weight": 0.4,
              "weighted_score": 0.09191893732758269
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.09191893732758269,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.07353514986206615
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07353514986206615
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.07721190735516946
            }
          },
          "combined_score": 0.07721190735516946
        }
      },
      "similarity": 0.07721190735516946
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 325.8150122676009,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 325.8150122676009
          },
          "normalized_scores": {
            "sparse": 0.2606520098140807
          },
          "weighted_scores": {
            "sparse": 0.10426080392563229
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 325.8150122676009,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.2606520098140807,
              "weight": 0.4,
              "weighted_score": 0.10426080392563229
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.10426080392563229,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.08340864314050583
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08340864314050583
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.06672691451240467
            }
          },
          "combined_score": 0.06672691451240467
        }
      },
      "similarity": 0.06672691451240467
    },
    {
      "metadata": {
        "doc_id": "CWE-697",
        "name": "Incorrect Comparison",
        "type": "Pillar",
        "original_content": "The product compares two entities in a security-relevant context, but the comparison is incorrect, which may lead to resultant weaknesses.",
        "relationships": [],
        "original_sparse_score": 283.5115546858883,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is extremely high-level, a Pillar. However, sometimes this weakness is forced to be used due to the lack of in-depth weakness research. See Research Gaps.",
          "comments": "Where feasible, consider children or descendants of this entry instead.",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 283.5115546858883
          },
          "normalized_scores": {
            "sparse": 0.22680924374871064
          },
          "weighted_scores": {
            "sparse": 0.09072369749948427
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 283.5115546858883,
              "query_max": 479.0645068330931,
              "query_min": 166.48503920929642,
              "normalized_score": 0.22680924374871064,
              "weight": 0.4,
              "weighted_score": 0.09072369749948427
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.6,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.09072369749948427,
            "abstraction": {
              "type": "pillar",
              "factor": 0.6,
              "score_after": 0.05443421849969056
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.05443421849969056
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is extremely high-level, a Pillar. However, sometimes this weakness is forced to be used due to the lack of in-depth weakness research. See Research Gaps.",
                "comments": "Where feasible, consider children or descendants of this entry instead.",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.04354737479975245
            }
          },
          "combined_score": 0.04354737479975245
        }
      },
      "similarity": 0.04354737479975245
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-119",
      "CWE-606",
      "CWE-787",
      "CWE-1284",
      "CWE-20",
      "CWE-467",
      "CWE-131"
    ],
    "critic_additional": [
      "CWE-823",
      "CWE-822",
      "CWE-126"
    ]
  }
}