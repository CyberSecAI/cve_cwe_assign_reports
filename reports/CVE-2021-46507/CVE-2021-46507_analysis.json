{
  "cve_id": "CVE-2021-46507",
  "description": "Jsish v3.5.0 was discovered to contain a stack overflow via Jsi_LogMsg at src/jsiUtils.c.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "stack overflow",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "Jsish",
    "version": "v3.5.0",
    "component": "src/jsiUtils.c"
  },
  "reference_content": "Based on the provided information, here's an analysis of the vulnerability:\n\n**Root cause of vulnerability:**\nThe root cause is a stack overflow within the `Jsi_LogMsg` function, specifically triggered during the conversion of a value to a string via `Jsi_ValueToString`. The issue is caused by a recursive call chain involving `Jsi_LogMsg` and `Jsi_ValueToString` when processing certain crafted input, leading to excessive stack usage.\n\n**Weaknesses/vulnerabilities present:**\n- Stack overflow due to unbounded recursion.\n- Improper handling of specific input data, causing infinite recursion when converting values to strings.\n\n**Impact of exploitation:**\n- The program crashes due to a stack overflow, leading to a denial-of-service (DoS).\n\n**Attack vectors:**\n- Crafted JavaScript code provided as input. Specifically, using `WebSocket` function with specially crafted object or using `times` with `WebSocket` and an expression that evaluates to NaN or undefined.\n\n**Required attacker capabilities/position:**\n- Ability to provide the vulnerable software with malicious Javascript input.\n\n**Technical Details:**\n\n- The vulnerability occurs in `src/jsiUtils.c:151` within the `Jsi_LogMsg` function.\n- The call stack shows recursive calls between `Jsi_LogMsg` (at `src/jsiUtils.c:229`) and `Jsi_ValueToString` (at `src/jsiValue.c:526`).\n- The vulnerability is triggered by a crafted WebSocket call within a `times` function with the problematic expression `null % null`.\n- AddressSanitizer output shows a stack overflow with specific addresses and the call stack leading to the overflow.\n\nThis information is more detailed than a simple CVE description would provide.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-674 | Improper Control of Recursion | 0.9 | Class | Primary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states a **stack overflow** condition, which is triggered by excessive recursion within the `Jsi_LogMsg` function in `src/jsiUtils.c`. The CVE Reference Links Content Summary reinforces this, highlighting \"Stack overflow due to unbounded recursion\" and \"Improper handling of specific input data, causing infinite recursion\". CWE-674 (Improper Control of Recursion) directly addresses the scenario where a product \"does not properly control the amount of recursion that takes place, consuming excessive resources, such as allocated memory or the program stack.\" The attack involves crafted Javascript, which triggers recursive calls between `Jsi_LogMsg` and `Jsi_ValueToString`. CWE-674 is a Class-level CWE, and while a more specific Base-level child might be ideal, none of the retriever results provide a better fit given the root cause is the lack of recursion control rather than a specific type of buffer overflow. The usage is \"Allowed-with-Review\", which acknowledges the need to check for more specific children. Given the evidence, CWE-674 is the most appropriate primary mapping.\n\n  - *Relationship Analysis:* Although CWE-674 does not have direct relationships listed in the provided data, it is conceptually related to resource management issues. The stack overflow is a direct consequence of the uncontrolled recursion.\n\n- **Confidence Score:**\n  - Confidence: 0.9 (High confidence due to clear description of stack overflow caused by uncontrolled recursion and supporting evidence from the CVE Reference Links Content Summary)",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-674 | Improper Control of Recursion | 0.9 | Class | Primary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states a **stack overflow** condition, which is triggered by excessive recursion within the `Jsi_LogMsg` function in `src/jsiUtils.c`. The CVE Reference Links Content Summary reinforces this, highlighting \"Stack overflow due to unbounded recursion\" and \"Improper handling of specific input data, causing infinite recursion\". CWE-674 (Improper Control of Recursion) directly addresses the scenario where a product \"does not properly control the amount of recursion that takes place, consuming excessive resources, such as allocated memory or the program stack.\" The attack involves crafted Javascript, which triggers recursive calls between `Jsi_LogMsg` and `Jsi_ValueToString`. CWE-674 is a Class-level CWE, and while a more specific Base-level child might be ideal, none of the retriever results provide a better fit given the root cause is the lack of recursion control rather than a specific type of buffer overflow. The usage is \"Allowed-with-Review\", which acknowledges the need to check for more specific children. Given the evidence, CWE-674 is the most appropriate primary mapping.\n\n  - *Relationship Analysis:* Although CWE-674 does not have direct relationships listed in the provided data, it is conceptually related to resource management issues. The stack overflow is a direct consequence of the uncontrolled recursion.\n\n- **Confidence Score:**\n  - Confidence: 0.9 (High confidence due to clear description of stack overflow caused by uncontrolled recursion and supporting evidence from the CVE Reference Links Content Summary)",
  "criticism": "Okay, here's a review of the analysis, focusing on the CWE mapping and using the full CWE specifications provided.\n\n**Overall Assessment:**\n\nThe analysis is well-structured and provides a detailed justification for selecting CWE-674 (Improper Control of Recursion).  The confidence level of 0.9 is appropriate given the evidence. The analyzer has considered the \"Allowed-with-Review\" usage for CWE-674 and correctly identified the need to consider more specific children. However, the review can be strengthened by considering the broader context of the attack vector, and potential secondary weaknesses, especially regarding resource management.\n\n**Detailed Critique:**\n\n1.  **CWE-674 (Improper Control of Recursion) - Primary Mapping:**\n\n    *   **Strengths:**\n        *   The analysis correctly identifies the core issue: the lack of control over recursion leading to stack exhaustion. The description from the vulnerability information strongly supports this.\n        *   The justification is clear and well-reasoned, citing evidence from both the vulnerability description and the CVE Reference Links Content Summary.\n        *   The analyzer acknowledges that CWE-674 is a Class-level CWE and that a more specific Base-level child might be preferable.\n        *   The \"Observed Examples\" provided for CWE-674 are relevant, as they also involve stack exhaustion due to uncontrolled recursion.\n\n    *   **Areas for Improvement:**\n        *   While CWE-674 accurately captures the *technical* root cause, it might be beneficial to consider the *architectural* context. The vulnerability arises from processing user-provided input (malicious JavaScript) that triggers the recursion.  This aspect could be highlighted more explicitly.\n        *   **Mitigations:** While the provided mitigations for CWE-674 are relevant (ensure an end condition, increase stack size), they are relatively generic. Discussing mitigations specific to the Jsi framework and JavaScript interaction would be more useful. For example: implementing a call depth limit within `Jsi_ValueToString` or `Jsi_LogMsg`, or better input validation to prevent the crafted input from ever reaching the vulnerable functions.\n\n2.  **Consideration of Retriever Results:**\n\n    *   **CWE-121 (Stack-based Buffer Overflow):**\n        *   The vulnerability description *mentions* \"stack overflow\" but not in the typical sense of writing past the bounds of a buffer. The stack overflow is a *consequence* of the uncontrolled recursion, not the root cause. Therefore, dismissing CWE-121 is correct in this context.  The important thing is to differentiate between the *cause* and the *effect.*\n    *   **CWE-770 (Allocation of Resources Without Limits or Throttling):**\n        *   While the stack is a limited resource, CWE-770 is perhaps a bit too broad. The uncontrolled recursion directly leads to stack exhaustion, making CWE-674 a more precise fit. However, it's worth acknowledging the resource consumption aspect, potentially as a secondary weakness.\n        *   **Mitigations:** The mitigations for CWE-770 (limiting resources, throttling) are relevant to the overall security posture of the application. Consider that even if the recursion issue were fixed, other vulnerabilities could lead to similar resource exhaustion problems.\n    *   **Other Buffer Overflow CWEs (120, 122, 126):** These are not relevant because the core of the issue is with unbounded recursion, not copying or writing data outside buffer boundaries.\n    *   **Integer Overflow/Underflow CWEs (190, 191):** The problem description does not suggest any type of integer issue.\n\n3.  **Potential Secondary Weaknesses:**\n\n    *   **CWE-20 (Improper Input Validation):** The crafted JavaScript input is the trigger for the vulnerability. While the *direct* cause is uncontrolled recursion, the *underlying* issue is the failure to properly validate or sanitize the input. Specifically, input validation to prevent values such as NaN/null from being involved in string conversions may prevent the issue. This could be added as a secondary CWE.\n        *   **Mitigations:** A strong input validation strategy, using an \"accept known good\" approach, could prevent the malicious input from ever reaching the vulnerable functions.\n\n4.  **CWE Relationships and Abstraction Levels:**\n\n    *   The analysis correctly notes that CWE-674 is a Class-level CWE. Exploring its children (although none are explicitly listed in the provided data) could potentially lead to a more specific mapping. However, without further information about potential child CWEs, CWE-674 remains the most appropriate choice.\n    *   The relationships (ChildOf -> CWE-834) are conceptually relevant. CWE-834 (Excessive Iteration) is a parent of CWE-674 and represents a broader category of resource consumption issues.\n\n**Revised Summary Table:**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-674 | Improper Control of Recursion | 0.9 | Class | Primary | Allowed-with-Review |\n| CWE-20 | Improper Input Validation | 0.6 | Base | Secondary | Contributes to vulnerability by allowing malicious input to reach the vulnerable function. |\n\n**Conclusion:**\n\nThe initial analysis is strong. The choice of CWE-674 is well-justified. By incorporating the suggested improvements, the analysis can be further enhanced by:\n\n*   Explicitly mentioning the role of user-provided input (malicious JavaScript) in triggering the recursion.\n*   Discussing input validation as a secondary weakness (CWE-20).\n*   Proposing more specific mitigations tailored to the Jsi framework and the nature of the crafted input.\n\nBy addressing these points, the analysis will provide a more complete and actionable understanding of the vulnerability.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-674 | Improper Control of Recursion | 0.9 | Class | Primary | Allowed-with-Review |\n| CWE-20 | Improper Input Validation | 0.6 | Base | Secondary | Contributes to vulnerability by allowing malicious input to reach the vulnerable function. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness, **CWE-674 (Improper Control of Recursion)**, is a Class-level CWE. While it doesn't have direct relationships listed in the provided data, it is conceptually related to resource management issues. The **stack overflow** is a direct consequence of the uncontrolled recursion. A potential parent is **CWE-834 (Excessive Iteration)**, representing a broader category of resource consumption issues. The secondary weakness, **CWE-20 (Improper Input Validation)**, highlights that the vulnerability is triggered by crafted input. The relationship between these CWEs is that the **lack of input validation** allows malicious input to reach the vulnerable function, triggering the uncontrolled recursion and leading to a **stack overflow**.\n\n```mermaid\ngraph TD\n    cwe674[\"CWE-674: Improper Control of Recursion\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe834[\"CWE-834: Excessive Iteration\"]\n\n    cwe674 -->|CHILDOF| cwe834\n    cwe20 -->|CANPRECEDE| cwe674\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe674 primary\n    class cwe20 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-20 (Improper Input Validation)**, allowing crafted JavaScript input to reach the `Jsi_LogMsg` function. This triggers **CWE-674 (Improper Control of Recursion)** within the `Jsi_ValueToString` and `Jsi_LogMsg` functions, leading to unbounded recursion. The consequence of this recursion is a **stack overflow**, which causes the application to crash.\n\n## Summary of Analysis\nThe initial analysis correctly identified **CWE-674 (Improper Control of Recursion)** as the primary weakness, given the **stack overflow** caused by uncontrolled recursion within the `Jsi_LogMsg` function. The vulnerability description clearly states a \"**stack overflow** via Jsi_LogMsg at src/jsiUtils.c\" which is reinforced by CVE Reference Links Content Summary, highlighting \"Stack overflow due to unbounded recursion\" and \"Improper handling of specific input data, causing infinite recursion\".\n\nThe criticism suggested adding **CWE-20 (Improper Input Validation)** as a secondary weakness, which is appropriate because the crafted JavaScript input is the trigger for the vulnerability. The **lack of input validation** allows malicious input to reach the vulnerable function, triggering the uncontrolled recursion.\n\nThe graph relationships support this decision by illustrating how **CWE-20** can precede **CWE-674**.\n\nThe selected CWEs are at the optimal level of specificity. **CWE-674** directly addresses the uncontrolled recursion, while **CWE-20** highlights the role of user-provided input.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 89.69765940687375,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5074061440971027,
            "sparse": 89.69765940687375,
            "graph": 1.7953243297503185
          },
          "normalized_scores": {
            "dense": 0.5074061440971027,
            "sparse": 0.071758127525499,
            "graph": 0.6411872606251138
          },
          "weighted_scores": {
            "dense": 0.17759215043398593,
            "sparse": 0.0287032510101996,
            "graph": 0.16029681515627844
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5074061440971027,
              "query_max": 0.5627511633080399,
              "query_min": 0.47230966457343243,
              "normalized_score": 0.5074061440971027,
              "weight": 0.35,
              "weighted_score": 0.17759215043398593
            },
            "sparse": {
              "raw_score": 89.69765940687375,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.071758127525499,
              "weight": 0.4,
              "weighted_score": 0.0287032510101996
            },
            "graph": {
              "raw_score": 1.7953243297503185,
              "query_max": 2.3868000000000005,
              "query_min": 1.5552000000000004,
              "normalized_score": 0.6411872606251138,
              "weight": 0.25,
              "weighted_score": 0.16029681515627844
            }
          },
          "contribution_percentages": {
            "dense": 48.44405920039961,
            "sparse": 7.829749162809494,
            "graph": 43.726191636790894
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.366592216600464,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4765698815806032
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4765698815806032
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.5242268697386636
            }
          },
          "combined_score": 0.5242268697386636
        }
      },
      "similarity": 0.5242268697386636
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 106.26715608465562,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.47230966457343243,
            "sparse": 106.26715608465562,
            "graph": 1.6627869265377
          },
          "normalized_scores": {
            "dense": 0.47230966457343243,
            "sparse": 0.0850137248677245,
            "graph": 0.5938524737634643
          },
          "weighted_scores": {
            "dense": 0.16530838260070135,
            "sparse": 0.0340054899470898,
            "graph": 0.14846311844086607
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.47230966457343243,
              "query_max": 0.5627511633080399,
              "query_min": 0.47230966457343243,
              "normalized_score": 0.47230966457343243,
              "weight": 0.35,
              "weighted_score": 0.16530838260070135
            },
            "sparse": {
              "raw_score": 106.26715608465562,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.0850137248677245,
              "weight": 0.4,
              "weighted_score": 0.0340054899470898
            },
            "graph": {
              "raw_score": 1.6627869265377,
              "query_max": 2.3868000000000005,
              "query_min": 1.5552000000000004,
              "normalized_score": 0.5938524737634643,
              "weight": 0.25,
              "weighted_score": 0.14846311844086607
            }
          },
          "contribution_percentages": {
            "dense": 47.53286930534542,
            "sparse": 9.777958527509053,
            "graph": 42.68917216714553
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3477769909886572,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4521100882852544
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4521100882852544
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.49732109711377986
            }
          },
          "combined_score": 0.49732109711377986
        }
      },
      "similarity": 0.49732109711377986
    },
    {
      "metadata": {
        "doc_id": "CWE-170",
        "name": "Improper Null Termination",
        "type": "Base",
        "original_content": "The product does not terminate or incorrectly terminates a string or array with a null character or equivalent terminator.",
        "relationships": [],
        "original_sparse_score": 97.35088447696543,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 97.35088447696543,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.07788070758157235,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.031152283032628944,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 97.35088447696543,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.07788070758157235,
              "weight": 0.4,
              "weighted_score": 0.031152283032628944
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 2.3868000000000005,
              "query_min": 1.5552000000000004,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 13.634952929121013,
            "graph": 86.36504707087899
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.22847371160405755,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2970158250852748
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2970158250852748
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3267174075938023
            }
          },
          "combined_score": 0.3267174075938023
        }
      },
      "similarity": 0.3267174075938023
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 138.97117469086507,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5303922626417066,
            "sparse": 138.97117469086507
          },
          "normalized_scores": {
            "dense": 0.5303922626417066,
            "sparse": 0.11117693975269205
          },
          "weighted_scores": {
            "dense": 0.1856372919245973,
            "sparse": 0.04447077590107682
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5303922626417066,
              "query_max": 0.5627511633080399,
              "query_min": 0.47230966457343243,
              "normalized_score": 0.5303922626417066,
              "weight": 0.35,
              "weighted_score": 0.1856372919245973
            },
            "sparse": {
              "raw_score": 138.97117469086507,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.11117693975269205,
              "weight": 0.4,
              "weighted_score": 0.04447077590107682
            }
          },
          "contribution_percentages": {
            "dense": 80.67396057805017,
            "sparse": 19.326039421949826
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2301080678256741,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.2761296813908089
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2761296813908089
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.30374264952988983
            }
          },
          "combined_score": 0.30374264952988983
        }
      },
      "similarity": 0.30374264952988983
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 107.39473088298632,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 107.39473088298632,
            "graph": 1.9109795670627918
          },
          "normalized_scores": {
            "sparse": 0.08591578470638905,
            "graph": 0.6824927025224257
          },
          "weighted_scores": {
            "sparse": 0.03436631388255562,
            "graph": 0.17062317563060642
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 107.39473088298632,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.08591578470638905,
              "weight": 0.4,
              "weighted_score": 0.03436631388255562
            },
            "graph": {
              "raw_score": 1.9109795670627918,
              "query_max": 2.3868000000000005,
              "query_min": 1.5552000000000004,
              "normalized_score": 0.6824927025224257,
              "weight": 0.25,
              "weighted_score": 0.17062317563060642
            }
          },
          "contribution_percentages": {
            "sparse": 16.764915100853997,
            "graph": 83.235084899146
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.20498948951316204,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.26648633636711067
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.26648633636711067
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.29313497000382177
            }
          },
          "combined_score": 0.29313497000382177
        }
      },
      "similarity": 0.29313497000382177
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 124.37512425727492,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5175493649409593,
            "sparse": 124.37512425727492
          },
          "normalized_scores": {
            "dense": 0.5175493649409593,
            "sparse": 0.09950009940581994
          },
          "weighted_scores": {
            "dense": 0.18114227772933572,
            "sparse": 0.03980003976232798
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5175493649409593,
              "query_max": 0.5627511633080399,
              "query_min": 0.47230966457343243,
              "normalized_score": 0.5175493649409593,
              "weight": 0.35,
              "weighted_score": 0.18114227772933572
            },
            "sparse": {
              "raw_score": 124.37512425727492,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.09950009940581994,
              "weight": 0.4,
              "weighted_score": 0.03980003976232798
            }
          },
          "contribution_percentages": {
            "dense": 81.9862305174609,
            "sparse": 18.013769482539107
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2209423174916637,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.26513078098999643
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.26513078098999643
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2916438590889961
            }
          },
          "combined_score": 0.2916438590889961
        }
      },
      "similarity": 0.2916438590889961
    },
    {
      "metadata": {
        "doc_id": "CWE-770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [],
        "original_sparse_score": 93.10776406153532,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.48981639234652974,
            "sparse": 93.10776406153532
          },
          "normalized_scores": {
            "dense": 0.48981639234652974,
            "sparse": 0.07448621124922826
          },
          "weighted_scores": {
            "dense": 0.1714357373212854,
            "sparse": 0.029794484499691305
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.48981639234652974,
              "query_max": 0.5627511633080399,
              "query_min": 0.47230966457343243,
              "normalized_score": 0.48981639234652974,
              "weight": 0.35,
              "weighted_score": 0.1714357373212854
            },
            "sparse": {
              "raw_score": 93.10776406153532,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.07448621124922826,
              "weight": 0.4,
              "weighted_score": 0.029794484499691305
            }
          },
          "contribution_percentages": {
            "dense": 85.19383210430598,
            "sparse": 14.806167895694017
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2012302218209767,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2615992883672697
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2615992883672697
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2877592172039967
            }
          },
          "combined_score": 0.2877592172039967
        }
      },
      "similarity": 0.2877592172039967
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 97.26777581996164,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4842540465292318,
            "sparse": 97.26777581996164
          },
          "normalized_scores": {
            "dense": 0.4842540465292318,
            "sparse": 0.07781422065596931
          },
          "weighted_scores": {
            "dense": 0.16948891628523113,
            "sparse": 0.031125688262387725
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4842540465292318,
              "query_max": 0.5627511633080399,
              "query_min": 0.47230966457343243,
              "normalized_score": 0.4842540465292318,
              "weight": 0.35,
              "weighted_score": 0.16948891628523113
            },
            "sparse": {
              "raw_score": 97.26777581996164,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.07781422065596931,
              "weight": 0.4,
              "weighted_score": 0.031125688262387725
            }
          },
          "contribution_percentages": {
            "dense": 84.48483432570853,
            "sparse": 15.515165674291465
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.20061460454761887,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.26079898591190454
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.26079898591190454
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.286878884503095
            }
          },
          "combined_score": 0.286878884503095
        }
      },
      "similarity": 0.286878884503095
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 84.73196336395705,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5184778131250332,
            "sparse": 84.73196336395705
          },
          "normalized_scores": {
            "dense": 0.5184778131250332,
            "sparse": 0.06778557069116564
          },
          "weighted_scores": {
            "dense": 0.1814672345937616,
            "sparse": 0.027114228276466257
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5184778131250332,
              "query_max": 0.5627511633080399,
              "query_min": 0.47230966457343243,
              "normalized_score": 0.5184778131250332,
              "weight": 0.35,
              "weighted_score": 0.1814672345937616
            },
            "sparse": {
              "raw_score": 84.73196336395705,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.06778557069116564,
              "weight": 0.4,
              "weighted_score": 0.027114228276466257
            }
          },
          "contribution_percentages": {
            "dense": 87.00065293274129,
            "sparse": 12.999347067258698
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.20858146287022786,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.2502977554442734
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2502977554442734
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2753275309887008
            }
          },
          "combined_score": 0.2753275309887008
        }
      },
      "similarity": 0.2753275309887008
    },
    {
      "metadata": {
        "doc_id": "CWE-120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "type": "Base",
        "original_content": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 100.57824943595331,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
          "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4830615063458157,
            "sparse": 100.57824943595331
          },
          "normalized_scores": {
            "dense": 0.4830615063458157,
            "sparse": 0.08046259954876264
          },
          "weighted_scores": {
            "dense": 0.16907152722103547,
            "sparse": 0.03218503981950506
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4830615063458157,
              "query_max": 0.5627511633080399,
              "query_min": 0.47230966457343243,
              "normalized_score": 0.4830615063458157,
              "weight": 0.35,
              "weighted_score": 0.16907152722103547
            },
            "sparse": {
              "raw_score": 100.57824943595331,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.08046259954876264,
              "weight": 0.4,
              "weighted_score": 0.03218503981950506
            }
          },
          "contribution_percentages": {
            "dense": 84.0079554705801,
            "sparse": 15.992044529419905
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.2012565670405405,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.26163353715270266
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.26163353715270266
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
                "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.2747152140103378
            }
          },
          "combined_score": 0.2747152140103378
        }
      },
      "similarity": 0.2747152140103378
    },
    {
      "metadata": {
        "doc_id": "CWE-401",
        "name": "Missing Release of Memory after Effective Lifetime",
        "type": "Variant",
        "original_content": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
        "relationships": [],
        "original_sparse_score": 88.42494030262671,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4846037764525933,
            "sparse": 88.42494030262671
          },
          "normalized_scores": {
            "dense": 0.4846037764525933,
            "sparse": 0.07073995224210136
          },
          "weighted_scores": {
            "dense": 0.16961132175840765,
            "sparse": 0.028295980896840545
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4846037764525933,
              "query_max": 0.5627511633080399,
              "query_min": 0.47230966457343243,
              "normalized_score": 0.4846037764525933,
              "weight": 0.35,
              "weighted_score": 0.16961132175840765
            },
            "sparse": {
              "raw_score": 88.42494030262671,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.07073995224210136,
              "weight": 0.4,
              "weighted_score": 0.028295980896840545
            }
          },
          "contribution_percentages": {
            "dense": 85.70240687574235,
            "sparse": 14.297593124257652
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.1979073026552482,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.23748876318629783
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.23748876318629783
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2612376395049276
            }
          },
          "combined_score": 0.2612376395049276
        }
      },
      "similarity": 0.2612376395049276
    },
    {
      "metadata": {
        "doc_id": "CWE-789",
        "name": "Memory Allocation with Excessive Size Value",
        "type": "Variant",
        "original_content": "The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.",
        "relationships": [],
        "original_sparse_score": 80.5880742676192,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4745713080544306,
            "sparse": 80.5880742676192
          },
          "normalized_scores": {
            "dense": 0.4745713080544306,
            "sparse": 0.06447045941409536
          },
          "weighted_scores": {
            "dense": 0.1660999578190507,
            "sparse": 0.025788183765638146
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4745713080544306,
              "query_max": 0.5627511633080399,
              "query_min": 0.47230966457343243,
              "normalized_score": 0.4745713080544306,
              "weight": 0.35,
              "weighted_score": 0.1660999578190507
            },
            "sparse": {
              "raw_score": 80.5880742676192,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.06447045941409536,
              "weight": 0.4,
              "weighted_score": 0.025788183765638146
            }
          },
          "contribution_percentages": {
            "dense": 86.56082468011361,
            "sparse": 13.439175319886385
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.19188814158468886,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.23026576990162662
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.23026576990162662
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2532923468917893
            }
          },
          "combined_score": 0.2532923468917893
        }
      },
      "similarity": 0.2532923468917893
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 179.06380660266382,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5627511633080399,
            "sparse": 179.06380660266382
          },
          "normalized_scores": {
            "dense": 0.5627511633080399,
            "sparse": 0.14325104528213106
          },
          "weighted_scores": {
            "dense": 0.19696290715781395,
            "sparse": 0.05730041811285243
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5627511633080399,
              "query_max": 0.5627511633080399,
              "query_min": 0.47230966457343243,
              "normalized_score": 0.5627511633080399,
              "weight": 0.35,
              "weighted_score": 0.19696290715781395
            },
            "sparse": {
              "raw_score": 179.06380660266382,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.14325104528213106,
              "weight": 0.4,
              "weighted_score": 0.05730041811285243
            }
          },
          "contribution_percentages": {
            "dense": 77.46414350089404,
            "sparse": 22.535856499105975
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.25426332527066636,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.2034106602165331
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2034106602165331
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.21358119322735974
            }
          },
          "combined_score": 0.21358119322735974
        }
      },
      "similarity": 0.21358119322735974
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 90.94104164472976,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 90.94104164472976
          },
          "normalized_scores": {
            "sparse": 0.07275283331578382
          },
          "weighted_scores": {
            "sparse": 0.02910113332631353
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 90.94104164472976,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.07275283331578382,
              "weight": 0.4,
              "weighted_score": 0.02910113332631353
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.02910113332631353,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.03783147332420759
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.03783147332420759
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.041614620656628354
            }
          },
          "combined_score": 0.041614620656628354
        }
      },
      "similarity": 0.041614620656628354
    },
    {
      "metadata": {
        "doc_id": "CWE-835",
        "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "type": "Base",
        "original_content": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
        "relationships": [],
        "original_sparse_score": 84.58365105618087,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 84.58365105618087
          },
          "normalized_scores": {
            "sparse": 0.06766692084494469
          },
          "weighted_scores": {
            "sparse": 0.027066768337977876
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 84.58365105618087,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.06766692084494469,
              "weight": 0.4,
              "weighted_score": 0.027066768337977876
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.027066768337977876,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.03518679883937124
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.03518679883937124
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.038705478723308366
            }
          },
          "combined_score": 0.038705478723308366
        }
      },
      "similarity": 0.038705478723308366
    },
    {
      "metadata": {
        "doc_id": "CWE-124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "type": "Base",
        "original_content": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "relationships": [],
        "original_sparse_score": 84.29773128719837,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 84.29773128719837
          },
          "normalized_scores": {
            "sparse": 0.0674381850297587
          },
          "weighted_scores": {
            "sparse": 0.02697527401190348
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 84.29773128719837,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.0674381850297587,
              "weight": 0.4,
              "weighted_score": 0.02697527401190348
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.02697527401190348,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.03506785621547452
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.03506785621547452
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.03857464183702198
            }
          },
          "combined_score": 0.03857464183702198
        }
      },
      "similarity": 0.03857464183702198
    },
    {
      "metadata": {
        "doc_id": "CWE-1325",
        "name": "Improperly Controlled Sequential Memory Allocation",
        "type": "Base",
        "original_content": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.",
        "relationships": [],
        "original_sparse_score": 82.82532984780372,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 82.82532984780372
          },
          "normalized_scores": {
            "sparse": 0.06626026387824298
          },
          "weighted_scores": {
            "sparse": 0.026504105551297192
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 82.82532984780372,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.06626026387824298,
              "weight": 0.4,
              "weighted_score": 0.026504105551297192
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.026504105551297192,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.03445533721668635
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.03445533721668635
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.03790087093835499
            }
          },
          "combined_score": 0.03790087093835499
        }
      },
      "similarity": 0.03790087093835499
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 85.65173565860204,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 85.65173565860204
          },
          "normalized_scores": {
            "sparse": 0.06852138852688162
          },
          "weighted_scores": {
            "sparse": 0.027408555410752652
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 85.65173565860204,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.06852138852688162,
              "weight": 0.4,
              "weighted_score": 0.027408555410752652
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.027408555410752652,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.021926844328602122
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.021926844328602122
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.0175414754628817
            }
          },
          "combined_score": 0.0175414754628817
        }
      },
      "similarity": 0.0175414754628817
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 76.77083246232064,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 76.77083246232064
          },
          "normalized_scores": {
            "sparse": 0.06141666596985651
          },
          "weighted_scores": {
            "sparse": 0.024566666387942606
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 76.77083246232064,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.06141666596985651,
              "weight": 0.4,
              "weighted_score": 0.024566666387942606
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.024566666387942606,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.019653333110354086
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.019653333110354086
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.015722666488283268
            }
          },
          "combined_score": 0.015722666488283268
        }
      },
      "similarity": 0.015722666488283268
    },
    {
      "metadata": {
        "doc_id": "CWE-682",
        "name": "Incorrect Calculation",
        "type": "Pillar",
        "original_content": "The product performs a calculation that generates incorrect or unintended results that are later used in security-critical decisions or resource management.",
        "relationships": [],
        "original_sparse_score": 78.39746822410368,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is extremely high-level, a Pillar. In many cases, lower-level children or descendants are more appropriate. However, sometimes this weakness is forced to be used due to the lack of in-depth weakness research. See Research Gaps.",
          "comments": "Where feasible, consider children or descendants of this entry instead.",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 78.39746822410368
          },
          "normalized_scores": {
            "sparse": 0.06271797457928294
          },
          "weighted_scores": {
            "sparse": 0.025087189831713177
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 78.39746822410368,
              "query_max": 179.06380660266382,
              "query_min": 76.77083246232064,
              "normalized_score": 0.06271797457928294,
              "weight": 0.4,
              "weighted_score": 0.025087189831713177
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.6,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.025087189831713177,
            "abstraction": {
              "type": "pillar",
              "factor": 0.6,
              "score_after": 0.015052313899027905
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.015052313899027905
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is extremely high-level, a Pillar. In many cases, lower-level children or descendants are more appropriate. However, sometimes this weakness is forced to be used due to the lack of in-depth weakness research. See Research Gaps.",
                "comments": "Where feasible, consider children or descendants of this entry instead.",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.012041851119222326
            }
          },
          "combined_score": 0.012041851119222326
        }
      },
      "similarity": 0.012041851119222326
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-674"
    ],
    "critic_additional": [
      "CWE-770",
      "CWE-121",
      "CWE-20",
      "CWE-834"
    ]
  }
}