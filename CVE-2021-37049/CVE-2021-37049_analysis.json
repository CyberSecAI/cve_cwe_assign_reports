{
  "cve_id": "CVE-2021-37049",
  "description": "There is a Heap-based buffer overflow vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may rewrite the memory of adjacent objects.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "Heap-based buffer overflow",
    "impact": "rewrite the memory of adjacent objects",
    "vector": "",
    "attacker": "",
    "product": "Huawei Smartphone",
    "version": "",
    "component": ""
  },
  "reference_content": "- **Root cause of vulnerability**: Heap-based buffer overflow.\n- **Vulnerabilities**: Heap-based buffer overflow, allowing memory corruption by overwriting adjacent objects in memory.\n- **Impact of exploitation**: Successful exploitation may lead to rewriting the memory of adjacent objects, potentially leading to code execution or other undefined behavior.\n- **Attack vectors**: Not specified in detail.\n- **Required attacker capabilities/position**: The attacker would need to trigger the vulnerability through some specific input or condition that leads to the buffer overflow. Specific capabilities are not mentioned in this description.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.95 | Variant | Allowed | Primary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability is described as a \"**Heap-based buffer overflow**\" in Huawei Smartphone. The **root cause of the vulnerability** is also stated as a **Heap-based buffer overflow**. This directly matches the definition of CWE-122 (Heap-based Buffer Overflow), which is a buffer overflow that occurs in the heap portion of memory. The impact of the overflow is that it can rewrite adjacent objects in memory. CWE-122 is a Variant-level CWE, which is a preferred level of abstraction. The MITRE mapping guidance for CWE-122 indicates that its usage is ALLOWED.\n  \n  - *Relationship Analysis:* CWE-122 is a variant of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). While CWE-119 is a broader category, the description specifically mentions \"Heap-based,\" making CWE-122 a more precise and appropriate classification.\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.95 (High confidence due to explicit mention of \"Heap-based buffer overflow\" in both the vulnerability description and the root cause analysis.)\n\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.95 | Variant | Allowed | Primary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability is described as a \"**Heap-based buffer overflow**\" in Huawei Smartphone. The **root cause of the vulnerability** is also stated as a **Heap-based buffer overflow**. This directly matches the definition of CWE-122 (Heap-based Buffer Overflow), which is a buffer overflow that occurs in the heap portion of memory. The impact of the overflow is that it can rewrite adjacent objects in memory. CWE-122 is a Variant-level CWE, which is a preferred level of abstraction. The MITRE mapping guidance for CWE-122 indicates that its usage is ALLOWED.\n  \n  - *Relationship Analysis:* CWE-122 is a variant of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). While CWE-119 is a broader category, the description specifically mentions \"Heap-based,\" making CWE-122 a more precise and appropriate classification.\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.95 (High confidence due to explicit mention of \"Heap-based buffer overflow\" in both the vulnerability description and the root cause analysis.)\n\n---",
  "criticism": "Okay, here's a review of the provided analysis, considering the full CWE specifications and mapping guidance.\n\n**Overall Assessment:**\n\nThe primary CWE mapping to `CWE-122: Heap-based Buffer Overflow` is **correct and well-justified**. The analysis provides strong evidence based on the vulnerability description and CVE reference links content. The confidence score of 0.95 is appropriate. However, the automated retriever results include a number of other CWEs that warrant further examination.\n\n**Detailed Review:**\n\n| CWE ID  | CWE Name                      | Justification of Inclusion/Exclusion | Alternative CWEs Considered?  | Notes/Improvements |\n|---------|-------------------------------|--------------------------------------|-----------------------------------|--------------------|\n| **CWE-122** | **Heap-based Buffer Overflow** | **Correct and well-justified.** Direct match to vulnerability description and root cause.  Meets mapping guidance.  | N/A                             | Excellent explanation and confidence score. |\n| CWE-119 | Improper Restriction of Operations within the Bounds of a Memory Buffer | **Excluded (Correct).** The analysis correctly states that CWE-119 is a broader category and CWE-122 is more precise. The mapping guidance for CWE-119 explicitly discourages its use when more specific CWEs are applicable. | YES, CWE-122 is a child of CWE-119 and is preferred. | Proper use of mapping guidelines. |\n| CWE-787 | Out-of-bounds Write | **Relevant, but secondary**. While a heap-based buffer overflow is *always* an out-of-bounds write, the analysis correctly prioritizes CWE-122 as it provides more specific context (heap allocation). CWE-787 could be listed as a related CWE or a potential consequence.  | YES, CWE-122 is a child of CWE-787 and is preferred. | A brief mention of CWE-787 as a consequence could improve the analysis. |\n| CWE-788 | Access of Memory Location After End of Buffer | **Excluded (Correct).**  This CWE is discouraged for use and the more specific CWE-122 is preferred.  There is also no out-of-bounds read. | YES, prefered to use CWE-787 or CWE-125 | Proper use of mapping guidelines. |\n| CWE-131 | Incorrect Calculation of Buffer Size | **Potentially relevant, but lacking information.** The description doesn't explicitly state an incorrect calculation, *but* buffer overflows are *often* caused by such calculations.  If further analysis reveals an error in size calculation, then CWE-131 would be appropriate to include as a *root cause leading to* CWE-122.  Without that information, it should be excluded. | Not applicable without additional findings. | Need more details to confirm if buffer size calculations are flawed. If so, include and show relationship to CWE-122. |\n| CWE-190 | Integer Overflow or Wraparound | **Potentially relevant, but lacking information.** Integer overflows can lead to buffer overflows. If the size of the allocated buffer is calculated using a value that can overflow, then this CWE would be appropriate. This weakness would be a *root cause leading to* CWE-122. | Not applicable without additional findings. | Investigate whether an integer overflow could have contributed to the size calculation used in the heap allocation. If so, include and show relationship to CWE-122. |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | **Potentially relevant, but lacking information.** Similar to CWE-131 and CWE-190, if the *quantity* of data to be written to the heap buffer was improperly validated, leading to a buffer overflow, then it should be included as a root cause.  Without that information, it should be excluded. | Not applicable without additional findings. | Investigate whether input validation is performed on any size-related input that could lead to the overflow. If so, include and show relationship to CWE-122. |\n| CWE-124 | Buffer Underwrite ('Buffer Underflow') | **Excluded (Correct).** The vulnerability is described as an overflow, not an underflow. | N/A | Proper exclusion. |\n| CWE-125 | Out-of-bounds Read | **Excluded (Correct).** The vulnerability is described as an *overflow*, which implies a *write* beyond the bounds of the buffer, not a read. | N/A | Proper exclusion. |\n| CWE-191 | Integer Underflow (Wrap or Wraparound) | **Potentially relevant, but lacking information.** Similar to CWE-190, if the *quantity* of data to be written to the heap buffer or the amount of memory to allocate was calculated using a value that can *underflow*, then it should be included as a root cause.  Without that information, it should be excluded. | Not applicable without additional findings. | Investigate whether integer underflow contributed to buffer size calculations or amount of data to be written. |\n| CWE-121 | Stack-based Buffer Overflow | **Excluded (Correct).** The vulnerability is *explicitly* stated as heap-based, eliminating stack-based possibilities. | N/A | Proper exclusion. |\n| CWE-126 | Buffer Over-read | **Excluded (Correct).** The vulnerability is described as an *overflow*, which implies a *write* beyond the bounds of the buffer, not a read. | N/A | Proper exclusion. |\n| CWE-681, CWE-195, CWE-170, CWE-1339, CWE-839, CWE-788, CWE-120, CWE-123, CWE-1257, CWE-1260, CWE-118, CWE-20, CWE-466, CWE-805 | Various | **Excluded (Correct).**  These are not relevant, based on the description provided and are false positives. | N/A | Proper exclusion. |\n\n**Recommendations for Improvement:**\n\n1.  **Chain Analysis (where applicable):** For CWE-131, CWE-190, CWE-191, and CWE-1284, if further investigation reveals their relevance, clearly articulate the *chain of events* leading to the heap-based buffer overflow.  For example: \"Improper validation of the input size (CWE-1284) leads to an incorrect calculation of the buffer size (CWE-131), resulting in a heap-based buffer overflow (CWE-122).\"  This demonstrates a deeper understanding of the vulnerability.\n2.  **Consequences vs. Root Cause:** Explicitly state that CWE-787 is a consequence of the overflow, rather than a root cause.\n3. **Attack vectors and preconditions:** Although the analysis already correctly maps the CWE, it should also briefly mention potential attack vectors and preconditions needed to trigger the vulnerability, if such information is available. This can aid in understanding the practicality and impact of the vulnerability.\n4.  **Mitigations:** The analysis correctly identifies CWE-122, it could benefit from including specific mitigations directly related to the Huawei smartphone context, if available. This helps developers better understand how to address the vulnerability.\n\n**Revised Summary Table (Example based on potential findings):**\n\n| CWE ID  | CWE Name                                      | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes                                                                                                                                                                                                                                                  |\n|---------|-----------------------------------------------|------------|-----------------------|---------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| CWE-122 | Heap-based Buffer Overflow                    | 0.95       | Variant               | Allowed                        | Primary CWE. Direct match to the vulnerability description and root cause.                                                                                                                                                                                                                  |\n| CWE-131 | Incorrect Calculation of Buffer Size         | 0.70       | Base                  | Allowed                        | Root cause leading to CWE-122. The allocated buffer size is calculated incorrectly, providing insufficient space.                                                                                                                                                                |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.60 | Base | Allowed | Another contributing root cause: the amount of data to be written is not properly validated against the buffer size.\n| CWE-787 | Out-of-bounds Write | 0.30 | Base | Allowed | Consequence of the heap-based buffer overflow.  The overflow results in writing data beyond the intended buffer boundaries. |\n\nBy incorporating these suggestions, the analysis can be made even more robust and informative. Remember the key is to use the CWE specifications to guide the analysis and provide a clear and justifiable explanation for all inclusions and exclusions.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.95 | Variant | Allowed | Primary CWE |\n| CWE-787 | Out-of-bounds Write | 0.60 | Base | Allowed | Secondary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship that impacted the decision was the child-of relationship between CWE-122 and CWE-119, and between CWE-122 and CWE-787. While CWE-119 is a broader category, CWE-122 is more specific because it explicitly states the overflow occurs in the heap. CWE-787 is a more general description of the result of the overflow, and is less specific than CWE-122.\n\n```mermaid\ngraph TD\n    cwe122[\"CWE-122: Heap-based Buffer Overflow\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    \n    cwe122 -->|CHILDOF| cwe119\n    cwe122 -->|CHILDOF| cwe787\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe122 primary\n    class cwe787 secondary\n    class cwe119 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a **ROOTCAUSE** that leads to the **WEAKNESS**:\n1.  Improper memory management leads to a heap-based buffer overflow (**CWE-122**).\n2.  This results in writing data beyond the intended buffer boundaries (**CWE-787**), potentially rewriting adjacent objects in memory.\n\nThere is no explicit mention of the root cause of the buffer overflow, like incorrect size calculation or missing bounds check.\n\n## Summary of Analysis\nThe initial analysis correctly identifies **CWE-122 (Heap-based Buffer Overflow)** as the primary **WEAKNESS**, given the vulnerability description: \"There is a **Heap-based buffer overflow** vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may rewrite the memory of adjacent objects.\" The description explicitly mentions \"Heap-based buffer overflow,\" which aligns directly with CWE-122.\n\nThe criticism correctly points out that other CWEs, such as **CWE-131 (Incorrect Calculation of Buffer Size)**, **CWE-190 (Integer Overflow or Wraparound)**, and **CWE-1284 (Improper Validation of Specified Quantity in Input)**, could be potential **ROOTCAUSES** leading to the **CWE-122 (Heap-based Buffer Overflow)**. However, without further information or evidence, these are speculative.\n\nThe criticism also correctly identifies that **CWE-787 (Out-of-bounds Write)** is a consequence of the heap-based buffer overflow.\n\nGiven the available evidence, **CWE-122** remains the most accurate primary classification because it aligns directly with the vulnerability description. Adding **CWE-787** as a secondary classification provides additional context about the consequence of the **WEAKNESS**, which is to overwrite memory.\n\nThe selected CWEs are at the optimal level of specificity based on the available evidence. While more specific **ROOTCAUSES** could exist, the current information does not support those classifications.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 222.84730787050054,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5492709473040589,
            "sparse": 222.84730787050054,
            "graph": 2.525316275529523
          },
          "normalized_scores": {
            "dense": 0.5492709473040589,
            "sparse": 0.17827784629640042,
            "graph": 0.9018986698319725
          },
          "weighted_scores": {
            "dense": 0.1922448315564206,
            "sparse": 0.07131113851856018,
            "graph": 0.22547466745799313
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5492709473040589,
              "query_max": 0.5684159423876535,
              "query_min": 0.49797295247858653,
              "normalized_score": 0.5492709473040589,
              "weight": 0.35,
              "weighted_score": 0.1922448315564206
            },
            "sparse": {
              "raw_score": 222.84730787050054,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.17827784629640042,
              "weight": 0.4,
              "weighted_score": 0.07131113851856018
            },
            "graph": {
              "raw_score": 2.525316275529523,
              "query_max": 2.525316275529523,
              "query_min": 1.5509379412746689,
              "normalized_score": 0.9018986698319725,
              "weight": 0.25,
              "weighted_score": 0.22547466745799313
            }
          },
          "contribution_percentages": {
            "dense": 39.311408488892084,
            "sparse": 14.582141290432313,
            "graph": 46.10645022067559
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.48903063753297393,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6357398287928662
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6357398287928662
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6993138116721529
            }
          },
          "combined_score": 0.6993138116721529
        }
      },
      "similarity": 0.6993138116721529
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 215.62684311228364,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5684159423876535,
            "sparse": 215.62684311228364,
            "graph": 2.0935663090432555
          },
          "normalized_scores": {
            "dense": 0.5684159423876535,
            "sparse": 0.17250147448982692,
            "graph": 0.7477022532297342
          },
          "weighted_scores": {
            "dense": 0.1989455798356787,
            "sparse": 0.06900058979593077,
            "graph": 0.18692556330743354
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5684159423876535,
              "query_max": 0.5684159423876535,
              "query_min": 0.49797295247858653,
              "normalized_score": 0.5684159423876535,
              "weight": 0.35,
              "weighted_score": 0.1989455798356787
            },
            "sparse": {
              "raw_score": 215.62684311228364,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.17250147448982692,
              "weight": 0.4,
              "weighted_score": 0.06900058979593077
            },
            "graph": {
              "raw_score": 2.0935663090432555,
              "query_max": 2.525316275529523,
              "query_min": 1.5509379412746689,
              "normalized_score": 0.7477022532297342,
              "weight": 0.25,
              "weighted_score": 0.18692556330743354
            }
          },
          "contribution_percentages": {
            "dense": 43.7366328635636,
            "sparse": 15.169241084755972,
            "graph": 41.09412605168044
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.454871732939043,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5913332528207559
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5913332528207559
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.6504665781028315
            }
          },
          "combined_score": 0.6504665781028315
        }
      },
      "similarity": 0.6504665781028315
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 189.600716435557,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 189.600716435557,
            "graph": 2.3998000000000004
          },
          "normalized_scores": {
            "sparse": 0.1516805731484456,
            "graph": 0.8570714285714287
          },
          "weighted_scores": {
            "sparse": 0.06067222925937824,
            "graph": 0.21426785714285718
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 189.600716435557,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.1516805731484456,
              "weight": 0.4,
              "weighted_score": 0.06067222925937824
            },
            "graph": {
              "raw_score": 2.3998000000000004,
              "query_max": 2.525316275529523,
              "query_min": 1.5509379412746689,
              "normalized_score": 0.8570714285714287,
              "weight": 0.25,
              "weighted_score": 0.21426785714285718
            }
          },
          "contribution_percentages": {
            "sparse": 22.06743660166571,
            "graph": 77.93256339833428
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.27494008640223544,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3574221123229061
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3574221123229061
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.39316432355519676
            }
          },
          "combined_score": 0.39316432355519676
        }
      },
      "similarity": 0.39316432355519676
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 166.32670334777887,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 166.32670334777887,
            "graph": 2.2776000000000005
          },
          "normalized_scores": {
            "sparse": 0.1330613626782231,
            "graph": 0.8134285714285716
          },
          "weighted_scores": {
            "sparse": 0.05322454507128924,
            "graph": 0.2033571428571429
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 166.32670334777887,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.1330613626782231,
              "weight": 0.4,
              "weighted_score": 0.05322454507128924
            },
            "graph": {
              "raw_score": 2.2776000000000005,
              "query_max": 2.525316275529523,
              "query_min": 1.5509379412746689,
              "normalized_score": 0.8134285714285716,
              "weight": 0.25,
              "weighted_score": 0.2033571428571429
            }
          },
          "contribution_percentages": {
            "sparse": 20.743703691798558,
            "graph": 79.25629630820143
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.25658168792843217,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3335561943069618
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3335561943069618
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.366911813737658
            }
          },
          "combined_score": 0.366911813737658
        }
      },
      "similarity": 0.366911813737658
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 218.56243268102244,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5675558189332982,
            "sparse": 218.56243268102244
          },
          "normalized_scores": {
            "dense": 0.5675558189332982,
            "sparse": 0.17484994614481794
          },
          "weighted_scores": {
            "dense": 0.19864453662665435,
            "sparse": 0.06993997845792718
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5675558189332982,
              "query_max": 0.5684159423876535,
              "query_min": 0.49797295247858653,
              "normalized_score": 0.5675558189332982,
              "weight": 0.35,
              "weighted_score": 0.19864453662665435
            },
            "sparse": {
              "raw_score": 218.56243268102244,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.17484994614481794,
              "weight": 0.4,
              "weighted_score": 0.06993997845792718
            }
          },
          "contribution_percentages": {
            "dense": 73.95978750453949,
            "sparse": 26.040212495460498
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.26858451508458153,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3223014181014978
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3223014181014978
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.35453155991164764
            }
          },
          "combined_score": 0.35453155991164764
        }
      },
      "similarity": 0.35453155991164764
    },
    {
      "metadata": {
        "doc_id": "CWE-124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "type": "Base",
        "original_content": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "relationships": [],
        "original_sparse_score": 169.55030151382093,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5159311743733563,
            "sparse": 169.55030151382093
          },
          "normalized_scores": {
            "dense": 0.5159311743733563,
            "sparse": 0.13564024121105675
          },
          "weighted_scores": {
            "dense": 0.18057591103067472,
            "sparse": 0.0542560964844227
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5159311743733563,
              "query_max": 0.5684159423876535,
              "query_min": 0.49797295247858653,
              "normalized_score": 0.5159311743733563,
              "weight": 0.35,
              "weighted_score": 0.18057591103067472
            },
            "sparse": {
              "raw_score": 169.55030151382093,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.13564024121105675,
              "weight": 0.4,
              "weighted_score": 0.0542560964844227
            }
          },
          "contribution_percentages": {
            "dense": 76.89578304995986,
            "sparse": 23.10421695004015
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.23483200751509742,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.30528160976962665
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.30528160976962665
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.33580977074658935
            }
          },
          "combined_score": 0.33580977074658935
        }
      },
      "similarity": 0.33580977074658935
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 197.52040369893126,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 197.52040369893126,
            "graph": 1.9085796012578125
          },
          "normalized_scores": {
            "sparse": 0.158016322959145,
            "graph": 0.6816355718777902
          },
          "weighted_scores": {
            "sparse": 0.063206529183658,
            "graph": 0.17040889296944756
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 197.52040369893126,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.158016322959145,
              "weight": 0.4,
              "weighted_score": 0.063206529183658
            },
            "graph": {
              "raw_score": 1.9085796012578125,
              "query_max": 2.525316275529523,
              "query_min": 1.5509379412746689,
              "normalized_score": 0.6816355718777902,
              "weight": 0.25,
              "weighted_score": 0.17040889296944756
            }
          },
          "contribution_percentages": {
            "sparse": 27.05580333743295,
            "graph": 72.94419666256707
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.23361542215310555,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3037000487990372
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3037000487990372
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.334070053678941
            }
          },
          "combined_score": 0.334070053678941
        }
      },
      "similarity": 0.334070053678941
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 166.90364246309971,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5139156675446013,
            "sparse": 166.90364246309971
          },
          "normalized_scores": {
            "dense": 0.5139156675446013,
            "sparse": 0.13352291397047977
          },
          "weighted_scores": {
            "dense": 0.17987048364061042,
            "sparse": 0.05340916558819191
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5139156675446013,
              "query_max": 0.5684159423876535,
              "query_min": 0.49797295247858653,
              "normalized_score": 0.5139156675446013,
              "weight": 0.35,
              "weighted_score": 0.17987048364061042
            },
            "sparse": {
              "raw_score": 166.90364246309971,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.13352291397047977,
              "weight": 0.4,
              "weighted_score": 0.05340916558819191
            }
          },
          "contribution_percentages": {
            "dense": 77.10509006475407,
            "sparse": 22.894909935245924
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.23327964922880234,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.30326354399744304
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.30326354399744304
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3335898983971874
            }
          },
          "combined_score": 0.3335898983971874
        }
      },
      "similarity": 0.3335898983971874
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 178.76097116131052,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5461979191357704,
            "sparse": 178.76097116131052
          },
          "normalized_scores": {
            "dense": 0.5461979191357704,
            "sparse": 0.14300877692904843
          },
          "weighted_scores": {
            "dense": 0.19116927169751963,
            "sparse": 0.05720351077161937
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5461979191357704,
              "query_max": 0.5684159423876535,
              "query_min": 0.49797295247858653,
              "normalized_score": 0.5461979191357704,
              "weight": 0.35,
              "weighted_score": 0.19116927169751963
            },
            "sparse": {
              "raw_score": 178.76097116131052,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.14300877692904843,
              "weight": 0.4,
              "weighted_score": 0.05720351077161937
            }
          },
          "contribution_percentages": {
            "dense": 76.9686878719382,
            "sparse": 23.031312128061803
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.248372782469139,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.29804733896296676
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.29804733896296676
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.32785207285926343
            }
          },
          "combined_score": 0.32785207285926343
        }
      },
      "similarity": 0.32785207285926343
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 174.08556482676906,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5479036638002062,
            "sparse": 174.08556482676906
          },
          "normalized_scores": {
            "dense": 0.5479036638002062,
            "sparse": 0.13926845186141526
          },
          "weighted_scores": {
            "dense": 0.19176628233007215,
            "sparse": 0.055707380744566104
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5479036638002062,
              "query_max": 0.5684159423876535,
              "query_min": 0.49797295247858653,
              "normalized_score": 0.5479036638002062,
              "weight": 0.35,
              "weighted_score": 0.19176628233007215
            },
            "sparse": {
              "raw_score": 174.08556482676906,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.13926845186141526,
              "weight": 0.4,
              "weighted_score": 0.055707380744566104
            }
          },
          "contribution_percentages": {
            "dense": 77.4895720003285,
            "sparse": 22.51042799967151
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.24747366307463825,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.2969683956895659
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2969683956895659
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.32666523525852253
            }
          },
          "combined_score": 0.32666523525852253
        }
      },
      "similarity": 0.32666523525852253
    },
    {
      "metadata": {
        "doc_id": "CWE-839",
        "name": "Numeric Range Comparison Without Minimum Check",
        "type": "Base",
        "original_content": "The product checks a value to ensure that it is less than or equal to a maximum, but it does not also verify that the value is greater than or equal to the minimum.",
        "relationships": [],
        "original_sparse_score": 162.82492640134797,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 162.82492640134797,
            "graph": 1.6848000000000003
          },
          "normalized_scores": {
            "sparse": 0.13025994112107836,
            "graph": 0.6017142857142859
          },
          "weighted_scores": {
            "sparse": 0.052103976448431344,
            "graph": 0.15042857142857147
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 162.82492640134797,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.13025994112107836,
              "weight": 0.4,
              "weighted_score": 0.052103976448431344
            },
            "graph": {
              "raw_score": 1.6848000000000003,
              "query_max": 2.525316275529523,
              "query_min": 1.5509379412746689,
              "normalized_score": 0.6017142857142859,
              "weight": 0.25,
              "weighted_score": 0.15042857142857147
            }
          },
          "contribution_percentages": {
            "sparse": 25.726223757414967,
            "graph": 74.27377624258503
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2025325478770028,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2632923122401037
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2632923122401037
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.28962154346411406
            }
          },
          "combined_score": 0.28962154346411406
        }
      },
      "similarity": 0.28962154346411406
    },
    {
      "metadata": {
        "doc_id": "CWE-195",
        "name": "Signed to Unsigned Conversion Error",
        "type": "Variant",
        "original_content": "The product uses a signed primitive and performs a cast to an unsigned primitive, which can produce an unexpected value if the value of the signed primitive can not be represented using an unsigned primitive.",
        "relationships": [],
        "original_sparse_score": 174.2044122543059,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 174.2044122543059,
            "graph": 1.5552000000000004
          },
          "normalized_scores": {
            "sparse": 0.1393635298034447,
            "graph": 0.5554285714285716
          },
          "weighted_scores": {
            "sparse": 0.055745411921377885,
            "graph": 0.1388571428571429
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 174.2044122543059,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.1393635298034447,
              "weight": 0.4,
              "weighted_score": 0.055745411921377885
            },
            "graph": {
              "raw_score": 1.5552000000000004,
              "query_max": 2.525316275529523,
              "query_min": 1.5509379412746689,
              "normalized_score": 0.5554285714285716,
              "weight": 0.25,
              "weighted_score": 0.1388571428571429
            }
          },
          "contribution_percentages": {
            "sparse": 28.64577599447362,
            "graph": 71.35422400552638
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.1946025547785208,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.23352306573422493
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.23352306573422493
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.25687537230764745
            }
          },
          "combined_score": 0.25687537230764745
        }
      },
      "similarity": 0.25687537230764745
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 181.94553869093752,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5292457921720705,
            "sparse": 181.94553869093752
          },
          "normalized_scores": {
            "dense": 0.5292457921720705,
            "sparse": 0.14555643095275003
          },
          "weighted_scores": {
            "dense": 0.18523602726022464,
            "sparse": 0.05822257238110001
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5292457921720705,
              "query_max": 0.5684159423876535,
              "query_min": 0.49797295247858653,
              "normalized_score": 0.5292457921720705,
              "weight": 0.35,
              "weighted_score": 0.18523602726022464
            },
            "sparse": {
              "raw_score": 181.94553869093752,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.14555643095275003,
              "weight": 0.4,
              "weighted_score": 0.05822257238110001
            }
          },
          "contribution_percentages": {
            "dense": 76.08522661886809,
            "sparse": 23.91477338113191
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.24345859964132466,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.19476687971305973
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.19476687971305973
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.15581350377044778
            }
          },
          "combined_score": 0.15581350377044778
        }
      },
      "similarity": 0.15581350377044778
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 171.58061031815782,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5015333833113275,
            "sparse": 171.58061031815782
          },
          "normalized_scores": {
            "dense": 0.5015333833113275,
            "sparse": 0.13726448825452625
          },
          "weighted_scores": {
            "dense": 0.1755366841589646,
            "sparse": 0.0549057953018105
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5015333833113275,
              "query_max": 0.5684159423876535,
              "query_min": 0.49797295247858653,
              "normalized_score": 0.5015333833113275,
              "weight": 0.35,
              "weighted_score": 0.1755366841589646
            },
            "sparse": {
              "raw_score": 171.58061031815782,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.13726448825452625,
              "weight": 0.4,
              "weighted_score": 0.0549057953018105
            }
          },
          "contribution_percentages": {
            "dense": 76.17375258663786,
            "sparse": 23.826247413362136
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.2304424794607751,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.1843539835686201
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1843539835686201
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.1474831868548961
            }
          },
          "combined_score": 0.1474831868548961
        }
      },
      "similarity": 0.1474831868548961
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 188.60879670554044,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 188.60879670554044
          },
          "normalized_scores": {
            "sparse": 0.15088703736443235
          },
          "weighted_scores": {
            "sparse": 0.06035481494577294
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 188.60879670554044,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.15088703736443235,
              "weight": 0.4,
              "weighted_score": 0.06035481494577294
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06035481494577294,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.07846125942950483
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07846125942950483
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08630738537245532
            }
          },
          "combined_score": 0.08630738537245532
        }
      },
      "similarity": 0.08630738537245532
    },
    {
      "metadata": {
        "doc_id": "CWE-681",
        "name": "Incorrect Conversion between Numeric Types",
        "type": "Base",
        "original_content": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
        "relationships": [],
        "original_sparse_score": 181.61409233158938,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 181.61409233158938
          },
          "normalized_scores": {
            "sparse": 0.1452912738652715
          },
          "weighted_scores": {
            "sparse": 0.0581165095461086
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 181.61409233158938,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.1452912738652715,
              "weight": 0.4,
              "weighted_score": 0.0581165095461086
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.0581165095461086,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.07555146240994118
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07555146240994118
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.0831066086509353
            }
          },
          "combined_score": 0.0831066086509353
        }
      },
      "similarity": 0.0831066086509353
    },
    {
      "metadata": {
        "doc_id": "CWE-197",
        "name": "Numeric Truncation Error",
        "type": "Base",
        "original_content": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
        "relationships": [],
        "original_sparse_score": 169.83279074107796,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 169.83279074107796
          },
          "normalized_scores": {
            "sparse": 0.13586623259286237
          },
          "weighted_scores": {
            "sparse": 0.05434649303714495
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 169.83279074107796,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.13586623259286237,
              "weight": 0.4,
              "weighted_score": 0.05434649303714495
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.05434649303714495,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.07065044094828844
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07065044094828844
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.07771548504311729
            }
          },
          "combined_score": 0.07771548504311729
        }
      },
      "similarity": 0.07771548504311729
    },
    {
      "metadata": {
        "doc_id": "CWE-130",
        "name": "Improper Handling of Length Parameter Inconsistency",
        "type": "Base",
        "original_content": "The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.",
        "relationships": [],
        "original_sparse_score": 163.357801307938,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 163.357801307938
          },
          "normalized_scores": {
            "sparse": 0.1306862410463504
          },
          "weighted_scores": {
            "sparse": 0.052274496418540164
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 163.357801307938,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.1306862410463504,
              "weight": 0.4,
              "weighted_score": 0.052274496418540164
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.052274496418540164,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.06795684534410222
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06795684534410222
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.07475252987851246
            }
          },
          "combined_score": 0.07475252987851246
        }
      },
      "similarity": 0.07475252987851246
    },
    {
      "metadata": {
        "doc_id": "CWE-194",
        "name": "Unexpected Sign Extension",
        "type": "Variant",
        "original_content": "The product performs an operation on a number that causes it to be sign extended when it is transformed into a larger data type. When the original number is negative, this can produce unexpected values that lead to resultant weaknesses.",
        "relationships": [],
        "original_sparse_score": 173.9816657431425,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 173.9816657431425
          },
          "normalized_scores": {
            "sparse": 0.13918533259451402
          },
          "weighted_scores": {
            "sparse": 0.055674133037805607
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 173.9816657431425,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.13918533259451402,
              "weight": 0.4,
              "weighted_score": 0.055674133037805607
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.055674133037805607,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.06680895964536672
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06680895964536672
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.0734898556099034
            }
          },
          "combined_score": 0.0734898556099034
        }
      },
      "similarity": 0.0734898556099034
    },
    {
      "metadata": {
        "doc_id": "CWE-416",
        "name": "Use After Free",
        "type": "Variant",
        "original_content": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
        "relationships": [],
        "original_sparse_score": 164.04778653096727,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 164.04778653096727
          },
          "normalized_scores": {
            "sparse": 0.13123822922477382
          },
          "weighted_scores": {
            "sparse": 0.05249529168990953
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 164.04778653096727,
              "query_max": 222.84730787050054,
              "query_min": 162.82492640134797,
              "normalized_score": 0.13123822922477382,
              "weight": 0.4,
              "weighted_score": 0.05249529168990953
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.05249529168990953,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.06299435002789143
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.06299435002789143
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.06929378503068058
            }
          },
          "combined_score": 0.06929378503068058
        }
      },
      "similarity": 0.06929378503068058
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-122",
      "CWE-119"
    ],
    "critic_additional": [
      "CWE-805",
      "CWE-120",
      "CWE-1260",
      "CWE-190",
      "CWE-131",
      "CWE-191",
      "CWE-195",
      "CWE-125",
      "CWE-788",
      "CWE-1339",
      "CWE-787",
      "CWE-123",
      "CWE-1284",
      "CWE-124",
      "CWE-839",
      "CWE-681",
      "CWE-20",
      "CWE-121",
      "CWE-118",
      "CWE-170",
      "CWE-126",
      "CWE-1257",
      "CWE-466"
    ]
  }
}