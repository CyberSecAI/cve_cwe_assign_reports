{
  "cve_id": "CVE-2022-20382",
  "description": "In (TBD) of (TBD), there is a possible out of bounds write due to kernel stack overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation.Product AndroidVersions Android kernelAndroid ID A-214245176References Upstream kernel",
  "key_phrases": {
    "rootcause": "",
    "weakness": "kernel stack overflow",
    "impact": "local escalation of privilege",
    "vector": "out of bounds write",
    "attacker": "",
    "product": "Android",
    "version": "",
    "component": ""
  },
  "reference_content": "Based on the provided information, here's an analysis of CVE-2022-20382:\n\n**1. Verification of CVE relevance:**\n\nThe provided content directly references CVE-2022-20382 in the Pixel Update Bulletin, listing it as a moderate severity Elevation of Privilege (EoP) vulnerability affecting the Kernel. Additionally, the commit message from android.googlesource.com provides detailed information about the root cause and fix for the issue.\n\n**2. Root cause of vulnerability:**\n\nThe vulnerability stems from the `incremental-fs` (incfs) filesystem implementation in the Linux kernel. Specifically, the `incfs_mount_fs()` function incorrectly handles multiple mount requests with the same source and target. The function allocates a new superblock for every mount call regardless if a mount already exists. This behavior deviates from standard filesystem mount implementations and leads to a recursive call for every mounted instance when a file operation like chmod, setxattr, or open is performed. This recursion causes a stack overflow, leading to a kernel crash.\n\n**3. Weaknesses/vulnerabilities present:**\n\n*   **Incorrect mount handling:** The `incfs_mount_fs()` function doesn't use the appropriate mount VFS calls (`mount_bdev()`, `mount_single()`, or `mount_nodev()`).\n*   **Missing mount check:** The implementation fails to verify if a superblock for a mount instance has already been allocated.\n*   **Stack overflow:** Recursive calls due to the incorrect mounting logic leads to a stack overflow and kernel crash\n\n**4. Impact of exploitation:**\n\nAn attacker could exploit this vulnerability to cause a kernel crash, resulting in a denial of service. Additionally, the EoP tag in the security bulletin suggests the possibility of privilege escalation. However, the provided text does not give specific information on how the EoP could be achieved.\n\n**5. Attack vectors:**\n\nAn attacker can repeatedly mount an `incremental-fs` filesystem with the same source and target. Subsequently, they can trigger a file operation like `chmod`, `setxattr`, or `open` on the mounted filesystem, leading to the recursive call and eventual crash.\n\n**6. Required attacker capabilities/position:**\n\nAn attacker needs the ability to mount filesystems and execute file operations. While the specifics are not mentioned, this vulnerability could be triggered by an attacker who has local access to the device with the ability to execute shell commands.\n\n**Summary of extracted information:**\n*   **CVE ID:** CVE-2022-20382\n*   **Root Cause:** Improper handling of multiple mount requests with the same source and target in `incremental-fs`, leading to recursive calls.\n*   **Weaknesses:** Missing mount checks, incorrect VFS mount call usage, resulting in stack overflow.\n*   **Impact:** Kernel crash (Denial of Service), potential Elevation of Privilege.\n*   **Attack Vector:** Mounting `incremental-fs` multiple times with same source and target and then triggering file operation on it.\n*   **Attacker Capabilities:** Local access to the device capable of mounting file systems and executing file operations.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-675 | Duplicate Operations on Resource | 0.85 | Base | Primary | The root cause is an incorrect implementation that leads to duplicate operations on the superblock, and ultimately a stack overflow. |\n| CWE-121 | Stack-based Buffer Overflow | 0.70 | Base | Secondary | The stack overflow is a consequence of the recursive calls, but not the direct root cause. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability is caused by the `incfs_mount_fs()` function incorrectly handling multiple mount requests, allocating a new superblock for each call, leading to recursive calls and a **kernel stack overflow**. The root cause of the issue isn't the stack overflow itself, but rather the logic that causes multiple operations to be performed on the same resource. This aligns with CWE-675 (Duplicate Operations on Resource). CWE-675 is a base level CWE. CWE-121 is included as a secondary issue, because the stack overflow itself is a consequence of the vulnerability, and it is a buffer overflow on the stack, but is not the best fit for the root cause.\n  - *Relationship Analysis:* CWE-675 does not have defined parent/child relationships, but is a base CWE, suggesting it is a fundamental issue. CWE-121 is a type of buffer overflow, specifically on the stack.\n\n- **Confidence Score:**\n  - Confidence: 0.85 (High confidence based on the detailed description of the root cause and the technical details provided in the CVE reference. The kernel stack overflow results from the **duplicate operations**.)\n\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-675 | Duplicate Operations on Resource | 0.85 | Base | Primary | The root cause is an incorrect implementation that leads to duplicate operations on the superblock, and ultimately a stack overflow. |\n| CWE-121 | Stack-based Buffer Overflow | 0.70 | Base | Secondary | The stack overflow is a consequence of the recursive calls, but not the direct root cause. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability is caused by the `incfs_mount_fs()` function incorrectly handling multiple mount requests, allocating a new superblock for each call, leading to recursive calls and a **kernel stack overflow**. The root cause of the issue isn't the stack overflow itself, but rather the logic that causes multiple operations to be performed on the same resource. This aligns with CWE-675 (Duplicate Operations on Resource). CWE-675 is a base level CWE. CWE-121 is included as a secondary issue, because the stack overflow itself is a consequence of the vulnerability, and it is a buffer overflow on the stack, but is not the best fit for the root cause.\n  - *Relationship Analysis:* CWE-675 does not have defined parent/child relationships, but is a base CWE, suggesting it is a fundamental issue. CWE-121 is a type of buffer overflow, specifically on the stack.\n\n- **Confidence Score:**\n  - Confidence: 0.85 (High confidence based on the detailed description of the root cause and the technical details provided in the CVE reference. The kernel stack overflow results from the **duplicate operations**.)\n\n---",
  "criticism": "Okay, here's a detailed review of the CWE analysis, considering the full CWE specifications provided.\n\n**Overall Assessment:**\n\nThe analysis is generally good. It correctly identifies the *consequence* of the vulnerability as a stack-based buffer overflow (CWE-121) but also attempts to identify the *root cause* leading to that overflow.  The choice of CWE-675 (Multiple Operations on Resource in Single-Operation Context) for the root cause is interesting and has some merit, but also some drawbacks, which will be discussed below. The confidence score of 0.85 is reasonable given the information available.\n\n**Detailed Breakdown:**\n\n*   **CWE-675: Multiple Operations on Resource in Single-Operation Context (Primary)**\n\n    *   **Strengths:** The analysis correctly points out that the `incfs_mount_fs()` function's incorrect handling of multiple mount requests is the *driving force* behind the vulnerability.  The function repeatedly allocates a new superblock without checking for existing mounts, leading to the recursive calls.  This repeated allocation and operation *could* be considered a violation of the principle that an operation (mounting, in this case) should ideally be performed only once on a given resource instance (the superblock) in a single mount context. The description of CWE-675 *does* align with an incorrect usage of an API (a VFS API here).\n    *   **Weaknesses:** CWE-675's description is somewhat vague. It states that the product performs the \"same operation\" multiple times.  While the allocation of a superblock *could* be considered part of the \"mounting operation,\"  it's a lower-level detail. A more precise description might focus on the *incorrect state management* that allows the multiple allocations in the first place.  The CWE-675 specification also suggests reviewing child CWEs for a better fit, but it doesn't have any specifically relevant children. It might be stretching the definition of \"operation\" to encompass the allocation of a superblock. The examples provided for CWE-675 are *only loosely* related to the described behavior. *CVE-2022-39190*, for example, is more closely related to an improper state of a resource, than a duplicate operation being performed.\n    *   **Mapping Guidance:** The \"Allowed-with-Review\" mapping guidance for CWE-675 is relevant.  The analysis *should* consider if a more specific Base-level CWE is available.  The rationale provided in the CWE specification is that the entry is a Class and might have Base-level children that would be more appropriate.\n    *   **Potential Alternative/Supporting CWEs:**\n        *   **CWE-664: Improper Control of a Resource Through its Lifetime:** This could be a stronger candidate. The `incfs_mount_fs` function isn't managing the superblock's lifetime correctly.  It creates new superblocks without properly managing/tracking existing ones, leading to the resource exhaustion on the stack via recursion. This fits the description well: \"The product does not properly control the creation, initialization, access, modification, release, or destruction of a resource.\"\n        *   **CWE-400: Uncontrolled Resource Consumption:** The repeated mounting without proper checks directly leads to uncontrolled consumption of stack space. While a stack overflow is the *effect*, the *cause* is the uncontrolled consumption.\n    *   **Mitigations related to CWE-675/CWE-664/CWE-400:**  Mitigations would focus on proper state management, resource tracking (ensuring only one superblock exists per mount point), and potentially limiting the maximum number of allowed mounts.\n\n*   **CWE-121: Stack-based Buffer Overflow (Secondary)**\n\n    *   **Strengths:** Correctly identifies the *direct consequence* of the vulnerability. The recursive calls exhaust the stack space, leading to the overflow.\n    *   **Weaknesses:**  As noted in the analysis, CWE-121 is a *symptom* rather than the *root cause*. It's the *what*, not the *why*.\n    *   **Mapping Guidance:** The \"Allowed\" mapping guidance is appropriate, but it's crucial to understand its role as a secondary CWE.\n    *   **Mitigations related to CWE-121:** While mitigations like stack canaries can help *detect* the overflow, they don't *prevent* it. The core fix needs to address the root cause (e.g., the improper handling of mount requests).\n\n*   **Retriever Results:**\n    *   The retriever results are not very helpful in this case. They point to a number of integer handling issues, as well as locking issues, and use-after-free vulnerabilities, but none of them particularly match the root cause of the issue. This also is helpful to determine what the *issue is not*.\n\n**Specific Suggestions:**\n\n1.  **Re-evaluate Primary CWE:**  Carefully consider CWE-664 or CWE-400 as a stronger candidate for the primary CWE.  Provide a detailed justification for your choice, explaining why it best represents the *root cause* of the vulnerability. Use the CWE specifications to support your argument.\n2.  **Refine Justification for CWE-675 (if kept):** If you stick with CWE-675, provide a very clear and specific explanation of how the multiple superblock allocations constitute \"multiple operations on a resource in a single-operation context.\" Be prepared to address the counter-argument that allocation is simply a lower-level implementation detail.\n3.  **Acknowledge Limitations:** Acknowledge that CWE-675 (or any of the suggested alternatives) might not be a perfect fit, as the CWE definitions can sometimes be broad. Explain why you believe it's the *most appropriate* mapping.\n4.  **Elaborate on Mitigations:**  Expand on the mitigations, focusing on how they directly address the *root cause* (whatever CWE you choose).  For example, if you choose CWE-664 or CWE-400, explain how proper resource lifetime management or limiting resource consumption would prevent the stack overflow.\n\n**Revised Summary Table (Example, if CWE-664 is selected):**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-664 | Improper Control of a Resource Through its Lifetime | 0.80 | Base | Primary | The `incfs_mount_fs` function does not properly manage the lifetime of superblocks, leading to uncontrolled allocation and eventual stack overflow. |\n| CWE-121 | Stack-based Buffer Overflow | 0.70 | Variant | Secondary | The stack overflow is a consequence of the recursive calls, but not the direct root cause. |\n\n**In Conclusion:**\n\nThe analysis is a good starting point. However, refining the choice of the primary CWE and providing a more detailed justification, along with elaborating on relevant mitigations, will significantly strengthen the analysis. Consider if the multiple mount requests are leading to improper state handling of the underlying resources, and map to that CWE, rather than just the stack overflow that occurs.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-664 | Improper Control of a Resource Through its Lifetime | 0.85 | Base | Primary | The `incfs_mount_fs` function does not properly manage the lifetime of superblocks, leading to uncontrolled allocation and eventual stack overflow. |\n| CWE-121 | Stack-based Buffer Overflow | 0.70 | Base | Secondary | The stack overflow is a consequence of the recursive calls, but not the direct root cause. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.83\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship impacting the decision is the ParentOf relationship, where CWE-664 (Improper Control of a Resource Through its Lifetime) is a parent of potential resource exhaustion issues. The chain relationship involves the improper resource control leading to stack overflow. Alternatives considered were CWE-675 (Duplicate Operations on Resource) and CWE-400 (Uncontrolled Resource Consumption), but CWE-664 offers a more direct explanation of the root cause. The Base abstraction level of CWE-664 is appropriate for mapping to the root cause.\n\n```mermaid\ngraph TD\n    cwe664[\"CWE-664: Improper Control of a Resource Through its Lifetime\"]\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe400[\"CWE-400: Uncontrolled Resource Consumption\"]\n    cwe675[\"CWE-675: Duplicate Operations on Resource\"]\n    \n    cwe121 -->|CONSEQUENCEOF| cwe664\n    cwe400 -->|CANALSOBE| cwe664\n    cwe675 -->|CANALSOBE| cwe664\n    \n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe664 primary\n    class cwe121 secondary\n    class cwe400,cwe675 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-664 (Improper Control of a Resource Through its Lifetime)** in the `incfs_mount_fs` function. The function fails to properly manage the lifetime of superblocks, leading to uncontrolled allocation. This uncontrolled allocation results in recursive calls and eventual **CWE-121 (Stack-based Buffer Overflow)**, leading to a local escalation of privilege.\n\n## Summary of Analysis\nThe initial analysis identified **CWE-675 (Duplicate Operations on Resource)** as the primary **WEAKNESS**, but after considering the criticism and reviewing the CWE specifications, **CWE-664 (Improper Control of a Resource Through its Lifetime)** emerges as a more accurate representation of the **ROOTCAUSE**. The vulnerability description states that the `incfs_mount_fs()` function incorrectly handles multiple mount requests, allocating a new superblock for each call. This directly relates to improper control of the superblock resource.\n\nThe graph relationships, particularly the potential relationship between CWE-664 and resource exhaustion, influenced the final selection. While **CWE-675** attempts to capture the duplicate operation, it's the lack of proper resource control that enables the duplicate operations and leads to the stack overflow. The choice of **CWE-664** is at the optimal level of specificity because it directly addresses the root cause, which is the mismanagement of the superblock resource's lifetime. **CWE-121** remains a relevant secondary classification as it describes the direct consequence of the uncontrolled resource consumption.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-908",
        "name": "Use of Uninitialized Resource",
        "type": "Base",
        "original_content": "The product uses or accesses a resource that has not been initialized.",
        "relationships": [],
        "original_sparse_score": 358.61279423093526,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6087108652229101,
            "sparse": 358.61279423093526,
            "graph": 2.8562809756084966
          },
          "normalized_scores": {
            "dense": 0.6087108652229101,
            "sparse": 0.2868902353847482,
            "graph": 1.0
          },
          "weighted_scores": {
            "dense": 0.21304880282801852,
            "sparse": 0.1147560941538993,
            "graph": 0.25
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6087108652229101,
              "query_max": 0.626993060099511,
              "query_min": 0.579587679797429,
              "normalized_score": 0.6087108652229101,
              "weight": 0.35,
              "weighted_score": 0.21304880282801852
            },
            "sparse": {
              "raw_score": 358.61279423093526,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.2868902353847482,
              "weight": 0.4,
              "weighted_score": 0.1147560941538993
            },
            "graph": {
              "raw_score": 2.8562809756084966,
              "query_max": 2.8562809756084966,
              "query_min": 1.3010400000000002,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "dense": 36.872100589809605,
            "sparse": 19.860699477161152,
            "graph": 43.26719993302924
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5778048969819178,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7511463660764932
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7511463660764932
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.8262610026841426
            }
          },
          "combined_score": 0.8262610026841426
        }
      },
      "similarity": 0.8262610026841426
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 350.46290801939034,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6145209869344987,
            "sparse": 350.46290801939034,
            "graph": 1.534022005332464
          },
          "normalized_scores": {
            "dense": 0.6145209869344987,
            "sparse": 0.2803703264155123,
            "graph": 0.5478650019044514
          },
          "weighted_scores": {
            "dense": 0.21508234542707455,
            "sparse": 0.11214813056620493,
            "graph": 0.13696625047611286
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6145209869344987,
              "query_max": 0.626993060099511,
              "query_min": 0.579587679797429,
              "normalized_score": 0.6145209869344987,
              "weight": 0.35,
              "weighted_score": 0.21508234542707455
            },
            "sparse": {
              "raw_score": 350.46290801939034,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.2803703264155123,
              "weight": 0.4,
              "weighted_score": 0.11214813056620493
            },
            "graph": {
              "raw_score": 1.534022005332464,
              "query_max": 2.8562809756084966,
              "query_min": 1.3010400000000002,
              "normalized_score": 0.5478650019044514,
              "weight": 0.25,
              "weighted_score": 0.13696625047611286
            }
          },
          "contribution_percentages": {
            "dense": 46.33430896054722,
            "sparse": 24.15961254599662,
            "graph": 29.50607849345615
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.46419672646939236,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6034557444102101
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6034557444102101
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6638013188512312
            }
          },
          "combined_score": 0.6638013188512312
        }
      },
      "similarity": 0.6638013188512312
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 329.81003143807715,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6037021407869784,
            "sparse": 329.81003143807715
          },
          "normalized_scores": {
            "dense": 0.6037021407869784,
            "sparse": 0.26384802515046174
          },
          "weighted_scores": {
            "dense": 0.21129574927544242,
            "sparse": 0.1055392100601847
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6037021407869784,
              "query_max": 0.626993060099511,
              "query_min": 0.579587679797429,
              "normalized_score": 0.6037021407869784,
              "weight": 0.35,
              "weighted_score": 0.21129574927544242
            },
            "sparse": {
              "raw_score": 329.81003143807715,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.26384802515046174,
              "weight": 0.4,
              "weighted_score": 0.1055392100601847
            }
          },
          "contribution_percentages": {
            "dense": 66.68953126842744,
            "sparse": 33.310468731572556
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3168349593356271,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.41188544713631525
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.41188544713631525
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.4530739918499468
            }
          },
          "combined_score": 0.4530739918499468
        }
      },
      "similarity": 0.4530739918499468
    },
    {
      "metadata": {
        "doc_id": "CWE-413",
        "name": "Improper Resource Locking",
        "type": "Base",
        "original_content": "The product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource.",
        "relationships": [],
        "original_sparse_score": 336.78512874405317,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5939206697552536,
            "sparse": 336.78512874405317
          },
          "normalized_scores": {
            "dense": 0.5939206697552536,
            "sparse": 0.26942810299524256
          },
          "weighted_scores": {
            "dense": 0.20787223441433875,
            "sparse": 0.10777124119809703
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5939206697552536,
              "query_max": 0.626993060099511,
              "query_min": 0.579587679797429,
              "normalized_score": 0.5939206697552536,
              "weight": 0.35,
              "weighted_score": 0.20787223441433875
            },
            "sparse": {
              "raw_score": 336.78512874405317,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.26942810299524256,
              "weight": 0.4,
              "weighted_score": 0.10777124119809703
            }
          },
          "contribution_percentages": {
            "dense": 65.8566548891939,
            "sparse": 34.1433451108061
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3156434756124358,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4103365182961665
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4103365182961665
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.45137017012578323
            }
          },
          "combined_score": 0.45137017012578323
        }
      },
      "similarity": 0.45137017012578323
    },
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 343.9740255909101,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5818020927364486,
            "sparse": 343.9740255909101
          },
          "normalized_scores": {
            "dense": 0.5818020927364486,
            "sparse": 0.2751792204727281
          },
          "weighted_scores": {
            "dense": 0.20363073245775698,
            "sparse": 0.11007168818909124
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5818020927364486,
              "query_max": 0.626993060099511,
              "query_min": 0.579587679797429,
              "normalized_score": 0.5818020927364486,
              "weight": 0.35,
              "weighted_score": 0.20363073245775698
            },
            "sparse": {
              "raw_score": 343.9740255909101,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.2751792204727281,
              "weight": 0.4,
              "weighted_score": 0.11007168818909124
            }
          },
          "contribution_percentages": {
            "dense": 64.91206922722318,
            "sparse": 35.08793077277682
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3137024206468482,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4078131468409027
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4078131468409027
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.448594461524993
            }
          },
          "combined_score": 0.448594461524993
        }
      },
      "similarity": 0.448594461524993
    },
    {
      "metadata": {
        "doc_id": "CWE-1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
        "relationships": [],
        "original_sparse_score": 303.76636490116647,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6085116701413092,
            "sparse": 303.76636490116647
          },
          "normalized_scores": {
            "dense": 0.6085116701413092,
            "sparse": 0.24301309192093318
          },
          "weighted_scores": {
            "dense": 0.21297908454945821,
            "sparse": 0.09720523676837328
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6085116701413092,
              "query_max": 0.626993060099511,
              "query_min": 0.579587679797429,
              "normalized_score": 0.6085116701413092,
              "weight": 0.35,
              "weighted_score": 0.21297908454945821
            },
            "sparse": {
              "raw_score": 303.76636490116647,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.24301309192093318,
              "weight": 0.4,
              "weighted_score": 0.09720523676837328
            }
          },
          "contribution_percentages": {
            "dense": 68.66210504921956,
            "sparse": 31.337894950780438
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.31018432131783147,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4032396177131809
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4032396177131809
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.44356357948449904
            }
          },
          "combined_score": 0.44356357948449904
        }
      },
      "similarity": 0.44356357948449904
    },
    {
      "metadata": {
        "doc_id": "CWE-362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "type": "Class",
        "original_content": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.",
        "relationships": [],
        "original_sparse_score": 357.9070761432938,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.612130146909488,
            "sparse": 357.9070761432938,
            "graph": 1.3176019673824728
          },
          "normalized_scores": {
            "dense": 0.612130146909488,
            "sparse": 0.28632566091463507,
            "graph": 0.47057213120802605
          },
          "weighted_scores": {
            "dense": 0.21424555141832077,
            "sparse": 0.11453026436585403,
            "graph": 0.11764303280200651
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.612130146909488,
              "query_max": 0.626993060099511,
              "query_min": 0.579587679797429,
              "normalized_score": 0.612130146909488,
              "weight": 0.35,
              "weighted_score": 0.21424555141832077
            },
            "sparse": {
              "raw_score": 357.9070761432938,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.28632566091463507,
              "weight": 0.4,
              "weighted_score": 0.11453026436585403
            },
            "graph": {
              "raw_score": 1.3176019673824728,
              "query_max": 2.8562809756084966,
              "query_min": 1.3010400000000002,
              "normalized_score": 0.47057213120802605,
              "weight": 0.25,
              "weighted_score": 0.11764303280200651
            }
          },
          "contribution_percentages": {
            "dense": 47.99204874454592,
            "sparse": 25.655337969840208,
            "graph": 26.35261328561388
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.4464188485861813,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.3571350788689451
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3571350788689451
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.37499183281239234
            }
          },
          "combined_score": 0.37499183281239234
        }
      },
      "similarity": 0.37499183281239234
    },
    {
      "metadata": {
        "doc_id": "CWE-416",
        "name": "Use After Free",
        "type": "Variant",
        "original_content": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
        "relationships": [],
        "original_sparse_score": 315.9809124367751,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 315.9809124367751,
            "graph": 2.04
          },
          "normalized_scores": {
            "sparse": 0.2527847299494201,
            "graph": 0.7285714285714286
          },
          "weighted_scores": {
            "sparse": 0.10111389197976804,
            "graph": 0.18214285714285716
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 315.9809124367751,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.2527847299494201,
              "weight": 0.4,
              "weighted_score": 0.10111389197976804
            },
            "graph": {
              "raw_score": 2.04,
              "query_max": 2.8562809756084966,
              "query_min": 1.3010400000000002,
              "normalized_score": 0.7285714285714286,
              "weight": 0.25,
              "weighted_score": 0.18214285714285716
            }
          },
          "contribution_percentages": {
            "sparse": 35.69690476677561,
            "graph": 64.30309523322438
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2832567491226252,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.33990809894715024
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.33990809894715024
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3738989088418653
            }
          },
          "combined_score": 0.3738989088418653
        }
      },
      "similarity": 0.3738989088418653
    },
    {
      "metadata": {
        "doc_id": "CWE-667",
        "name": "Improper Locking",
        "type": "Class",
        "original_content": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.",
        "relationships": [],
        "original_sparse_score": 391.88695896627064,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6124703361544003,
            "sparse": 391.88695896627064
          },
          "normalized_scores": {
            "dense": 0.6124703361544003,
            "sparse": 0.31350956717301653
          },
          "weighted_scores": {
            "dense": 0.21436461765404008,
            "sparse": 0.12540382686920662
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6124703361544003,
              "query_max": 0.626993060099511,
              "query_min": 0.579587679797429,
              "normalized_score": 0.6124703361544003,
              "weight": 0.35,
              "weighted_score": 0.21436461765404008
            },
            "sparse": {
              "raw_score": 391.88695896627064,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.31350956717301653,
              "weight": 0.4,
              "weighted_score": 0.12540382686920662
            }
          },
          "contribution_percentages": {
            "dense": 63.09138506220915,
            "sparse": 36.90861493779084
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.3397684445232467,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.2718147556185974
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2718147556185974
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.2854054933995273
            }
          },
          "combined_score": 0.2854054933995273
        }
      },
      "similarity": 0.2854054933995273
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 331.66639110514996,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5881808181399784,
            "sparse": 331.66639110514996
          },
          "normalized_scores": {
            "dense": 0.5881808181399784,
            "sparse": 0.26533311288412
          },
          "weighted_scores": {
            "dense": 0.20586328634899242,
            "sparse": 0.106133245153648
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5881808181399784,
              "query_max": 0.626993060099511,
              "query_min": 0.579587679797429,
              "normalized_score": 0.5881808181399784,
              "weight": 0.35,
              "weighted_score": 0.20586328634899242
            },
            "sparse": {
              "raw_score": 331.66639110514996,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.26533311288412,
              "weight": 0.4,
              "weighted_score": 0.106133245153648
            }
          },
          "contribution_percentages": {
            "dense": 65.98255607442553,
            "sparse": 34.017443925574476
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.3119965315026404,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.24959722520211233
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.24959722520211233
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.19967778016168988
            }
          },
          "combined_score": 0.19967778016168988
        }
      },
      "similarity": 0.19967778016168988
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 332.8453304914489,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 332.8453304914489
          },
          "normalized_scores": {
            "sparse": 0.26627626439315916
          },
          "weighted_scores": {
            "sparse": 0.10651050575726367
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 332.8453304914489,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.26627626439315916,
              "weight": 0.4,
              "weighted_score": 0.10651050575726367
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10651050575726367,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13846365748444278
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13846365748444278
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.15231002323288706
            }
          },
          "combined_score": 0.15231002323288706
        }
      },
      "similarity": 0.15231002323288706
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 326.97696785312945,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 326.97696785312945
          },
          "normalized_scores": {
            "sparse": 0.26158157428250356
          },
          "weighted_scores": {
            "sparse": 0.10463262971300143
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 326.97696785312945,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.26158157428250356,
              "weight": 0.4,
              "weighted_score": 0.10463262971300143
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10463262971300143,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13602241862690187
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13602241862690187
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.14962466048959208
            }
          },
          "combined_score": 0.14962466048959208
        }
      },
      "similarity": 0.14962466048959208
    },
    {
      "metadata": {
        "doc_id": "CWE-770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [],
        "original_sparse_score": 324.06256783690003,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 324.06256783690003
          },
          "normalized_scores": {
            "sparse": 0.25925005426952
          },
          "weighted_scores": {
            "sparse": 0.10370002170780801
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 324.06256783690003,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.25925005426952,
              "weight": 0.4,
              "weighted_score": 0.10370002170780801
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10370002170780801,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13481002822015042
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13481002822015042
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.14829103104216548
            }
          },
          "combined_score": 0.14829103104216548
        }
      },
      "similarity": 0.14829103104216548
    },
    {
      "metadata": {
        "doc_id": "CWE-366",
        "name": "Race Condition within a Thread",
        "type": "Base",
        "original_content": "If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined.",
        "relationships": [],
        "original_sparse_score": 323.10182719059145,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 323.10182719059145
          },
          "normalized_scores": {
            "sparse": 0.25848146175247316
          },
          "weighted_scores": {
            "sparse": 0.10339258470098928
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 323.10182719059145,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.25848146175247316,
              "weight": 0.4,
              "weighted_score": 0.10339258470098928
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10339258470098928,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13441036011128607
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13441036011128607
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.14785139612241469
            }
          },
          "combined_score": 0.14785139612241469
        }
      },
      "similarity": 0.14785139612241469
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 321.6238450952952,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 321.6238450952952
          },
          "normalized_scores": {
            "sparse": 0.2572990760762362
          },
          "weighted_scores": {
            "sparse": 0.10291963043049449
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 321.6238450952952,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.2572990760762362,
              "weight": 0.4,
              "weighted_score": 0.10291963043049449
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10291963043049449,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13379551955964283
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13379551955964283
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.14717507151560713
            }
          },
          "combined_score": 0.14717507151560713
        }
      },
      "similarity": 0.14717507151560713
    },
    {
      "metadata": {
        "doc_id": "CWE-662",
        "name": "Improper Synchronization",
        "type": "Class",
        "original_content": "The product utilizes multiple threads or processes to allow temporary access to a shared resource that can only be exclusive to one process at a time, but it does not properly synchronize these actions, which might cause simultaneous accesses of this resource by multiple threads or processes.",
        "relationships": [],
        "original_sparse_score": 307.7002959905826,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 307.7002959905826,
            "graph": 1.3600000000000003
          },
          "normalized_scores": {
            "sparse": 0.2461602367924661,
            "graph": 0.4857142857142859
          },
          "weighted_scores": {
            "sparse": 0.09846409471698644,
            "graph": 0.12142857142857147
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 307.7002959905826,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.2461602367924661,
              "weight": 0.4,
              "weighted_score": 0.09846409471698644
            },
            "graph": {
              "raw_score": 1.3600000000000003,
              "query_max": 2.8562809756084966,
              "query_min": 1.3010400000000002,
              "normalized_score": 0.4857142857142859,
              "weight": 0.25,
              "weighted_score": 0.12142857142857147
            }
          },
          "contribution_percentages": {
            "sparse": 44.7782531554773,
            "graph": 55.2217468445227
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.2198926661455579,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.17591413291644634
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.17591413291644634
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.14073130633315709
            }
          },
          "combined_score": 0.14073130633315709
        }
      },
      "similarity": 0.14073130633315709
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 321.865378558348,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 321.865378558348
          },
          "normalized_scores": {
            "sparse": 0.2574923028466784
          },
          "weighted_scores": {
            "sparse": 0.10299692113867137
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 321.865378558348,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.2574923028466784,
              "weight": 0.4,
              "weighted_score": 0.10299692113867137
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10299692113867137,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.12359630536640565
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.12359630536640565
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.13595593590304622
            }
          },
          "combined_score": 0.13595593590304622
        }
      },
      "similarity": 0.13595593590304622
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 328.9578336985619,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 328.9578336985619
          },
          "normalized_scores": {
            "sparse": 0.26316626695884954
          },
          "weighted_scores": {
            "sparse": 0.10526650678353983
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 328.9578336985619,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.26316626695884954,
              "weight": 0.4,
              "weighted_score": 0.10526650678353983
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.10526650678353983,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.08421320542683186
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08421320542683186
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.08842386569817345
            }
          },
          "combined_score": 0.08842386569817345
        }
      },
      "similarity": 0.08842386569817345
    },
    {
      "metadata": {
        "doc_id": "CWE-862",
        "name": "Missing Authorization",
        "type": "Class",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "relationships": [],
        "original_sparse_score": 309.97182181046827,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 309.97182181046827
          },
          "normalized_scores": {
            "sparse": 0.24797745744837463
          },
          "weighted_scores": {
            "sparse": 0.09919098297934986
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 309.97182181046827,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.24797745744837463,
              "weight": 0.4,
              "weighted_score": 0.09919098297934986
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.09919098297934986,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.0793527863834799
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0793527863834799
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.0833204257026539
            }
          },
          "combined_score": 0.0833204257026539
        }
      },
      "similarity": 0.0833204257026539
    },
    {
      "metadata": {
        "doc_id": "CWE-665",
        "name": "Improper Initialization",
        "type": "Class",
        "original_content": "The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.",
        "relationships": [],
        "original_sparse_score": 347.5713114146242,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 347.5713114146242
          },
          "normalized_scores": {
            "sparse": 0.2780570491316993
          },
          "weighted_scores": {
            "sparse": 0.11122281965267973
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 347.5713114146242,
              "query_max": 391.88695896627064,
              "query_min": 303.76636490116647,
              "normalized_score": 0.2780570491316993,
              "weight": 0.4,
              "weighted_score": 0.11122281965267973
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.11122281965267973,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.0889782557221438
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0889782557221438
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.07118260457771504
            }
          },
          "combined_score": 0.07118260457771504
        }
      },
      "similarity": 0.07118260457771504
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-675",
      "CWE-121"
    ],
    "critic_additional": [
      "CWE-664",
      "CWE-400"
    ]
  }
}