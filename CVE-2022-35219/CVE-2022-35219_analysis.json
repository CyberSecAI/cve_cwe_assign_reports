{
  "cve_id": "CVE-2022-35219",
  "description": "The NHI cards web service component has a stack-based buffer overflow vulnerability due to insufficient validation for network packet key parameter. A LAN attacker with general user privilege can exploit this vulnerability to disrupt service.",
  "key_phrases": {
    "rootcause": "insufficient validation",
    "weakness": "stack-based buffer overflow",
    "impact": "disrupt service",
    "vector": "network packet key parameter",
    "attacker": "LAN attacker with general user privilege",
    "product": "NHI cards web service",
    "version": "",
    "component": ""
  },
  "reference_content": "```\n{\n  \"Root cause of vulnerability\": \"The\u5065\u4fdd\u5361\u7db2\u8def\u670d\u52d9\u5143\u4ef6 (National Health Insurance Card Network Service Component) does not validate the length of the packet key parameters.\",\n  \"Weaknesses/vulnerabilities present\": \"Stack-based buffer overflow vulnerability due to lack of input validation of packet key parameter length.\",\n  \"Impact of exploitation\": \"A successful attack can cause a denial of service (service termination), requiring a service restart to recover.\",\n  \"Attack vectors\": \"Local network attack.\",\n  \"Required attacker capabilities/position\": \"An attacker on the local network with regular user privileges.\"\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 0.9 | Variant | Primary | Allowed |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.7 | Base | Secondary | Allowed |\n| CWE-20 | Improper Input Validation | 0.5 | Class | Secondary | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The vulnerability description explicitly states a **stack-based buffer overflow** due to **insufficient validation** of a network packet key parameter. CWE-121 (Stack-based Buffer Overflow) directly matches this description. The CVE Reference Links Content Summary also confirms a \"Stack-based buffer overflow vulnerability due to lack of input validation of packet key parameter length.\" CWE-121 is a Variant-level CWE, providing a specific classification for the vulnerability type. The \"Usage: Allowed\" mapping guidance from MITRE supports this selection.\"\n  \n  - *Relationship Analysis:* \"CWE-121 is a variant of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). It also relates to CWE-120 (Buffer Copy without Checking Size of Input), but CWE-121 is more specific because the buffer is stack-based. The **insufficient validation** aspect suggests a potential contributing factor, leading to consideration of input validation weaknesses. This overflow leads to denial of service.\"\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.9 (High confidence due to the explicit description of a stack-based buffer overflow and corroborating CVE reference information.)\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The description indicates **insufficient validation** of the network packet key parameter length. CWE-1284 (Improper Validation of Specified Quantity in Input) aligns with this aspect, as the key parameter has a length (quantity) that isn't properly validated. The CVE Reference Links Content Summary also states that the component \"does not validate the length of the packet key parameters.\" This makes CWE-1284 a likely secondary weakness. MITRE mapping guidance for CWE-1284 indicates this is ALLOWED.\"\n\n  - *Relationship Analysis:* \"CWE-1284 is a child of CWE-20 (Improper Input Validation), representing a more specific type of input validation failure related to quantity. It can also precede CWE-789 (Memory Allocation with Excessive Size Value) as an incorrect quantity might lead to excessive memory allocation.\"\n\n- **Confidence Score:**\n  - *Example:* Confidence: 0.7 (Medium-high confidence. It describes the lack of validation mentioned in the description but the stack-based buffer overflow is the more serious result of the lack of validation.)\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The **insufficient validation** could be broadly categorized as CWE-20 (Improper Input Validation). However, CWE-1284 provides a more specific classification, making CWE-20 a less preferred choice. Also, MITRE discourages the use of CWE-20 when a more specific CWE is available. The CVE description alludes to the lack of validation.\"\n\n  - *Relationship Analysis:* \"CWE-20 is a class-level CWE, a parent of many input validation related CWEs, including CWE-1284. Due to the availability of CWE-1284, CWE-20 is a less precise, and discouraged mapping.\"\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.5 (Low confidence. A very general weakness that is caused by not validating the input. It is better to use CWE-1284 as it is more specific to the type of validation issue.)",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 0.9 | Variant | Primary | Allowed |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.7 | Base | Secondary | Allowed |\n| CWE-20 | Improper Input Validation | 0.5 | Class | Secondary | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The vulnerability description explicitly states a **stack-based buffer overflow** due to **insufficient validation** of a network packet key parameter. CWE-121 (Stack-based Buffer Overflow) directly matches this description. The CVE Reference Links Content Summary also confirms a \"Stack-based buffer overflow vulnerability due to lack of input validation of packet key parameter length.\" CWE-121 is a Variant-level CWE, providing a specific classification for the vulnerability type. The \"Usage: Allowed\" mapping guidance from MITRE supports this selection.\"\n  \n  - *Relationship Analysis:* \"CWE-121 is a variant of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). It also relates to CWE-120 (Buffer Copy without Checking Size of Input), but CWE-121 is more specific because the buffer is stack-based. The **insufficient validation** aspect suggests a potential contributing factor, leading to consideration of input validation weaknesses. This overflow leads to denial of service.\"\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.9 (High confidence due to the explicit description of a stack-based buffer overflow and corroborating CVE reference information.)\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The description indicates **insufficient validation** of the network packet key parameter length. CWE-1284 (Improper Validation of Specified Quantity in Input) aligns with this aspect, as the key parameter has a length (quantity) that isn't properly validated. The CVE Reference Links Content Summary also states that the component \"does not validate the length of the packet key parameters.\" This makes CWE-1284 a likely secondary weakness. MITRE mapping guidance for CWE-1284 indicates this is ALLOWED.\"\n\n  - *Relationship Analysis:* \"CWE-1284 is a child of CWE-20 (Improper Input Validation), representing a more specific type of input validation failure related to quantity. It can also precede CWE-789 (Memory Allocation with Excessive Size Value) as an incorrect quantity might lead to excessive memory allocation.\"\n\n- **Confidence Score:**\n  - *Example:* Confidence: 0.7 (Medium-high confidence. It describes the lack of validation mentioned in the description but the stack-based buffer overflow is the more serious result of the lack of validation.)\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The **insufficient validation** could be broadly categorized as CWE-20 (Improper Input Validation). However, CWE-1284 provides a more specific classification, making CWE-20 a less preferred choice. Also, MITRE discourages the use of CWE-20 when a more specific CWE is available. The CVE description alludes to the lack of validation.\"\n\n  - *Relationship Analysis:* \"CWE-20 is a class-level CWE, a parent of many input validation related CWEs, including CWE-1284. Due to the availability of CWE-1284, CWE-20 is a less precise, and discouraged mapping.\"\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.5 (Low confidence. A very general weakness that is caused by not validating the input. It is better to use CWE-1284 as it is more specific to the type of validation issue.)",
  "criticism": "Okay, I've reviewed the analysis provided against the full CWE specifications, and here's my critique:\n\n**Overall Assessment:**\n\nThe analysis is generally good, demonstrating a reasonable understanding of the CWEs involved. The primary mapping to CWE-121 is strong and well-justified. The secondary mappings to CWE-1284 and CWE-20 are also reasonable given the context, with appropriate caveats. The analysis also correctly identifies and uses the \"Usage\" guidance to inform decisions.\n\n**Specific Comments and Suggestions:**\n\n1.  **CWE-121 (Stack-based Buffer Overflow):**\n\n    *   **Good:** Excellent justification based on the vulnerability description and CVE reference. The relationship analysis with CWE-119 and CWE-120 is accurate. The confidence score of 0.9 is appropriate.\n    *   **Suggestion:** The analysis could briefly mention how a stack-based buffer overflow might lead to specific exploitable conditions, such as return address overwrites, to further solidify the mapping.\n        *   For example: \"A stack-based buffer overflow allows overwriting of data on the stack, potentially including the return address, allowing an attacker to control program execution.\"\n\n2.  **CWE-1284 (Improper Validation of Specified Quantity in Input):**\n\n    *   **Good:** Well-explained connection to the insufficient validation of the \"key parameter length.\" The relationship analysis to CWE-20 and CWE-789 is accurate. The confidence score of 0.7 is reasonable.\n    *   **Suggestion:** Consider adding a concrete example of how this improper validation could lead to the overflow. For example:\n        *   \"If the key parameter length is not validated, an attacker could send an overly long key, leading to a buffer overflow on the stack when the key is copied.\"\n\n3.  **CWE-20 (Improper Input Validation):**\n\n    *   **Good:** Correctly identifies the general nature of the issue. The reasoning for why CWE-20 is a less preferred choice is sound, given the more specific CWE-1284. The discouraged \"Usage\" is acknowledged.\n    *   **Suggestion:** None, the explanation is good and justifies the low confidence level.\n\n4.  **Top Combined Results and Retriever Results:**\n\n    *   The Retriever Results section is very useful. The higher-scoring CWEs that were *not* chosen (e.g., CWE-130, CWE-1285, CWE-120, CWE-770, CWE-789, CWE-193, and CWE-125) could be briefly discussed in the analysis, explaining why they were not considered suitable.  This demonstrates thorough consideration and strengthens the justification.  For example:\n\n        *   \"While CWE-130 (Improper Handling of Length Parameter Inconsistency) was considered, it was deemed less appropriate than CWE-1284 because the core issue is the *lack* of validation, not the *incorrect* handling of an existing length parameter. Similarly, CWE-1285 focuses on indexes, positions, or offsets, whereas this vulnerability concerns the overall length of the key parameter.\"\n\n5.  **Mitigation Strategies:**\n\n    * The mitigations provided for each CWE are generally applicable, but could be tailored to the specific context.\n    * Add suggestions that are specific to the web service that accepts the NHI cards\n    * Consider adding defense in depth suggestions.\n\n    *   **CWE-121:**\n        *   Could mention Address Space Layout Randomization (ASLR) as a defense in depth mitigation, although it's often already enabled.\n    *   **CWE-1284:**\n        *   Emphasize using an \"accept known good\" approach with strict length limits for the network packet key parameter. Suggest implementing a maximum length for the key parameter based on application requirements and hardware limitations.\n    *   **CWE-20:**\n        *   Suggest using an input validation library and framework.\n        *   Mention the attack surface (i.e. the network packet) should be reduced.\n\n6.  **CWE Examples from Database:**\n    *   The observed examples are useful, but could be improved with more specific and targeted examples that match the root-cause and weakness.\n\n**Specific suggestions with examples:**\n* Add some more detailed observed examples that match to the CWE.\n* Add the mitigations from the table below.\n\n|CWE     |Possible Mitigations                                                                                                                                                                                            |\n|:---------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|CWE-121   |**Compiler-based protections**:  Employ compiler flags like `/GS` (Microsoft Visual Studio) or `-fstack-protector-all` (GCC) to insert canaries on the stack to detect buffer overflows at runtime.              |\n|CWE-1284  |**Input Sanitization**: Prior to use, inputs must be validated, encoded, normalized, or sanitized to ensure that data is handled as originally intended. If this can't be done, ensure they are rejected.|\n|CWE-20    |**Formal Language Approach:**   Employ language-theoretic security (LangSec) techniques by formally defining the expected input language and building recognizers for it. This enforces a clear boundary between raw input and internal data.            |",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 0.95 | Variant | Primary CWE | Allowed |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.85 | Base | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is a stack-based buffer overflow (**CWE-121**). This is a variant of **CWE-119**, which is a broader category of improper memory boundary restrictions. The overflow is caused by a failure to validate the length of the network packet key parameter, which directly relates to **CWE-1284**, as the parameter represents a quantity. **CWE-20**, a class-level weakness representing improper input validation, is a parent of **CWE-1284** but is less specific. Therefore, **CWE-1284** is a more appropriate secondary CWE. This highlights a vulnerability chain where a lack of input validation leads to a buffer overflow.\n\n```mermaid\ngraph TD\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    \n    cwe121 -->|CHILDOF| cwe119\n    cwe1284 -->|CHILDOF| cwe20\n    cwe1284 -->|CANPRECEDE| cwe121\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe121 primary\n    class cwe1284 secondary\n    class cwe119,cwe20 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-1284** (**Improper Validation of Specified Quantity in Input**). The network packet key parameter length is not validated. This leads to **CWE-121** (**Stack-based Buffer Overflow**) when an attacker provides an overly long key parameter, causing data to be written beyond the allocated buffer on the stack. The impact is disruption of service.\n\n## Summary of Analysis\nThe initial analysis correctly identified **CWE-121** as the primary weakness due to the explicit description of a stack-based buffer overflow. The secondary mapping to **CWE-1284** is also appropriate, given the insufficient validation of the network packet key parameter length. **CWE-20** was considered, but ultimately deemed less specific than **CWE-1284**.\n\nThe graph relationships reinforce this decision, showing that **CWE-1284** is a child of **CWE-20** and can precede **CWE-121**. The vulnerability description states, \"The NHI cards web service component has a stack-based buffer overflow vulnerability due to insufficient validation for network packet key parameter.\" This statement directly supports the selection of both **CWE-121** and **CWE-1284**.\n\nThe selected CWEs are at the optimal level of specificity, as **CWE-121** is a variant that specifies the location of the buffer overflow (stack-based), and **CWE-1284** is a base-level CWE that describes the specific type of input validation failure.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-130",
        "name": "Improper Handling of Length Parameter Inconsistency",
        "type": "Base",
        "original_content": "The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.",
        "relationships": [],
        "original_sparse_score": 370.23977445623535,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4973743717281906,
            "sparse": 370.23977445623535,
            "graph": 1.6643713856450457
          },
          "normalized_scores": {
            "dense": 0.4973743717281906,
            "sparse": 0.2961918195649883,
            "graph": 0.5944183520160878
          },
          "weighted_scores": {
            "dense": 0.1740810301048667,
            "sparse": 0.11847672782599533,
            "graph": 0.14860458800402196
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4973743717281906,
              "query_max": 0.5507914573716326,
              "query_min": 0.4891538267420318,
              "normalized_score": 0.4973743717281906,
              "weight": 0.35,
              "weighted_score": 0.1740810301048667
            },
            "sparse": {
              "raw_score": 370.23977445623535,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.2961918195649883,
              "weight": 0.4,
              "weighted_score": 0.11847672782599533
            },
            "graph": {
              "raw_score": 1.6643713856450457,
              "query_max": 2.8651999999999997,
              "query_min": 1.6320000000000003,
              "normalized_score": 0.5944183520160878,
              "weight": 0.25,
              "weighted_score": 0.14860458800402196
            }
          },
          "contribution_percentages": {
            "dense": 39.459630158590464,
            "sparse": 26.85558477909686,
            "graph": 33.68478506231267
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.441162345934884,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5735110497153493
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5735110497153493
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6308621546868842
            }
          },
          "combined_score": 0.6308621546868842
        }
      },
      "similarity": 0.6308621546868842
    },
    {
      "metadata": {
        "doc_id": "CWE-1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
        "relationships": [],
        "original_sparse_score": 336.39335074943875,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5022417249107273,
            "sparse": 336.39335074943875,
            "graph": 1.7029420028492244
          },
          "normalized_scores": {
            "dense": 0.5022417249107273,
            "sparse": 0.269114680599551,
            "graph": 0.6081935724461516
          },
          "weighted_scores": {
            "dense": 0.17578460371875454,
            "sparse": 0.10764587223982042,
            "graph": 0.1520483931115379
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5022417249107273,
              "query_max": 0.5507914573716326,
              "query_min": 0.4891538267420318,
              "normalized_score": 0.5022417249107273,
              "weight": 0.35,
              "weighted_score": 0.17578460371875454
            },
            "sparse": {
              "raw_score": 336.39335074943875,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.269114680599551,
              "weight": 0.4,
              "weighted_score": 0.10764587223982042
            },
            "graph": {
              "raw_score": 1.7029420028492244,
              "query_max": 2.8651999999999997,
              "query_min": 1.6320000000000003,
              "normalized_score": 0.6081935724461516,
              "weight": 0.25,
              "weighted_score": 0.1520483931115379
            }
          },
          "contribution_percentages": {
            "dense": 40.36581708180493,
            "sparse": 24.718965691648577,
            "graph": 34.915217226546496
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.43547886907011285,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5661225297911467
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5661225297911467
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6227347827702615
            }
          },
          "combined_score": 0.6227347827702615
        }
      },
      "similarity": 0.6227347827702615
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 411.4105310782595,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 411.4105310782595,
            "graph": 2.4699999999999998
          },
          "normalized_scores": {
            "sparse": 0.3291284248626076,
            "graph": 0.8821428571428571
          },
          "weighted_scores": {
            "sparse": 0.13165136994504306,
            "graph": 0.22053571428571428
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 411.4105310782595,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.3291284248626076,
              "weight": 0.4,
              "weighted_score": 0.13165136994504306
            },
            "graph": {
              "raw_score": 2.4699999999999998,
              "query_max": 2.8651999999999997,
              "query_min": 1.6320000000000003,
              "normalized_score": 0.8821428571428571,
              "weight": 0.25,
              "weighted_score": 0.22053571428571428
            }
          },
          "contribution_percentages": {
            "sparse": 37.38108972184325,
            "graph": 62.61891027815675
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.35218708423075734,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4578432094999846
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4578432094999846
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5036275304499831
            }
          },
          "combined_score": 0.5036275304499831
        }
      },
      "similarity": 0.5036275304499831
    },
    {
      "metadata": {
        "doc_id": "CWE-120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "type": "Base",
        "original_content": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 395.00489661239345,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
          "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 395.00489661239345,
            "graph": 2.4699999999999998
          },
          "normalized_scores": {
            "sparse": 0.3160039172899148,
            "graph": 0.8821428571428571
          },
          "weighted_scores": {
            "sparse": 0.1264015669159659,
            "graph": 0.22053571428571428
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 395.00489661239345,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.3160039172899148,
              "weight": 0.4,
              "weighted_score": 0.1264015669159659
            },
            "graph": {
              "raw_score": 2.4699999999999998,
              "query_max": 2.8651999999999997,
              "query_min": 1.6320000000000003,
              "normalized_score": 0.8821428571428571,
              "weight": 0.25,
              "weighted_score": 0.22053571428571428
            }
          },
          "contribution_percentages": {
            "sparse": 36.433549740792095,
            "graph": 63.5664502592079
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.3469372812016802,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4510184655621843
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4510184655621843
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
                "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.47356938884029354
            }
          },
          "combined_score": 0.47356938884029354
        }
      },
      "similarity": 0.47356938884029354
    },
    {
      "metadata": {
        "doc_id": "CWE-770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [],
        "original_sparse_score": 358.8619292361299,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 358.8619292361299,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.28708954338890397,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.11483581735556159,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 358.8619292361299,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.28708954338890397,
              "weight": 0.4,
              "weighted_score": 0.11483581735556159
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 2.8651999999999997,
              "query_min": 1.6320000000000003,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 36.78781090425826,
            "graph": 63.212189095741735
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.31215724592699023,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4058044197050873
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4058044197050873
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.44638486167559605
            }
          },
          "combined_score": 0.44638486167559605
        }
      },
      "similarity": 0.44638486167559605
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 422.6075274571167,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5507914573716326,
            "sparse": 422.6075274571167
          },
          "normalized_scores": {
            "dense": 0.5507914573716326,
            "sparse": 0.3380860219656934
          },
          "weighted_scores": {
            "dense": 0.1927770100800714,
            "sparse": 0.13523440878627735
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5507914573716326,
              "query_max": 0.5507914573716326,
              "query_min": 0.4891538267420318,
              "normalized_score": 0.5507914573716326,
              "weight": 0.35,
              "weighted_score": 0.1927770100800714
            },
            "sparse": {
              "raw_score": 422.6075274571167,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.3380860219656934,
              "weight": 0.4,
              "weighted_score": 0.13523440878627735
            }
          },
          "contribution_percentages": {
            "dense": 58.77143263680712,
            "sparse": 41.22856736319287
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.32801141886634877,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.39361370263961853
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.39361370263961853
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.43297507290358045
            }
          },
          "combined_score": 0.43297507290358045
        }
      },
      "similarity": 0.43297507290358045
    },
    {
      "metadata": {
        "doc_id": "CWE-789",
        "name": "Memory Allocation with Excessive Size Value",
        "type": "Variant",
        "original_content": "The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.",
        "relationships": [],
        "original_sparse_score": 186.5188456728784,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 186.5188456728784,
            "graph": 2.04
          },
          "normalized_scores": {
            "sparse": 0.1492150765383027,
            "graph": 0.7285714285714286
          },
          "weighted_scores": {
            "sparse": 0.05968603061532109,
            "graph": 0.18214285714285716
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 186.5188456728784,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.1492150765383027,
              "weight": 0.4,
              "weighted_score": 0.05968603061532109
            },
            "graph": {
              "raw_score": 2.04,
              "query_max": 2.8651999999999997,
              "query_min": 1.6320000000000003,
              "normalized_score": 0.7285714285714286,
              "weight": 0.25,
              "weighted_score": 0.18214285714285716
            }
          },
          "contribution_percentages": {
            "sparse": 24.681100413034756,
            "graph": 75.31889958696524
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.24182888775817823,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.29019466530981386
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.29019466530981386
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3192141318407953
            }
          },
          "combined_score": 0.3192141318407953
        }
      },
      "similarity": 0.3192141318407953
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 377.5911944411796,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5032866610635895,
            "sparse": 377.5911944411796
          },
          "normalized_scores": {
            "dense": 0.5032866610635895,
            "sparse": 0.30207295555294367
          },
          "weighted_scores": {
            "dense": 0.17615033137225633,
            "sparse": 0.12082918222117747
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5032866610635895,
              "query_max": 0.5507914573716326,
              "query_min": 0.4891538267420318,
              "normalized_score": 0.5032866610635895,
              "weight": 0.35,
              "weighted_score": 0.17615033137225633
            },
            "sparse": {
              "raw_score": 377.5911944411796,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.30207295555294367,
              "weight": 0.4,
              "weighted_score": 0.12082918222117747
            }
          },
          "contribution_percentages": {
            "dense": 59.31396722987663,
            "sparse": 40.686032770123376
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.2969795135934338,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.23758361087474703
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.23758361087474703
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.19006688869979763
            }
          },
          "combined_score": 0.19006688869979763
        }
      },
      "similarity": 0.19006688869979763
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 360.0974176153364,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 360.0974176153364
          },
          "normalized_scores": {
            "sparse": 0.2880779340922691
          },
          "weighted_scores": {
            "sparse": 0.11523117363690766
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 360.0974176153364,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.2880779340922691,
              "weight": 0.4,
              "weighted_score": 0.11523117363690766
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11523117363690766,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.14980052572797997
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.14980052572797997
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.16478057830077797
            }
          },
          "combined_score": 0.16478057830077797
        }
      },
      "similarity": 0.16478057830077797
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 359.7228190383582,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 359.7228190383582
          },
          "normalized_scores": {
            "sparse": 0.28777825523068656
          },
          "weighted_scores": {
            "sparse": 0.11511130209227463
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 359.7228190383582,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.28777825523068656,
              "weight": 0.4,
              "weighted_score": 0.11511130209227463
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11511130209227463,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.14964469271995703
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.14964469271995703
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.16460916199195275
            }
          },
          "combined_score": 0.16460916199195275
        }
      },
      "similarity": 0.16460916199195275
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 349.39544524033386,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 349.39544524033386
          },
          "normalized_scores": {
            "sparse": 0.2795163561922671
          },
          "weighted_scores": {
            "sparse": 0.11180654247690686
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 349.39544524033386,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.2795163561922671,
              "weight": 0.4,
              "weighted_score": 0.11180654247690686
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11180654247690686,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.1453485052199789
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1453485052199789
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.15988335574197682
            }
          },
          "combined_score": 0.15988335574197682
        }
      },
      "similarity": 0.15988335574197682
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 364.0320623331951,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 364.0320623331951
          },
          "normalized_scores": {
            "sparse": 0.2912256498665561
          },
          "weighted_scores": {
            "sparse": 0.11649025994662243
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 364.0320623331951,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.2912256498665561,
              "weight": 0.4,
              "weighted_score": 0.11649025994662243
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11649025994662243,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.1397883119359469
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1397883119359469
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1537671431295416
            }
          },
          "combined_score": 0.1537671431295416
        }
      },
      "similarity": 0.1537671431295416
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 322.6749424679102,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 322.6749424679102
          },
          "normalized_scores": {
            "sparse": 0.2581399539743282
          },
          "weighted_scores": {
            "sparse": 0.10325598158973129
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 322.6749424679102,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.2581399539743282,
              "weight": 0.4,
              "weighted_score": 0.10325598158973129
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10325598158973129,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13423277606665068
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13423277606665068
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.14765605367331577
            }
          },
          "combined_score": 0.14765605367331577
        }
      },
      "similarity": 0.14765605367331577
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 337.8592426444744,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 337.8592426444744
          },
          "normalized_scores": {
            "sparse": 0.27028739411557956
          },
          "weighted_scores": {
            "sparse": 0.10811495764623183
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 337.8592426444744,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.27028739411557956,
              "weight": 0.4,
              "weighted_score": 0.10811495764623183
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10811495764623183,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.12973794917547818
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.12973794917547818
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.142711744093026
            }
          },
          "combined_score": 0.142711744093026
        }
      },
      "similarity": 0.142711744093026
    },
    {
      "metadata": {
        "doc_id": "CWE-791",
        "name": "Incomplete Filtering of Special Elements",
        "type": "Base",
        "original_content": "The product receives data from an upstream component, but does not completely filter special elements before sending it to a downstream component.",
        "relationships": [],
        "original_sparse_score": 213.04896801783175,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 213.04896801783175
          },
          "normalized_scores": {
            "sparse": 0.1704391744142654
          },
          "weighted_scores": {
            "sparse": 0.06817566976570616
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 213.04896801783175,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.1704391744142654,
              "weight": 0.4,
              "weighted_score": 0.06817566976570616
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06817566976570616,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.08862837069541801
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08862837069541801
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.09749120776495983
            }
          },
          "combined_score": 0.09749120776495983
        }
      },
      "similarity": 0.09749120776495983
    },
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 192.38400714870158,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 192.38400714870158
          },
          "normalized_scores": {
            "sparse": 0.15390720571896127
          },
          "weighted_scores": {
            "sparse": 0.06156288228758451
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 192.38400714870158,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.15390720571896127,
              "weight": 0.4,
              "weighted_score": 0.06156288228758451
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06156288228758451,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.08003174697385987
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08003174697385987
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08803492167124587
            }
          },
          "combined_score": 0.08803492167124587
        }
      },
      "similarity": 0.08803492167124587
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 189.52233741683352,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 189.52233741683352
          },
          "normalized_scores": {
            "sparse": 0.15161786993346682
          },
          "weighted_scores": {
            "sparse": 0.06064714797338673
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 189.52233741683352,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.15161786993346682,
              "weight": 0.4,
              "weighted_score": 0.06064714797338673
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06064714797338673,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.07884129236540276
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07884129236540276
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08672542160194303
            }
          },
          "combined_score": 0.08672542160194303
        }
      },
      "similarity": 0.08672542160194303
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 350.83948647837207,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 350.83948647837207
          },
          "normalized_scores": {
            "sparse": 0.28067158918269763
          },
          "weighted_scores": {
            "sparse": 0.11226863567307906
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 350.83948647837207,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.28067158918269763,
              "weight": 0.4,
              "weighted_score": 0.11226863567307906
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.11226863567307906,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.08981490853846325
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08981490853846325
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.0718519268307706
            }
          },
          "combined_score": 0.0718519268307706
        }
      },
      "similarity": 0.0718519268307706
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 199.09158199035556,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 199.09158199035556
          },
          "normalized_scores": {
            "sparse": 0.15927326559228444
          },
          "weighted_scores": {
            "sparse": 0.06370930623691377
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 199.09158199035556,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.15927326559228444,
              "weight": 0.4,
              "weighted_score": 0.06370930623691377
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.06370930623691377,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.05096744498953102
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.05096744498953102
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.05351581723900757
            }
          },
          "combined_score": 0.05351581723900757
        }
      },
      "similarity": 0.05351581723900757
    },
    {
      "metadata": {
        "doc_id": "CWE-682",
        "name": "Incorrect Calculation",
        "type": "Pillar",
        "original_content": "The product performs a calculation that generates incorrect or unintended results that are later used in security-critical decisions or resource management.",
        "relationships": [],
        "original_sparse_score": 191.14389035152965,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is extremely high-level, a Pillar. In many cases, lower-level children or descendants are more appropriate. However, sometimes this weakness is forced to be used due to the lack of in-depth weakness research. See Research Gaps.",
          "comments": "Where feasible, consider children or descendants of this entry instead.",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 191.14389035152965
          },
          "normalized_scores": {
            "sparse": 0.15291511228122373
          },
          "weighted_scores": {
            "sparse": 0.061166044912489496
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 191.14389035152965,
              "query_max": 422.6075274571167,
              "query_min": 186.5188456728784,
              "normalized_score": 0.15291511228122373,
              "weight": 0.4,
              "weighted_score": 0.061166044912489496
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.6,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.061166044912489496,
            "abstraction": {
              "type": "pillar",
              "factor": 0.6,
              "score_after": 0.036699626947493694
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.036699626947493694
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is extremely high-level, a Pillar. In many cases, lower-level children or descendants are more appropriate. However, sometimes this weakness is forced to be used due to the lack of in-depth weakness research. See Research Gaps.",
                "comments": "Where feasible, consider children or descendants of this entry instead.",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.029359701557994958
            }
          },
          "combined_score": 0.029359701557994958
        }
      },
      "similarity": 0.029359701557994958
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-119",
      "CWE-120",
      "CWE-1284",
      "CWE-20",
      "CWE-121",
      "CWE-789"
    ],
    "critic_additional": [
      "CWE-770",
      "CWE-1285",
      "CWE-193",
      "CWE-130",
      "CWE-125"
    ]
  }
}