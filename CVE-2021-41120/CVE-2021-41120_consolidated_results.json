{
  "cve_id": "CVE-2021-41120",
  "query": "sylius/paypal-plugin is a paypal plugin for the Sylius development platform. In affected versions the URL to the payment page done after checkout was created with autoincremented payment id (/pay-with-paypal/{id}) and therefore it was easy to predict. The problem is that the Credit card form has prefilled credit card holder field with the Customers first and last name and hence this can lead to personally identifiable information exposure. Additionally, the mentioned form did not require authentication. The problem has been patched in Sylius/PayPalPlugin 1.2.4 and 1.3.1. If users are unable to update they can override a sylius_paypal_plugin_pay_with_paypal_form route and change its URL parameters to (for example) {orderToken}/{paymentId}, then override the Sylius\\PayPalPlugin\\Controller\\PayWithPayPalFormAction service, to operate on the payment taken from the repository by these 2 values. It would also require usage of custom repository method. Additionally, one could override the @SyliusPayPalPlugin/payWithPaypal.html.twig template, to add contingencies [SCA_ALWAYS] line in hostedFields.submit(...) function call (line 421). It would then have to be handled in the function callback.",
  "keyphrases": {
    "rootcause": "URL to the payment page done after checkout was created with autoincremented payment id (/pay-with-paypal/{id})",
    "weakness": "sensitive information exposure"
  },
  "timestamp": "2025-03-17T02:28:07.991521",
  "retriever_weights": {
    "dense": 0.35,
    "sparse": 0.4,
    "graph": 0.25
  },
  "results_count": 20,
  "results": [
    {
      "cwe_id": "CWE-79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "abstraction": "Base",
      "score": 1.0807697078957987,
      "score_info": {
        "retrievers": [
          "dense",
          "sparse",
          "graph"
        ],
        "is_graph_exclusive": false,
        "raw_scores": {
          "dense": 0.41696257645448853,
          "sparse": 1470.149219171383,
          "graph": 2.350276440461303
        },
        "normalized_scores": {
          "dense": 0.41696257645448853,
          "sparse": 1.0,
          "graph": 0.839384443021894
        },
        "weighted_scores": {
          "dense": 0.14593690175907098,
          "sparse": 0.4,
          "graph": 0.2098461107554735
        },
        "normalization_details": {
          "dense": {
            "raw_score": 0.41696257645448853,
            "query_max": 0.4553546213105841,
            "query_min": 0.39265249473940134,
            "normalized_score": 0.41696257645448853,
            "weight": 0.35,
            "weighted_score": 0.14593690175907098
          },
          "sparse": {
            "raw_score": 1470.149219171383,
            "query_max": 1899.4720674218852,
            "query_min": 818.89772881812,
            "normalized_score": 1.0,
            "weight": 0.4,
            "weighted_score": 0.4
          },
          "graph": {
            "raw_score": 2.350276440461303,
            "query_max": 2.350276440461303,
            "query_min": 1.4456000000000002,
            "normalized_score": 0.839384443021894,
            "weight": 0.25,
            "weighted_score": 0.2098461107554735
          }
        },
        "contribution_percentages": {
          "dense": 19.3093651673287,
          "sparse": 52.9252435390379,
          "graph": 27.76539129363339
        },
        "abstraction_factor": 1.3,
        "relationship_count": 0,
        "relationship_bonus": 1.0,
        "mapping_boost": 1.1,
        "mapping_usage": "ALLOWED",
        "adjustment_factors": {
          "initial_combined_score": 0.7557830125145445,
          "abstraction": {
            "type": "base",
            "factor": 1.3,
            "score_after": 0.9825179162689078
          },
          "relationship": {
            "count": 0,
            "is_graph_exclusive": false,
            "bonus": 1.0,
            "score_after": 0.9825179162689078
          },
          "mapping": {
            "usage": "ALLOWED",
            "boost": 1.1,
            "notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_after": 1.0807697078957987
          }
        },
        "combined_score": 1.0807697078957987
      },
      "mapping_notes": {
        "usage": "Allowed",
        "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
        "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
        "reasons": [
          "Acceptable-Use"
        ]
      }
    },
    {
      "cwe_id": "CWE-639",
      "name": "Authorization Bypass Through User-Controlled Key",
      "abstraction": "Base",
      "score": 0.9880198634434655,
      "score_info": {
        "retrievers": [
          "dense",
          "sparse",
          "graph"
        ],
        "is_graph_exclusive": false,
        "raw_scores": {
          "dense": 0.4112087259477304,
          "sparse": 1521.4327327698397,
          "graph": 1.6463991862896603
        },
        "normalized_scores": {
          "dense": 0.4112087259477304,
          "sparse": 1.0,
          "graph": 0.5879997093891645
        },
        "weighted_scores": {
          "dense": 0.14392305408170564,
          "sparse": 0.4,
          "graph": 0.14699992734729111
        },
        "normalization_details": {
          "dense": {
            "raw_score": 0.4112087259477304,
            "query_max": 0.4553546213105841,
            "query_min": 0.39265249473940134,
            "normalized_score": 0.4112087259477304,
            "weight": 0.35,
            "weighted_score": 0.14392305408170564
          },
          "sparse": {
            "raw_score": 1521.4327327698397,
            "query_max": 1899.4720674218852,
            "query_min": 818.89772881812,
            "normalized_score": 1.0,
            "weight": 0.4,
            "weighted_score": 0.4
          },
          "graph": {
            "raw_score": 1.6463991862896603,
            "query_max": 2.350276440461303,
            "query_min": 1.4456000000000002,
            "normalized_score": 0.5879997093891645,
            "weight": 0.25,
            "weighted_score": 0.14699992734729111
          }
        },
        "contribution_percentages": {
          "dense": 20.83054956198414,
          "sparse": 57.893572909197886,
          "graph": 21.275877528817976
        },
        "abstraction_factor": 1.3,
        "relationship_count": 0,
        "relationship_bonus": 1.0,
        "mapping_boost": 1.1,
        "mapping_usage": "ALLOWED",
        "adjustment_factors": {
          "initial_combined_score": 0.6909229814289968,
          "abstraction": {
            "type": "base",
            "factor": 1.3,
            "score_after": 0.8981998758576958
          },
          "relationship": {
            "count": 0,
            "is_graph_exclusive": false,
            "bonus": 1.0,
            "score_after": 0.8981998758576958
          },
          "mapping": {
            "usage": "ALLOWED",
            "boost": 1.1,
            "notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_after": 0.9880198634434655
          }
        },
        "combined_score": 0.9880198634434655
      },
      "mapping_notes": {
        "usage": "Allowed",
        "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
        "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
        "reasons": [
          "Acceptable-Use"
        ]
      }
    },
    {
      "cwe_id": "CWE-352",
      "name": "Cross-Site Request Forgery (CSRF)",
      "abstraction": "Compound",
      "score": 0.7881315733960845,
      "score_info": {
        "retrievers": [
          "dense",
          "sparse",
          "graph"
        ],
        "is_graph_exclusive": false,
        "raw_scores": {
          "dense": 0.4553546213105841,
          "sparse": 1452.8009092982008,
          "graph": 1.759622268131733
        },
        "normalized_scores": {
          "dense": 0.4553546213105841,
          "sparse": 1.0,
          "graph": 0.6284365243327619
        },
        "weighted_scores": {
          "dense": 0.15937411745870442,
          "sparse": 0.4,
          "graph": 0.15710913108319047
        },
        "normalization_details": {
          "dense": {
            "raw_score": 0.4553546213105841,
            "query_max": 0.4553546213105841,
            "query_min": 0.39265249473940134,
            "normalized_score": 0.4553546213105841,
            "weight": 0.35,
            "weighted_score": 0.15937411745870442
          },
          "sparse": {
            "raw_score": 1452.8009092982008,
            "query_max": 1899.4720674218852,
            "query_min": 818.89772881812,
            "normalized_score": 1.0,
            "weight": 0.4,
            "weighted_score": 0.4
          },
          "graph": {
            "raw_score": 1.759622268131733,
            "query_max": 2.350276440461303,
            "query_min": 1.4456000000000002,
            "normalized_score": 0.6284365243327619,
            "weight": 0.25,
            "weighted_score": 0.15710913108319047
          }
        },
        "contribution_percentages": {
          "dense": 22.243941890203917,
          "sparse": 55.828241736849314,
          "graph": 21.927816372946758
        },
        "abstraction_factor": 1.0,
        "relationship_count": 0,
        "relationship_bonus": 1.0,
        "mapping_boost": 1.1,
        "mapping_usage": "ALLOWED",
        "adjustment_factors": {
          "initial_combined_score": 0.7164832485418949,
          "abstraction": {
            "type": "compound",
            "factor": 1.0,
            "score_after": 0.7164832485418949
          },
          "relationship": {
            "count": 0,
            "is_graph_exclusive": false,
            "bonus": 1.0,
            "score_after": 0.7164832485418949
          },
          "mapping": {
            "usage": "ALLOWED",
            "boost": 1.1,
            "notes": {
              "usage": "Allowed",
              "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
              "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
              "reasons": [
                "Other"
              ]
            },
            "score_after": 0.7881315733960845
          }
        },
        "combined_score": 0.7881315733960845
      },
      "mapping_notes": {
        "usage": "Allowed",
        "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
        "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
        "reasons": [
          "Other"
        ]
      }
    },
    {
      "cwe_id": "CWE-256",
      "name": "Plaintext Storage of a Password",
      "abstraction": "Base",
      "score": 0.7761538633639509,
      "score_info": {
        "retrievers": [
          "dense",
          "sparse"
        ],
        "is_graph_exclusive": false,
        "raw_scores": {
          "dense": 0.40789982690100046,
          "sparse": 1323.2586260424664
        },
        "normalized_scores": {
          "dense": 0.40789982690100046,
          "sparse": 1.0
        },
        "weighted_scores": {
          "dense": 0.14276493941535015,
          "sparse": 0.4
        },
        "normalization_details": {
          "dense": {
            "raw_score": 0.40789982690100046,
            "query_max": 0.4553546213105841,
            "query_min": 0.39265249473940134,
            "normalized_score": 0.40789982690100046,
            "weight": 0.35,
            "weighted_score": 0.14276493941535015
          },
          "sparse": {
            "raw_score": 1323.2586260424664,
            "query_max": 1899.4720674218852,
            "query_min": 818.89772881812,
            "normalized_score": 1.0,
            "weight": 0.4,
            "weighted_score": 0.4
          }
        },
        "contribution_percentages": {
          "dense": 26.30327219903559,
          "sparse": 73.69672780096441
        },
        "abstraction_factor": 1.3,
        "relationship_count": 0,
        "relationship_bonus": 1.0,
        "mapping_boost": 1.1,
        "mapping_usage": "ALLOWED",
        "adjustment_factors": {
          "initial_combined_score": 0.5427649394153502,
          "abstraction": {
            "type": "base",
            "factor": 1.3,
            "score_after": 0.7055944212399553
          },
          "relationship": {
            "count": 0,
            "is_graph_exclusive": false,
            "bonus": 1.0,
            "score_after": 0.7055944212399553
          },
          "mapping": {
            "usage": "ALLOWED",
            "boost": 1.1,
            "notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_after": 0.7761538633639509
          }
        },
        "combined_score": 0.7761538633639509
      },
      "mapping_notes": {
        "usage": "Allowed",
        "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
        "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
        "reasons": [
          "Acceptable-Use"
        ]
      }
    },
    {
      "cwe_id": "CWE-306",
      "name": "Missing Authentication for Critical Function",
      "abstraction": "Base",
      "score": 0.7696334438711655,
      "score_info": {
        "retrievers": [
          "sparse",
          "graph"
        ],
        "is_graph_exclusive": false,
        "raw_scores": {
          "sparse": 1899.4720674218852,
          "graph": 1.5478983016482886
        },
        "normalized_scores": {
          "sparse": 1.0,
          "graph": 0.5528208220172459
        },
        "weighted_scores": {
          "sparse": 0.4,
          "graph": 0.13820520550431148
        },
        "normalization_details": {
          "sparse": {
            "raw_score": 1899.4720674218852,
            "query_max": 1899.4720674218852,
            "query_min": 818.89772881812,
            "normalized_score": 1.0,
            "weight": 0.4,
            "weighted_score": 0.4
          },
          "graph": {
            "raw_score": 1.5478983016482886,
            "query_max": 2.350276440461303,
            "query_min": 1.4456000000000002,
            "normalized_score": 0.5528208220172459,
            "weight": 0.25,
            "weighted_score": 0.13820520550431148
          }
        },
        "contribution_percentages": {
          "sparse": 74.32109461393823,
          "graph": 25.678905386061775
        },
        "abstraction_factor": 1.3,
        "relationship_count": 0,
        "relationship_bonus": 1.0,
        "mapping_boost": 1.1,
        "mapping_usage": "ALLOWED",
        "adjustment_factors": {
          "initial_combined_score": 0.5382052055043115,
          "abstraction": {
            "type": "base",
            "factor": 1.3,
            "score_after": 0.6996667671556049
          },
          "relationship": {
            "count": 0,
            "is_graph_exclusive": false,
            "bonus": 1.0,
            "score_after": 0.6996667671556049
          },
          "mapping": {
            "usage": "ALLOWED",
            "boost": 1.1,
            "notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_after": 0.7696334438711655
          }
        },
        "combined_score": 0.7696334438711655
      },
      "mapping_notes": {
        "usage": "Allowed",
        "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
        "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
        "reasons": [
          "Acceptable-Use"
        ]
      }
    },
    {
      "cwe_id": "CWE-201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "abstraction": "Base",
      "score": 0.5720000000000001,
      "score_info": {
        "retrievers": [
          "sparse"
        ],
        "is_graph_exclusive": false,
        "raw_scores": {
          "sparse": 1429.8604065968134
        },
        "normalized_scores": {
          "sparse": 1.0
        },
        "weighted_scores": {
          "sparse": 0.4
        },
        "normalization_details": {
          "sparse": {
            "raw_score": 1429.8604065968134,
            "query_max": 1899.4720674218852,
            "query_min": 818.89772881812,
            "normalized_score": 1.0,
            "weight": 0.4,
            "weighted_score": 0.4
          }
        },
        "contribution_percentages": {
          "sparse": 100.0
        },
        "abstraction_factor": 1.3,
        "relationship_count": 0,
        "relationship_bonus": 1.0,
        "mapping_boost": 1.1,
        "mapping_usage": "ALLOWED",
        "adjustment_factors": {
          "initial_combined_score": 0.4,
          "abstraction": {
            "type": "base",
            "factor": 1.3,
            "score_after": 0.52
          },
          "relationship": {
            "count": 0,
            "is_graph_exclusive": false,
            "bonus": 1.0,
            "score_after": 0.52
          },
          "mapping": {
            "usage": "ALLOWED",
            "boost": 1.1,
            "notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_after": 0.5720000000000001
          }
        },
        "combined_score": 0.5720000000000001
      },
      "mapping_notes": {
        "usage": "Allowed",
        "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
        "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
        "reasons": [
          "Acceptable-Use"
        ]
      }
    },
    {
      "cwe_id": "CWE-1336",
      "name": "Improper Neutralization of Special Elements Used in a Template Engine",
      "abstraction": "Base",
      "score": 0.5720000000000001,
      "score_info": {
        "retrievers": [
          "sparse"
        ],
        "is_graph_exclusive": false,
        "raw_scores": {
          "sparse": 1361.6006324028406
        },
        "normalized_scores": {
          "sparse": 1.0
        },
        "weighted_scores": {
          "sparse": 0.4
        },
        "normalization_details": {
          "sparse": {
            "raw_score": 1361.6006324028406,
            "query_max": 1899.4720674218852,
            "query_min": 818.89772881812,
            "normalized_score": 1.0,
            "weight": 0.4,
            "weighted_score": 0.4
          }
        },
        "contribution_percentages": {
          "sparse": 100.0
        },
        "abstraction_factor": 1.3,
        "relationship_count": 0,
        "relationship_bonus": 1.0,
        "mapping_boost": 1.1,
        "mapping_usage": "ALLOWED",
        "adjustment_factors": {
          "initial_combined_score": 0.4,
          "abstraction": {
            "type": "base",
            "factor": 1.3,
            "score_after": 0.52
          },
          "relationship": {
            "count": 0,
            "is_graph_exclusive": false,
            "bonus": 1.0,
            "score_after": 0.52
          },
          "mapping": {
            "usage": "ALLOWED",
            "boost": 1.1,
            "notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_after": 0.5720000000000001
          }
        },
        "combined_score": 0.5720000000000001
      },
      "mapping_notes": {
        "usage": "Allowed",
        "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
        "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
        "reasons": [
          "Acceptable-Use"
        ]
      }
    },
    {
      "cwe_id": "CWE-434",
      "name": "Unrestricted Upload of File with Dangerous Type",
      "abstraction": "Base",
      "score": 0.5720000000000001,
      "score_info": {
        "retrievers": [
          "sparse"
        ],
        "is_graph_exclusive": false,
        "raw_scores": {
          "sparse": 1344.6279239197258
        },
        "normalized_scores": {
          "sparse": 1.0
        },
        "weighted_scores": {
          "sparse": 0.4
        },
        "normalization_details": {
          "sparse": {
            "raw_score": 1344.6279239197258,
            "query_max": 1899.4720674218852,
            "query_min": 818.89772881812,
            "normalized_score": 1.0,
            "weight": 0.4,
            "weighted_score": 0.4
          }
        },
        "contribution_percentages": {
          "sparse": 100.0
        },
        "abstraction_factor": 1.3,
        "relationship_count": 0,
        "relationship_bonus": 1.0,
        "mapping_boost": 1.1,
        "mapping_usage": "ALLOWED",
        "adjustment_factors": {
          "initial_combined_score": 0.4,
          "abstraction": {
            "type": "base",
            "factor": 1.3,
            "score_after": 0.52
          },
          "relationship": {
            "count": 0,
            "is_graph_exclusive": false,
            "bonus": 1.0,
            "score_after": 0.52
          },
          "mapping": {
            "usage": "ALLOWED",
            "boost": 1.1,
            "notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_after": 0.5720000000000001
          }
        },
        "combined_score": 0.5720000000000001
      },
      "mapping_notes": {
        "usage": "Allowed",
        "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
        "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
        "reasons": [
          "Acceptable-Use"
        ]
      }
    },
    {
      "cwe_id": "CWE-125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "score": 0.5720000000000001,
      "score_info": {
        "retrievers": [
          "sparse"
        ],
        "is_graph_exclusive": false,
        "raw_scores": {
          "sparse": 1321.063570820567
        },
        "normalized_scores": {
          "sparse": 1.0
        },
        "weighted_scores": {
          "sparse": 0.4
        },
        "normalization_details": {
          "sparse": {
            "raw_score": 1321.063570820567,
            "query_max": 1899.4720674218852,
            "query_min": 818.89772881812,
            "normalized_score": 1.0,
            "weight": 0.4,
            "weighted_score": 0.4
          }
        },
        "contribution_percentages": {
          "sparse": 100.0
        },
        "abstraction_factor": 1.3,
        "relationship_count": 0,
        "relationship_bonus": 1.0,
        "mapping_boost": 1.1,
        "mapping_usage": "ALLOWED",
        "adjustment_factors": {
          "initial_combined_score": 0.4,
          "abstraction": {
            "type": "base",
            "factor": 1.3,
            "score_after": 0.52
          },
          "relationship": {
            "count": 0,
            "is_graph_exclusive": false,
            "bonus": 1.0,
            "score_after": 0.52
          },
          "mapping": {
            "usage": "ALLOWED",
            "boost": 1.1,
            "notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_after": 0.5720000000000001
          }
        },
        "combined_score": 0.5720000000000001
      },
      "mapping_notes": {
        "usage": "Allowed",
        "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
        "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
        "reasons": [
          "Acceptable-Use"
        ]
      }
    },
    {
      "cwe_id": "CWE-94",
      "name": "Improper Control of Generation of Code ('Code Injection')",
      "abstraction": "Base",
      "score": 0.546,
      "score_info": {
        "retrievers": [
          "sparse"
        ],
        "is_graph_exclusive": false,
        "raw_scores": {
          "sparse": 1325.753541822543
        },
        "normalized_scores": {
          "sparse": 1.0
        },
        "weighted_scores": {
          "sparse": 0.4
        },
        "normalization_details": {
          "sparse": {
            "raw_score": 1325.753541822543,
            "query_max": 1899.4720674218852,
            "query_min": 818.89772881812,
            "normalized_score": 1.0,
            "weight": 0.4,
            "weighted_score": 0.4
          }
        },
        "contribution_percentages": {
          "sparse": 100.0
        },
        "abstraction_factor": 1.3,
        "relationship_count": 0,
        "relationship_bonus": 1.0,
        "mapping_boost": 1.05,
        "mapping_usage": "ALLOWED-WITH-REVIEW",
        "adjustment_factors": {
          "initial_combined_score": 0.4,
          "abstraction": {
            "type": "base",
            "factor": 1.3,
            "score_after": 0.52
          },
          "relationship": {
            "count": 0,
            "is_graph_exclusive": false,
            "bonus": 1.0,
            "score_after": 0.52
          },
          "mapping": {
            "usage": "ALLOWED-WITH-REVIEW",
            "boost": 1.05,
            "notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
              "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
              "reasons": [
                "Frequent Misuse",
                "Frequent Misinterpretation"
              ]
            },
            "score_after": 0.546
          }
        },
        "combined_score": 0.546
      },
      "mapping_notes": {
        "usage": "Allowed-with-Review",
        "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
        "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
        "reasons": [
          "Frequent Misuse",
          "Frequent Misinterpretation"
        ]
      }
    }
  ]
}