{
  "cve_id": "CVE-2021-32796",
  "description": "xmldom is an open source pure JavaScript W3C standard-based (XML DOM Level 2 Core) DOMParser and XMLSerializer module. xmldom versions 0.6.0 and older do not correctly escape special characters when serializing elements removed from their ancestor. This may lead to unexpected syntactic changes during XML processing in some downstream applications. This issue has been resolved in version 0.7.0. As a workaround downstream applications can validate the input and reject the maliciously crafted documents.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "do not correctly escape special characters",
    "impact": "unexpected syntactic changes",
    "vector": "",
    "attacker": "",
    "product": "xmldom",
    "version": "0.6.0 and older",
    "component": ""
  },
  "reference_content": "Based on the provided information, here's an analysis of CVE-2021-32796:\n\n**Root Cause of Vulnerability:**\n\nThe vulnerability stems from the `xmldom` library's failure to properly escape special characters when serializing XML elements that have been removed from their ancestor. Specifically, when an XML document is parsed and then serialized, special characters within attribute values are not consistently escaped if the element is no longer part of its original parent structure.\n\n**Weaknesses/Vulnerabilities Present:**\n\n- **Improper Output Handling:** The core weakness is the incorrect handling of special characters (`<`, `&`, `\"`) during XML serialization.\n- **Inconsistent Escaping:** The library escapes special characters in some scenarios but fails to do so when elements are detached from their original context.\n\n**Impact of Exploitation:**\n\n- **XML Syntactic Changes:** Maliciously crafted XML input can be altered during processing because of incorrect serialization. This can lead to unexpected syntactic changes in XML during a round trip (parse and serialize).\n- **Potential Application Vulnerabilities:** Downstream applications that process the serialized XML could be impacted if they assume consistent syntax and proper escaping. This may result in application logic errors or potentially security vulnerabilities.\n\n**Attack Vectors:**\n\n- **Malicious XML Input:** An attacker provides specially crafted XML containing unescaped special characters within attribute values\n- **Round-trip Processing:** The target application uses `xmldom` to parse the malicious XML, manipulates the parsed data (specifically removing nodes from their parent), then serializes this modified document using `xmldom`. The serialized output will contain unescaped special characters.\n\n**Required Attacker Capabilities/Position:**\n\n- The attacker needs to be able to supply a crafted XML document that will be processed by a vulnerable application.\n- The target application must use `xmldom` for parsing and serialization, and manipulate the parsed data in a way that triggers the vulnerability (i.e., detaching elements from their parents).\n- An attacker would need to understand the underlying XML processing logic and be able to introduce XML structures that are then modified (nodes removed from parents) by the application.\n\n**Additional Notes:**\n- This vulnerability is similar to vulnerabilities discovered in Go's `encoding/xml` library regarding round-trip transformations.\n- The fix for this issue involves correctly escaping special characters in attribute values even when the element is no longer part of its ancestor.\n- The vulnerability is considered moderate severity.\n- The patched versions are `@xmldom/xmldom@>=0.7.0`.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-116 | Improper Encoding or Escaping of Output | 0.85 | Class | Allowed-with-Review | The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. |\n| CWE-91 | Improper Neutralization of Special Elements used in an XML Document | 0.70 | Base | Allowed | The product does not properly neutralize special elements that are used in XML, allowing attackers to modify the syntax, content, or commands of the XML before it is processed by an end system. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability lies in the `xmldom` library's failure to correctly escape special characters when serializing XML elements, particularly after they've been removed from their ancestor. This **failure to properly escape special characters** directly leads to **improper encoding or escaping of output**, which aligns with CWE-116. The CVE description highlights that the core issue is the inconsistent handling of special characters (`<`, `&`, `\"`) during XML serialization.  While the description doesn't pinpoint a specific encoding scheme being missed, the general class of improper encoding is evident.\n\n  - *Relationship Analysis:* CWE-116 is a Class-level CWE, and it might have more specific Base-level children. However, without more information about the specific encoding or escaping mechanism that's failing, CWE-116 is appropriate. The relationship analysis shows that CWE-116 is related to input validation and data sanitization issues.  CWE-91 is also considered since the problem occurs with XML and special elements are not neutralized.\n\n- **Confidence Score:**\n  - Confidence: 0.85 (High confidence due to direct evidence from the vulnerability description and CVE reference summary)\n\n---\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability description states that `xmldom` does not correctly escape special characters, potentially leading to unexpected syntactic changes during XML processing. This indicates that the XML structure is not being properly handled, and the special characters are not being neutralized. CWE-91 directly addresses the **improper neutralization of special elements in XML**. The CVE reference summary confirms the **improper output handling** and that the library doesn't properly escape special characters (`<`, `&`, `\"`) during XML serialization.\n\n  - *Relationship Analysis:* CWE-91 is a base level CWE and directly related to XML structures. It is a peer of other CWEs that describe improper neutralization in other data formats. It is a reasonable secondary mapping because of the context of XML.\n\n- **Confidence Score:**\n  - Confidence: 0.70 (High evidence from technical description and CVE reference materials)",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-116 | Improper Encoding or Escaping of Output | 0.85 | Class | Allowed-with-Review | The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. |\n| CWE-91 | Improper Neutralization of Special Elements used in an XML Document | 0.70 | Base | Allowed | The product does not properly neutralize special elements that are used in XML, allowing attackers to modify the syntax, content, or commands of the XML before it is processed by an end system. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability lies in the `xmldom` library's failure to correctly escape special characters when serializing XML elements, particularly after they've been removed from their ancestor. This **failure to properly escape special characters** directly leads to **improper encoding or escaping of output**, which aligns with CWE-116. The CVE description highlights that the core issue is the inconsistent handling of special characters (`<`, `&`, `\"`) during XML serialization.  While the description doesn't pinpoint a specific encoding scheme being missed, the general class of improper encoding is evident.\n\n  - *Relationship Analysis:* CWE-116 is a Class-level CWE, and it might have more specific Base-level children. However, without more information about the specific encoding or escaping mechanism that's failing, CWE-116 is appropriate. The relationship analysis shows that CWE-116 is related to input validation and data sanitization issues.  CWE-91 is also considered since the problem occurs with XML and special elements are not neutralized.\n\n- **Confidence Score:**\n  - Confidence: 0.85 (High confidence due to direct evidence from the vulnerability description and CVE reference summary)\n\n---\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability description states that `xmldom` does not correctly escape special characters, potentially leading to unexpected syntactic changes during XML processing. This indicates that the XML structure is not being properly handled, and the special characters are not being neutralized. CWE-91 directly addresses the **improper neutralization of special elements in XML**. The CVE reference summary confirms the **improper output handling** and that the library doesn't properly escape special characters (`<`, `&`, `\"`) during XML serialization.\n\n  - *Relationship Analysis:* CWE-91 is a base level CWE and directly related to XML structures. It is a peer of other CWEs that describe improper neutralization in other data formats. It is a reasonable secondary mapping because of the context of XML.\n\n- **Confidence Score:**\n  - Confidence: 0.70 (High evidence from technical description and CVE reference materials)",
  "criticism": "Okay, here's a review of the provided CWE analysis, incorporating the full CWE specifications:\n\n**Overall Assessment:**\n\nThe analysis correctly identifies CWE-116 (Improper Encoding or Escaping of Output) as the primary weakness. The secondary mapping to CWE-91 (Improper Neutralization of Special Elements used in an XML Document) is reasonable, given the XML context. The confidence levels are justified based on the information provided. However, I have a few suggestions for improvement and a slight disagreement on the abstraction level of the primary CWE.\n\n**Detailed Review:**\n\n**CWE-116: Improper Encoding or Escaping of Output (Confidence: 0.85, Allowed-with-Review)**\n\n*   **Strengths:**\n    *   The justification clearly connects the \"failure to properly escape special characters\" with \"improper encoding or escaping of output.\"\n    *   The explanation references the specific special characters (`<`, `&`, `\"`) mentioned in the CVE summary, strengthening the connection.\n    *   The attack narrative described in the CVE summary aligns well with the CWE-116 description: The attacker is able to inject malicious commands or data.\n*   **Areas for Improvement/Discussion:**\n    *   **Abstraction Level:** While the analysis acknowledges that CWE-116 is a Class-level CWE, it doesn't adequately explore potential Base-level children. Given that the vulnerability relates *specifically* to how XML is serialized, it would be valuable to consider children of CWE-116 that are more specific to XML output contexts. Though there are no directly related children to CWE-116 about XML, this does not mean there isn't another CWE to consider.\n    *   **Mitigation Strategies:** The analysis could benefit from a brief mention of specific mitigation strategies *related to XML* encoding, rather than generic encoding advice. For example, explicitly stating the need to use XML entities (e.g., `&lt;` for `<`) would enhance the analysis.\n\n*   **Specific CWE Specification Points:**\n    *   **Mapping Guidance:** The \"Allowed-with-Review\" usage is correct. The analysis should explicitly state that more specific children of CWE-116 were considered but deemed less appropriate due to the lack of information on *which* encoding/escaping was missed.\n    *   **Potential Mitigations:** The analysis should consider suggesting libraries like OWASP ESAPI, which, as the specification says, provide constructs that make this weakness easier to avoid.\n\n**CWE-91: Improper Neutralization of Special Elements used in an XML Document (Confidence: 0.70, Allowed)**\n\n*   **Strengths:**\n    *   The analysis correctly identifies the relevance of CWE-91, given that the issue involves the mishandling of special elements within XML.\n    *   The analysis notes the connection to the unexpected syntactic changes during XML processing, linking the impact to the CWE description.\n*   **Areas for Improvement/Discussion:**\n    *   CWE-91's *name* is somewhat misleading (\"XML Injection (aka Blind XPath Injection)\"), but the *description* is more general, covering the improper neutralization of special elements. The analysis should explicitly acknowledge this and justify why the broader description is applicable, even if the specific attack vector isn't XPath injection.\n    *   Relationship to CWE-74: The analysis could acknowledge that CWE-91 is a child of CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')). Since there is already a CWE-116 selected and CWE-91 is a child of CWE-74, this means that CWE-74 is not needed.\n\n*   **Specific CWE Specification Points:**\n    *   **Mapping Guidance:** The \"Allowed\" usage is correct.\n    *   **Potential Mitigations:** The analysis appropriately suggests considering the \"accept known good\" input validation strategy, since untrusted input was being used in the parsing. This strategy is also listed in the specifications, which is a strength of the analysis.\n    *  **Alternative CWEs**: While CWE-91 is an 'allowed' CWE, is CWE-643 (Improper Neutralization of Data within XPath Expressions ('XPath Injection')) or CWE-652 (Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')) more appropriate? Since the analysis does not provide enough details to confirm, the selection is reasonable.\n\n**Other CWEs to Consider (But Ultimately Likely Not Appropriate):**\n\n*   **CWE-112: Missing XML Validation:** While technically the *output* is incorrect, the root cause isn't a lack of validation. XML is parsed, and then serialized. The issue is with the serialization process. So, this is not an appropriate fit.\n*   **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'):** While XSS *could* be a consequence in a web context, the vulnerability itself is in the XML serialization, not specifically in web page generation.\n*   **CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)**: Very similar to CWE-79, but more specific. While XSS is possible, the vulnerability is not in HTML, but XML.\n\n**Recommendations:**\n\n1.  **Re-evaluate Abstraction Level of CWE-116:** Conduct a more thorough search for Base-level children of CWE-116 that more closely relate to XML or structured document output. Acknowledge this search in the justification.\n2.  **Explicitly Address CWE-91's Name:** Acknowledge that the name \"XML Injection (aka Blind XPath Injection)\" might be misleading but that the broader description of CWE-91 applies.\n3.  **Add XML-Specific Mitigation Strategies:** For both CWEs, include specific mitigation strategies relevant to XML encoding/escaping.\n4.  **Strengthen Justifications:** Provide more explicit connections between the CVE summary, the vulnerability description, and the chosen CWEs. Use specific examples from the CVE summary.\n5. **Relationship to Parent/Child CWEs**: Acknowledge the relationship between the selected CWEs and any parent or child CWEs, and why those parents/children are or are not appropriate.\n\nBy addressing these points, the analysis can be further refined to provide a more accurate and comprehensive understanding of the vulnerability.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-91 | Improper Neutralization of Special Elements used in an XML Document | 0.85 | Base | Allowed | Primary CWE: The product does not properly neutralize special elements that are used in XML, allowing attackers to modify the syntax, content, or commands of the XML before it is processed by an end system. |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.75 | Class | Allowed-with-Review | Secondary Candidate: The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n- Parent-child hierarchical relationships: CWE-91 is a base CWE and doesn't have any direct parent-child relationships impacting the decision. CWE-116 is a Class CWE.\n- Chain relationships showing progression of vulnerability: The chain involves improper handling of XML elements leading to potential misinterpretation by downstream applications.\n- Peer relationships that offered alternative classifications: Several CWEs related to injection and improper neutralization were considered, like CWE-78, CWE-79, CWE-643, and CWE-652, but deemed less appropriate.\n- How abstraction levels influenced your selection: The decision favored the Base-level CWE-91 for its specificity regarding XML neutralization, while CWE-116, a Class-level CWE, was considered as a secondary contributing factor.\n\n```mermaid\ngraph TD\n    cwe91[\"CWE-91: Improper Neutralization of Special Elements used in an XML Document\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n\n    cwe91 -->|CHILDOF| cwe74\n    cwe116 -->|CANALSOBE| cwe91\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe91 primary\n    class cwe116 secondary\n    class cwe74 tertiary\n```\n\n## Vulnerability Chain\nThe chain of events leading to the vulnerability is as follows:\n1.  The `xmldom` library processes XML documents.\n2.  The library fails to properly escape special characters during serialization of elements removed from their ancestor (**ROOTCAUSE**: CWE-91, Improper Neutralization of Special Elements used in an XML Document).\n3.  This results in improper encoding or escaping of the XML output (**WEAKNESS**: CWE-116, Improper Encoding or Escaping of Output).\n4.  Downstream applications receive the malformed XML, leading to unexpected syntactic changes and potential misinterpretation or exploitation.\n\n## Summary of Analysis\nThe initial analysis identified CWE-116 as the primary weakness and CWE-91 as a secondary one. The criticism suggested re-evaluating the abstraction level of CWE-116 and exploring more specific Base-level CWEs related to XML output.\n\nAfter considering the criticism and re-evaluating the evidence, I've determined that **CWE-91 (Improper Neutralization of Special Elements used in an XML Document) is the more appropriate primary CWE**. The vulnerability description specifically mentions the failure to correctly escape special characters (`<`, `&`, `\"`) during XML serialization, which directly aligns with the description of CWE-91. The fact that the issue is specifically in XML serialization, not a general encoding problem, makes CWE-91 a better fit.\n\nCWE-116 remains a valid secondary CWE because the improper neutralization leads to improper encoding of the output. However, it is a consequence of the root cause (CWE-91) rather than the primary issue itself.\n\nThe graph relationships influenced the decision by highlighting that CWE-91 is a Base-level CWE specifically addressing XML, while CWE-116 is a more general Class-level CWE. The mapping guidance for both CWEs allows their usage, but the higher specificity of CWE-91 makes it the preferred choice. The available evidence strongly supports the conclusion that the vulnerability stems from the improper handling of special elements within the XML structure.\n\nThe selected CWEs are at the optimal level of specificity because CWE-91 directly describes the root cause related to XML, and CWE-116 captures the broader consequence of improper encoding. More specific children of CWE-116 were considered, but none precisely matched the scenario.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-112",
        "name": "Missing XML Validation",
        "type": "Base",
        "original_content": "The product accepts XML from an untrusted source but does not validate the XML against the proper schema.",
        "relationships": [],
        "original_sparse_score": 498.53308573690816,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5390602458152003,
            "sparse": 498.53308573690816,
            "graph": 1.6346446697095045
          },
          "normalized_scores": {
            "dense": 0.5390602458152003,
            "sparse": 0.39882646858952653,
            "graph": 0.5838016677533945
          },
          "weighted_scores": {
            "dense": 0.1886710860353201,
            "sparse": 0.1595305874358106,
            "graph": 0.14595041693834862
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5390602458152003,
              "query_max": 0.5390602458152003,
              "query_min": 0.39236782810406373,
              "normalized_score": 0.5390602458152003,
              "weight": 0.35,
              "weighted_score": 0.1886710860353201
            },
            "sparse": {
              "raw_score": 498.53308573690816,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.39882646858952653,
              "weight": 0.4,
              "weighted_score": 0.1595305874358106
            },
            "graph": {
              "raw_score": 1.6346446697095045,
              "query_max": 2.3998000000000004,
              "query_min": 1.0062,
              "normalized_score": 0.5838016677533945,
              "weight": 0.25,
              "weighted_score": 0.14595041693834862
            }
          },
          "contribution_percentages": {
            "dense": 38.18077261981786,
            "sparse": 32.2837018262162,
            "graph": 29.53552555396593
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4941520904094794,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6423977175323232
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6423977175323232
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7066374892855556
            }
          },
          "combined_score": 0.7066374892855556
        }
      },
      "similarity": 0.7066374892855556
    },
    {
      "metadata": {
        "doc_id": "CWE-115",
        "name": "Misinterpretation of Input",
        "type": "Base",
        "original_content": "The product misinterprets an input, whether from an attacker or another product, in a security-relevant fashion.",
        "relationships": [],
        "original_sparse_score": 719.0007176109392,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 719.0007176109392,
            "graph": 1.4357057514096088
          },
          "normalized_scores": {
            "sparse": 0.5752005740887514,
            "graph": 0.5127520540748604
          },
          "weighted_scores": {
            "sparse": 0.23008022963550057,
            "graph": 0.1281880135187151
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 719.0007176109392,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.5752005740887514,
              "weight": 0.4,
              "weighted_score": 0.23008022963550057
            },
            "graph": {
              "raw_score": 1.4357057514096088,
              "query_max": 2.3998000000000004,
              "query_min": 1.0062,
              "normalized_score": 0.5127520540748604,
              "weight": 0.25,
              "weighted_score": 0.1281880135187151
            }
          },
          "contribution_percentages": {
            "sparse": 64.22010156687628,
            "graph": 35.77989843312372
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3582682431542157,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4657487161004804
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4657487161004804
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5123235877105284
            }
          },
          "combined_score": 0.5123235877105284
        }
      },
      "similarity": 0.5123235877105284
    },
    {
      "metadata": {
        "doc_id": "CWE-917",
        "name": "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an expression language (EL) statement in a framework such as a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended EL statement before it is executed.",
        "relationships": [],
        "original_sparse_score": 378.928559075862,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 378.928559075862,
            "graph": 2.3998000000000004
          },
          "normalized_scores": {
            "sparse": 0.3031428472606896,
            "graph": 0.8570714285714287
          },
          "weighted_scores": {
            "sparse": 0.12125713890427584,
            "graph": 0.21426785714285718
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 378.928559075862,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.3031428472606896,
              "weight": 0.4,
              "weighted_score": 0.12125713890427584
            },
            "graph": {
              "raw_score": 2.3998000000000004,
              "query_max": 2.3998000000000004,
              "query_min": 1.0062,
              "normalized_score": 0.8570714285714287,
              "weight": 0.25,
              "weighted_score": 0.21426785714285718
            }
          },
          "contribution_percentages": {
            "sparse": 36.139524724781516,
            "graph": 63.86047527521848
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.33552499604713304,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.436182494861273
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.436182494861273
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.47980074434740033
            }
          },
          "combined_score": 0.47980074434740033
        }
      },
      "similarity": 0.47980074434740033
    },
    {
      "metadata": {
        "doc_id": "CWE-1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "type": "Base",
        "original_content": "The product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine.",
        "relationships": [],
        "original_sparse_score": 360.96101259271074,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 360.96101259271074,
            "graph": 1.521
          },
          "normalized_scores": {
            "sparse": 0.2887688100741686,
            "graph": 0.5432142857142858
          },
          "weighted_scores": {
            "sparse": 0.11550752402966745,
            "graph": 0.13580357142857144
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 360.96101259271074,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.2887688100741686,
              "weight": 0.4,
              "weighted_score": 0.11550752402966745
            },
            "graph": {
              "raw_score": 1.521,
              "query_max": 2.3998000000000004,
              "query_min": 1.0062,
              "normalized_score": 0.5432142857142858,
              "weight": 0.25,
              "weighted_score": 0.13580357142857144
            }
          },
          "contribution_percentages": {
            "sparse": 45.961967504479595,
            "graph": 54.038032495520405
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2513110954582389,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.32670442409571054
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.32670442409571054
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3593748665052816
            }
          },
          "combined_score": 0.3593748665052816
        }
      },
      "similarity": 0.3593748665052816
    },
    {
      "metadata": {
        "doc_id": "CWE-80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
        "relationships": [],
        "original_sparse_score": 310.77430545990694,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.39236782810406373,
            "sparse": 310.77430545990694
          },
          "normalized_scores": {
            "dense": 0.39236782810406373,
            "sparse": 0.24861944436792555
          },
          "weighted_scores": {
            "dense": 0.1373287398364223,
            "sparse": 0.09944777774717023
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.39236782810406373,
              "query_max": 0.5390602458152003,
              "query_min": 0.39236782810406373,
              "normalized_score": 0.39236782810406373,
              "weight": 0.35,
              "weighted_score": 0.1373287398364223
            },
            "sparse": {
              "raw_score": 310.77430545990694,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.24861944436792555,
              "weight": 0.4,
              "weighted_score": 0.09944777774717023
            }
          },
          "contribution_percentages": {
            "dense": 57.99930721083404,
            "sparse": 42.00069278916597
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.23677651758359253,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.28413182110031104
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.28413182110031104
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3125450032103422
            }
          },
          "combined_score": 0.3125450032103422
        }
      },
      "similarity": 0.3125450032103422
    },
    {
      "metadata": {
        "doc_id": "CWE-116",
        "name": "Improper Encoding or Escaping of Output",
        "type": "Class",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "relationships": [],
        "original_sparse_score": 560.2222656765274,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 560.2222656765274,
            "graph": 1.768
          },
          "normalized_scores": {
            "sparse": 0.4481778125412219,
            "graph": 0.6314285714285715
          },
          "weighted_scores": {
            "sparse": 0.17927112501648879,
            "graph": 0.15785714285714286
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 560.2222656765274,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.4481778125412219,
              "weight": 0.4,
              "weighted_score": 0.17927112501648879
            },
            "graph": {
              "raw_score": 1.768,
              "query_max": 2.3998000000000004,
              "query_min": 1.0062,
              "normalized_score": 0.6314285714285715,
              "weight": 0.25,
              "weighted_score": 0.15785714285714286
            }
          },
          "contribution_percentages": {
            "sparse": 53.17593987214574,
            "graph": 46.82406012785426
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.33712826787363165,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.26970261429890535
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.26970261429890535
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.28318774501385063
            }
          },
          "combined_score": 0.28318774501385063
        }
      },
      "similarity": 0.28318774501385063
    },
    {
      "metadata": {
        "doc_id": "CWE-1333",
        "name": "Inefficient Regular Expression Complexity",
        "type": "Base",
        "original_content": "The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles.",
        "relationships": [],
        "original_sparse_score": 360.24636479465835,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 360.24636479465835
          },
          "normalized_scores": {
            "sparse": 0.28819709183572667
          },
          "weighted_scores": {
            "sparse": 0.11527883673429068
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 360.24636479465835,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.28819709183572667,
              "weight": 0.4,
              "weighted_score": 0.11527883673429068
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11527883673429068,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.1498624877545779
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1498624877545779
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.16484873653003568
            }
          },
          "combined_score": 0.16484873653003568
        }
      },
      "similarity": 0.16484873653003568
    },
    {
      "metadata": {
        "doc_id": "CWE-138",
        "name": "Improper Neutralization of Special Elements",
        "type": "Class",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 394.9725828621496,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 394.9725828621496,
            "graph": 1.3648
          },
          "normalized_scores": {
            "sparse": 0.31597806628971964,
            "graph": 0.4874285714285715
          },
          "weighted_scores": {
            "sparse": 0.12639122651588786,
            "graph": 0.12185714285714287
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 394.9725828621496,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.31597806628971964,
              "weight": 0.4,
              "weighted_score": 0.12639122651588786
            },
            "graph": {
              "raw_score": 1.3648,
              "query_max": 2.3998000000000004,
              "query_min": 1.0062,
              "normalized_score": 0.4874285714285715,
              "weight": 0.25,
              "weighted_score": 0.12185714285714287
            }
          },
          "contribution_percentages": {
            "sparse": 50.913215194564245,
            "graph": 49.08678480543575
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.24824836937303074,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.1985986954984246
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1985986954984246
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.1588789563987397
            }
          },
          "combined_score": 0.1588789563987397
        }
      },
      "similarity": 0.1588789563987397
    },
    {
      "metadata": {
        "doc_id": "CWE-79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "type": "Base",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "relationships": [],
        "original_sparse_score": 346.2790579839911,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 346.2790579839911
          },
          "normalized_scores": {
            "sparse": 0.2770232463871929
          },
          "weighted_scores": {
            "sparse": 0.11080929855487716
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 346.2790579839911,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.2770232463871929,
              "weight": 0.4,
              "weighted_score": 0.11080929855487716
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11080929855487716,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.14405208812134032
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.14405208812134032
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.15845729693347438
            }
          },
          "combined_score": 0.15845729693347438
        }
      },
      "similarity": 0.15845729693347438
    },
    {
      "metadata": {
        "doc_id": "CWE-347",
        "name": "Improper Verification of Cryptographic Signature",
        "type": "Base",
        "original_content": "The product does not verify, or incorrectly verifies, the cryptographic signature for data.",
        "relationships": [],
        "original_sparse_score": 346.1031979285952,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 346.1031979285952
          },
          "normalized_scores": {
            "sparse": 0.2768825583428762
          },
          "weighted_scores": {
            "sparse": 0.11075302333715048
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 346.1031979285952,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.2768825583428762,
              "weight": 0.4,
              "weighted_score": 0.11075302333715048
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11075302333715048,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.14397893033829562
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.14397893033829562
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1583768233721252
            }
          },
          "combined_score": 0.1583768233721252
        }
      },
      "similarity": 0.1583768233721252
    },
    {
      "metadata": {
        "doc_id": "CWE-90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 334.35451837030774,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 334.35451837030774
          },
          "normalized_scores": {
            "sparse": 0.2674836146962462
          },
          "weighted_scores": {
            "sparse": 0.10699344587849849
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 334.35451837030774,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.2674836146962462,
              "weight": 0.4,
              "weighted_score": 0.10699344587849849
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10699344587849849,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13909147964204804
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13909147964204804
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.15300062760625285
            }
          },
          "combined_score": 0.15300062760625285
        }
      },
      "similarity": 0.15300062760625285
    },
    {
      "metadata": {
        "doc_id": "CWE-156",
        "name": "Improper Neutralization of Whitespace",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as whitespace when they are sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 356.4044573200512,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 356.4044573200512
          },
          "normalized_scores": {
            "sparse": 0.285123565856041
          },
          "weighted_scores": {
            "sparse": 0.1140494263424164
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 356.4044573200512,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.285123565856041,
              "weight": 0.4,
              "weighted_score": 0.1140494263424164
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.1140494263424164,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.13685931161089968
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13685931161089968
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.15054524277198966
            }
          },
          "combined_score": 0.15054524277198966
        }
      },
      "similarity": 0.15054524277198966
    },
    {
      "metadata": {
        "doc_id": "CWE-1286",
        "name": "Improper Validation of Syntactic Correctness of Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.",
        "relationships": [],
        "original_sparse_score": 319.04520223435657,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 319.04520223435657
          },
          "normalized_scores": {
            "sparse": 0.25523616178748526
          },
          "weighted_scores": {
            "sparse": 0.10209446471499412
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 319.04520223435657,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.25523616178748526,
              "weight": 0.4,
              "weighted_score": 0.10209446471499412
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10209446471499412,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13272280412949236
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13272280412949236
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.14599508454244162
            }
          },
          "combined_score": 0.14599508454244162
        }
      },
      "similarity": 0.14599508454244162
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 316.59989087839745,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 316.59989087839745
          },
          "normalized_scores": {
            "sparse": 0.25327991270271794
          },
          "weighted_scores": {
            "sparse": 0.10131196508108718
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 316.59989087839745,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.25327991270271794,
              "weight": 0.4,
              "weighted_score": 0.10131196508108718
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10131196508108718,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13170555460541333
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13170555460541333
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1448761100659547
            }
          },
          "combined_score": 0.1448761100659547
        }
      },
      "similarity": 0.1448761100659547
    },
    {
      "metadata": {
        "doc_id": "CWE-502",
        "name": "Deserialization of Untrusted Data",
        "type": "Base",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "relationships": [],
        "original_sparse_score": 316.51843892959437,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 316.51843892959437
          },
          "normalized_scores": {
            "sparse": 0.2532147511436755
          },
          "weighted_scores": {
            "sparse": 0.1012859004574702
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 316.51843892959437,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.2532147511436755,
              "weight": 0.4,
              "weighted_score": 0.1012859004574702
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.1012859004574702,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13167167059471127
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13167167059471127
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1448388376541824
            }
          },
          "combined_score": 0.1448388376541824
        }
      },
      "similarity": 0.1448388376541824
    },
    {
      "metadata": {
        "doc_id": "CWE-184",
        "name": "Incomplete List of Disallowed Inputs",
        "type": "Base",
        "original_content": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.",
        "relationships": [],
        "original_sparse_score": 312.52886396427573,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 312.52886396427573
          },
          "normalized_scores": {
            "sparse": 0.2500230911714206
          },
          "weighted_scores": {
            "sparse": 0.10000923646856824
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 312.52886396427573,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.2500230911714206,
              "weight": 0.4,
              "weighted_score": 0.10000923646856824
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10000923646856824,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.1300120074091387
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1300120074091387
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.14301320815005258
            }
          },
          "combined_score": 0.14301320815005258
        }
      },
      "similarity": 0.14301320815005258
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 316.23678397756345,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 316.23678397756345,
            "graph": 1.3504000000000003
          },
          "normalized_scores": {
            "sparse": 0.25298942718205075,
            "graph": 0.48228571428571443
          },
          "weighted_scores": {
            "sparse": 0.1011957708728203,
            "graph": 0.12057142857142861
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 316.23678397756345,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.25298942718205075,
              "weight": 0.4,
              "weighted_score": 0.1011957708728203
            },
            "graph": {
              "raw_score": 1.3504000000000003,
              "query_max": 2.3998000000000004,
              "query_min": 1.0062,
              "normalized_score": 0.48228571428571443,
              "weight": 0.25,
              "weighted_score": 0.12057142857142861
            }
          },
          "contribution_percentages": {
            "sparse": 45.63153213208177,
            "graph": 54.368467867918234
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.2217671994442489,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.17741375955539915
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.17741375955539915
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.14193100764431932
            }
          },
          "combined_score": 0.14193100764431932
        }
      },
      "similarity": 0.14193100764431932
    },
    {
      "metadata": {
        "doc_id": "CWE-93",
        "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
        "type": "Base",
        "original_content": "The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.",
        "relationships": [],
        "original_sparse_score": 309.55280447730314,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 309.55280447730314
          },
          "normalized_scores": {
            "sparse": 0.2476422435818425
          },
          "weighted_scores": {
            "sparse": 0.099056897432737
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 309.55280447730314,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.2476422435818425,
              "weight": 0.4,
              "weighted_score": 0.099056897432737
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.099056897432737,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.1287739666625581
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1287739666625581
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.14165136332881392
            }
          },
          "combined_score": 0.14165136332881392
        }
      },
      "similarity": 0.14165136332881392
    },
    {
      "metadata": {
        "doc_id": "CWE-863",
        "name": "Incorrect Authorization",
        "type": "Class",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "relationships": [],
        "original_sparse_score": 337.6810116783642,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 337.6810116783642
          },
          "normalized_scores": {
            "sparse": 0.27014480934269136
          },
          "weighted_scores": {
            "sparse": 0.10805792373707655
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 337.6810116783642,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.27014480934269136,
              "weight": 0.4,
              "weighted_score": 0.10805792373707655
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.10805792373707655,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.08644633898966125
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08644633898966125
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.09076865593914432
            }
          },
          "combined_score": 0.09076865593914432
        }
      },
      "similarity": 0.09076865593914432
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 320.9266566622627,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 320.9266566622627
          },
          "normalized_scores": {
            "sparse": 0.25674132532981014
          },
          "weighted_scores": {
            "sparse": 0.10269653013192406
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 320.9266566622627,
              "query_max": 719.0007176109392,
              "query_min": 309.55280447730314,
              "normalized_score": 0.25674132532981014,
              "weight": 0.4,
              "weighted_score": 0.10269653013192406
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.10269653013192406,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.08215722410553926
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08215722410553926
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.08626508531081623
            }
          },
          "combined_score": 0.08626508531081623
        }
      },
      "similarity": 0.08626508531081623
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-91",
      "CWE-116"
    ],
    "critic_additional": [
      "CWE-652",
      "CWE-80",
      "CWE-643",
      "CWE-74",
      "CWE-112",
      "CWE-79"
    ]
  }
}