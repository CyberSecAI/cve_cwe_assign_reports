{
  "method": "sparse_with_keyphrases",
  "query": "Azure RTOS FileX is a FAT-compatible file system thats fully integrated with Azure RTOS ThreadX. In versions before 6.2.0, the Fault Tolerant feature of Azure RTOS FileX includes integer under and overflows which may be exploited to achieve buffer overflow and modify memory contents. When a valid log file with correct ID and checksum is detected by the `_fx_fault_tolerant_enable` function an attempt to recover the previous failed write operation is taken by call of `_fx_fault_tolerant_apply_logs`. This function iterates through the log entries and performs required recovery operations. When properly crafted a log including entries of type `FX_FAULT_TOLERANT_DIR_LOG_TYPE` may be utilized to introduce unexpected behavior. This issue has been patched in version 6.2.0. A workaround to fix line 218 in fx_fault_tolerant_apply_logs.c is documented in the GHSA.",
  "keyphrases": {
    "weakness": "integer under and overflows"
  },
  "timestamp": "2025-03-18T16:32:21.620895",
  "results_count": 20,
  "results_summary": [
    {
      "doc_id": "CWE-190",
      "name": "Integer Overflow or Wraparound",
      "score": 789.9083959036257
    },
    {
      "doc_id": "CWE-191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "score": 749.8555197774215
    },
    {
      "doc_id": "CWE-1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 676.6825480162535
    },
    {
      "doc_id": "CWE-347",
      "name": "Improper Verification of Cryptographic Signature",
      "score": 603.1638915068902
    },
    {
      "doc_id": "CWE-122",
      "name": "Heap-based Buffer Overflow",
      "score": 598.4001839995499
    }
  ]
}