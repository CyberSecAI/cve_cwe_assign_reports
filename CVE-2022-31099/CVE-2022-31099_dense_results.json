{
  "query": "rulex is a new, portable, regular expression language. When parsing untrusted rulex expressions, the stack may overflow, possibly enabling a Denial of Service attack. This happens when parsing an expression with several hundred levels of nesting, causing the process to abort immediately. This is a security concern for you, if your service parses untrusted rulex expressions (expressions provided by an untrusted user), and your service becomes unavailable when the process running rulex aborts due to a stack overflow. The crash is fixed in version **0.4.3**. Affected users are advised to update to this version. There are no known workarounds for this issue.",
  "count": 20,
  "results": [
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "abstraction": "Class",
      "score": 0.48867352656001795,
      "original_score": 0.48867352656001795,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "777",
      "name": "Regular Expression without Anchors",
      "abstraction": "Variant",
      "score": 0.48601951535054044,
      "original_score": 0.48601951535054044,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "185",
      "name": "Incorrect Regular Expression",
      "abstraction": "Class",
      "score": 0.4746465113191374,
      "original_score": 0.4746465113191374,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "624",
      "name": "Executable Regular Expression Error",
      "abstraction": "Base",
      "score": 0.47335209028310693,
      "original_score": 0.47335209028310693,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "625",
      "name": "Permissive Regular Expression",
      "abstraction": "Base",
      "score": 0.46959070869883046,
      "original_score": 0.46959070869883046,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "abstraction": "Base",
      "score": 0.4692928178240964,
      "original_score": 0.4692928178240964,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "186",
      "name": "Overly Restrictive Regular Expression",
      "abstraction": "Base",
      "score": 0.4679215156955687,
      "original_score": 0.4679215156955687,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "606",
      "name": "Unchecked Input for Loop Condition",
      "abstraction": "Base",
      "score": 0.45690953027621717,
      "original_score": 0.45690953027621717,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "776",
      "name": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
      "abstraction": "Base",
      "score": 0.44104975288937387,
      "original_score": 0.44104975288937387,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "409",
      "name": "Improper Handling of Highly Compressed Data (Data Amplification)",
      "abstraction": "Base",
      "score": 0.440141325868198,
      "original_score": 0.440141325868198,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "194",
      "name": "Unexpected Sign Extension",
      "abstraction": "Variant",
      "score": 0.4356201094698037,
      "original_score": 0.4356201094698037,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1342",
      "name": "Information Exposure through Microarchitectural State after Transient Execution",
      "abstraction": "Base",
      "score": 0.42906034252513237,
      "original_score": 0.42906034252513237,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 0.4259954376175501,
      "original_score": 0.4259954376175501,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "abstraction": "Base",
      "score": 0.42152144788935303,
      "original_score": 0.42152144788935303,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.4196066976590581,
      "original_score": 0.4196066976590581,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 0.4167163884046198,
      "original_score": 0.4167163884046198,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.41497525008652436,
      "original_score": 0.41497525008652436,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "120",
      "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
      "abstraction": "Base",
      "score": 0.41100560735369107,
      "original_score": 0.41100560735369107,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "621",
      "name": "Variable Extraction Error",
      "abstraction": "Variant",
      "score": 0.4090481799557601,
      "original_score": 0.4090481799557601,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "197",
      "name": "Numeric Truncation Error",
      "abstraction": "Base",
      "score": 0.40848536575975425,
      "original_score": 0.40848536575975425,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.40848536575975425,
    "max": 0.48867352656001795,
    "mean": 0.4429816060743167,
    "median": 0.43788071766900083,
    "count": 20
  }
}