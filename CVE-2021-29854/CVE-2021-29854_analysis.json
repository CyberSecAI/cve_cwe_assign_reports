{
  "cve_id": "CVE-2021-29854",
  "description": "IBM Maximo Asset Management 7.6.1.1 and 7.6.1.2 is vulnerable to HTTP header injection, caused by improper validation of input by the HOST headers. By sending a specially crafted HTTP request, a remote attacker could exploit this vulnerability to inject HTTP HOST header, which will allow the attacker to conduct various attacks against the vulnerable system, including cross-site scripting, cache poisoning or session hijacking. IBM X-Force ID 205680.",
  "key_phrases": {
    "rootcause": "improper input validation",
    "weakness": "HTTP header injection",
    "impact": [
      "cross-site scripting",
      "cache poisoning",
      "session hijacking"
    ],
    "vector": "specially crafted HTTP request",
    "attacker": "remote attacker",
    "product": "IBM Maximo Asset Management",
    "version": "7.6.1.1 and 7.6.1.2",
    "component": ""
  },
  "reference_content": "- **Root cause of vulnerability**: The vulnerability is caused by a lack of proper validation of the Host header in HTTP requests.\n- **Weaknesses/vulnerabilities present**: Host header injection vulnerability.\n- **Impact of exploitation**: An attacker could potentially exploit this vulnerability to redirect users to a malicious site or perform other malicious actions by manipulating the host header.\n- **Attack vectors**: The attack vector is through HTTP requests where the attacker can control or manipulate the Host header.\n- **Required attacker capabilities/position**: The attacker needs to be able to send HTTP requests to the vulnerable application and manipulate the Host header value.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-113 | Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting') | 0.9 | Variant | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.6 | Base | Secondary Candidate | Allowed |\n| CWE-444 | Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') | 0.5 | Base | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.75\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability is due to **improper input validation** of the HOST header, which can lead to **HTTP header injection**. This aligns well with CWE-113 (Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')), as manipulating the HOST header can introduce CRLF sequences, potentially leading to HTTP Request/Response Splitting. The vulnerability description also mentions that this can lead to cross-site scripting, cache poisoning, or session hijacking, suggesting the injection of malicious content. CWE-113 is a Variant level weakness, which is a preferred level of abstraction. The \"Retriever Results\" list CWE-113 as the top candidate. The mapping guidance for CWE-113 is ALLOWED. Although the vulnerability description includes XSS as a potential impact, the root cause is the HTTP header injection.\n  \n  - *Relationship Analysis:* CWE-113 is a variant of CWE-20 (Improper Input Validation) and CWE-436 (Interpretation of HTTP Requests). It can lead to CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')).\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.9 (High confidence due to direct mention of HTTP header injection and CRLF sequences, as well as high retriever score.)\n\n---\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description notes that the **HTTP header injection** can lead to cross-site scripting (XSS). CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) is a base-level weakness that describes this scenario. A remote attacker can inject malicious scripts via the HOST header which are then reflected in the web page. This makes CWE-79 a secondary consequence of the primary weakness, but relevant to the possible impact of the vulnerability.\n  \n  - *Relationship Analysis:* CWE-79 is a base-level weakness and a child of CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')). It can follow CWE-113.\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.6 (Medium confidence, as XSS is only a potential consequence and not the direct root cause. It's listed as a possible impact in the description.)\n\n---\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description mentions that the **HTTP header injection** can lead to cache poisoning. Cache poisoning is a potential outcome when an attacker can manipulate the HTTP headers, which aligns with CWE-444 (Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')). By injecting malicious content via the Host header, an attacker can potentially cause the cache to store incorrect or malicious responses. This makes CWE-444 a secondary consequence of the primary weakness, but relevant to the possible impact of the vulnerability.\n  \n  - *Relationship Analysis:* CWE-444 is a base-level weakness. It is also listed high in the \"Retriever Results\".\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.5 (Medium confidence, as cache poisoning is only a potential consequence and not the direct root cause. It's listed as a possible impact in the description.)",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-113 | Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting') | 0.9 | Variant | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.6 | Base | Secondary Candidate | Allowed |\n| CWE-444 | Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') | 0.5 | Base | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.75\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability is due to **improper input validation** of the HOST header, which can lead to **HTTP header injection**. This aligns well with CWE-113 (Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')), as manipulating the HOST header can introduce CRLF sequences, potentially leading to HTTP Request/Response Splitting. The vulnerability description also mentions that this can lead to cross-site scripting, cache poisoning, or session hijacking, suggesting the injection of malicious content. CWE-113 is a Variant level weakness, which is a preferred level of abstraction. The \"Retriever Results\" list CWE-113 as the top candidate. The mapping guidance for CWE-113 is ALLOWED. Although the vulnerability description includes XSS as a potential impact, the root cause is the HTTP header injection.\n  \n  - *Relationship Analysis:* CWE-113 is a variant of CWE-20 (Improper Input Validation) and CWE-436 (Interpretation of HTTP Requests). It can lead to CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')).\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.9 (High confidence due to direct mention of HTTP header injection and CRLF sequences, as well as high retriever score.)\n\n---\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description notes that the **HTTP header injection** can lead to cross-site scripting (XSS). CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) is a base-level weakness that describes this scenario. A remote attacker can inject malicious scripts via the HOST header which are then reflected in the web page. This makes CWE-79 a secondary consequence of the primary weakness, but relevant to the possible impact of the vulnerability.\n  \n  - *Relationship Analysis:* CWE-79 is a base-level weakness and a child of CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')). It can follow CWE-113.\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.6 (Medium confidence, as XSS is only a potential consequence and not the direct root cause. It's listed as a possible impact in the description.)\n\n---\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description mentions that the **HTTP header injection** can lead to cache poisoning. Cache poisoning is a potential outcome when an attacker can manipulate the HTTP headers, which aligns with CWE-444 (Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')). By injecting malicious content via the Host header, an attacker can potentially cause the cache to store incorrect or malicious responses. This makes CWE-444 a secondary consequence of the primary weakness, but relevant to the possible impact of the vulnerability.\n  \n  - *Relationship Analysis:* CWE-444 is a base-level weakness. It is also listed high in the \"Retriever Results\".\n\n- **Confidence Score:**  \n  - *Example:* Confidence: 0.5 (Medium confidence, as cache poisoning is only a potential consequence and not the direct root cause. It's listed as a possible impact in the description.)",
  "criticism": "Okay, I've reviewed the provided analysis with the full CWE specifications. Here's my critique:\n\n**Overall Assessment:**\n\nThe analysis is generally good and well-reasoned, particularly the primary mapping to CWE-113. The secondary mappings are also plausible, though less direct. The justifications provided are solid, and the confidence scores seem appropriate.  The use of CWE specifications to support the analysis is excellent.\n\n**Detailed Critique:**\n\n*   **CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')**\n    *   **Confidence:** Justified at 0.9. This is the most direct and accurate mapping. The description clearly states the vulnerability arises from improper handling of CRLF sequences in HTTP headers.\n    *   **Abstraction Level:** Variant, which is a preferred level.\n    *   **Mapping Guidance:** \"Allowed\" - Appropriate based on the vulnerability details.\n    *   **Justification:** Good. The explanation accurately connects the vulnerability to the potential for injecting CRLF sequences, and subsequent HTTP Request/Response Splitting.\n    *   **Relationship Analysis:** Correctly identifies CWE-113 as a child of CWE-20 and CWE-436, and a potential precursor to CWE-79.\n    *   **Potential Mitigations:** The mitigations listed in the CWE specification (Input Validation, Output Encoding) are all highly relevant to preventing this vulnerability. Specifically using an \"accept known good\" input validation strategy would be highly recommended here.\n\n*   **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**\n    *   **Confidence:** Justified at 0.6. This is a reasonable secondary mapping *because* XSS is listed as a potential *impact*.  It's not the *root cause*, but a consequence.\n    *   **Abstraction Level:** Base.\n    *   **Mapping Guidance:** \"Allowed\" - Appropriate.\n    *   **Justification:** Correctly identifies that the injected HOST header *could* be used to inject malicious scripts that are then reflected in the web page, leading to XSS.  This highlights the importance of output encoding to prevent XSS, even if the *input* (the HOST header) itself passes basic validation.\n    *   **Relationship Analysis:** Correct. CWE-79 is a child of CWE-74 and can follow CWE-113.\n    *   **Potential Mitigations:** The listed mitigations are very relevant, especially Mitigation 2 (Understand the context in which your data will be used and the encoding that will be expected) which speaks directly to the context-sensitive encoding necessary to avoid XSS.\n\n*   **CWE-444: Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')**\n    *   **Confidence:** Justified at 0.5. This is the weakest mapping, but still plausible given the mention of \"cache poisoning\" as a potential impact.\n    *   **Abstraction Level:** Base.\n    *   **Mapping Guidance:** \"Allowed\" - Appropriate.\n    *   **Justification:** The analysis correctly links the HOST header manipulation to potential cache poisoning. The attacker could inject content via the Host header that is then cached, affecting other users.  However, the connection is less direct than with CWE-113, as the core vulnerability is in the *handling* of the header, not necessarily the *inconsistent interpretation* of the request.\n    *   **Relationship Analysis:** Good. CWE-444 is a child of CWE-436.\n    *   **Potential Mitigations:** The mitigations are somewhat less applicable here. Strictly parsing HTTP (Mitigation 1) would be helpful, but focusing on preventing the header injection (CWE-113 mitigations) would be more effective.\n\n**Suggestions for Improvement:**\n\n*   **Consider CWE-20 as a \"Related\" Weakness (but not a primary or secondary mapping):** While it's correct that CWE-20 (Improper Input Validation) is the general root cause, it's generally better to avoid mapping directly to CWE-20 when a more specific CWE is available. Instead of listing CWE-20 as a parent weakness of CWE-113, consider mentioning it separately.  For example: *\"The root cause of this is a failure to perform input validation on the HOST header, which is a specific instance of CWE-20 (Improper Input Validation). However, we map to CWE-113 as the more specific variant.\"*\n*   **Explicitly Mention Output Encoding:** In all CWE entries, emphasize that output encoding is vital even if input validation is in place.\n*  **Consider a more specific child of CWE-20:**\n    *   Instead of saying CWE-113 is a ChildOf CWE-20, try to find the most appropriate child of CWE-20 to add as a third parent, or replace CWE-20 with the proper child.\n    *   The children of CWE-20 are:\n    *   CWE-102: Struts: Duplicate Validation Forms\n    *   CWE-103: Struts: Incomplete validate() Method Definition\n    *   CWE-104: Struts: Form Bean Does Not Extend Validation Class\n    *   CWE-105: Struts: Form Field Without Validator\n    *   CWE-106: Struts: Plug-in Framework not in Use\n    *   CWE-107: Struts: Unused Validation Form\n    *   CWE-108: Struts: Unvalidated Action Form\n    *   CWE-109: Struts: Validator Turned Off\n    *   CWE-110: Struts: Validator Without Form Field\n    *   CWE-111: Direct Use of Unsafe JNI\n    *   CWE-112: Missing XML Validation\n    *   CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting') (This is already used)\n    *   CWE-114: Process Control\n    *   CWE-117: Improper Output Neutralization for Logs\n    *   CWE-1173: Improper Use of Validation Framework\n    *   CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\n    *   CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')\n    *   CWE-1284: Improper Validation of Specified Quantity in Input\n    *   CWE-1285: Improper Validation of Specified Index, Position, or Offset in Input\n    *   CWE-1286: Improper Validation of Syntactic Correctness of Input\n    *   CWE-1287: Improper Validation of Specified Type of Input\n    *   CWE-1288: Improper Validation of Consistency within Input\n    *   CWE-1289: Improper Validation of Unsafe Equivalence in Input\n    *   CWE-129: Improper Validation of Array Index\n    *   CWE-134: Use of Externally-Controlled Format String\n    *   CWE-15: External Control of System or Configuration Setting\n    *   CWE-170: Improper Null Termination\n    *   CWE-179: Incorrect Behavior Order: Early Validation\n    *   CWE-466: Return of Pointer Value Outside of Expected Range\n    *   CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')\n    *   CWE-622: Improper Validation of Function Hook Arguments\n    *   CWE-73: External Control of File Name or Path\n    *   CWE-785: Use of Path Manipulation Function without Maximum-sized Buffer\n    *   Since a *string* is not properly validated, **CWE-1286: Improper Validation of Syntactic Correctness of Input** may be a good fit. This would imply that the input is improperly validated to ensure it is a valid HTTP header.\n\n**Revised Summary Table**\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-113 | Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting') | 0.9 | Variant | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.6 | Base | Secondary Candidate | Allowed |\n| CWE-444 | Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') | 0.5 | Base | Secondary Candidate | Allowed |\n| CWE-1286 | Improper Validation of Syntactic Correctness of Input | 0.4 | Base | Related | Discouraged (Use only to show that all input has to be valid).  CWE-20 is not directly mapped as it is the parent of CWE-1286. |\n\n**In Summary:**\n\nThis is a strong analysis that demonstrates a good understanding of the CWE specifications and how to apply them to a real-world vulnerability. The suggested improvements are minor refinements to make the analysis even more precise and useful.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-113 | Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting') | 0.9 | Variant | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.6 | Base | Secondary Candidate | Allowed |\n| CWE-444 | Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') | 0.5 | Base | Secondary Candidate | Allowed |\n| CWE-1286 | Improper Validation of Syntactic Correctness of Input | 0.4 | Base | Related | Discouraged (Use only to show that all input has to be valid) |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-113**, a variant of **CWE-20** and **CWE-93**. It describes the **improper neutralization of CRLF sequences** in HTTP headers, aligning directly with the vulnerability description mentioning **HTTP header injection** due to **improper input validation** of the HOST header. **CWE-79** and **CWE-444** are secondary candidates, representing potential consequences (XSS and cache poisoning, respectively) of the primary weakness. **CWE-1286** is added as related to show that the input is improperly validated.\n\n```mermaid\ngraph TD\n    cwe113[\"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe444[\"CWE-444: Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')\"]\n    cwe1286[\"CWE-1286: Improper Validation of Syntactic Correctness of Input\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n\n    cwe113 -->|CHILDOF| cwe20\n    cwe79 -->|CANFOLLOW| cwe113\n    cwe444 -->|CANFOLLOW| cwe113\n    cwe113 -->|CANPRECEDE| cwe79\n    cwe1286 -->|CHILDOF| cwe20\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe113 primary\n    class cwe79,cwe444 secondary\n    class cwe1286 tertiary\n    class cwe20 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-1286 (Improper Validation of Syntactic Correctness of Input)** in the HOST header. This leads to **CWE-113 (Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting'))**, allowing an attacker to inject arbitrary HTTP headers. This can then result in **CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'))** if the injected headers are reflected in a web page without proper output encoding, or **CWE-444 (Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling'))** if the injected headers cause cache poisoning.\n\n## Summary of Analysis\nThe initial analysis and criticism provided a solid foundation for CWE classification. The vulnerability description explicitly mentions **improper validation** of the HOST header, leading to **HTTP header injection**. This aligns most directly with **CWE-113**, which describes the **improper neutralization of CRLF sequences** in HTTP headers. The inclusion of **CWE-79** and **CWE-444** as secondary candidates is justified by the potential for XSS and cache poisoning, respectively, as mentioned in the vulnerability description: \"a remote attacker could exploit this vulnerability to inject HTTP HOST header, which will allow the attacker to conduct various attacks against the vulnerable system, including cross-site scripting, cache poisoning or session hijacking.\" The addition of **CWE-1286** shows that the input is improperly validated.\n\nThe graph relationships influenced the decision by highlighting the connection between input validation and potential consequences. **CWE-113** is chosen as the primary weakness because it is the most specific and directly related to the **HTTP header injection** vulnerability. **CWE-79** and **CWE-444** represent potential impacts, while **CWE-1286** shows the improper validation.\n\nThe selected CWEs are at the optimal level of specificity, with **CWE-113** being a Variant, which is a preferred abstraction level. This provides a more precise classification than a more general weakness like **CWE-20 (Improper Input Validation)**.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-113",
        "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
        "type": "Variant",
        "original_content": "The product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.",
        "relationships": [],
        "original_sparse_score": 805.4576925398729,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5355604229475786,
            "sparse": 805.4576925398729,
            "graph": 2.5531420130421347
          },
          "normalized_scores": {
            "dense": 0.5355604229475786,
            "sparse": 0.6443661540318983,
            "graph": 0.9118364332293339
          },
          "weighted_scores": {
            "dense": 0.1874461480316525,
            "sparse": 0.2577464616127593,
            "graph": 0.22795910830733349
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5355604229475786,
              "query_max": 0.5539813126634389,
              "query_min": 0.515727069783035,
              "normalized_score": 0.5355604229475786,
              "weight": 0.35,
              "weighted_score": 0.1874461480316525
            },
            "sparse": {
              "raw_score": 805.4576925398729,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.6443661540318983,
              "weight": 0.4,
              "weighted_score": 0.2577464616127593
            },
            "graph": {
              "raw_score": 2.5531420130421347,
              "query_max": 2.815619635325301,
              "query_min": 1.226402931536134,
              "normalized_score": 0.9118364332293339,
              "weight": 0.25,
              "weighted_score": 0.22795910830733349
            }
          },
          "contribution_percentages": {
            "dense": 27.846047634255537,
            "sparse": 38.28950513519091,
            "graph": 33.86444723055355
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.6731517179517453,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.8077820615420944
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.8077820615420944
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.8885602676963039
            }
          },
          "combined_score": 0.8885602676963039
        }
      },
      "similarity": 0.8885602676963039
    },
    {
      "metadata": {
        "doc_id": "CWE-444",
        "name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
        "type": "Base",
        "original_content": "The product acts as an intermediary HTTP agent\n         (such as a proxy or firewall) in the data flow between two\n         entities such as a client and server, but it does not\n         interpret malformed HTTP requests or responses in ways that\n         are consistent with how the messages will be processed by\n         those entities that are at the ultimate destination.",
        "relationships": [],
        "original_sparse_score": 665.1011732646307,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5539813126634389,
            "sparse": 665.1011732646307,
            "graph": 1.6733383958253005
          },
          "normalized_scores": {
            "dense": 0.5539813126634389,
            "sparse": 0.5320809386117046,
            "graph": 0.597620855651893
          },
          "weighted_scores": {
            "dense": 0.1938934594322036,
            "sparse": 0.21283237544468184,
            "graph": 0.14940521391297326
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5539813126634389,
              "query_max": 0.5539813126634389,
              "query_min": 0.515727069783035,
              "normalized_score": 0.5539813126634389,
              "weight": 0.35,
              "weighted_score": 0.1938934594322036
            },
            "sparse": {
              "raw_score": 665.1011732646307,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.5320809386117046,
              "weight": 0.4,
              "weighted_score": 0.21283237544468184
            },
            "graph": {
              "raw_score": 1.6733383958253005,
              "query_max": 2.815619635325301,
              "query_min": 1.226402931536134,
              "normalized_score": 0.597620855651893,
              "weight": 0.25,
              "weighted_score": 0.14940521391297326
            }
          },
          "contribution_percentages": {
            "dense": 34.86470677264214,
            "sparse": 38.270183962539974,
            "graph": 26.8651092648179
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5561310487898586,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7229703634268163
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7229703634268163
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.795267399769498
            }
          },
          "combined_score": 0.795267399769498
        }
      },
      "similarity": 0.795267399769498
    },
    {
      "metadata": {
        "doc_id": "CWE-79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "type": "Base",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "relationships": [],
        "original_sparse_score": 726.9983306811503,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 726.9983306811503,
            "graph": 2.815619635325301
          },
          "normalized_scores": {
            "sparse": 0.5815986645449203,
            "graph": 1.0
          },
          "weighted_scores": {
            "sparse": 0.23263946581796813,
            "graph": 0.25
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 726.9983306811503,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.5815986645449203,
              "weight": 0.4,
              "weighted_score": 0.23263946581796813
            },
            "graph": {
              "raw_score": 2.815619635325301,
              "query_max": 2.815619635325301,
              "query_min": 1.226402931536134,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "sparse": 48.201500766974206,
            "graph": 51.798499233025794
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4826394658179681,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6274313055633586
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6274313055633586
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6901744361196945
            }
          },
          "combined_score": 0.6901744361196945
        }
      },
      "similarity": 0.6901744361196945
    },
    {
      "metadata": {
        "doc_id": "CWE-89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "relationships": [],
        "original_sparse_score": 720.5405889351118,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5220361496951379,
            "sparse": 720.5405889351118
          },
          "normalized_scores": {
            "dense": 0.5220361496951379,
            "sparse": 0.5764324711480895
          },
          "weighted_scores": {
            "dense": 0.18271265239329826,
            "sparse": 0.2305729884592358
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5220361496951379,
              "query_max": 0.5539813126634389,
              "query_min": 0.515727069783035,
              "normalized_score": 0.5220361496951379,
              "weight": 0.35,
              "weighted_score": 0.18271265239329826
            },
            "sparse": {
              "raw_score": 720.5405889351118,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.5764324711480895,
              "weight": 0.4,
              "weighted_score": 0.2305729884592358
            }
          },
          "contribution_percentages": {
            "dense": 44.209775112533514,
            "sparse": 55.79022488746648
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.41328564085253405,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5372713331082943
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5372713331082943
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5909984664191238
            }
          },
          "combined_score": 0.5909984664191238
        }
      },
      "similarity": 0.5909984664191238
    },
    {
      "metadata": {
        "doc_id": "CWE-1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "type": "Variant",
        "original_content": "The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.",
        "relationships": [],
        "original_sparse_score": 723.3757273238582,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5408836249645872,
            "sparse": 723.3757273238582
          },
          "normalized_scores": {
            "dense": 0.5408836249645872,
            "sparse": 0.5787005818590866
          },
          "weighted_scores": {
            "dense": 0.1893092687376055,
            "sparse": 0.23148023274363463
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5408836249645872,
              "query_max": 0.5539813126634389,
              "query_min": 0.515727069783035,
              "normalized_score": 0.5408836249645872,
              "weight": 0.35,
              "weighted_score": 0.1893092687376055
            },
            "sparse": {
              "raw_score": 723.3757273238582,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.5787005818590866,
              "weight": 0.4,
              "weighted_score": 0.23148023274363463
            }
          },
          "contribution_percentages": {
            "dense": 44.98906652167162,
            "sparse": 55.01093347832838
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.42078950148124017,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.5049474017774882
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5049474017774882
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5554421419552371
            }
          },
          "combined_score": 0.5554421419552371
        }
      },
      "similarity": 0.5554421419552371
    },
    {
      "metadata": {
        "doc_id": "CWE-611",
        "name": "Improper Restriction of XML External Entity Reference",
        "type": "Base",
        "original_content": "The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",
        "relationships": [],
        "original_sparse_score": 640.7013222909766,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5199004260694995,
            "sparse": 640.7013222909766
          },
          "normalized_scores": {
            "dense": 0.5199004260694995,
            "sparse": 0.5125610578327813
          },
          "weighted_scores": {
            "dense": 0.18196514912432482,
            "sparse": 0.20502442313311253
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5199004260694995,
              "query_max": 0.5539813126634389,
              "query_min": 0.515727069783035,
              "normalized_score": 0.5199004260694995,
              "weight": 0.35,
              "weighted_score": 0.18196514912432482
            },
            "sparse": {
              "raw_score": 640.7013222909766,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.5125610578327813,
              "weight": 0.4,
              "weighted_score": 0.20502442313311253
            }
          },
          "contribution_percentages": {
            "dense": 47.02068535409425,
            "sparse": 52.97931464590575
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.38698957225743735,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5030864439346686
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5030864439346686
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5533950883281356
            }
          },
          "combined_score": 0.5533950883281356
        }
      },
      "similarity": 0.5533950883281356
    },
    {
      "metadata": {
        "doc_id": "CWE-80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
        "relationships": [],
        "original_sparse_score": 625.9833543135514,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5333528837757759,
            "sparse": 625.9833543135514
          },
          "normalized_scores": {
            "dense": 0.5333528837757759,
            "sparse": 0.5007866834508412
          },
          "weighted_scores": {
            "dense": 0.18667350932152157,
            "sparse": 0.20031467338033648
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5333528837757759,
              "query_max": 0.5539813126634389,
              "query_min": 0.515727069783035,
              "normalized_score": 0.5333528837757759,
              "weight": 0.35,
              "weighted_score": 0.18667350932152157
            },
            "sparse": {
              "raw_score": 625.9833543135514,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.5007866834508412,
              "weight": 0.4,
              "weighted_score": 0.20031467338033648
            }
          },
          "contribution_percentages": {
            "dense": 48.23752188457337,
            "sparse": 51.762478115426624
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3869881827018581,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.46438581924222966
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.46438581924222966
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5108244011664527
            }
          },
          "combined_score": 0.5108244011664527
        }
      },
      "similarity": 0.5108244011664527
    },
    {
      "metadata": {
        "doc_id": "CWE-22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "type": "Base",
        "original_content": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
        "relationships": [],
        "original_sparse_score": 648.0471777540159,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 648.0471777540159,
            "graph": 1.5439054680856161
          },
          "normalized_scores": {
            "sparse": 0.5184377422032127,
            "graph": 0.5513948100305772
          },
          "weighted_scores": {
            "sparse": 0.20737509688128508,
            "graph": 0.1378487025076443
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 648.0471777540159,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.5184377422032127,
              "weight": 0.4,
              "weighted_score": 0.20737509688128508
            },
            "graph": {
              "raw_score": 1.5439054680856161,
              "query_max": 2.815619635325301,
              "query_min": 1.226402931536134,
              "normalized_score": 0.5513948100305772,
              "weight": 0.25,
              "weighted_score": 0.1378487025076443
            }
          },
          "contribution_percentages": {
            "sparse": 60.06975685000678,
            "graph": 39.93024314999322
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3452237993889294,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4487909392056082
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4487909392056082
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4936700331261691
            }
          },
          "combined_score": 0.4936700331261691
        }
      },
      "similarity": 0.4936700331261691
    },
    {
      "metadata": {
        "doc_id": "CWE-74",
        "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
        "type": "Class",
        "original_content": "The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 894.5438747184502,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.",
          "comments": "Examine the children and descendants of this entry to find a more precise mapping.",
          "reasons": [
            "Frequent Misuse",
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5528933264213496,
            "sparse": 894.5438747184502,
            "graph": 1.7665991188928516
          },
          "normalized_scores": {
            "dense": 0.5528933264213496,
            "sparse": 0.7156350997747601,
            "graph": 0.630928256747447
          },
          "weighted_scores": {
            "dense": 0.19351266424747235,
            "sparse": 0.28625403990990406,
            "graph": 0.15773206418686175
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5528933264213496,
              "query_max": 0.5539813126634389,
              "query_min": 0.515727069783035,
              "normalized_score": 0.5528933264213496,
              "weight": 0.35,
              "weighted_score": 0.19351266424747235
            },
            "sparse": {
              "raw_score": 894.5438747184502,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.7156350997747601,
              "weight": 0.4,
              "weighted_score": 0.28625403990990406
            },
            "graph": {
              "raw_score": 1.7665991188928516,
              "query_max": 2.815619635325301,
              "query_min": 1.226402931536134,
              "normalized_score": 0.630928256747447,
              "weight": 0.25,
              "weighted_score": 0.15773206418686175
            }
          },
          "contribution_percentages": {
            "dense": 30.354986371201726,
            "sparse": 44.902681248057235,
            "graph": 24.742332380741043
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.6374987683442381,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.5099990146753905
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5099990146753905
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.",
                "comments": "Examine the children and descendants of this entry to find a more precise mapping.",
                "reasons": [
                  "Frequent Misuse",
                  "Abstraction"
                ]
              },
              "score_after": 0.40799921174031245
            }
          },
          "combined_score": 0.40799921174031245
        }
      },
      "similarity": 0.40799921174031245
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 743.220209262852,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5414335275642752,
            "sparse": 743.220209262852,
            "graph": 1.7566182358645717
          },
          "normalized_scores": {
            "dense": 0.5414335275642752,
            "sparse": 0.5945761674102816,
            "graph": 0.6273636556659185
          },
          "weighted_scores": {
            "dense": 0.1895017346474963,
            "sparse": 0.23783046696411267,
            "graph": 0.1568409139164796
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5414335275642752,
              "query_max": 0.5539813126634389,
              "query_min": 0.515727069783035,
              "normalized_score": 0.5414335275642752,
              "weight": 0.35,
              "weighted_score": 0.1895017346474963
            },
            "sparse": {
              "raw_score": 743.220209262852,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.5945761674102816,
              "weight": 0.4,
              "weighted_score": 0.23783046696411267
            },
            "graph": {
              "raw_score": 1.7566182358645717,
              "query_max": 2.815619635325301,
              "query_min": 1.226402931536134,
              "normalized_score": 0.6273636556659185,
              "weight": 0.25,
              "weighted_score": 0.1568409139164796
            }
          },
          "contribution_percentages": {
            "dense": 32.43931115799261,
            "sparse": 40.71232664466517,
            "graph": 26.84836219734222
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.5841731155280886,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.4673384924224709
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4673384924224709
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.37387079393797673
            }
          },
          "combined_score": 0.37387079393797673
        }
      },
      "similarity": 0.37387079393797673
    },
    {
      "metadata": {
        "doc_id": "CWE-93",
        "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
        "type": "Base",
        "original_content": "The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.",
        "relationships": [],
        "original_sparse_score": 676.7915690574115,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 676.7915690574115
          },
          "normalized_scores": {
            "sparse": 0.5414332552459292
          },
          "weighted_scores": {
            "sparse": 0.2165733020983717
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 676.7915690574115,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.5414332552459292,
              "weight": 0.4,
              "weighted_score": 0.2165733020983717
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2165733020983717,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2815452927278832
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2815452927278832
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.30969982200067153
            }
          },
          "combined_score": 0.30969982200067153
        }
      },
      "similarity": 0.30969982200067153
    },
    {
      "metadata": {
        "doc_id": "CWE-319",
        "name": "Cleartext Transmission of Sensitive Information",
        "type": "Base",
        "original_content": "The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.",
        "relationships": [],
        "original_sparse_score": 675.6716214821905,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 675.6716214821905
          },
          "normalized_scores": {
            "sparse": 0.5405372971857524
          },
          "weighted_scores": {
            "sparse": 0.21621491887430097
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 675.6716214821905,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.5405372971857524,
              "weight": 0.4,
              "weighted_score": 0.21621491887430097
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.21621491887430097,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.28107939453659125
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.28107939453659125
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3091873339902504
            }
          },
          "combined_score": 0.3091873339902504
        }
      },
      "similarity": 0.3091873339902504
    },
    {
      "metadata": {
        "doc_id": "CWE-201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "type": "Base",
        "original_content": "The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.",
        "relationships": [],
        "original_sparse_score": 652.958864413621,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 652.958864413621
          },
          "normalized_scores": {
            "sparse": 0.5223670915308968
          },
          "weighted_scores": {
            "sparse": 0.20894683661235872
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 652.958864413621,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.5223670915308968,
              "weight": 0.4,
              "weighted_score": 0.20894683661235872
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.20894683661235872,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.27163088759606635
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.27163088759606635
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.298793976355673
            }
          },
          "combined_score": 0.298793976355673
        }
      },
      "similarity": 0.298793976355673
    },
    {
      "metadata": {
        "doc_id": "CWE-502",
        "name": "Deserialization of Untrusted Data",
        "type": "Base",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "relationships": [],
        "original_sparse_score": 643.8842785241051,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 643.8842785241051
          },
          "normalized_scores": {
            "sparse": 0.515107422819284
          },
          "weighted_scores": {
            "sparse": 0.2060429691277136
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 643.8842785241051,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.515107422819284,
              "weight": 0.4,
              "weighted_score": 0.2060429691277136
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2060429691277136,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2678558598660277
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2678558598660277
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2946414458526305
            }
          },
          "combined_score": 0.2946414458526305
        }
      },
      "similarity": 0.2946414458526305
    },
    {
      "metadata": {
        "doc_id": "CWE-90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 626.1895765900507,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 626.1895765900507
          },
          "normalized_scores": {
            "sparse": 0.5009516612720406
          },
          "weighted_scores": {
            "sparse": 0.20038066450881625
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 626.1895765900507,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.5009516612720406,
              "weight": 0.4,
              "weighted_score": 0.20038066450881625
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.20038066450881625,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.26049486386146115
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.26049486386146115
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.28654435024760727
            }
          },
          "combined_score": 0.28654435024760727
        }
      },
      "similarity": 0.28654435024760727
    },
    {
      "metadata": {
        "doc_id": "CWE-1236",
        "name": "Improper Neutralization of Formula Elements in a CSV File",
        "type": "Base",
        "original_content": "The product saves user-provided information into a Comma-Separated Value (CSV) file, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as a command when the file is opened by a spreadsheet product.",
        "relationships": [],
        "original_sparse_score": 387.3472551023824,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 387.3472551023824
          },
          "normalized_scores": {
            "sparse": 0.3098778040819059
          },
          "weighted_scores": {
            "sparse": 0.12395112163276237
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 387.3472551023824,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.3098778040819059,
              "weight": 0.4,
              "weighted_score": 0.12395112163276237
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.12395112163276237,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.1611364581225911
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1611364581225911
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.17725010393485022
            }
          },
          "combined_score": 0.17725010393485022
        }
      },
      "similarity": 0.17725010393485022
    },
    {
      "metadata": {
        "doc_id": "CWE-138",
        "name": "Improper Neutralization of Special Elements",
        "type": "Class",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 709.9909148975406,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 709.9909148975406
          },
          "normalized_scores": {
            "sparse": 0.5679927319180325
          },
          "weighted_scores": {
            "sparse": 0.227197092767213
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 709.9909148975406,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.5679927319180325,
              "weight": 0.4,
              "weighted_score": 0.227197092767213
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.227197092767213,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.18175767421377043
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.18175767421377043
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.14540613937101635
            }
          },
          "combined_score": 0.14540613937101635
        }
      },
      "similarity": 0.14540613937101635
    },
    {
      "metadata": {
        "doc_id": "CWE-352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "type": "Compound",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "relationships": [],
        "original_sparse_score": 385.84150385919145,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
          "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
          "reasons": [
            "Other"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 385.84150385919145
          },
          "normalized_scores": {
            "sparse": 0.30867320308735313
          },
          "weighted_scores": {
            "sparse": 0.12346928123494126
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 385.84150385919145,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.30867320308735313,
              "weight": 0.4,
              "weighted_score": 0.12346928123494126
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.0,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.12346928123494126,
            "abstraction": {
              "type": "compound",
              "factor": 1.0,
              "score_after": 0.12346928123494126
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.12346928123494126
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
                "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
                "reasons": [
                  "Other"
                ]
              },
              "score_after": 0.13581620935843539
            }
          },
          "combined_score": 0.13581620935843539
        }
      },
      "similarity": 0.13581620935843539
    },
    {
      "metadata": {
        "doc_id": "CWE-287",
        "name": "Improper Authentication",
        "type": "Class",
        "original_content": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
        "relationships": [],
        "original_sparse_score": 631.852642512507,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1390",
              "Comment": "Weak Authentication"
            },
            {
              "CweID": "306",
              "Comment": "Missing Authentication for Critical Function"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 631.852642512507
          },
          "normalized_scores": {
            "sparse": 0.5054821140100056
          },
          "weighted_scores": {
            "sparse": 0.20219284560400227
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 631.852642512507,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.5054821140100056,
              "weight": 0.4,
              "weighted_score": 0.20219284560400227
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.20219284560400227,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.16175427648320184
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.16175427648320184
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1390",
                    "Comment": "Weak Authentication"
                  },
                  {
                    "CweID": "306",
                    "Comment": "Missing Authentication for Critical Function"
                  }
                ]
              },
              "score_after": 0.12940342118656148
            }
          },
          "combined_score": 0.12940342118656148
        }
      },
      "similarity": 0.12940342118656148
    },
    {
      "metadata": {
        "doc_id": "CWE-116",
        "name": "Improper Encoding or Escaping of Output",
        "type": "Class",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "relationships": [],
        "original_sparse_score": 385.08207996118244,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 385.08207996118244
          },
          "normalized_scores": {
            "sparse": 0.30806566396894597
          },
          "weighted_scores": {
            "sparse": 0.12322626558757839
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 385.08207996118244,
              "query_max": 894.5438747184502,
              "query_min": 385.08207996118244,
              "normalized_score": 0.30806566396894597,
              "weight": 0.4,
              "weighted_score": 0.12322626558757839
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.12322626558757839,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.09858101247006272
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.09858101247006272
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.10351006309356586
            }
          },
          "combined_score": 0.10351006309356586
        }
      },
      "similarity": 0.10351006309356586
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-436",
      "CWE-74",
      "CWE-20",
      "CWE-113",
      "CWE-444",
      "CWE-79"
    ],
    "critic_additional": [
      "CWE-112",
      "CWE-134",
      "CWE-466",
      "CWE-785",
      "CWE-622",
      "CWE-114",
      "CWE-106",
      "CWE-109",
      "CWE-470",
      "CWE-73",
      "CWE-102",
      "CWE-110",
      "CWE-107",
      "CWE-119",
      "CWE-1285",
      "CWE-1289",
      "CWE-179",
      "CWE-117",
      "CWE-170",
      "CWE-120",
      "CWE-1287",
      "CWE-1288",
      "CWE-103",
      "CWE-108",
      "CWE-111",
      "CWE-104",
      "CWE-1286",
      "CWE-105",
      "CWE-1173",
      "CWE-129",
      "CWE-1284",
      "CWE-15"
    ]
  }
}