{
  "cve_id": "CVE-2021-42740",
  "description": "The shell-quote package before 1.7.3 for Node.js allows command injection. An attacker can inject unescaped shell metacharacters through a regex designed to support Windows drive letters. If the output of this package is passed to a real shell as a quoted argument to a command with exec(), an attacker can inject arbitrary commands. This is because the Windows drive letter regex character class is {A-z] instead of the correct {A-Za-z]. Several shell metacharacters exist in the space between capital letter Z and lower case letter a, such as the backtick character.",
  "key_phrases": {
    "rootcause": "improper escaping of shell metacharacters",
    "weakness": "command injection",
    "impact": "execute arbitrary commands",
    "vector": "inject unescaped shell metacharacters",
    "attacker": "attacker",
    "product": "shell-quote package",
    "version": "before 1.7.3",
    "component": ""
  },
  "reference_content": "The provided content is a description of the `shell-quote` npm package, which is a library for parsing and quoting shell commands. There's no mention of any vulnerability or security issue related to CVE-2021-42740 in this content.\n\nTherefore, the content is:\n\n**UNRELATED**",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-78 | Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') | 0.95 | Base | Allowed | Primary CWE. The vulnerability allows execution of arbitrary commands due to improper handling of shell metacharacters. |\n| CWE-625 | Permissive Regular Expression | 0.7 | Base | Allowed | Secondary CWE. The regex used to identify Windows drive letters is too permissive, allowing shell metacharacters. |\n| CWE-88 | Improper Neutralization of Argument Delimiters in a Command ('Argument Injection') | 0.6 | Base | Allowed | Secondary CWE. The product does not properly delimit the arguments, options, or switches within that command string. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**\n  - *Explanation:* \"The vulnerability description clearly states that the `shell-quote` package allows **command injection** due to **improper escaping of shell metacharacters**. Specifically, the regex designed to support Windows drive letters `[A-z]` is too permissive and allows shell metacharacters like backticks. This allows an attacker to inject arbitrary commands if the output is passed to a shell via `exec()`. This directly maps to CWE-78 (Improper Neutralization of Special Elements used in an OS Command), as the vulnerability enables the execution of OS commands via injected metacharacters. CWE-625 (Permissive Regular Expression) is also relevant because the over-permissive regex is the direct cause of the injection vulnerability. CWE-88 (Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')) is a possible secondary CWE because the injected commands could be interpreted as arguments. MITRE guidance marks CWE-78 as ALLOWED.\"\n\n  - *Relationship Analysis:* \"CWE-78 is a child of CWE-77 (Command Injection). CWE-625 has a PeerOf relationship with CWE-183 (Permissive List of Allowed Inputs) and CWE-184 (Incomplete List of Disallowed Inputs), highlighting the common theme of overly permissive input validation. CWE-78 can precede CWE-184 and suggests an attack chain where the injection could lead to an incomplete list of disallowed inputs being bypassed.\"\n\n- **Confidence Score:**\n  - Confidence: 0.95 (High confidence due to the clear vulnerability description and direct mapping to CWE-78 and CWE-625. The root cause is clearly identified.)\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-78 | Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') | 0.95 | Base | Allowed | Primary CWE. The vulnerability allows execution of arbitrary commands due to improper handling of shell metacharacters. |\n| CWE-625 | Permissive Regular Expression | 0.7 | Base | Allowed | Secondary CWE. The regex used to identify Windows drive letters is too permissive, allowing shell metacharacters. |\n| CWE-88 | Improper Neutralization of Argument Delimiters in a Command ('Argument Injection') | 0.6 | Base | Allowed | Secondary CWE. The product does not properly delimit the arguments, options, or switches within that command string. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**\n  - *Explanation:* \"The vulnerability description clearly states that the `shell-quote` package allows **command injection** due to **improper escaping of shell metacharacters**. Specifically, the regex designed to support Windows drive letters `[A-z]` is too permissive and allows shell metacharacters like backticks. This allows an attacker to inject arbitrary commands if the output is passed to a shell via `exec()`. This directly maps to CWE-78 (Improper Neutralization of Special Elements used in an OS Command), as the vulnerability enables the execution of OS commands via injected metacharacters. CWE-625 (Permissive Regular Expression) is also relevant because the over-permissive regex is the direct cause of the injection vulnerability. CWE-88 (Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')) is a possible secondary CWE because the injected commands could be interpreted as arguments. MITRE guidance marks CWE-78 as ALLOWED.\"\n\n  - *Relationship Analysis:* \"CWE-78 is a child of CWE-77 (Command Injection). CWE-625 has a PeerOf relationship with CWE-183 (Permissive List of Allowed Inputs) and CWE-184 (Incomplete List of Disallowed Inputs), highlighting the common theme of overly permissive input validation. CWE-78 can precede CWE-184 and suggests an attack chain where the injection could lead to an incomplete list of disallowed inputs being bypassed.\"\n\n- **Confidence Score:**\n  - Confidence: 0.95 (High confidence due to the clear vulnerability description and direct mapping to CWE-78 and CWE-625. The root cause is clearly identified.)\n---",
  "criticism": "Okay, I've reviewed the provided analysis against the full CWE specifications. Here's my critique:\n\n**Overall Assessment:**\n\nThe analysis is generally strong and well-reasoned. The primary CWE mapping of CWE-78 (OS Command Injection) is correct and well-justified. The inclusion of CWE-625 (Permissive Regular Expression) as a contributing factor is also accurate and important for understanding the root cause. The addition of CWE-88 (Argument Injection) is less strong but defensible as a secondary concern.\n\n**Specific Comments:**\n\n*   **CWE-78 (Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'))**\n    *   **Mapping Confidence:** The confidence score of 0.95 is justified. The vulnerability description directly aligns with the CWE-78 definition: externally-influenced input is used to construct an OS command without proper neutralization, leading to potential execution of arbitrary commands.\n    *   **Evidence Strength:**  \"High\" evidence strength is accurate. The description includes the mechanism (regex for Windows drive letters), the vulnerability (command injection), and the potential impact (arbitrary command execution).\n    *   **Mitigations:** The analysis could benefit from explicitly mentioning some of the CWE-78 mitigations. Specifically:\n        *   \"If at all possible, use library calls rather than external processes to recreate the desired functionality.\"  This is highly relevant.  Instead of relying on shell quoting, the application *should* use language-specific APIs or libraries that avoid the need for external shell commands entirely.\n        *   \"Run the code in a \"jail\" or similar sandbox environment...\"  While more difficult to implement, this could be a defense-in-depth measure.\n        *   \"For any data that will be used to generate a command to be executed, keep as much of that data out of external control as possible.\" Storing data locally in the session's state instead of sending it to the client.\n\n*   **CWE-625 (Permissive Regular Expression)**\n    *   **Mapping Confidence:** The confidence score of 0.7 is also reasonable. The core issue is the overly broad regex `[A-z]`, which allows characters other than `A-Z` and `a-z` (including shell metacharacters).\n    *   **Evidence Strength:** This is a direct *cause* of the injection. The regex's permissiveness allows the shell metacharacters to pass validation, directly enabling the command injection.\n    *   **Mitigations:** The analysis should highlight the CWE-625 mitigation: \"When applicable, ensure that the regular expression marks beginning and ending string patterns\". While this specific mitigation doesn't directly fix the character class problem (`[A-z]`), it underscores the need for *precise* regex definitions. The regex should be updated to `^[A-Za-z]:\\\\.*$` to have both the correct character class and to ensure that the match runs from beginning to end.\n\n*   **CWE-88 (Improper Neutralization of Argument Delimiters in a Command ('Argument Injection'))**\n    *   **Mapping Confidence:** The confidence score of 0.6 is appropriate and shows good judgement. While *possible*, this is a *secondary* concern. The primary issue is the ability to inject commands.\n    *   **Evidence Strength:** Lower, because the description doesn't explicitly mention argument delimiter issues, *after* the initial command injection. The vulnerability exists *because* of OS Command Injection and not Argument Injection.\n    *   **Mitigations:** The analysis should acknowledge that the \"Parameterization\" mitigation of CWE-88 is actually part of the *fix* for CWE-78 and CWE-625 (don't build a command string, use an array of arguments).\n\n*   **Relationships Analysis:**\n    *   The relationships analysis is generally good. The point about CWE-78 being a child of CWE-77 is correct.\n    *   The observation that CWE-78 can precede CWE-184 is a valid potential attack chain. Injection could lead to further compromise of the system, where the attacker tries to bypass other disallowed inputs.\n\n**Suggestions for Improvement:**\n\n1.  **Strengthen Mitigations:** Elaborate on the specific mitigations from each CWE, particularly CWE-78 and CWE-625. Explain how applying those mitigations would directly address the vulnerability in the `shell-quote` package.\n2.  **Clarify Relationships:** The relationship between CWE-78 and CWE-88 could be clarified. While CWE-88 *could* be present, it's dependent on how the injected commands are structured and interpreted. The primary vulnerability is the OS command injection (CWE-78).\n3.  **Alternative CWEs to Consider (but likely reject):**  While not the *best* fits, briefly consider and *reject* other potentially relevant CWEs to demonstrate a thorough analysis:\n    *   **CWE-184 (Incomplete List of Disallowed Inputs):**  Could be relevant if the application were *trying* to prevent shell metacharacters but missed some. However, the description implies the regex is *intended* to match drive letters, not explicitly block shell metacharacters.  So, reject this.\n    *   **CWE-150 (Improper Neutralization of Escape, Meta, or Control Sequences):** Could be argued, since shell metacharacters *are* control sequences. However, CWE-78 is a more specific and appropriate fit, so prefer it.\n    *   **CWE-94 (Improper Control of Generation of Code ('Code Injection'))**: Also not the *best* fit, but injection of arbitrary OS commands does cause the server to execute code. But CWE-78 is a better fit.\n4.  **Add a Negative Constraint:** Explicitly state that CWE-20 (Improper Input Validation) is too general and should not be used as it is a root cause of other injection errors such as OS Command Injection (CWE-78).\n5.  **Highlight \"Improper Encoding or Escaping of Output\"** - In the input validation, be sure to perform output validation and output escaping to ensure that invalid character sequences are encoded correctly as they are passed through.\n\n**Revised Summary Table:**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-78 | Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') | 0.95 | Base | Allowed | Primary CWE. The vulnerability allows execution of arbitrary commands due to improper handling of shell metacharacters. Mitigations: Use library calls instead of external processes, consider sandboxing. |\n| CWE-625 | Permissive Regular Expression | 0.7 | Base | Allowed | Secondary CWE. The regex used to identify Windows drive letters is too permissive, allowing shell metacharacters. Mitigation: Use precise regex definitions with appropriate anchors. |\n| CWE-88 | Improper Neutralization of Argument Delimiters in a Command ('Argument Injection') | 0.6 | Base | Allowed | Secondary CWE.  Potentially relevant as injected commands might be interpreted as arguments. Mitigation: Parameterization (but this is also a fix for CWE-78). |\n\nBy incorporating these suggestions, the analysis would become even more robust and demonstrate a deeper understanding of the vulnerability and its underlying causes.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| **CWE-78** | Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') | 0.95 | Base | Allowed | **Primary CWE**. The vulnerability allows execution of arbitrary commands due to **improper handling of shell metacharacters**. Mitigations: Use library calls instead of external processes, consider sandboxing. |\n| **CWE-625** | Permissive Regular Expression | 0.7 | Base | Allowed | Secondary **CWE**. The regex used to identify Windows drive letters is too permissive, allowing shell metacharacters. Mitigation: Use precise regex definitions with appropriate anchors. |\n| **CWE-88** | Improper Neutralization of Argument Delimiters in a Command ('Argument Injection') | 0.6 | Base | Allowed | Secondary **CWE**. Potentially relevant as injected commands might be interpreted as arguments. Mitigation: Parameterization (but this is also a fix for **CWE-78**). |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe assessment of **CWE-78** as the primary **WEAKNESS** is supported by its hierarchical relationship as a child of **CWE-77** (Command Injection). This indicates a direct link to the broader category of command injection vulnerabilities. **CWE-625** further clarifies the root cause by highlighting the use of a permissive regular expression, showcasing a specific instance of **improper input validation**. While **CWE-88** is considered, its relevance is less direct, acting as a potential consequence rather than a primary cause.\n\n```mermaid\ngraph TD\n    cwe78[\"CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\"]\n    cwe625[\"CWE-625: Permissive Regular Expression\"]\n    cwe88[\"CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')\"]\n    cwe77[\"CWE-77: Command Injection\"]\n    \n    cwe78 -->|CHILDOF| cwe77\n    cwe625 -->|CANPRECEDE| cwe78\n    cwe88 -->|CANALSOBE| cwe78\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe78 primary\n    class cwe625,cwe88 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with **CWE-625**, the permissive regular expression. This **WEAKNESS** allows unescaped shell metacharacters to pass validation. This leads directly to **CWE-78**, OS Command Injection, where the **improperly neutralized** metacharacters are used to construct and execute arbitrary commands. **CWE-88** may then come into play if the injected commands are interpreted as arguments, further extending the attack surface.\n\n## Summary of Analysis\nThe initial analysis correctly identifies **CWE-78** as the primary **WEAKNESS** due to the ability to inject and execute arbitrary commands. The criticism strengthens the analysis by emphasizing the importance of mitigations for **CWE-78** and **CWE-625**, such as using library calls instead of external processes and employing precise regular expression definitions. The relationship analysis helps to understand the connections between the **CWEs**, with **CWE-625** being the root cause enabling **CWE-78**. The final decision is based on the evidence from the vulnerability description, the relationship analysis, and the mapping guidance, resulting in **CWE-78** as the primary **CWE** and **CWE-625** and **CWE-88** as secondary **CWEs**. This classification reflects the optimal level of specificity, as **CWE-78** directly addresses the OS command injection, while **CWE-625** highlights the cause of the vulnerability by using a permissive regular expression. \"The shell-quote package before 1.7.3 for Node.js allows command injection. An attacker can inject unescaped shell metacharacters through a regex designed to support Windows drive letters. If the output of this package is passed to a real shell as a quoted argument to a command with exec(), an attacker can inject arbitrary commands. This is because the Windows drive letter regex character class is {A-z] instead of the correct {A-Za-z].\"",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 1073.6517955459751,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4491075429457363,
            "sparse": 1073.6517955459751,
            "graph": 2.3705362575534847
          },
          "normalized_scores": {
            "dense": 0.4491075429457363,
            "sparse": 0.8589214364367801,
            "graph": 0.8466200919833875
          },
          "weighted_scores": {
            "dense": 0.15718764003100769,
            "sparse": 0.34356857457471207,
            "graph": 0.21165502299584688
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4491075429457363,
              "query_max": 0.5053711506285256,
              "query_min": 0.44420019253455634,
              "normalized_score": 0.4491075429457363,
              "weight": 0.35,
              "weighted_score": 0.15718764003100769
            },
            "sparse": {
              "raw_score": 1073.6517955459751,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.8589214364367801,
              "weight": 0.4,
              "weighted_score": 0.34356857457471207
            },
            "graph": {
              "raw_score": 2.3705362575534847,
              "query_max": 2.9120000000000004,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.8466200919833875,
              "weight": 0.25,
              "weighted_score": 0.21165502299584688
            }
          },
          "contribution_percentages": {
            "dense": 22.06417189041012,
            "sparse": 48.22615877472461,
            "graph": 29.709669334865286
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.7124112376015665,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.9261346088820366
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.9261346088820366
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 1.0187480697702402
            }
          },
          "combined_score": 1.0187480697702402
        }
      },
      "similarity": 1.0187480697702402
    },
    {
      "metadata": {
        "doc_id": "CWE-88",
        "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
        "type": "Base",
        "original_content": "The product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.",
        "relationships": [],
        "original_sparse_score": 1040.5412701214734,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4659773396094981,
            "sparse": 1040.5412701214734,
            "graph": 2.38220633768264
          },
          "normalized_scores": {
            "dense": 0.4659773396094981,
            "sparse": 0.8324330160971787,
            "graph": 0.8507879777438001
          },
          "weighted_scores": {
            "dense": 0.16309206886332434,
            "sparse": 0.3329732064388715,
            "graph": 0.21269699443595003
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4659773396094981,
              "query_max": 0.5053711506285256,
              "query_min": 0.44420019253455634,
              "normalized_score": 0.4659773396094981,
              "weight": 0.35,
              "weighted_score": 0.16309206886332434
            },
            "sparse": {
              "raw_score": 1040.5412701214734,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.8324330160971787,
              "weight": 0.4,
              "weighted_score": 0.3329732064388715
            },
            "graph": {
              "raw_score": 2.38220633768264,
              "query_max": 2.9120000000000004,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.8507879777438001,
              "weight": 0.25,
              "weighted_score": 0.21269699443595003
            }
          },
          "contribution_percentages": {
            "dense": 23.010828288528838,
            "sparse": 46.979533287217635,
            "graph": 30.00963842425352
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.7087622697381459,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.9213909506595898
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.9213909506595898
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 1.0135300457255487
            }
          },
          "combined_score": 1.0135300457255487
        }
      },
      "similarity": 1.0135300457255487
    },
    {
      "metadata": {
        "doc_id": "CWE-625",
        "name": "Permissive Regular Expression",
        "type": "Base",
        "original_content": "The product uses a regular expression that does not sufficiently restrict the set of allowed values.",
        "relationships": [],
        "original_sparse_score": 1944.1203726438448,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1944.1203726438448,
            "graph": 2.7742
          },
          "normalized_scores": {
            "sparse": 1.0,
            "graph": 0.9907857142857144
          },
          "weighted_scores": {
            "sparse": 0.4,
            "graph": 0.2476964285714286
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1944.1203726438448,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 2.7742,
              "query_max": 2.9120000000000004,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.9907857142857144,
              "weight": 0.25,
              "weighted_score": 0.2476964285714286
            }
          },
          "contribution_percentages": {
            "sparse": 61.757326789997514,
            "graph": 38.24267321000248
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.6476964285714286,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.8420053571428572
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.8420053571428572
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.9262058928571429
            }
          },
          "combined_score": 0.9262058928571429
        }
      },
      "similarity": 0.9262058928571429
    },
    {
      "metadata": {
        "doc_id": "CWE-93",
        "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
        "type": "Base",
        "original_content": "The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.",
        "relationships": [],
        "original_sparse_score": 966.9337589565105,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4480469176159564,
            "sparse": 966.9337589565105,
            "graph": 1.6318602390112362
          },
          "normalized_scores": {
            "dense": 0.4480469176159564,
            "sparse": 0.7735470071652084,
            "graph": 0.5828072282182987
          },
          "weighted_scores": {
            "dense": 0.15681642116558472,
            "sparse": 0.30941880286608336,
            "graph": 0.14570180705457467
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4480469176159564,
              "query_max": 0.5053711506285256,
              "query_min": 0.44420019253455634,
              "normalized_score": 0.4480469176159564,
              "weight": 0.35,
              "weighted_score": 0.15681642116558472
            },
            "sparse": {
              "raw_score": 966.9337589565105,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.7735470071652084,
              "weight": 0.4,
              "weighted_score": 0.30941880286608336
            },
            "graph": {
              "raw_score": 1.6318602390112362,
              "query_max": 2.9120000000000004,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.5828072282182987,
              "weight": 0.25,
              "weighted_score": 0.14570180705457467
            }
          },
          "contribution_percentages": {
            "dense": 25.626234922770013,
            "sparse": 50.56383045112296,
            "graph": 23.809934626107033
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.6119370310862428,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7955181404121157
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7955181404121157
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.8750699544533272
            }
          },
          "combined_score": 0.8750699544533272
        }
      },
      "similarity": 0.8750699544533272
    },
    {
      "metadata": {
        "doc_id": "CWE-184",
        "name": "Incomplete List of Disallowed Inputs",
        "type": "Base",
        "original_content": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.",
        "relationships": [],
        "original_sparse_score": 869.434389383638,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 869.434389383638,
            "graph": 2.9120000000000004
          },
          "normalized_scores": {
            "sparse": 0.6955475115069104,
            "graph": 1.0
          },
          "weighted_scores": {
            "sparse": 0.27821900460276416,
            "graph": 0.25
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 869.434389383638,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.6955475115069104,
              "weight": 0.4,
              "weighted_score": 0.27821900460276416
            },
            "graph": {
              "raw_score": 2.9120000000000004,
              "query_max": 2.9120000000000004,
              "query_min": 1.3676000000000001,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "sparse": 52.67114628183302,
            "graph": 47.32885371816698
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5282190046027642,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6866847059835934
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6866847059835934
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7553531765819529
            }
          },
          "combined_score": 0.7553531765819529
        }
      },
      "similarity": 0.7553531765819529
    },
    {
      "metadata": {
        "doc_id": "CWE-427",
        "name": "Uncontrolled Search Path Element",
        "type": "Base",
        "original_content": "The product uses a fixed or controlled search path to find resources, but one or more locations in that path can be under the control of unintended actors.",
        "relationships": [],
        "original_sparse_score": 864.232286086901,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4473874085794689,
            "sparse": 864.232286086901
          },
          "normalized_scores": {
            "dense": 0.4473874085794689,
            "sparse": 0.6913858288695208
          },
          "weighted_scores": {
            "dense": 0.1565855930028141,
            "sparse": 0.27655433154780834
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4473874085794689,
              "query_max": 0.5053711506285256,
              "query_min": 0.44420019253455634,
              "normalized_score": 0.4473874085794689,
              "weight": 0.35,
              "weighted_score": 0.1565855930028141
            },
            "sparse": {
              "raw_score": 864.232286086901,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.6913858288695208,
              "weight": 0.4,
              "weighted_score": 0.27655433154780834
            }
          },
          "contribution_percentages": {
            "dense": 36.15127217036615,
            "sparse": 63.84872782963386
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.43313992455062245,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5630819019158092
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5630819019158092
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6193900921073902
            }
          },
          "combined_score": 0.6193900921073902
        }
      },
      "similarity": 0.6193900921073902
    },
    {
      "metadata": {
        "doc_id": "CWE-79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "type": "Base",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "relationships": [],
        "original_sparse_score": 846.5122210492386,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 846.5122210492386,
            "graph": 1.7680000000000005
          },
          "normalized_scores": {
            "sparse": 0.6772097768393909,
            "graph": 0.6314285714285717
          },
          "weighted_scores": {
            "sparse": 0.27088391073575635,
            "graph": 0.15785714285714292
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 846.5122210492386,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.6772097768393909,
              "weight": 0.4,
              "weighted_score": 0.27088391073575635
            },
            "graph": {
              "raw_score": 1.7680000000000005,
              "query_max": 2.9120000000000004,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.6314285714285717,
              "weight": 0.25,
              "weighted_score": 0.15785714285714292
            }
          },
          "contribution_percentages": {
            "sparse": 63.18123922720208,
            "graph": 36.81876077279792
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.42874105359289927,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.557363369670769
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.557363369670769
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.613099706637846
            }
          },
          "combined_score": 0.613099706637846
        }
      },
      "similarity": 0.613099706637846
    },
    {
      "metadata": {
        "doc_id": "CWE-94",
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
        "relationships": [],
        "original_sparse_score": 843.3877223079559,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
          "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
          "reasons": [
            "Frequent Misuse",
            "Frequent Misinterpretation"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 843.3877223079559,
            "graph": 1.3676000000000001
          },
          "normalized_scores": {
            "sparse": 0.6747101778463647,
            "graph": 0.4884285714285715
          },
          "weighted_scores": {
            "sparse": 0.2698840711385459,
            "graph": 0.12210714285714287
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 843.3877223079559,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.6747101778463647,
              "weight": 0.4,
              "weighted_score": 0.2698840711385459
            },
            "graph": {
              "raw_score": 1.3676000000000001,
              "query_max": 2.9120000000000004,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.4884285714285715,
              "weight": 0.25,
              "weighted_score": 0.12210714285714287
            }
          },
          "contribution_percentages": {
            "sparse": 68.84952047458752,
            "graph": 31.15047952541249
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.39199121399568876,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5095885781943954
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5095885781943954
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
                "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
                "reasons": [
                  "Frequent Misuse",
                  "Frequent Misinterpretation"
                ]
              },
              "score_after": 0.5350680071041152
            }
          },
          "combined_score": 0.5350680071041152
        }
      },
      "similarity": 0.5350680071041152
    },
    {
      "metadata": {
        "doc_id": "CWE-150",
        "name": "Improper Neutralization of Escape, Meta, or Control Sequences",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 523.362631645891,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.48287174588025944,
            "sparse": 523.362631645891
          },
          "normalized_scores": {
            "dense": 0.48287174588025944,
            "sparse": 0.41869010531671286
          },
          "weighted_scores": {
            "dense": 0.1690051110580908,
            "sparse": 0.16747604212668515
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.48287174588025944,
              "query_max": 0.5053711506285256,
              "query_min": 0.44420019253455634,
              "normalized_score": 0.48287174588025944,
              "weight": 0.35,
              "weighted_score": 0.1690051110580908
            },
            "sparse": {
              "raw_score": 523.362631645891,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.41869010531671286,
              "weight": 0.4,
              "weighted_score": 0.16747604212668515
            }
          },
          "contribution_percentages": {
            "dense": 50.22721464737818,
            "sparse": 49.77278535262182
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.33648115318477595,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.4037773838217311
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4037773838217311
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.44415512220390424
            }
          },
          "combined_score": 0.44415512220390424
        }
      },
      "similarity": 0.44415512220390424
    },
    {
      "metadata": {
        "doc_id": "CWE-1007",
        "name": "Insufficient Visual Distinction of Homoglyphs Presented to User",
        "type": "Base",
        "original_content": "The product displays information or identifiers to a user, but the display mechanism does not make it easy for the user to distinguish between visually similar or identical glyphs (homoglyphs), which may cause the user to misinterpret a glyph and perform an unintended, insecure action.",
        "relationships": [],
        "original_sparse_score": 928.4352738742012,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 928.4352738742012
          },
          "normalized_scores": {
            "sparse": 0.742748219099361
          },
          "weighted_scores": {
            "sparse": 0.2970992876397444
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 928.4352738742012,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.742748219099361,
              "weight": 0.4,
              "weighted_score": 0.2970992876397444
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2970992876397444,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3862290739316678
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3862290739316678
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4248519813248346
            }
          },
          "combined_score": 0.4248519813248346
        }
      },
      "similarity": 0.4248519813248346
    },
    {
      "metadata": {
        "doc_id": "CWE-1333",
        "name": "Inefficient Regular Expression Complexity",
        "type": "Base",
        "original_content": "The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles.",
        "relationships": [],
        "original_sparse_score": 907.4837040149083,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 907.4837040149083
          },
          "normalized_scores": {
            "sparse": 0.7259869632119267
          },
          "weighted_scores": {
            "sparse": 0.2903947852847707
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 907.4837040149083,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.7259869632119267,
              "weight": 0.4,
              "weighted_score": 0.2903947852847707
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2903947852847707,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3775132208702019
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3775132208702019
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4152645429572221
            }
          },
          "combined_score": 0.4152645429572221
        }
      },
      "similarity": 0.4152645429572221
    },
    {
      "metadata": {
        "doc_id": "CWE-59",
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "type": "Base",
        "original_content": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.",
        "relationships": [],
        "original_sparse_score": 905.8370170369001,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 905.8370170369001
          },
          "normalized_scores": {
            "sparse": 0.7246696136295201
          },
          "weighted_scores": {
            "sparse": 0.28986784545180805
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 905.8370170369001,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.7246696136295201,
              "weight": 0.4,
              "weighted_score": 0.28986784545180805
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.28986784545180805,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3768281990873505
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3768281990873505
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.41451101899608556
            }
          },
          "combined_score": 0.41451101899608556
        }
      },
      "similarity": 0.41451101899608556
    },
    {
      "metadata": {
        "doc_id": "CWE-116",
        "name": "Improper Encoding or Escaping of Output",
        "type": "Class",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "relationships": [],
        "original_sparse_score": 1020.7684624666778,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 1020.7684624666778,
            "graph": 1.768
          },
          "normalized_scores": {
            "sparse": 0.8166147699733423,
            "graph": 0.6314285714285715
          },
          "weighted_scores": {
            "sparse": 0.3266459079893369,
            "graph": 0.15785714285714286
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 1020.7684624666778,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.8166147699733423,
              "weight": 0.4,
              "weighted_score": 0.3266459079893369
            },
            "graph": {
              "raw_score": 1.768,
              "query_max": 2.9120000000000004,
              "query_min": 1.3676000000000001,
              "normalized_score": 0.6314285714285715,
              "weight": 0.25,
              "weighted_score": 0.15785714285714286
            }
          },
          "contribution_percentages": {
            "sparse": 67.41875152667271,
            "graph": 32.58124847332729
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.48450305084647977,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.38760244067718386
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.38760244067718386
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.40698256271104305
            }
          },
          "combined_score": 0.40698256271104305
        }
      },
      "similarity": 0.40698256271104305
    },
    {
      "metadata": {
        "doc_id": "CWE-1236",
        "name": "Improper Neutralization of Formula Elements in a CSV File",
        "type": "Base",
        "original_content": "The product saves user-provided information into a Comma-Separated Value (CSV) file, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as a command when the file is opened by a spreadsheet product.",
        "relationships": [],
        "original_sparse_score": 876.727449265028,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 876.727449265028
          },
          "normalized_scores": {
            "sparse": 0.7013819594120224
          },
          "weighted_scores": {
            "sparse": 0.28055278376480897
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 876.727449265028,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.7013819594120224,
              "weight": 0.4,
              "weighted_score": 0.28055278376480897
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.28055278376480897,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.36471861889425167
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.36471861889425167
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.40119048078367686
            }
          },
          "combined_score": 0.40119048078367686
        }
      },
      "similarity": 0.40119048078367686
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 867.9728856805538,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 867.9728856805538
          },
          "normalized_scores": {
            "sparse": 0.694378308544443
          },
          "weighted_scores": {
            "sparse": 0.27775132341777725
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 867.9728856805538,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.694378308544443,
              "weight": 0.4,
              "weighted_score": 0.27775132341777725
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.27775132341777725,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.36107672044311045
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.36107672044311045
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.39718439248742154
            }
          },
          "combined_score": 0.39718439248742154
        }
      },
      "similarity": 0.39718439248742154
    },
    {
      "metadata": {
        "doc_id": "CWE-89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "relationships": [],
        "original_sparse_score": 856.4611253811867,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 856.4611253811867
          },
          "normalized_scores": {
            "sparse": 0.6851689003049494
          },
          "weighted_scores": {
            "sparse": 0.27406756012197975
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 856.4611253811867,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.6851689003049494,
              "weight": 0.4,
              "weighted_score": 0.27406756012197975
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.27406756012197975,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3562878281585737
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3562878281585737
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3919166109744311
            }
          },
          "combined_score": 0.3919166109744311
        }
      },
      "similarity": 0.3919166109744311
    },
    {
      "metadata": {
        "doc_id": "CWE-156",
        "name": "Improper Neutralization of Whitespace",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as whitespace when they are sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 907.3143851257039,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 907.3143851257039
          },
          "normalized_scores": {
            "sparse": 0.7258515081005631
          },
          "weighted_scores": {
            "sparse": 0.29034060324022526
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 907.3143851257039,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.7258515081005631,
              "weight": 0.4,
              "weighted_score": 0.29034060324022526
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.29034060324022526,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3484087238882703
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3484087238882703
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.38324959627709737
            }
          },
          "combined_score": 0.38324959627709737
        }
      },
      "similarity": 0.38324959627709737
    },
    {
      "metadata": {
        "doc_id": "CWE-95",
        "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. \"eval\").",
        "relationships": [],
        "original_sparse_score": 904.9676962006862,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 904.9676962006862
          },
          "normalized_scores": {
            "sparse": 0.7239741569605489
          },
          "weighted_scores": {
            "sparse": 0.28958966278421955
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 904.9676962006862,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.7239741569605489,
              "weight": 0.4,
              "weighted_score": 0.28958966278421955
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.28958966278421955,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.34750759534106346
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.34750759534106346
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.38225835487516985
            }
          },
          "combined_score": 0.38225835487516985
        }
      },
      "similarity": 0.38225835487516985
    },
    {
      "metadata": {
        "doc_id": "CWE-250",
        "name": "Execution with Unnecessary Privileges",
        "type": "Base",
        "original_content": "The product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.",
        "relationships": [],
        "original_sparse_score": 521.1773175569123,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 521.1773175569123
          },
          "normalized_scores": {
            "sparse": 0.4169418540455298
          },
          "weighted_scores": {
            "sparse": 0.16677674161821193
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 521.1773175569123,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.4169418540455298,
              "weight": 0.4,
              "weighted_score": 0.16677674161821193
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.16677674161821193,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.21680976410367553
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.21680976410367553
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2384907405140431
            }
          },
          "combined_score": 0.2384907405140431
        }
      },
      "similarity": 0.2384907405140431
    },
    {
      "metadata": {
        "doc_id": "CWE-138",
        "name": "Improper Neutralization of Special Elements",
        "type": "Class",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 960.7965481953566,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 960.7965481953566
          },
          "normalized_scores": {
            "sparse": 0.7686372385562853
          },
          "weighted_scores": {
            "sparse": 0.30745489542251414
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 960.7965481953566,
              "query_max": 1944.1203726438448,
              "query_min": 521.1773175569123,
              "normalized_score": 0.7686372385562853,
              "weight": 0.4,
              "weighted_score": 0.30745489542251414
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.30745489542251414,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.24596391633801132
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.24596391633801132
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.19677113307040905
            }
          },
          "combined_score": 0.19677113307040905
        }
      },
      "similarity": 0.19677113307040905
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-78",
      "CWE-77",
      "CWE-184",
      "CWE-625",
      "CWE-183",
      "CWE-88"
    ],
    "critic_additional": [
      "CWE-20",
      "CWE-150",
      "CWE-94"
    ]
  }
}