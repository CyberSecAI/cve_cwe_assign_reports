{
  "cve_id": "CVE-2022-35113",
  "description": "SWFTools commit 772e55a2 was discovered to contain a heap-buffer overflow via swf_DefineLosslessBitsTagToImage at /modules/swfbits.c.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "heap-buffer overflow",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "SWFTools",
    "version": "commit 772e55a2",
    "component": "swf_DefineLosslessBitsTagToImage at /modules/swfbits.c"
  },
  "reference_content": "The provided content is related to CVE-2022-35113. It describes two separate crashes, a heap buffer overflow and a segmentation fault, in `swfrender` when processing specially crafted SWF files. The crashes occur in the `swftools` project.\n\n**Heap buffer overflow:**\n- **Root cause:** A heap-buffer-overflow occurs in the `swf_DefineLosslessBitsTagToImage` function when processing a specific SWF file.\n- **Vulnerability:** Heap buffer overflow due to an out-of-bounds read.\n- **Impact of exploitation:** Crash/denial of service.\n- **Attack vector:** Maliciously crafted SWF file processed by `swfrender`.\n- **Required attacker capabilities:** Ability to provide a malicious SWF file as input to `swfrender`.\n\n**Segmentation fault:**\n- **Root cause:** A segmentation fault occurs in the `extractFrame` function when processing a specific SWF file.\n- **Vulnerability:** Likely a null pointer dereference or access to invalid memory.\n- **Impact of exploitation:** Crash/denial of service.\n- **Attack vector:** Maliciously crafted SWF file processed by `swfrender`.\n- **Required attacker capabilities:** Ability to provide a malicious SWF file as input to `swfrender`.\n\nThe content provides more detail than the placeholder CVE description, including the specific functions where the vulnerabilities occur, the crash information (AddressSanitizer output), and the specific files used to reproduce the issues.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-125 | Out-of-bounds Read | 0.9 | Base | Primary | Allowed |\n| CWE-122 | Heap-based Buffer Overflow | 0.7 | Variant | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states a \"**heap-buffer overflow**\" in `swf_DefineLosslessBitsTagToImage`. The CVE Reference Links Content Summary confirms this, stating that a \"**heap-buffer-overflow** occurs in the `swf_DefineLosslessBitsTagToImage` function when processing a specific SWF file\" and identifies it as a \"**Vulnerability: Heap buffer overflow due to an out-of-bounds read**\". This indicates that the root cause is reading data past the end of the allocated buffer. Consequently, CWE-125 (Out-of-bounds Read) is the most appropriate primary mapping because it directly reflects the nature of the vulnerability. CWE-125 is a Base level CWE, which is a preferred level of abstraction. The MITRE mapping guidance for CWE-125 designates its Usage as ALLOWED. While CWE-122 (Heap-based Buffer Overflow) is related, CWE-125 pinpoints the specific issue of reading out-of-bounds. CWE-787 (Out-of-bounds Write) is not appropriate, as the primary issue is reading beyond the buffer, not writing.\n  \n  - *Relationship Analysis:* CWE-125 does not have any direct relationships with other CWEs. However, it is a common cause that can lead to other issues such as information disclosure or denial of service. CWE-122 is a heap-based buffer overflow and is a parent of more specific buffer overflows, but CWE-125 is more specific to an out-of-bounds read than the broader heap buffer overflow category.\n\n- **Confidence Score:**  \n  - Confidence: 0.9 (High confidence due to explicit mention of \"**heap-buffer overflow**\" and confirmation of out-of-bounds read in CVE reference materials).\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-125 | Out-of-bounds Read | 0.9 | Base | Primary | Allowed |\n| CWE-122 | Heap-based Buffer Overflow | 0.7 | Variant | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states a \"**heap-buffer overflow**\" in `swf_DefineLosslessBitsTagToImage`. The CVE Reference Links Content Summary confirms this, stating that a \"**heap-buffer-overflow** occurs in the `swf_DefineLosslessBitsTagToImage` function when processing a specific SWF file\" and identifies it as a \"**Vulnerability: Heap buffer overflow due to an out-of-bounds read**\". This indicates that the root cause is reading data past the end of the allocated buffer. Consequently, CWE-125 (Out-of-bounds Read) is the most appropriate primary mapping because it directly reflects the nature of the vulnerability. CWE-125 is a Base level CWE, which is a preferred level of abstraction. The MITRE mapping guidance for CWE-125 designates its Usage as ALLOWED. While CWE-122 (Heap-based Buffer Overflow) is related, CWE-125 pinpoints the specific issue of reading out-of-bounds. CWE-787 (Out-of-bounds Write) is not appropriate, as the primary issue is reading beyond the buffer, not writing.\n  \n  - *Relationship Analysis:* CWE-125 does not have any direct relationships with other CWEs. However, it is a common cause that can lead to other issues such as information disclosure or denial of service. CWE-122 is a heap-based buffer overflow and is a parent of more specific buffer overflows, but CWE-125 is more specific to an out-of-bounds read than the broader heap buffer overflow category.\n\n- **Confidence Score:**  \n  - Confidence: 0.9 (High confidence due to explicit mention of \"**heap-buffer overflow**\" and confirmation of out-of-bounds read in CVE reference materials).\n---",
  "criticism": "Okay, here's a review of the provided analysis, taking into account the full CWE specifications:\n\n**Overall Assessment:**\n\nThe analysis is generally good and well-reasoned. The primary mapping to CWE-125 (Out-of-bounds Read) is the most accurate and appropriate. The inclusion of CWE-122 (Heap-based Buffer Overflow) as a secondary candidate is also reasonable, given the nature of the vulnerability and the context provided. The confidence level is justified.\n\n**Detailed Breakdown:**\n\n1.  **Summary Table:**\n    *   The choice of CWE-125 as primary and CWE-122 as a secondary candidate is supported by the evidence.\n    *   The confidence levels of 0.9 for CWE-125 and 0.7 for CWE-122 are appropriate.\n\n2.  **Evidence and Confidence:**\n\n    *   **Explanation:** The reasoning for choosing CWE-125 is strong.  The analysis correctly identifies that the root cause of the heap buffer overflow is specifically an out-of-bounds read.  The justification for why CWE-787 (Out-of-bounds Write) is *not* appropriate is also correct.\n    *   **Relationship Analysis:** The analysis touches on the relationship between CWE-125 and other potential consequences (information disclosure, DoS). It also correctly identifies that CWE-125 is more specific than the broader CWE-122.\n\n3.  **CWE Examples from Database:**\n    *   The provided examples for CWE-122 help illustrate how it can arise in different contexts.\n    *   Including examples for CWE-125 could further strengthen the analysis but may not be needed in this case since the primary identification is already very clear.\n\n4.  **Relevant CWE Specifications Review:**\n\n    *   **CWE-125 (Out-of-bounds Read):**\n        *   **Abstraction:** Base - The analysis correctly notes this is a preferred level of abstraction.\n        *   **Mapping Guidance:**  \"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\"  The analysis adheres to this guidance.\n        *   **Potential Mitigations:** The analysis could be strengthened by mentioning potential mitigations. Input validation (Mitigation 1) is highly relevant. Validating length arguments and buffer size calculations is critical to prevent out-of-bounds reads.  Language selection (Mitigation 2) is also relevant (e.g., using languages with built-in bounds checking).\n    *   **CWE-122 (Heap-based Buffer Overflow):**\n        *   **Abstraction:** Variant - The analysis notes that CWE-125 is a Base-level CWE, which is a preferred level of abstraction over a Variant-level CWE.\n        *   **Mapping Guidance:** The analysis correctly notes that the choice of CWE-122 should be an appropriate fit.\n        *   **Potential Mitigations:** Pre-design (using languages/compilers with bounds checking), using abstraction libraries, and compiler-based overflow detection are all relevant mitigation strategies.\n    *  **CWE-787 (Out-of-bounds Write):** The analysis correctly identifies that this CWE is not the cause of this vulnerability.\n    *   **Other Top Combined Retriever Results:** Let's look at some of the other top results from the Retriever:\n        *   **CWE-193 (Off-by-one Error):** While off-by-one errors *can* lead to out-of-bounds reads, it's not explicitly stated as the root cause in this analysis. Thus, it's reasonable not to choose this as primary.\n        *   **CWE-190 (Integer Overflow or Wraparound):**  Integer overflows can definitely lead to heap overflows. This would be relevant if the size of a heap allocation was calculated using an overflowed integer, which was not explicit in the initial description.\n        *   **CWE-1284 (Improper Validation of Specified Quantity in Input):** This is relevant.  If the `swf_DefineLosslessBitsTagToImage` function uses a quantity from the SWF file to determine the size of a buffer or the number of bytes to read, and that quantity isn't validated, then CWE-1284 could be a contributing factor. This could even be added to the report as a secondary or tertiary CWE to describe how it relates to the Heap-based Buffer Overflow.\n        *   **CWE-770 (Allocation of Resources Without Limits or Throttling):** If a large quantity is provided that results in a large heap allocation, then CWE-770 is also a contributing factor.\n\n**Suggestions for Improvement:**\n\n*   **Mitigation Strategies:** Explicitly mention potential mitigation strategies, drawing from the CWE specifications for CWE-125 and CWE-122.  Focus on input validation, safe memory management practices, and compiler-based protection mechanisms.\n*   **Input Validation Consideration:** Add CWE-1284 to secondary/tertiary cause to the analysis. Specifically mention whether the size of the heap buffer, or the length of the data read, is controlled by a quantity in the SWF file and whether this value is validated to prevent an allocation/read of arbitrary size.\n*   **Clarify \"Heap-based Buffer Overflow\" Cause:** To avoid confusion, it would be helpful to clarify that the heap-based buffer overflow is *caused* by the out-of-bounds read.  It's not simply that they both exist.  The out-of-bounds read leads to a read past the end of a heap-allocated buffer, hence the overflow.\n\n**Revised Summary Table (Incorporating suggestions):**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-125 | Out-of-bounds Read | 0.9 | Base | Primary | Allowed |\n| CWE-122 | Heap-based Buffer Overflow | 0.7 | Variant | Secondary Candidate | Allowed |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.5 | Base | Tertiary Candidate | Allowed, Contributing Factor |\n\n**Revised Relationship Analysis (Extract, Adding CWE-1284):**\n\n*Relationship Analysis:* CWE-125 does not have any direct relationships with other CWEs. However, it is a common cause that can lead to other issues such as information disclosure or denial of service. CWE-122 is a heap-based buffer overflow and is a parent of more specific buffer overflows, but CWE-125 is more specific to an out-of-bounds read than the broader heap buffer overflow category. **CWE-1284 is also a potential contributing factor; if the size of the heap allocation or the length of data read is derived from an unvalidated quantity within the SWF file, this could directly enable the out-of-bounds read.**\n\nBy incorporating these suggestions, the analysis will be even more robust and informative.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-125 | Out-of-bounds Read | 0.9 | Base | Primary | Allowed |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.7 | Base | Secondary Candidate | Allowed |\n| CWE-122 | Heap-based Buffer Overflow | 0.6 | Variant | Secondary Candidate | Allowed |\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship considered was the parent-child relationship. CWE-125 **Out-of-bounds Read** is the more specific root cause, while CWE-122 **Heap-based Buffer Overflow** is a more general consequence. CWE-1284 **Improper Validation of Specified Quantity in Input** can precede CWE-125 if an unvalidated size is used to read data. The abstraction levels influenced the choice; Base level CWEs (CWE-125, CWE-1284) are preferred over Variant level CWEs (CWE-122) when they accurately describe the root cause.\n\n```mermaid\ngraph TD\n    cwe125[\"CWE-125: Out-of-bounds Read\"]\n    cwe122[\"CWE-122: Heap-based Buffer Overflow\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations Within the Bounds of a Memory Buffer\"]\n    \n    cwe125 -->|CHILDOF| cwe119\n    cwe122 -->|CHILDOF| cwe119\n    cwe1284 -->|CANPRECEDE| cwe125\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe125 primary\n    class cwe1284,cwe122 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-1284 Improper Validation of Specified Quantity in Input**, where a size or length is not validated. This leads to **CWE-125 Out-of-bounds Read**, where data is read past the end of the allocated buffer, triggering **CWE-122 Heap-based Buffer Overflow**. The final impact is a heap buffer overflow.\n\n## Summary of Analysis\nThe initial analysis and criticism both correctly identified **CWE-125 Out-of-bounds Read** as the primary weakness. The description of \"**heap-buffer overflow**\" in `swf_DefineLosslessBitsTagToImage` at `/modules/swfbits.c` strongly suggests this. The analysis and criticism are based on the provided evidence and the CWE specifications.\n\nThe addition of **CWE-1284 Improper Validation of Specified Quantity in Input** as a secondary candidate is based on the possibility that an unvalidated size from the SWF file is being used. The criticism suggested this addition, and it makes sense given that the heap overflow is happening because of the out-of-bounds read. If there wasn't an unvalidated size, the overflow may not have occurred. The CWE-1284 description matches this case: \"The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.\"\n\nThe selected CWEs are at the optimal level of specificity. **CWE-125** directly describes the **rootcause** of the vulnerability (reading past the buffer). **CWE-1284** identifies a potential contributing factor. **CWE-122**, while related, is a broader category (heap overflow) and more of an impact than a **rootcause**.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 165.3640880562214,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5348796371548747,
            "sparse": 165.3640880562214,
            "graph": 2.3319673271942096
          },
          "normalized_scores": {
            "dense": 0.5348796371548747,
            "sparse": 0.1322912704449771,
            "graph": 0.8328454739979321
          },
          "weighted_scores": {
            "dense": 0.18720787300420616,
            "sparse": 0.052916508177990845,
            "graph": 0.20821136849948302
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5348796371548747,
              "query_max": 0.5405241294277661,
              "query_min": 0.4744207789113783,
              "normalized_score": 0.5348796371548747,
              "weight": 0.35,
              "weighted_score": 0.18720787300420616
            },
            "sparse": {
              "raw_score": 165.3640880562214,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.1322912704449771,
              "weight": 0.4,
              "weighted_score": 0.052916508177990845
            },
            "graph": {
              "raw_score": 2.3319673271942096,
              "query_max": 4.329000000000001,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.8328454739979321,
              "weight": 0.25,
              "weighted_score": 0.20821136849948302
            }
          },
          "contribution_percentages": {
            "dense": 41.756177850444544,
            "sparse": 11.802875013996042,
            "graph": 46.44094713555942
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.44833574968168,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.582836474586184
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.582836474586184
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6411201220448025
            }
          },
          "combined_score": 0.6411201220448025
        }
      },
      "similarity": 0.6411201220448025
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 140.04564939538076,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4802102939133124,
            "sparse": 140.04564939538076,
            "graph": 2.5494247989496057
          },
          "normalized_scores": {
            "dense": 0.4802102939133124,
            "sparse": 0.11203651951630461,
            "graph": 0.9105088567677164
          },
          "weighted_scores": {
            "dense": 0.16807360286965933,
            "sparse": 0.04481460780652185,
            "graph": 0.2276272141919291
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4802102939133124,
              "query_max": 0.5405241294277661,
              "query_min": 0.4744207789113783,
              "normalized_score": 0.4802102939133124,
              "weight": 0.35,
              "weighted_score": 0.16807360286965933
            },
            "sparse": {
              "raw_score": 140.04564939538076,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.11203651951630461,
              "weight": 0.4,
              "weighted_score": 0.04481460780652185
            },
            "graph": {
              "raw_score": 2.5494247989496057,
              "query_max": 4.329000000000001,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.9105088567677164,
              "weight": 0.25,
              "weighted_score": 0.2276272141919291
            }
          },
          "contribution_percentages": {
            "dense": 38.15385191562369,
            "sparse": 10.173221021701858,
            "graph": 51.672927062674454
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4405154248681103,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5726700523285434
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5726700523285434
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6299370575613978
            }
          },
          "combined_score": 0.6299370575613978
        }
      },
      "similarity": 0.6299370575613978
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 135.63835756187353,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5052341871560634,
            "sparse": 135.63835756187353,
            "graph": 2.0674281522733007
          },
          "normalized_scores": {
            "dense": 0.5052341871560634,
            "sparse": 0.10851068604949883,
            "graph": 0.7383671972404646
          },
          "weighted_scores": {
            "dense": 0.17683196550462218,
            "sparse": 0.043404274419799535,
            "graph": 0.18459179931011616
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5052341871560634,
              "query_max": 0.5405241294277661,
              "query_min": 0.4744207789113783,
              "normalized_score": 0.5052341871560634,
              "weight": 0.35,
              "weighted_score": 0.17683196550462218
            },
            "sparse": {
              "raw_score": 135.63835756187353,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.10851068604949883,
              "weight": 0.4,
              "weighted_score": 0.043404274419799535
            },
            "graph": {
              "raw_score": 2.0674281522733007,
              "query_max": 4.329000000000001,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.7383671972404646,
              "weight": 0.25,
              "weighted_score": 0.18459179931011616
            }
          },
          "contribution_percentages": {
            "dense": 43.68076031467135,
            "sparse": 10.72165715148332,
            "graph": 45.59758253384533
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.40482803923453786,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5262764510048993
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5262764510048993
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.5789040961053893
            }
          },
          "combined_score": 0.5789040961053893
        }
      },
      "similarity": 0.5789040961053893
    },
    {
      "metadata": {
        "doc_id": "CWE-124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "type": "Base",
        "original_content": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "relationships": [],
        "original_sparse_score": 108.57658153135613,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5090857655994703,
            "sparse": 108.57658153135613,
            "graph": 2.0690255883410016
          },
          "normalized_scores": {
            "dense": 0.5090857655994703,
            "sparse": 0.0868612652250849,
            "graph": 0.7389377101217863
          },
          "weighted_scores": {
            "dense": 0.17818001795981459,
            "sparse": 0.03474450609003396,
            "graph": 0.18473442753044658
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5090857655994703,
              "query_max": 0.5405241294277661,
              "query_min": 0.4744207789113783,
              "normalized_score": 0.5090857655994703,
              "weight": 0.35,
              "weighted_score": 0.17818001795981459
            },
            "sparse": {
              "raw_score": 108.57658153135613,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.0868612652250849,
              "weight": 0.4,
              "weighted_score": 0.03474450609003396
            },
            "graph": {
              "raw_score": 2.0690255883410016,
              "query_max": 4.329000000000001,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.7389377101217863,
              "weight": 0.25,
              "weighted_score": 0.18473442753044658
            }
          },
          "contribution_percentages": {
            "dense": 44.807244311168624,
            "sparse": 8.737262408392777,
            "graph": 46.455493280438596
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.39765895158029513,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5169566370543837
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5169566370543837
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5686523007598221
            }
          },
          "combined_score": 0.5686523007598221
        }
      },
      "similarity": 0.5686523007598221
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 129.16492074750084,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5288214396988329,
            "sparse": 129.16492074750084,
            "graph": 1.9874259215830226
          },
          "normalized_scores": {
            "dense": 0.5288214396988329,
            "sparse": 0.10333193659800068,
            "graph": 0.7097949719939367
          },
          "weighted_scores": {
            "dense": 0.1850875038945915,
            "sparse": 0.04133277463920027,
            "graph": 0.17744874299848418
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5288214396988329,
              "query_max": 0.5405241294277661,
              "query_min": 0.4744207789113783,
              "normalized_score": 0.5288214396988329,
              "weight": 0.35,
              "weighted_score": 0.1850875038945915
            },
            "sparse": {
              "raw_score": 129.16492074750084,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.10333193659800068,
              "weight": 0.4,
              "weighted_score": 0.04133277463920027
            },
            "graph": {
              "raw_score": 1.9874259215830226,
              "query_max": 4.329000000000001,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.7097949719939367,
              "weight": 0.25,
              "weighted_score": 0.17744874299848418
            }
          },
          "contribution_percentages": {
            "dense": 45.828596407907426,
            "sparse": 10.234202782472408,
            "graph": 43.937200809620165
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.40386902153227594,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.4846428258387311
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4846428258387311
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5331071084226042
            }
          },
          "combined_score": 0.5331071084226042
        }
      },
      "similarity": 0.5331071084226042
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 129.20037665018927,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 129.20037665018927,
            "graph": 4.329000000000001
          },
          "normalized_scores": {
            "sparse": 0.10336030132015142,
            "graph": 1.0
          },
          "weighted_scores": {
            "sparse": 0.04134412052806057,
            "graph": 0.25
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 129.20037665018927,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.10336030132015142,
              "weight": 0.4,
              "weighted_score": 0.04134412052806057
            },
            "graph": {
              "raw_score": 4.329000000000001,
              "query_max": 4.329000000000001,
              "query_min": 1.6848000000000003,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "sparse": 14.190820275735938,
            "graph": 85.80917972426406
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2913441205280606,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.37874735668647874
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.37874735668647874
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.41662209235512665
            }
          },
          "combined_score": 0.41662209235512665
        }
      },
      "similarity": 0.41662209235512665
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 102.76123412482977,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 102.76123412482977,
            "graph": 2.2776000000000005
          },
          "normalized_scores": {
            "sparse": 0.08220898729986381,
            "graph": 0.8134285714285716
          },
          "weighted_scores": {
            "sparse": 0.032883594919945525,
            "graph": 0.2033571428571429
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 102.76123412482977,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.08220898729986381,
              "weight": 0.4,
              "weighted_score": 0.032883594919945525
            },
            "graph": {
              "raw_score": 2.2776000000000005,
              "query_max": 4.329000000000001,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.8134285714285716,
              "weight": 0.25,
              "weighted_score": 0.2033571428571429
            }
          },
          "contribution_percentages": {
            "sparse": 13.919527694234413,
            "graph": 86.08047230576558
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.23624073777708843,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.30711295911021497
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.30711295911021497
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3378242550212365
            }
          },
          "combined_score": 0.3378242550212365
        }
      },
      "similarity": 0.3378242550212365
    },
    {
      "metadata": {
        "doc_id": "CWE-170",
        "name": "Improper Null Termination",
        "type": "Base",
        "original_content": "The product does not terminate or incorrectly terminates a string or array with a null character or equivalent terminator.",
        "relationships": [],
        "original_sparse_score": 110.48161474989935,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 110.48161474989935,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.08838529179991948,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.03535411671996779,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 110.48161474989935,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.08838529179991948,
              "weight": 0.4,
              "weighted_score": 0.03535411671996779
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 4.329000000000001,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 15.19459927586772,
            "graph": 84.80540072413227
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.23267554529139642,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3024782088788154
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3024782088788154
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.33272602976669696
            }
          },
          "combined_score": 0.33272602976669696
        }
      },
      "similarity": 0.33272602976669696
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 176.85698729466145,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5405241294277661,
            "sparse": 176.85698729466145
          },
          "normalized_scores": {
            "dense": 0.5405241294277661,
            "sparse": 0.14148558983572915
          },
          "weighted_scores": {
            "dense": 0.18918344529971812,
            "sparse": 0.056594235934291665
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5405241294277661,
              "query_max": 0.5405241294277661,
              "query_min": 0.4744207789113783,
              "normalized_score": 0.5405241294277661,
              "weight": 0.35,
              "weighted_score": 0.18918344529971812
            },
            "sparse": {
              "raw_score": 176.85698729466145,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.14148558983572915,
              "weight": 0.4,
              "weighted_score": 0.056594235934291665
            }
          },
          "contribution_percentages": {
            "dense": 76.97340309740852,
            "sparse": 23.026596902591486
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.24577768123400978,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.29493321748081175
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.29493321748081175
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.324426539228893
            }
          },
          "combined_score": 0.324426539228893
        }
      },
      "similarity": 0.324426539228893
    },
    {
      "metadata": {
        "doc_id": "CWE-770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [],
        "original_sparse_score": 109.76097781390135,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 109.76097781390135,
            "graph": 2.1112
          },
          "normalized_scores": {
            "sparse": 0.08780878225112108,
            "graph": 0.7540000000000001
          },
          "weighted_scores": {
            "sparse": 0.035123512900448434,
            "graph": 0.18850000000000003
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 109.76097781390135,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.08780878225112108,
              "weight": 0.4,
              "weighted_score": 0.035123512900448434
            },
            "graph": {
              "raw_score": 2.1112,
              "query_max": 4.329000000000001,
              "query_min": 1.6848000000000003,
              "normalized_score": 0.7540000000000001,
              "weight": 0.25,
              "weighted_score": 0.18850000000000003
            }
          },
          "contribution_percentages": {
            "sparse": 15.706538388959364,
            "graph": 84.29346161104063
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.22362351290044846,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.290710566770583
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.290710566770583
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3197816234476413
            }
          },
          "combined_score": 0.3197816234476413
        }
      },
      "similarity": 0.3197816234476413
    },
    {
      "metadata": {
        "doc_id": "CWE-476",
        "name": "NULL Pointer Dereference",
        "type": "Base",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "relationships": [],
        "original_sparse_score": 120.7661672318499,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4829724768599921,
            "sparse": 120.7661672318499
          },
          "normalized_scores": {
            "dense": 0.4829724768599921,
            "sparse": 0.09661293378547993
          },
          "weighted_scores": {
            "dense": 0.16904036690099722,
            "sparse": 0.03864517351419197
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4829724768599921,
              "query_max": 0.5405241294277661,
              "query_min": 0.4744207789113783,
              "normalized_score": 0.4829724768599921,
              "weight": 0.35,
              "weighted_score": 0.16904036690099722
            },
            "sparse": {
              "raw_score": 120.7661672318499,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.09661293378547993,
              "weight": 0.4,
              "weighted_score": 0.03864517351419197
            }
          },
          "contribution_percentages": {
            "dense": 81.39245831128375,
            "sparse": 18.607541688716253
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2076855404151892,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.26999120253974596
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.26999120253974596
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.29699032279372056
            }
          },
          "combined_score": 0.29699032279372056
        }
      },
      "similarity": 0.29699032279372056
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 116.8651269395335,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.48618965883486726,
            "sparse": 116.8651269395335
          },
          "normalized_scores": {
            "dense": 0.48618965883486726,
            "sparse": 0.0934921015516268
          },
          "weighted_scores": {
            "dense": 0.17016638059220354,
            "sparse": 0.03739684062065072
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.48618965883486726,
              "query_max": 0.5405241294277661,
              "query_min": 0.4744207789113783,
              "normalized_score": 0.48618965883486726,
              "weight": 0.35,
              "weighted_score": 0.17016638059220354
            },
            "sparse": {
              "raw_score": 116.8651269395335,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.0934921015516268,
              "weight": 0.4,
              "weighted_score": 0.03739684062065072
            }
          },
          "contribution_percentages": {
            "dense": 81.9829156619705,
            "sparse": 18.017084338029516
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.20756322121285425,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2698321875767105
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2698321875767105
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2968154063343816
            }
          },
          "combined_score": 0.2968154063343816
        }
      },
      "similarity": 0.2968154063343816
    },
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 108.25305330579305,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.47945260482761526,
            "sparse": 108.25305330579305
          },
          "normalized_scores": {
            "dense": 0.47945260482761526,
            "sparse": 0.08660244264463443
          },
          "weighted_scores": {
            "dense": 0.16780841168966534,
            "sparse": 0.034640977057853774
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.47945260482761526,
              "query_max": 0.5405241294277661,
              "query_min": 0.4744207789113783,
              "normalized_score": 0.47945260482761526,
              "weight": 0.35,
              "weighted_score": 0.16780841168966534
            },
            "sparse": {
              "raw_score": 108.25305330579305,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.08660244264463443,
              "weight": 0.4,
              "weighted_score": 0.034640977057853774
            }
          },
          "contribution_percentages": {
            "dense": 82.8890680914549,
            "sparse": 17.11093190854511
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2024493887475191,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.26318420537177484
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.26318420537177484
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.28950262590895237
            }
          },
          "combined_score": 0.28950262590895237
        }
      },
      "similarity": 0.28950262590895237
    },
    {
      "metadata": {
        "doc_id": "CWE-130",
        "name": "Improper Handling of Length Parameter Inconsistency",
        "type": "Base",
        "original_content": "The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.",
        "relationships": [],
        "original_sparse_score": 106.11439015400025,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.47953825508221115,
            "sparse": 106.11439015400025
          },
          "normalized_scores": {
            "dense": 0.47953825508221115,
            "sparse": 0.0848915121232002
          },
          "weighted_scores": {
            "dense": 0.1678383892787739,
            "sparse": 0.033956604849280085
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.47953825508221115,
              "query_max": 0.5405241294277661,
              "query_min": 0.4744207789113783,
              "normalized_score": 0.47953825508221115,
              "weight": 0.35,
              "weighted_score": 0.1678383892787739
            },
            "sparse": {
              "raw_score": 106.11439015400025,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.0848915121232002,
              "weight": 0.4,
              "weighted_score": 0.033956604849280085
            }
          },
          "contribution_percentages": {
            "dense": 83.17272190224298,
            "sparse": 16.827278097757016
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.201794994128054,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2623334923664702
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2623334923664702
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.28856684160311724
            }
          },
          "combined_score": 0.28856684160311724
        }
      },
      "similarity": 0.28856684160311724
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 114.5879733698553,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.49174329124803884,
            "sparse": 114.5879733698553
          },
          "normalized_scores": {
            "dense": 0.49174329124803884,
            "sparse": 0.09167037869588425
          },
          "weighted_scores": {
            "dense": 0.1721101519368136,
            "sparse": 0.0366681514783537
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.49174329124803884,
              "query_max": 0.5405241294277661,
              "query_min": 0.4744207789113783,
              "normalized_score": 0.49174329124803884,
              "weight": 0.35,
              "weighted_score": 0.1721101519368136
            },
            "sparse": {
              "raw_score": 114.5879733698553,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.09167037869588425,
              "weight": 0.4,
              "weighted_score": 0.0366681514783537
            }
          },
          "contribution_percentages": {
            "dense": 82.4367997638926,
            "sparse": 17.563200236107406
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2087783034151673,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.2505339640982007
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2505339640982007
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.2755873605080208
            }
          },
          "combined_score": 0.2755873605080208
        }
      },
      "similarity": 0.2755873605080208
    },
    {
      "metadata": {
        "doc_id": "CWE-681",
        "name": "Incorrect Conversion between Numeric Types",
        "type": "Base",
        "original_content": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
        "relationships": [],
        "original_sparse_score": 122.19481640830142,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 122.19481640830142
          },
          "normalized_scores": {
            "sparse": 0.09775585312664113
          },
          "weighted_scores": {
            "sparse": 0.03910234125065645
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 122.19481640830142,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.09775585312664113,
              "weight": 0.4,
              "weighted_score": 0.03910234125065645
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.03910234125065645,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.05083304362585339
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.05083304362585339
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.05591634798843873
            }
          },
          "combined_score": 0.05591634798843873
        }
      },
      "similarity": 0.05591634798843873
    },
    {
      "metadata": {
        "doc_id": "CWE-197",
        "name": "Numeric Truncation Error",
        "type": "Base",
        "original_content": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
        "relationships": [],
        "original_sparse_score": 107.98896386284497,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 107.98896386284497
          },
          "normalized_scores": {
            "sparse": 0.08639117109027597
          },
          "weighted_scores": {
            "sparse": 0.03455646843611039
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 107.98896386284497,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.08639117109027597,
              "weight": 0.4,
              "weighted_score": 0.03455646843611039
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.03455646843611039,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.04492340896694351
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04492340896694351
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.049415749863637864
            }
          },
          "combined_score": 0.049415749863637864
        }
      },
      "similarity": 0.049415749863637864
    },
    {
      "metadata": {
        "doc_id": "CWE-195",
        "name": "Signed to Unsigned Conversion Error",
        "type": "Variant",
        "original_content": "The product uses a signed primitive and performs a cast to an unsigned primitive, which can produce an unexpected value if the value of the signed primitive can not be represented using an unsigned primitive.",
        "relationships": [],
        "original_sparse_score": 112.00173253919745,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 112.00173253919745
          },
          "normalized_scores": {
            "sparse": 0.08960138603135796
          },
          "weighted_scores": {
            "sparse": 0.035840554412543184
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 112.00173253919745,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.08960138603135796,
              "weight": 0.4,
              "weighted_score": 0.035840554412543184
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.035840554412543184,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.04300866529505182
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.04300866529505182
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.047309531824557
            }
          },
          "combined_score": 0.047309531824557
        }
      },
      "similarity": 0.047309531824557
    },
    {
      "metadata": {
        "doc_id": "CWE-415",
        "name": "Double Free",
        "type": "Variant",
        "original_content": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
        "relationships": [],
        "original_sparse_score": 103.5640590960984,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 103.5640590960984
          },
          "normalized_scores": {
            "sparse": 0.08285124727687872
          },
          "weighted_scores": {
            "sparse": 0.033140498910751486
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 103.5640590960984,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.08285124727687872,
              "weight": 0.4,
              "weighted_score": 0.033140498910751486
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.033140498910751486,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.03976859869290178
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.03976859869290178
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.04374545856219196
            }
          },
          "combined_score": 0.04374545856219196
        }
      },
      "similarity": 0.04374545856219196
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 106.46723573228141,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 106.46723573228141
          },
          "normalized_scores": {
            "sparse": 0.08517378858582512
          },
          "weighted_scores": {
            "sparse": 0.03406951543433005
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 106.46723573228141,
              "query_max": 176.85698729466145,
              "query_min": 102.76123412482977,
              "normalized_score": 0.08517378858582512,
              "weight": 0.4,
              "weighted_score": 0.03406951543433005
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.03406951543433005,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.027255612347464042
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.027255612347464042
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.021804489877971234
            }
          },
          "combined_score": 0.021804489877971234
        }
      },
      "similarity": 0.021804489877971234
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-122",
      "CWE-787",
      "CWE-125"
    ],
    "critic_additional": [
      "CWE-190",
      "CWE-770",
      "CWE-193",
      "CWE-1284"
    ]
  }
}