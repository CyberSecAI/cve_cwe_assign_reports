{
  "cve_id": "CVE-2022-47945",
  "description": "ThinkPHP Framework before 6.0.14 allows local file inclusion via the lang parameter when the language pack feature is enabled (lang_switch_on=true). An unauthenticated and remote attacker can exploit this to execute arbitrary operating system commands, as demonstrated by including pearcmd.php.",
  "key_phrases": {
    "rootcause": "improper input validation",
    "weakness": "local file inclusion",
    "impact": "arbitrary code execution",
    "vector": "lang parameter",
    "attacker": "unauthenticated remote attacker",
    "product": "ThinkPHP Framework",
    "version": "before 6.0.14",
    "component": ""
  },
  "reference_content": "Based on the provided content, here's an analysis of the vulnerability:\n\n**Root Cause:**\nThe vulnerability stems from insufficient sanitization of user-provided input used to determine the language pack to load. Specifically, the `detect()` function in `src/think/Lang.php` and `src/think/middleware/LoadLangPack.php` retrieves the language setting from GET parameters, HTTP headers, or cookies without proper validation. This allows an attacker to inject directory traversal sequences within the language parameter.\n\n**Weaknesses/Vulnerabilities:**\n- **Directory Traversal:** The lack of sanitization allows for path traversal using sequences like `../`, enabling the attacker to access files outside the intended language directory.\n- **Unrestricted File Inclusion:** The application uses the attacker-controlled, traversed path to load language files via `include` or `require` in `Lang.php` and `LoadLangPack.php`.\n- **Remote Code Execution (RCE):** By combining directory traversal with file inclusion, and including the `pearcmd` file which is known to be exploitable, the attacker can execute arbitrary PHP code.\n\n**Impact of Exploitation:**\nSuccessful exploitation of this vulnerability allows an attacker to achieve Remote Code Execution (RCE) on the server. This can lead to:\n- Full control of the webserver\n- Data exfiltration\n- Defacement\n- Further attacks within the internal network.\n\n**Attack Vectors:**\n- HTTP GET parameter: `/?lang=../../../../../public/index`\n- HTTP Header: Setting the `think-lang` header.\n- HTTP Cookie: Setting the `think_lang` cookie.\n\n**Required Attacker Capabilities/Position:**\n- The attacker needs to be able to send HTTP requests to the vulnerable application.\n- The target application must have the multi-language feature enabled using the `\\think\\middleware\\LoadLangPack::class` middleware in `app/middleware.php` for ThinkPHP 6 or `lang_switch_on` set to `true` in `config/app.php` or `application/config.php` for ThinkPHP 5.\n- No authentication is needed, making the vulnerability easily exploitable for any user.\n\n**Additional Notes:**\n\n- The provided content describes the vulnerability in ThinkPHP versions 5.x and 6.0.1 to 6.0.13.\n- The vulnerability was patched in commit `c4acb8b4001b98a0078eda25840d33e295a7f099`\n- The attacker uses the `pearcmd` trick to achieve RCE by including a specially crafted pear configuration file through directory traversal.\n- The fix includes sanitizing user-provided language inputs, preventing directory traversal and subsequent file inclusion.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                                                       | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :-------------------------------- |\n| CWE-98    | Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion') | 0.90       | Variant                 | Allowed                        | Acceptable-Use                   |\n| CWE-22    | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')                                           | 0.75       | Base                    | Allowed                        | Acceptable-Use                   |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability description clearly states that the ThinkPHP Framework is susceptible to **local file inclusion** via the `lang` parameter. This is possible because of **improper input validation** on the `lang` parameter when the language pack feature is enabled. The CVE Reference Links Content Summary provides additional details, stating that the vulnerability stems from insufficient sanitization of user-provided input, enabling **directory traversal** using sequences like `../`. This aligns directly with CWE-98, which describes **improper control of filenames for include/require statements in PHP programs**, allowing attackers to include arbitrary files. The inclusion of `pearcmd.php` to achieve remote code execution further supports this classification. CWE-98 is a Variant of a more general weakness, making it specific and appropriate.\n  - *Relationship Analysis:* CWE-98 does not have any direct relationships.\n\n- **Analysis and Justification:**\n  - *Explanation:* The content summary mentions that the root cause is **insufficient sanitization** of user-provided input, allowing **directory traversal**. This directly relates to CWE-22 (Improper Limitation of a Pathname to a Restricted Directory). The attacker can use `../` sequences to access files outside the intended language directory.\n  - *Relationship Analysis:* CWE-22 is a base level CWE and parent of CWE-23 (Relative Path Traversal). It is also child of CWE-668 (Exposure of Resource to Wrong Sphere).\n\n- **Confidence Score:**\n  - Confidence: 0.90 (High evidence from technical description and CVE reference materials for CWE-98)\n  - Confidence: 0.75 (Medium evidence from technical description and CVE reference materials for CWE-22)",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                                                       | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :-------------------------------- |\n| CWE-98    | Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion') | 0.90       | Variant                 | Allowed                        | Acceptable-Use                   |\n| CWE-22    | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')                                           | 0.75       | Base                    | Allowed                        | Acceptable-Use                   |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability description clearly states that the ThinkPHP Framework is susceptible to **local file inclusion** via the `lang` parameter. This is possible because of **improper input validation** on the `lang` parameter when the language pack feature is enabled. The CVE Reference Links Content Summary provides additional details, stating that the vulnerability stems from insufficient sanitization of user-provided input, enabling **directory traversal** using sequences like `../`. This aligns directly with CWE-98, which describes **improper control of filenames for include/require statements in PHP programs**, allowing attackers to include arbitrary files. The inclusion of `pearcmd.php` to achieve remote code execution further supports this classification. CWE-98 is a Variant of a more general weakness, making it specific and appropriate.\n  - *Relationship Analysis:* CWE-98 does not have any direct relationships.\n\n- **Analysis and Justification:**\n  - *Explanation:* The content summary mentions that the root cause is **insufficient sanitization** of user-provided input, allowing **directory traversal**. This directly relates to CWE-22 (Improper Limitation of a Pathname to a Restricted Directory). The attacker can use `../` sequences to access files outside the intended language directory.\n  - *Relationship Analysis:* CWE-22 is a base level CWE and parent of CWE-23 (Relative Path Traversal). It is also child of CWE-668 (Exposure of Resource to Wrong Sphere).\n\n- **Confidence Score:**\n  - Confidence: 0.90 (High evidence from technical description and CVE reference materials for CWE-98)\n  - Confidence: 0.75 (Medium evidence from technical description and CVE reference materials for CWE-22)",
  "criticism": "Okay, I've reviewed the provided analysis against the full CWE specifications. Here's my critique:\n\n**Overall Assessment:**\n\nThe analysis is generally good and identifies the core weaknesses correctly. The justification for the CWE mappings is clear and well-reasoned, referencing specific parts of the provided information and aligning them with the CWE descriptions. However, the analysis could be improved by considering additional related CWEs and by providing more specific mitigation advice based on the CWE specifications. The confidence score for CWE-22 could be higher with more explicit evidence.\n\n**Specific Comments:**\n\n*   **CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')**\n    *   **Strength:** Excellent choice. The analysis clearly and accurately links the vulnerability description (local file inclusion via the `lang` parameter, improper input validation, ability to include `pearcmd.php` for RCE) to the CWE-98 description and potential consequences.\n    *   **Mapping Guidance:** The analysis correctly identifies CWE-98 as a Variant, which aligns with the CWE's mapping guidance for finding root causes of vulnerabilities.\n    *   **Relationship Analysis:** The analysis should mention that CWE-98 can overlap with CWE-22. This overlap is present in this specific vulnerability, and acknowledging it would demonstrate a thorough understanding. Also, CWE-98 can be a result of CWE-73.\n    *   **Potential Mitigations:** The analysis should mention or allude to a specific mitigation of creating a mapping from a set of fixed input values to the actual filenames/URLs, then rejecting all other inputs.\n\n*   **CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')**\n    *   **Strength:** A good identification. The justification is solid, linking the insufficient sanitization and resulting directory traversal to the CWE description. The example provided in the analysis, `/?lang=../../../../../public/index`, clearly demonstrates path traversal.\n    *   **Mapping Guidance:** The analysis correctly classifies CWE-22 as a Base level CWE.\n    *   **Relationship Analysis:** The analysis of parent and child CWEs is correctly identified.\n    *   **Potential Mitigations:** The analysis should highlight that using a built-in path canonicalization function is a strong mitigation. The use of an allowlist strategy is also a strong recommendation to include.\n    *   **Confidence Score:** Considering the solid match, I would increase the confidence to 0.85 or 0.90\n\n**Additional CWE Considerations:**\n\n*   **CWE-184: Incomplete List of Disallowed Inputs:** While not the primary weakness, it could be argued that the input validation attempted (if any) used a blacklist of disallowed characters that was incomplete, allowing `../` sequences. If there was a specific blacklist of characters that was being used to sanitize the input, this could be an additional, chained CWE. If it is a case that there is no sanitization, then this CWE is not applicable.\n*   **CWE-73: External Control of File Name or Path:** The `lang` parameter directly controls the filename to be included, making CWE-73 relevant.\n*   **CWE-434: Unrestricted Upload of File with Dangerous Type:** This CWE isn't directly related because the vulnerability involves local file *inclusion*, not uploading. However, the vulnerability could be compounded if attackers had previously uploaded dangerous files to the server.\n*   **CWE-94: Improper Control of Generation of Code ('Code Injection'):** This CWE is related because the attacker can inject code by including the `pearcmd.php` file. The successful inclusion of this file leads to code execution, making CWE-94 a relevant, secondary CWE.\n*   **CWE-668: Exposure of Resource to Wrong Sphere:** The use of this CWE is discouraged, but could be included as the directory traversal gives access to sensitive resources that should not be accessible.\n*  **CWE-706: Use of Incorrectly-Resolved Name or Reference:** This CWE is a parent of both CWE-98 and CWE-22, and can be a general starting point when mapping to a vulnerability.\n\n**Recommendations:**\n\n1.  **Increase Confidence:** Consider raising the confidence score for CWE-22, as the evidence is strong.\n2.  **Add Relationship Analysis:** Add to the CWE-98 analysis that it can overlap with CWE-22 and CWE-73.\n3.  **Provide More Specific Mitigation Advice:** Tailor the mitigation advice more closely to the provided CWE specifications.  For example, emphasize canonicalization functions for CWE-22, and creating a mapping for CWE-98.\n4.  **Consider Chained CWEs:** Briefly discuss the possibility of chained CWEs like CWE-184, CWE-73 and CWE-94 to demonstrate a comprehensive understanding of potential attack vectors.\n5.  **Review CWE-668:** Justify the use of CWE-668 or remove it, as the use of it is discouraged.\n6. **Consider CWE-706:** Justify using lower levels of the CWE as opposed to the parent, CWE-706.\n\nBy incorporating these suggestions, the analysis would be even more thorough and valuable.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :-------------------------------- |\n| CWE-98 | Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion') | 0.95 | Variant | Allowed | Acceptable-Use |\n| CWE-22 | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') | 0.90 | Base | Allowed | Acceptable-Use |\n| CWE-73 | External Control of File Name or Path | 0.70 | Base | Allowed | Acceptable-Use |\n| CWE-94 | Improper Control of Generation of Code ('Code Injection') | 0.60 | Base | Allowed-with-Review | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary vulnerability is **CWE-98 (Improper Control of Filename for Include/Require Statement in PHP Program)**, a Variant-level weakness, because the `lang` parameter directly controls the file included in the PHP application. **CWE-22 (Improper Limitation of a Pathname to a Restricted Directory)** is also present because the attacker uses directory traversal to access files outside the intended directory. **CWE-73 (External Control of File Name or Path)** further describes how user input influences file system operations and can be a root cause of **CWE-98**. Finally, **CWE-94 (Improper Control of Generation of Code)** arises from the successful inclusion of `pearcmd.php`, which leads to code execution.\n\n```mermaid\ngraph TD\n    cwe98[\"CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')\"]\n    cwe22[\"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\"]\n    cwe73[\"CWE-73: External Control of File Name or Path\"]\n    cwe94[\"CWE-94: Improper Control of Generation of Code ('Code Injection')\"]\n\n    cwe98 -->|CANFOLLOW| cwe94\n    cwe22 -->|CANPRECEDE| cwe98\n    cwe73 -->|CANPRECEDE| cwe98\n    cwe73 -->|CANPRECEDE| cwe22\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n\n    class cwe98 primary\n    class cwe22,cwe73,cwe94 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with user-supplied input to the `lang` parameter.\n1.  **Root Cause:** The application fails to adequately sanitize the `lang` parameter (**CWE-73**).\n2.  This allows an attacker to control the filename used in an include/require statement (**CWE-98**).\n3.  The attacker leverages this control to perform path traversal (**CWE-22**).\n4.  By including a file like `pearcmd.php`, the attacker achieves arbitrary code execution (**CWE-94**).\n    -   Prerequisite: `lang_switch_on=true` must be enabled.\n    -   Consequence: Arbitrary operating system commands can be executed.\n\n## Summary of Analysis\nBased on the vulnerability description, the primary **WEAKNESS** is **CWE-98 (Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion'))**. The description explicitly mentions \"local file inclusion via the `lang` parameter\" which aligns perfectly with **CWE-98**. The ability to include `pearcmd.php` further confirms this, as it demonstrates **improper control of filenames** leading to code execution. The evidence is strong, justifying a confidence score of 0.95.\n\nThe criticism correctly pointed out the overlap between **CWE-98** and **CWE-22**, as well as the relationship to **CWE-73**. The inclusion of **CWE-22 (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'))** is justified because the attacker leverages directory traversal using `../` sequences. This is a direct consequence of **insufficient sanitization**, as stated in the content summary: \"insufficient sanitization of user-provided input, enabling directory traversal using sequences like `../`\". The confidence score is increased to 0.90.\n\nThe addition of **CWE-73 (External Control of File Name or Path)** highlights the **ROOTCAUSE**: user-controlled input directly influencing file system operations. The `lang` parameter controls the filename, making **CWE-73** a necessary precursor to **CWE-98**. The confidence here is a bit lower, 0.70, as its role is more foundational.\n\nFinally, **CWE-94 (Improper Control of Generation of Code ('Code Injection'))** is included because the successful inclusion of `pearcmd.php` results in code execution. However, this is a consequence of the file inclusion, not the primary weakness. Confidence here is at 0.60.\n\nThe relationships between these CWEs demonstrate a clear attack chain: **CWE-73** allows the attacker to control the filename (**CWE-98**), which leads to directory traversal (**CWE-22**) and ultimately code execution (**CWE-94**).\n\nThe selection of these CWEs at the Base and Variant levels provides optimal specificity. Higher-level CWEs like **CWE-668** or **CWE-706** would be too abstract and less informative.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-184",
        "name": "Incomplete List of Disallowed Inputs",
        "type": "Base",
        "original_content": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.",
        "relationships": [],
        "original_sparse_score": 384.94106794378627,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.510239048407878,
            "sparse": 384.94106794378627,
            "graph": 2.822453901685204
          },
          "normalized_scores": {
            "dense": 0.510239048407878,
            "sparse": 0.307952854355029,
            "graph": 1.0
          },
          "weighted_scores": {
            "dense": 0.1785836669427573,
            "sparse": 0.12318114174201161,
            "graph": 0.25
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.510239048407878,
              "query_max": 0.6454956982666876,
              "query_min": 0.5084616801584794,
              "normalized_score": 0.510239048407878,
              "weight": 0.35,
              "weighted_score": 0.1785836669427573
            },
            "sparse": {
              "raw_score": 384.94106794378627,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.307952854355029,
              "weight": 0.4,
              "weighted_score": 0.12318114174201161
            },
            "graph": {
              "raw_score": 2.822453901685204,
              "query_max": 2.822453901685204,
              "query_min": 1.5552389003106262,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "dense": 32.365903756791546,
            "sparse": 22.32493624151858,
            "graph": 45.30916000168988
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5517648086847688,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7172942512901995
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7172942512901995
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7890236764192196
            }
          },
          "combined_score": 0.7890236764192196
        }
      },
      "similarity": 0.7890236764192196
    },
    {
      "metadata": {
        "doc_id": "CWE-78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 373.5718571735901,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5220665927406514,
            "sparse": 373.5718571735901,
            "graph": 1.9699383386300418
          },
          "normalized_scores": {
            "dense": 0.5220665927406514,
            "sparse": 0.2988574857388721,
            "graph": 0.7035494066535863
          },
          "weighted_scores": {
            "dense": 0.18272330745922796,
            "sparse": 0.11954299429554885,
            "graph": 0.17588735166339658
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5220665927406514,
              "query_max": 0.6454956982666876,
              "query_min": 0.5084616801584794,
              "normalized_score": 0.5220665927406514,
              "weight": 0.35,
              "weighted_score": 0.18272330745922796
            },
            "sparse": {
              "raw_score": 373.5718571735901,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.2988574857388721,
              "weight": 0.4,
              "weighted_score": 0.11954299429554885
            },
            "graph": {
              "raw_score": 1.9699383386300418,
              "query_max": 2.822453901685204,
              "query_min": 1.5552389003106262,
              "normalized_score": 0.7035494066535863,
              "weight": 0.25,
              "weighted_score": 0.17588735166339658
            }
          },
          "contribution_percentages": {
            "dense": 38.214349331641664,
            "sparse": 25.000958047893757,
            "graph": 36.784692620464575
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4781536534181734,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6215997494436254
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6215997494436254
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6837597243879879
            }
          },
          "combined_score": 0.6837597243879879
        }
      },
      "similarity": 0.6837597243879879
    },
    {
      "metadata": {
        "doc_id": "CWE-88",
        "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
        "type": "Base",
        "original_content": "The product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.",
        "relationships": [],
        "original_sparse_score": 388.9382682159411,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5209946171331855,
            "sparse": 388.9382682159411,
            "graph": 1.8935430229487458
          },
          "normalized_scores": {
            "dense": 0.5209946171331855,
            "sparse": 0.3111506145727529,
            "graph": 0.6762653653388379
          },
          "weighted_scores": {
            "dense": 0.1823481159966149,
            "sparse": 0.12446024582910116,
            "graph": 0.16906634133470946
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5209946171331855,
              "query_max": 0.6454956982666876,
              "query_min": 0.5084616801584794,
              "normalized_score": 0.5209946171331855,
              "weight": 0.35,
              "weighted_score": 0.1823481159966149
            },
            "sparse": {
              "raw_score": 388.9382682159411,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.3111506145727529,
              "weight": 0.4,
              "weighted_score": 0.12446024582910116
            },
            "graph": {
              "raw_score": 1.8935430229487458,
              "query_max": 2.822453901685204,
              "query_min": 1.5552389003106262,
              "normalized_score": 0.6762653653388379,
              "weight": 0.25,
              "weighted_score": 0.16906634133470946
            }
          },
          "contribution_percentages": {
            "dense": 38.318514261335345,
            "sparse": 26.15399494920062,
            "graph": 35.527490789464025
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.47587470316042557,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6186371141085533
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6186371141085533
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6805008255194086
            }
          },
          "combined_score": 0.6805008255194086
        }
      },
      "similarity": 0.6805008255194086
    },
    {
      "metadata": {
        "doc_id": "CWE-98",
        "name": "Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
        "type": "Variant",
        "original_content": "The PHP application receives input from an upstream component, but it does not restrict or incorrectly restricts the input before its usage in \"require,\" \"include,\" or similar functions.",
        "relationships": [],
        "original_sparse_score": 208.73462511605462,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6454956982666876,
            "sparse": 208.73462511605462,
            "graph": 2.2203462576333535
          },
          "normalized_scores": {
            "dense": 0.6454956982666876,
            "sparse": 0.1669877000928437,
            "graph": 0.7929808062976262
          },
          "weighted_scores": {
            "dense": 0.22592349439334064,
            "sparse": 0.06679508003713748,
            "graph": 0.19824520157440656
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6454956982666876,
              "query_max": 0.6454956982666876,
              "query_min": 0.5084616801584794,
              "normalized_score": 0.6454956982666876,
              "weight": 0.35,
              "weighted_score": 0.22592349439334064
            },
            "sparse": {
              "raw_score": 208.73462511605462,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.1669877000928437,
              "weight": 0.4,
              "weighted_score": 0.06679508003713748
            },
            "graph": {
              "raw_score": 2.2203462576333535,
              "query_max": 2.822453901685204,
              "query_min": 1.5552389003106262,
              "normalized_score": 0.7929808062976262,
              "weight": 0.25,
              "weighted_score": 0.19824520157440656
            }
          },
          "contribution_percentages": {
            "dense": 46.01632654688824,
            "sparse": 13.604889668371975,
            "graph": 40.37878378473979
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.49096377600488467,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.5891565312058615
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5891565312058615
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6480721843264478
            }
          },
          "combined_score": 0.6480721843264478
        }
      },
      "similarity": 0.6480721843264478
    },
    {
      "metadata": {
        "doc_id": "CWE-434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "type": "Base",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "relationships": [],
        "original_sparse_score": 334.7465548815684,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5378706364579074,
            "sparse": 334.7465548815684,
            "graph": 1.5620672011141292
          },
          "normalized_scores": {
            "dense": 0.5378706364579074,
            "sparse": 0.2677972439052547,
            "graph": 0.5578811432550462
          },
          "weighted_scores": {
            "dense": 0.18825472276026758,
            "sparse": 0.1071188975621019,
            "graph": 0.13947028581376156
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5378706364579074,
              "query_max": 0.6454956982666876,
              "query_min": 0.5084616801584794,
              "normalized_score": 0.5378706364579074,
              "weight": 0.35,
              "weighted_score": 0.18825472276026758
            },
            "sparse": {
              "raw_score": 334.7465548815684,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.2677972439052547,
              "weight": 0.4,
              "weighted_score": 0.1071188975621019
            },
            "graph": {
              "raw_score": 1.5620672011141292,
              "query_max": 2.822453901685204,
              "query_min": 1.5552389003106262,
              "normalized_score": 0.5578811432550462,
              "weight": 0.25,
              "weighted_score": 0.13947028581376156
            }
          },
          "contribution_percentages": {
            "dense": 43.29248268258659,
            "sparse": 24.63387345448221,
            "graph": 32.07364386293122
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.434843906136131,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5652970779769703
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5652970779769703
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6218267857746673
            }
          },
          "combined_score": 0.6218267857746673
        }
      },
      "similarity": 0.6218267857746673
    },
    {
      "metadata": {
        "doc_id": "CWE-24",
        "name": "Path Traversal: '../filedir'",
        "type": "Variant",
        "original_content": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"../\" sequences that can resolve to a location that is outside of that directory.",
        "relationships": [],
        "original_sparse_score": 679.0386770372087,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5700625796385984,
            "sparse": 679.0386770372087
          },
          "normalized_scores": {
            "dense": 0.5700625796385984,
            "sparse": 0.5432309416297669
          },
          "weighted_scores": {
            "dense": 0.19952190287350943,
            "sparse": 0.2172923766519068
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5700625796385984,
              "query_max": 0.6454956982666876,
              "query_min": 0.5084616801584794,
              "normalized_score": 0.5700625796385984,
              "weight": 0.35,
              "weighted_score": 0.19952190287350943
            },
            "sparse": {
              "raw_score": 679.0386770372087,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.5432309416297669,
              "weight": 0.4,
              "weighted_score": 0.2172923766519068
            }
          },
          "contribution_percentages": {
            "dense": 47.86829834637254,
            "sparse": 52.13170165362746
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4168142795254162,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.5001771354304995
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5001771354304995
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5501948489735494
            }
          },
          "combined_score": 0.5501948489735494
        }
      },
      "similarity": 0.5501948489735494
    },
    {
      "metadata": {
        "doc_id": "CWE-94",
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
        "relationships": [],
        "original_sparse_score": 364.9078489571469,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
          "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
          "reasons": [
            "Frequent Misuse",
            "Frequent Misinterpretation"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 364.9078489571469,
            "graph": 2.7196000000000002
          },
          "normalized_scores": {
            "sparse": 0.2919262791657175,
            "graph": 0.9712857142857144
          },
          "weighted_scores": {
            "sparse": 0.116770511666287,
            "graph": 0.2428214285714286
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 364.9078489571469,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.2919262791657175,
              "weight": 0.4,
              "weighted_score": 0.116770511666287
            },
            "graph": {
              "raw_score": 2.7196000000000002,
              "query_max": 2.822453901685204,
              "query_min": 1.5552389003106262,
              "normalized_score": 0.9712857142857144,
              "weight": 0.25,
              "weighted_score": 0.2428214285714286
            }
          },
          "contribution_percentages": {
            "sparse": 32.47306143432844,
            "graph": 67.52693856567156
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.3595919402377156,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4674695223090303
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4674695223090303
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
                "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
                "reasons": [
                  "Frequent Misuse",
                  "Frequent Misinterpretation"
                ]
              },
              "score_after": 0.49084299842448187
            }
          },
          "combined_score": 0.49084299842448187
        }
      },
      "similarity": 0.49084299842448187
    },
    {
      "metadata": {
        "doc_id": "CWE-22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "type": "Base",
        "original_content": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
        "relationships": [],
        "original_sparse_score": 394.88026425680494,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 394.88026425680494,
            "graph": 2.407683821733419
          },
          "normalized_scores": {
            "sparse": 0.31590421140544395,
            "graph": 0.8598870791905069
          },
          "weighted_scores": {
            "sparse": 0.12636168456217758,
            "graph": 0.21497176979762672
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 394.88026425680494,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.31590421140544395,
              "weight": 0.4,
              "weighted_score": 0.12636168456217758
            },
            "graph": {
              "raw_score": 2.407683821733419,
              "query_max": 2.822453901685204,
              "query_min": 1.5552389003106262,
              "normalized_score": 0.8598870791905069,
              "weight": 0.25,
              "weighted_score": 0.21497176979762672
            }
          },
          "contribution_percentages": {
            "sparse": 37.02001164789959,
            "graph": 62.9799883521004
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.34133345435980433,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.44373349066774564
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.44373349066774564
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.48810683973452024
            }
          },
          "combined_score": 0.48810683973452024
        }
      },
      "similarity": 0.48810683973452024
    },
    {
      "metadata": {
        "doc_id": "CWE-1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "type": "Base",
        "original_content": "The product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine.",
        "relationships": [],
        "original_sparse_score": 348.800492210507,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5148585525866669,
            "sparse": 348.800492210507
          },
          "normalized_scores": {
            "dense": 0.5148585525866669,
            "sparse": 0.2790403937684056
          },
          "weighted_scores": {
            "dense": 0.1802004934053334,
            "sparse": 0.11161615750736226
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5148585525866669,
              "query_max": 0.6454956982666876,
              "query_min": 0.5084616801584794,
              "normalized_score": 0.5148585525866669,
              "weight": 0.35,
              "weighted_score": 0.1802004934053334
            },
            "sparse": {
              "raw_score": 348.800492210507,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.2790403937684056,
              "weight": 0.4,
              "weighted_score": 0.11161615750736226
            }
          },
          "contribution_percentages": {
            "dense": 61.7512718488586,
            "sparse": 38.24872815114141
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.29181665091269565,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.37936164618650436
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.37936164618650436
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4172978108051548
            }
          },
          "combined_score": 0.4172978108051548
        }
      },
      "similarity": 0.4172978108051548
    },
    {
      "metadata": {
        "doc_id": "CWE-79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "type": "Base",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "relationships": [],
        "original_sparse_score": 337.5601948365582,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5162134821532312,
            "sparse": 337.5601948365582
          },
          "normalized_scores": {
            "dense": 0.5162134821532312,
            "sparse": 0.2700481558692466
          },
          "weighted_scores": {
            "dense": 0.1806747187536309,
            "sparse": 0.10801926234769864
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5162134821532312,
              "query_max": 0.6454956982666876,
              "query_min": 0.5084616801584794,
              "normalized_score": 0.5162134821532312,
              "weight": 0.35,
              "weighted_score": 0.1806747187536309
            },
            "sparse": {
              "raw_score": 337.5601948365582,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.2700481558692466,
              "weight": 0.4,
              "weighted_score": 0.10801926234769864
            }
          },
          "contribution_percentages": {
            "dense": 62.58347266693286,
            "sparse": 37.41652733306714
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.28869398110132954,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.37530217543172845
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.37530217543172845
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4128323929749013
            }
          },
          "combined_score": 0.4128323929749013
        }
      },
      "similarity": 0.4128323929749013
    },
    {
      "metadata": {
        "doc_id": "CWE-89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "relationships": [],
        "original_sparse_score": 211.4984421549258,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 211.4984421549258,
            "graph": 1.7680000000000005
          },
          "normalized_scores": {
            "sparse": 0.16919875372394064,
            "graph": 0.6314285714285717
          },
          "weighted_scores": {
            "sparse": 0.06767950148957626,
            "graph": 0.15785714285714292
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 211.4984421549258,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.16919875372394064,
              "weight": 0.4,
              "weighted_score": 0.06767950148957626
            },
            "graph": {
              "raw_score": 1.7680000000000005,
              "query_max": 2.822453901685204,
              "query_min": 1.5552389003106262,
              "normalized_score": 0.6314285714285717,
              "weight": 0.25,
              "weighted_score": 0.15785714285714292
            }
          },
          "contribution_percentages": {
            "sparse": 30.008206287547694,
            "graph": 69.9917937124523
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.22553664434671916,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2931976376507349
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2931976376507349
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3225174014158084
            }
          },
          "combined_score": 0.3225174014158084
        }
      },
      "similarity": 0.3225174014158084
    },
    {
      "metadata": {
        "doc_id": "CWE-502",
        "name": "Deserialization of Untrusted Data",
        "type": "Base",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "relationships": [],
        "original_sparse_score": 398.1269339187953,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 398.1269339187953
          },
          "normalized_scores": {
            "sparse": 0.31850154713503626
          },
          "weighted_scores": {
            "sparse": 0.12740061885401452
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 398.1269339187953,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.31850154713503626,
              "weight": 0.4,
              "weighted_score": 0.12740061885401452
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.12740061885401452,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.16562080451021888
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.16562080451021888
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.18218288496124077
            }
          },
          "combined_score": 0.18218288496124077
        }
      },
      "similarity": 0.18218288496124077
    },
    {
      "metadata": {
        "doc_id": "CWE-23",
        "name": "Relative Path Traversal",
        "type": "Base",
        "original_content": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.",
        "relationships": [],
        "original_sparse_score": 380.21594019313864,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 380.21594019313864
          },
          "normalized_scores": {
            "sparse": 0.3041727521545109
          },
          "weighted_scores": {
            "sparse": 0.12166910086180437
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 380.21594019313864,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.3041727521545109,
              "weight": 0.4,
              "weighted_score": 0.12166910086180437
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.12166910086180437,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.1581698311203457
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1581698311203457
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.17398681423238027
            }
          },
          "combined_score": 0.17398681423238027
        }
      },
      "similarity": 0.17398681423238027
    },
    {
      "metadata": {
        "doc_id": "CWE-73",
        "name": "External Control of File Name or Path",
        "type": "Base",
        "original_content": "The product allows user input to control or influence paths or file names that are used in filesystem operations.",
        "relationships": [],
        "original_sparse_score": 347.6221736414012,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 347.6221736414012
          },
          "normalized_scores": {
            "sparse": 0.27809773891312095
          },
          "weighted_scores": {
            "sparse": 0.11123909556524839
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 347.6221736414012,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.27809773891312095,
              "weight": 0.4,
              "weighted_score": 0.11123909556524839
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11123909556524839,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.1446108242348229
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1446108242348229
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1590719066583052
            }
          },
          "combined_score": 0.1590719066583052
        }
      },
      "similarity": 0.1590719066583052
    },
    {
      "metadata": {
        "doc_id": "CWE-611",
        "name": "Improper Restriction of XML External Entity Reference",
        "type": "Base",
        "original_content": "The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",
        "relationships": [],
        "original_sparse_score": 347.11221422402014,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 347.11221422402014
          },
          "normalized_scores": {
            "sparse": 0.27768977137921613
          },
          "weighted_scores": {
            "sparse": 0.11107590855168646
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 347.11221422402014,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.27768977137921613,
              "weight": 0.4,
              "weighted_score": 0.11107590855168646
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11107590855168646,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.1443986811171924
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1443986811171924
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.15883854922891164
            }
          },
          "combined_score": 0.15883854922891164
        }
      },
      "similarity": 0.15883854922891164
    },
    {
      "metadata": {
        "doc_id": "CWE-306",
        "name": "Missing Authentication for Critical Function",
        "type": "Base",
        "original_content": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
        "relationships": [],
        "original_sparse_score": 336.78363235430385,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 336.78363235430385
          },
          "normalized_scores": {
            "sparse": 0.2694269058834431
          },
          "weighted_scores": {
            "sparse": 0.10777076235337724
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 336.78363235430385,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.2694269058834431,
              "weight": 0.4,
              "weighted_score": 0.10777076235337724
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10777076235337724,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.14010199105939042
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.14010199105939042
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.15411219016532948
            }
          },
          "combined_score": 0.15411219016532948
        }
      },
      "similarity": 0.15411219016532948
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 365.943556537789,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 365.943556537789
          },
          "normalized_scores": {
            "sparse": 0.2927548452302312
          },
          "weighted_scores": {
            "sparse": 0.11710193809209249
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 365.943556537789,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.2927548452302312,
              "weight": 0.4,
              "weighted_score": 0.11710193809209249
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.11710193809209249,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.09368155047367399
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.09368155047367399
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.0749452403789392
            }
          },
          "combined_score": 0.0749452403789392
        }
      },
      "similarity": 0.0749452403789392
    },
    {
      "metadata": {
        "doc_id": "CWE-287",
        "name": "Improper Authentication",
        "type": "Class",
        "original_content": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
        "relationships": [],
        "original_sparse_score": 362.1458391703895,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1390",
              "Comment": "Weak Authentication"
            },
            {
              "CweID": "306",
              "Comment": "Missing Authentication for Critical Function"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 362.1458391703895
          },
          "normalized_scores": {
            "sparse": 0.28971667133631157
          },
          "weighted_scores": {
            "sparse": 0.11588666853452463
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 362.1458391703895,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.28971667133631157,
              "weight": 0.4,
              "weighted_score": 0.11588666853452463
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.11588666853452463,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.09270933482761971
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.09270933482761971
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1390",
                    "Comment": "Weak Authentication"
                  },
                  {
                    "CweID": "306",
                    "Comment": "Missing Authentication for Critical Function"
                  }
                ]
              },
              "score_after": 0.07416746786209577
            }
          },
          "combined_score": 0.07416746786209577
        }
      },
      "similarity": 0.07416746786209577
    },
    {
      "metadata": {
        "doc_id": "CWE-138",
        "name": "Improper Neutralization of Special Elements",
        "type": "Class",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 355.9463042797943,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 355.9463042797943
          },
          "normalized_scores": {
            "sparse": 0.2847570434238354
          },
          "weighted_scores": {
            "sparse": 0.11390281736953417
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 355.9463042797943,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.2847570434238354,
              "weight": 0.4,
              "weighted_score": 0.11390281736953417
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.11390281736953417,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.09112225389562734
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.09112225389562734
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.07289780311650187
            }
          },
          "combined_score": 0.07289780311650187
        }
      },
      "similarity": 0.07289780311650187
    },
    {
      "metadata": {
        "doc_id": "CWE-116",
        "name": "Improper Encoding or Escaping of Output",
        "type": "Class",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "relationships": [],
        "original_sparse_score": 217.28535799252683,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 217.28535799252683
          },
          "normalized_scores": {
            "sparse": 0.17382828639402145
          },
          "weighted_scores": {
            "sparse": 0.06953131455760858
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 217.28535799252683,
              "query_max": 679.0386770372087,
              "query_min": 208.73462511605462,
              "normalized_score": 0.17382828639402145,
              "weight": 0.4,
              "weighted_score": 0.06953131455760858
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.06953131455760858,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.055625051646086866
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.055625051646086866
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.058406304228391215
            }
          },
          "combined_score": 0.058406304228391215
        }
      },
      "similarity": 0.058406304228391215
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-668",
      "CWE-98",
      "CWE-22",
      "CWE-23"
    ],
    "critic_additional": [
      "CWE-434",
      "CWE-706",
      "CWE-73",
      "CWE-184",
      "CWE-94"
    ]
  }
}