{
  "cve_id": "CVE-2022-33248",
  "description": "Memory corruption in User Identity Module due to integer overflow to buffer overflow when a segement is received via qmi http.",
  "key_phrases": {
    "rootcause": "integer overflow",
    "weakness": "buffer overflow",
    "impact": "",
    "vector": "qmi http",
    "attacker": "",
    "product": "",
    "version": "",
    "component": ""
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "```markdown\n# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-190 | Integer Overflow or Wraparound | 0.85 | Base | Allowed | Primary CWE. The vulnerability description explicitly mentions an **integer overflow**. |\n| CWE-122 | Heap-based Buffer Overflow | 0.75 | Variant | Allowed | Secondary CWE. The vulnerability leads to a **buffer overflow** due to the integer overflow. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The vulnerability description states a memory corruption issue in the User Identity Module, triggered by an **integer overflow** leading to a **buffer overflow** when a segment is received via qmi http. This directly aligns with CWE-190 (Integer Overflow or Wraparound) as the primary **root cause**, where a calculation results in a value exceeding the maximum representable integer. Subsequently, this **integer overflow** leads to CWE-122 (Heap-based Buffer Overflow), because the incorrect calculation of size of memory to allocate can cause less memory to be allocated than expected, leading to a **buffer overflow**.\"\n  \n  - *Relationship Analysis:* \"CWE-190 is a base level CWE, and is a parent of CWE-680 (Integer Overflow to Buffer Overflow). CWE-190 CanPrecede CWE-119 (Buffer Overflow). CWE-122 is a variant of CWE-119, specializing in heap-based overflows. The vulnerability description specifies an **integer overflow** leading directly to a **buffer overflow**, making both CWE-190 and CWE-122 relevant.\"\n\n- **Confidence Score:**  \n  - Confidence: 0.85 (The vulnerability description explicitly mentions the **integer overflow** to **buffer overflow**.)\n```",
  "analysis_with_relationships": "```markdown\n# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-190 | Integer Overflow or Wraparound | 0.85 | Base | Allowed | Primary CWE. The vulnerability description explicitly mentions an **integer overflow**. |\n| CWE-122 | Heap-based Buffer Overflow | 0.75 | Variant | Allowed | Secondary CWE. The vulnerability leads to a **buffer overflow** due to the integer overflow. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The vulnerability description states a memory corruption issue in the User Identity Module, triggered by an **integer overflow** leading to a **buffer overflow** when a segment is received via qmi http. This directly aligns with CWE-190 (Integer Overflow or Wraparound) as the primary **root cause**, where a calculation results in a value exceeding the maximum representable integer. Subsequently, this **integer overflow** leads to CWE-122 (Heap-based Buffer Overflow), because the incorrect calculation of size of memory to allocate can cause less memory to be allocated than expected, leading to a **buffer overflow**.\"\n  \n  - *Relationship Analysis:* \"CWE-190 is a base level CWE, and is a parent of CWE-680 (Integer Overflow to Buffer Overflow). CWE-190 CanPrecede CWE-119 (Buffer Overflow). CWE-122 is a variant of CWE-119, specializing in heap-based overflows. The vulnerability description specifies an **integer overflow** leading directly to a **buffer overflow**, making both CWE-190 and CWE-122 relevant.\"\n\n- **Confidence Score:**  \n  - Confidence: 0.85 (The vulnerability description explicitly mentions the **integer overflow** to **buffer overflow**.)\n```",
  "criticism": "Okay, here's a breakdown of the analysis, incorporating the full CWE specifications you provided:\n\n**Overall Assessment:**\n\nThe analysis correctly identifies the primary and secondary CWEs. The confidence scores are reasonable given the information in the vulnerability description. The justification is generally sound, accurately describing the relationship between the identified weaknesses. However, as it has been mentioned in the CWE Specifications, specifically for CWE-680, it is a named chain and should be mapped to the individual weaknesses in the chain.\n\n**Detailed Review:**\n\n**1.  CWE-190: Integer Overflow or Wraparound**\n\n*   **Confidence:** 0.85 - Justified based on the explicit mention of \"integer overflow.\"\n*   **Abstraction Level:** Base - Correct. This is a fundamental issue.\n*   **Vulnerability Mapping Label:** Allowed - Correct. The CWE is at the appropriate level of abstraction.\n*   **CWE-Vulnerability Mapping Notes:** Correct explanation. This note accurately captures the role of CWE-190 as the primary cause.\n*   **Mitigation Considerations:**\n    *   The analysis does not explicitly mention the mitigation strategies suggested by the CWE specification but implicitly refers to \"proper validation of length parameter\" which could be implemented through input validation.\n    *   Language selection is another valid mitigation that is not explicitly mentioned but is relevant.\n*   **Relationships Consideration:** The analysis correctly identifies the relationship of CWE-190 with CWE-119 and CWE-680.\n*   **Terminology Consideration:** The analysis correctly uses the term \"integer overflow\" and does not confuse it with \"wraparound\".\n\n**2. CWE-122: Heap-based Buffer Overflow**\n\n*   **Confidence:** 0.75 - Justified. While the overflow is clearly stated, the *heap-based* aspect isn't explicitly mentioned. Inferring it is reasonable, especially given the context of dynamic memory allocation often associated with network protocols like HTTP.\n*   **Abstraction Level:** Variant - Correct. It's a specific type of buffer overflow.\n*   **Vulnerability Mapping Label:** Allowed - Correct. The CWE is at the appropriate level of abstraction.\n*   **CWE-Vulnerability Mapping Notes:** Correct Explanation.\n*   **Mitigation Considerations:**\n    *   The analysis does not mention the potential mitigation strategies of using a language or compiler that performs automatic bounds checking, or using an abstraction library.\n    *   The most relevant mitigation from the provided specification is the use of automatic buffer overflow detection mechanisms.\n*   **Relationships Consideration:** The analysis identifies the relationship between CWE-122, CWE-787, and CWE-788.\n*   **Heap vs. Stack:** Given the description involving QMI HTTP and segments, it's more likely that the buffer involved is allocated on the heap, but without more information, it could potentially be a stack-based overflow (CWE-121) if the code is allocating a fixed-size buffer on the stack to process the segment.\n\n**Recommendations for Improvement:**\n\n1.  **Chain Representation:** Consider mapping to the individual weaknesses instead of mapping to a named chain.\n2.  **Explore CWE-131 (Incorrect Calculation of Buffer Size):** Given the integer overflow, it's *very* likely that the buffer size calculation is incorrect. While CWE-190 *leads* to the incorrect calculation, CWE-131 represents the *direct* result of the overflow. Adding CWE-131 would strengthen the analysis and provide a more precise representation of the vulnerability.\n3.  **Consider CWE-130 (Improper Handling of Length Parameter Inconsistency):** Depending on how the segments are received, there might be a length parameter associated with the segment data.  If the integer overflow affects this length parameter, and the code doesn't properly validate the calculated (overflowed) length against the actual received data size, then CWE-130 could also be applicable.\n4.  **Address Mapping Guidance of CWE-119:** The analysis is missing a more precise CWE.\n5.  **Expand Mitigation Strategies:**  The analysis should explicitly list the potential mitigation strategies from the CWE specifications, even if briefly. This demonstrates a deeper understanding of how to address the vulnerability.\n6.  **Specificity Regarding Buffer Location:** Explicitly state why you believe the buffer is heap-allocated rather than stack-allocated.  If the information isn't conclusive, acknowledge the possibility of a stack-based overflow (CWE-121) and explain why heap allocation is more probable.\n\n**Revised Summary Table (with Recommendations):**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-190 | Integer Overflow or Wraparound | 0.85 | Base | Allowed | Primary CWE. The vulnerability description explicitly mentions an **integer overflow**. |\n| CWE-131 | Incorrect Calculation of Buffer Size | 0.80 | Base | Allowed | The integer overflow leads to an incorrect calculation of the buffer size, resulting in a smaller-than-expected buffer. |\n| CWE-122 | Heap-based Buffer Overflow | 0.75 | Variant | Allowed | Secondary CWE. The vulnerability leads to a **buffer overflow** due to the undersized buffer allocated as a result of the integer overflow and incorrect size calculation. Likely heap-based due to the nature of QMI HTTP segment processing. |\n| CWE-130 | Improper Handling of Length Parameter Inconsistency | 0.65 | Base | Allowed |  The vulnerability may involve inconsistent length parameters in QMI HTTP segments. The overflowed integer might be used as a segment length, but not validated against the actual data received. |\n\n**Revised Analysis Snippets (Illustrative Examples):**\n\n*   **Explanation (Adding CWE-131):** \"The vulnerability description states a memory corruption issue... This directly aligns with CWE-190 (Integer Overflow or Wraparound)... Subsequently, this integer overflow leads to *CWE-131 (Incorrect Calculation of Buffer Size),* because the overflowed value is used to calculate the buffer size, leading to an undersized buffer. This leads to CWE-122 (Heap-based Buffer Overflow).\"\n*   **Explanation (Adding Mitigation Considerations):** \"Mitigation strategies include using languages with automatic bounds checking, employing safe integer handling libraries, and, crucially, *validating the calculated buffer size against the actual size of the incoming data*.\"\n\nBy incorporating these recommendations, the analysis will be more comprehensive, accurate, and actionable. Remember to consult the full CWE specifications when evaluating any vulnerability to ensure proper classification and mitigation.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-190 | Integer Overflow or Wraparound | 0.90 | Base | Allowed | Primary CWE. The vulnerability description explicitly mentions an **integer overflow**. |\n| CWE-131 | Incorrect Calculation of Buffer Size | 0.85 | Base | Allowed | Secondary CWE. The **integer overflow** leads to an incorrect calculation of the buffer size, resulting in a smaller-than-expected buffer. |\n| CWE-122 | Heap-based Buffer Overflow | 0.80 | Variant | Allowed | The undersized buffer allocated as a result of the **integer overflow** and incorrect size calculation leads to a **buffer overflow**. Likely heap-based due to the nature of QMI HTTP segment processing. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe decision was influenced by the following CWE relationships:\n  - CWE-190 is a base CWE and a parent of CWE-680 (Integer Overflow to Buffer Overflow). While CWE-680 is relevant, it's a compound CWE, and mapping to the individual weaknesses (CWE-190 and CWE-122/CWE-131) provides more granularity.\n  - CWE-190 CanPrecede CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). This relationship supports the connection between the **integer overflow** and the subsequent **buffer overflow**.\n  - CWE-122 is a variant of CWE-119, specifying a heap-based overflow.\n  - The addition of CWE-131 is critical. CWE-131 is related to CWE-682 (Incorrect Calculation) and CanPrecede CWE-119.\n\n```mermaid\ngraph TD\n    cwe190[\"CWE-190: Integer Overflow or Wraparound\"]\n    cwe131[\"CWE-131: Incorrect Calculation of Buffer Size\"]\n    cwe122[\"CWE-122: Heap-based Buffer Overflow\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    cwe680[\"CWE-680: Integer Overflow to Buffer Overflow\"]\n\n    cwe131 -->|CANPRECEDE| cwe119\n    cwe122 -->|CHILDOF| cwe119\n    cwe190 -->|CANPRECEDE| cwe131\n    cwe190 -->|PARENTOF| cwe680\n    cwe122 -->|CANFOLLOW| cwe131\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe190 primary\n    class cwe131,cwe122 secondary\n    class cwe119, cwe680 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-190 (Integer Overflow or Wraparound)**. This leads to **CWE-131 (Incorrect Calculation of Buffer Size)**, where the overflowed value is used to calculate the buffer size, resulting in a smaller-than-expected buffer. Finally, this undersized buffer leads to **CWE-122 (Heap-based Buffer Overflow)** when data exceeding the allocated buffer is written.\n\n## Summary of Analysis\nThe initial analysis correctly identified CWE-190 and CWE-122. However, it missed the crucial link of CWE-131, which represents the incorrect buffer size calculation resulting from the **integer overflow**. The criticism highlighted this gap and suggested adding CWE-131 for a more accurate representation.\n\nThe vulnerability description explicitly states an **integer overflow** leading to a **buffer overflow**. The addition of CWE-131 clarifies the mechanism through which the **integer overflow** causes the **buffer overflow**.\n\nThe graph relationships support the inclusion of all three CWEs. CWE-190 can precede CWE-131 and CWE-119, while CWE-122 is a specific type of CWE-119.\n\nThe selected CWEs are at the optimal level of specificity. CWE-190 is a base CWE representing the root cause. CWE-131 is a base CWE that accurately describes the error in buffer size calculation. CWE-122 is a variant CWE specifying the type of **buffer overflow** (heap-based). Using CWE-680 would be less specific.\n\nThe final decision is based on a comprehensive analysis of the vulnerability description, CWE descriptions, relationship data, and mapping guidance. The addition of CWE-131 strengthens the analysis and provides a more complete picture of the vulnerability.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 317.8923416020818,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5343327199579037,
            "sparse": 317.8923416020818,
            "graph": 1.717085198503234
          },
          "normalized_scores": {
            "dense": 0.5343327199579037,
            "sparse": 0.25431387328166544,
            "graph": 0.6132447137511551
          },
          "weighted_scores": {
            "dense": 0.18701645198526626,
            "sparse": 0.10172554931266618,
            "graph": 0.15331117843778877
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5343327199579037,
              "query_max": 0.5671010737639705,
              "query_min": 0.45935977425644337,
              "normalized_score": 0.5343327199579037,
              "weight": 0.35,
              "weighted_score": 0.18701645198526626
            },
            "sparse": {
              "raw_score": 317.8923416020818,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.25431387328166544,
              "weight": 0.4,
              "weighted_score": 0.10172554931266618
            },
            "graph": {
              "raw_score": 1.717085198503234,
              "query_max": 2.3400000000000003,
              "query_min": 1.2787811544933188,
              "normalized_score": 0.6132447137511551,
              "weight": 0.25,
              "weighted_score": 0.15331117843778877
            }
          },
          "contribution_percentages": {
            "dense": 42.30632434248587,
            "sparse": 23.01206143873508,
            "graph": 34.681614218779046
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4420531797357212,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5746691336564376
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5746691336564376
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.6321360470220814
            }
          },
          "combined_score": 0.6321360470220814
        }
      },
      "similarity": 0.6321360470220814
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 274.61554569552845,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5197767772841511,
            "sparse": 274.61554569552845,
            "graph": 1.6326621969788992
          },
          "normalized_scores": {
            "dense": 0.5197767772841511,
            "sparse": 0.21969243655642276,
            "graph": 0.5830936417781784
          },
          "weighted_scores": {
            "dense": 0.18192187204945287,
            "sparse": 0.0878769746225691,
            "graph": 0.1457734104445446
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5197767772841511,
              "query_max": 0.5671010737639705,
              "query_min": 0.45935977425644337,
              "normalized_score": 0.5197767772841511,
              "weight": 0.35,
              "weighted_score": 0.18192187204945287
            },
            "sparse": {
              "raw_score": 274.61554569552845,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.21969243655642276,
              "weight": 0.4,
              "weighted_score": 0.0878769746225691
            },
            "graph": {
              "raw_score": 1.6326621969788992,
              "query_max": 2.3400000000000003,
              "query_min": 1.2787811544933188,
              "normalized_score": 0.5830936417781784,
              "weight": 0.25,
              "weighted_score": 0.1457734104445446
            }
          },
          "contribution_percentages": {
            "dense": 43.7762311930328,
            "sparse": 21.14601567301446,
            "graph": 35.07775313395275
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.41557225711656653,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5402439342515365
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5402439342515365
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5942683276766902
            }
          },
          "combined_score": 0.5942683276766902
        }
      },
      "similarity": 0.5942683276766902
    },
    {
      "metadata": {
        "doc_id": "CWE-130",
        "name": "Improper Handling of Length Parameter Inconsistency",
        "type": "Base",
        "original_content": "The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.",
        "relationships": [],
        "original_sparse_score": 260.81369973822666,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.47545837044908734,
            "sparse": 260.81369973822666,
            "graph": 1.5517107886446657
          },
          "normalized_scores": {
            "dense": 0.47545837044908734,
            "sparse": 0.20865095979058132,
            "graph": 0.5541824245159521
          },
          "weighted_scores": {
            "dense": 0.16641042965718056,
            "sparse": 0.08346038391623253,
            "graph": 0.13854560612898803
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.47545837044908734,
              "query_max": 0.5671010737639705,
              "query_min": 0.45935977425644337,
              "normalized_score": 0.47545837044908734,
              "weight": 0.35,
              "weighted_score": 0.16641042965718056
            },
            "sparse": {
              "raw_score": 260.81369973822666,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.20865095979058132,
              "weight": 0.4,
              "weighted_score": 0.08346038391623253
            },
            "graph": {
              "raw_score": 1.5517107886446657,
              "query_max": 2.3400000000000003,
              "query_min": 1.2787811544933188,
              "normalized_score": 0.5541824245159521,
              "weight": 0.25,
              "weighted_score": 0.13854560612898803
            }
          },
          "contribution_percentages": {
            "dense": 42.84330456078086,
            "sparse": 21.487347002523382,
            "graph": 35.66934843669575
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.38841641970240115,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5049413456131215
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5049413456131215
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5554354801744338
            }
          },
          "combined_score": 0.5554354801744338
        }
      },
      "similarity": 0.5554354801744338
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 294.3138267335338,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.46914973515946046,
            "sparse": 294.3138267335338,
            "graph": 1.4591999999999998
          },
          "normalized_scores": {
            "dense": 0.46914973515946046,
            "sparse": 0.23545106138682703,
            "graph": 0.5211428571428571
          },
          "weighted_scores": {
            "dense": 0.16420240730581115,
            "sparse": 0.09418042455473082,
            "graph": 0.13028571428571428
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.46914973515946046,
              "query_max": 0.5671010737639705,
              "query_min": 0.45935977425644337,
              "normalized_score": 0.46914973515946046,
              "weight": 0.35,
              "weighted_score": 0.16420240730581115
            },
            "sparse": {
              "raw_score": 294.3138267335338,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.23545106138682703,
              "weight": 0.4,
              "weighted_score": 0.09418042455473082
            },
            "graph": {
              "raw_score": 1.4591999999999998,
              "query_max": 2.3400000000000003,
              "query_min": 1.2787811544933188,
              "normalized_score": 0.5211428571428571,
              "weight": 0.25,
              "weighted_score": 0.13028571428571428
            }
          },
          "contribution_percentages": {
            "dense": 42.24741336388504,
            "sparse": 24.231552948792174,
            "graph": 33.52103368732279
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.38866854614625623,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.46640225537550745
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.46640225537550745
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5130424809130583
            }
          },
          "combined_score": 0.5130424809130583
        }
      },
      "similarity": 0.5130424809130583
    },
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 277.3866542393696,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4885220248705325,
            "sparse": 277.3866542393696
          },
          "normalized_scores": {
            "dense": 0.4885220248705325,
            "sparse": 0.22190932339149566
          },
          "weighted_scores": {
            "dense": 0.17098270870468635,
            "sparse": 0.08876372935659826
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4885220248705325,
              "query_max": 0.5671010737639705,
              "query_min": 0.45935977425644337,
              "normalized_score": 0.4885220248705325,
              "weight": 0.35,
              "weighted_score": 0.17098270870468635
            },
            "sparse": {
              "raw_score": 277.3866542393696,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.22190932339149566,
              "weight": 0.4,
              "weighted_score": 0.08876372935659826
            }
          },
          "contribution_percentages": {
            "dense": 65.8267770603055,
            "sparse": 34.17322293969449
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2597464380612846,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.33767036947967
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.33767036947967
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.371437406427637
            }
          },
          "combined_score": 0.371437406427637
        }
      },
      "similarity": 0.371437406427637
    },
    {
      "metadata": {
        "doc_id": "CWE-1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
        "relationships": [],
        "original_sparse_score": 250.18615716713876,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.49741284471830527,
            "sparse": 250.18615716713876
          },
          "normalized_scores": {
            "dense": 0.49741284471830527,
            "sparse": 0.20014892573371101
          },
          "weighted_scores": {
            "dense": 0.17409449565140683,
            "sparse": 0.08005957029348441
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.49741284471830527,
              "query_max": 0.5671010737639705,
              "query_min": 0.45935977425644337,
              "normalized_score": 0.49741284471830527,
              "weight": 0.35,
              "weighted_score": 0.17409449565140683
            },
            "sparse": {
              "raw_score": 250.18615716713876,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.20014892573371101,
              "weight": 0.4,
              "weighted_score": 0.08005957029348441
            }
          },
          "contribution_percentages": {
            "dense": 68.49959098791521,
            "sparse": 31.50040901208478
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.25415406594489126,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.33040028572835867
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.33040028572835867
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.36344031430119456
            }
          },
          "combined_score": 0.36344031430119456
        }
      },
      "similarity": 0.36344031430119456
    },
    {
      "metadata": {
        "doc_id": "CWE-195",
        "name": "Signed to Unsigned Conversion Error",
        "type": "Variant",
        "original_content": "The product uses a signed primitive and performs a cast to an unsigned primitive, which can produce an unexpected value if the value of the signed primitive can not be represented using an unsigned primitive.",
        "relationships": [],
        "original_sparse_score": 268.8636913292904,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 268.8636913292904,
            "graph": 2.06592
          },
          "normalized_scores": {
            "sparse": 0.21509095306343234,
            "graph": 0.7378285714285715
          },
          "weighted_scores": {
            "sparse": 0.08603638122537294,
            "graph": 0.18445714285714288
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 268.8636913292904,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.21509095306343234,
              "weight": 0.4,
              "weighted_score": 0.08603638122537294
            },
            "graph": {
              "raw_score": 2.06592,
              "query_max": 2.3400000000000003,
              "query_min": 1.2787811544933188,
              "normalized_score": 0.7378285714285715,
              "weight": 0.25,
              "weighted_score": 0.18445714285714288
            }
          },
          "contribution_percentages": {
            "sparse": 31.8071870730358,
            "graph": 68.19281292696421
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2704935240825158,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.32459222889901895
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.32459222889901895
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3570514517889209
            }
          },
          "combined_score": 0.3570514517889209
        }
      },
      "similarity": 0.3570514517889209
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 292.05764045777244,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.47281621469162183,
            "sparse": 292.05764045777244
          },
          "normalized_scores": {
            "dense": 0.47281621469162183,
            "sparse": 0.23364611236621796
          },
          "weighted_scores": {
            "dense": 0.16548567514206763,
            "sparse": 0.0934584449464872
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.47281621469162183,
              "query_max": 0.5671010737639705,
              "query_min": 0.45935977425644337,
              "normalized_score": 0.47281621469162183,
              "weight": 0.35,
              "weighted_score": 0.16548567514206763
            },
            "sparse": {
              "raw_score": 292.05764045777244,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.23364611236621796,
              "weight": 0.4,
              "weighted_score": 0.0934584449464872
            }
          },
          "contribution_percentages": {
            "dense": 63.907871352890396,
            "sparse": 36.092128647109604
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.25894412008855483,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3107329441062658
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3107329441062658
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3418062385168924
            }
          },
          "combined_score": 0.3418062385168924
        }
      },
      "similarity": 0.3418062385168924
    },
    {
      "metadata": {
        "doc_id": "CWE-839",
        "name": "Numeric Range Comparison Without Minimum Check",
        "type": "Base",
        "original_content": "The product checks a value to ensure that it is less than or equal to a maximum, but it does not also verify that the value is greater than or equal to the minimum.",
        "relationships": [],
        "original_sparse_score": 265.8260859536705,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 265.8260859536705,
            "graph": 1.6848000000000003
          },
          "normalized_scores": {
            "sparse": 0.21266086876293638,
            "graph": 0.6017142857142859
          },
          "weighted_scores": {
            "sparse": 0.08506434750517455,
            "graph": 0.15042857142857147
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 265.8260859536705,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.21266086876293638,
              "weight": 0.4,
              "weighted_score": 0.08506434750517455
            },
            "graph": {
              "raw_score": 1.6848000000000003,
              "query_max": 2.3400000000000003,
              "query_min": 1.2787811544933188,
              "normalized_score": 0.6017142857142859,
              "weight": 0.25,
              "weighted_score": 0.15042857142857147
            }
          },
          "contribution_percentages": {
            "sparse": 36.12182815955783,
            "graph": 63.87817184044218
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.23549291893374602,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.30614079461386984
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.30614079461386984
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.33675487407525684
            }
          },
          "combined_score": 0.33675487407525684
        }
      },
      "similarity": 0.33675487407525684
    },
    {
      "metadata": {
        "doc_id": "CWE-681",
        "name": "Incorrect Conversion between Numeric Types",
        "type": "Base",
        "original_content": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
        "relationships": [],
        "original_sparse_score": 285.4546419588311,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 285.4546419588311,
            "graph": 1.569990171394825
          },
          "normalized_scores": {
            "sparse": 0.22836371356706486,
            "graph": 0.5607107754981518
          },
          "weighted_scores": {
            "sparse": 0.09134548542682595,
            "graph": 0.14017769387453796
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 285.4546419588311,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.22836371356706486,
              "weight": 0.4,
              "weighted_score": 0.09134548542682595
            },
            "graph": {
              "raw_score": 1.569990171394825,
              "query_max": 2.3400000000000003,
              "query_min": 1.2787811544933188,
              "normalized_score": 0.5607107754981518,
              "weight": 0.25,
              "weighted_score": 0.14017769387453796
            }
          },
          "contribution_percentages": {
            "sparse": 39.454142648898845,
            "graph": 60.54585735110116
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2315231793013639,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.30098013309177307
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.30098013309177307
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3310781464009504
            }
          },
          "combined_score": 0.3310781464009504
        }
      },
      "similarity": 0.3310781464009504
    },
    {
      "metadata": {
        "doc_id": "CWE-680",
        "name": "Integer Overflow to Buffer Overflow",
        "type": "Compound",
        "original_content": "The product performs a calculation to determine how much memory to allocate, but an integer overflow can occur that causes less memory to be allocated than expected, leading to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 464.47247124004275,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is a named chain, which combines multiple weaknesses.",
          "comments": "Mapping to each separate weakness in the chain would be more precise.",
          "reasons": [
            "Other"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5671010737639705,
            "sparse": 464.47247124004275
          },
          "normalized_scores": {
            "dense": 0.5671010737639705,
            "sparse": 0.3715779769920342
          },
          "weighted_scores": {
            "dense": 0.19848537581738965,
            "sparse": 0.1486311907968137
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5671010737639705,
              "query_max": 0.5671010737639705,
              "query_min": 0.45935977425644337,
              "normalized_score": 0.5671010737639705,
              "weight": 0.35,
              "weighted_score": 0.19848537581738965
            },
            "sparse": {
              "raw_score": 464.47247124004275,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.3715779769920342,
              "weight": 0.4,
              "weighted_score": 0.1486311907968137
            }
          },
          "contribution_percentages": {
            "dense": 57.18118779331923,
            "sparse": 42.818812206680775
          },
          "abstraction_factor": 1.0,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.3471165666142033,
            "abstraction": {
              "type": "compound",
              "factor": 1.0,
              "score_after": 0.3471165666142033
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3471165666142033
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a named chain, which combines multiple weaknesses.",
                "comments": "Mapping to each separate weakness in the chain would be more precise.",
                "reasons": [
                  "Other"
                ]
              },
              "score_after": 0.2776932532913627
            }
          },
          "combined_score": 0.2776932532913627
        }
      },
      "similarity": 0.2776932532913627
    },
    {
      "metadata": {
        "doc_id": "CWE-123",
        "name": "Write-what-where Condition",
        "type": "Base",
        "original_content": "Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 156.15638921689566,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 156.15638921689566,
            "graph": 1.3676000000000001
          },
          "normalized_scores": {
            "sparse": 0.12492511137351653,
            "graph": 0.4884285714285715
          },
          "weighted_scores": {
            "sparse": 0.049970044549406616,
            "graph": 0.12210714285714287
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 156.15638921689566,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.12492511137351653,
              "weight": 0.4,
              "weighted_score": 0.049970044549406616
            },
            "graph": {
              "raw_score": 1.3676000000000001,
              "query_max": 2.3400000000000003,
              "query_min": 1.2787811544933188,
              "normalized_score": 0.4884285714285715,
              "weight": 0.25,
              "weighted_score": 0.12210714285714287
            }
          },
          "contribution_percentages": {
            "sparse": 29.03931968120063,
            "graph": 70.96068031879938
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.17207718740654948,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.22370034362851432
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.22370034362851432
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.24607037799136577
            }
          },
          "combined_score": 0.24607037799136577
        }
      },
      "similarity": 0.24607037799136577
    },
    {
      "metadata": {
        "doc_id": "CWE-197",
        "name": "Numeric Truncation Error",
        "type": "Base",
        "original_content": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
        "relationships": [],
        "original_sparse_score": 272.04216518692516,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 272.04216518692516
          },
          "normalized_scores": {
            "sparse": 0.21763373214954013
          },
          "weighted_scores": {
            "sparse": 0.08705349285981606
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 272.04216518692516,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.21763373214954013,
              "weight": 0.4,
              "weighted_score": 0.08705349285981606
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.08705349285981606,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.11316954071776088
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.11316954071776088
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.12448649478953698
            }
          },
          "combined_score": 0.12448649478953698
        }
      },
      "similarity": 0.12448649478953698
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 265.1371754251083,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 265.1371754251083
          },
          "normalized_scores": {
            "sparse": 0.21210974034008664
          },
          "weighted_scores": {
            "sparse": 0.08484389613603466
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 265.1371754251083,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.21210974034008664,
              "weight": 0.4,
              "weighted_score": 0.08484389613603466
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.08484389613603466,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.11029706497684506
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.11029706497684506
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.12132677147452958
            }
          },
          "combined_score": 0.12132677147452958
        }
      },
      "similarity": 0.12132677147452958
    },
    {
      "metadata": {
        "doc_id": "CWE-124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "type": "Base",
        "original_content": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "relationships": [],
        "original_sparse_score": 263.9137520296544,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 263.9137520296544
          },
          "normalized_scores": {
            "sparse": 0.21113100162372353
          },
          "weighted_scores": {
            "sparse": 0.08445240064948942
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 263.9137520296544,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.21113100162372353,
              "weight": 0.4,
              "weighted_score": 0.08445240064948942
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.08445240064948942,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.10978812084433624
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.10978812084433624
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.12076693292876987
            }
          },
          "combined_score": 0.12076693292876987
        }
      },
      "similarity": 0.12076693292876987
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 261.83798462316133,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 261.83798462316133
          },
          "normalized_scores": {
            "sparse": 0.20947038769852908
          },
          "weighted_scores": {
            "sparse": 0.08378815507941163
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 261.83798462316133,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.20947038769852908,
              "weight": 0.4,
              "weighted_score": 0.08378815507941163
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.08378815507941163,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.10892460160323512
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.10892460160323512
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.11981706176355865
            }
          },
          "combined_score": 0.11981706176355865
        }
      },
      "similarity": 0.11981706176355865
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 254.65717480056378,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 254.65717480056378
          },
          "normalized_scores": {
            "sparse": 0.20372573984045103
          },
          "weighted_scores": {
            "sparse": 0.08149029593618042
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 254.65717480056378,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.20372573984045103,
              "weight": 0.4,
              "weighted_score": 0.08149029593618042
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.08149029593618042,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.10593738471703454
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.10593738471703454
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.116531123188738
            }
          },
          "combined_score": 0.116531123188738
        }
      },
      "similarity": 0.116531123188738
    },
    {
      "metadata": {
        "doc_id": "CWE-704",
        "name": "Incorrect Type Conversion or Cast",
        "type": "Class",
        "original_content": "The product does not correctly convert an object, resource, or structure from one type to a different type.",
        "relationships": [],
        "original_sparse_score": 292.1450721439411,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 292.1450721439411
          },
          "normalized_scores": {
            "sparse": 0.2337160577151529
          },
          "weighted_scores": {
            "sparse": 0.09348642308606116
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 292.1450721439411,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.2337160577151529,
              "weight": 0.4,
              "weighted_score": 0.09348642308606116
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.09348642308606116,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.07478913846884892
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07478913846884892
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.07852859539229137
            }
          },
          "combined_score": 0.07852859539229137
        }
      },
      "similarity": 0.07852859539229137
    },
    {
      "metadata": {
        "doc_id": "CWE-194",
        "name": "Unexpected Sign Extension",
        "type": "Variant",
        "original_content": "The product performs an operation on a number that causes it to be sign extended when it is transformed into a larger data type. When the original number is negative, this can produce unexpected values that lead to resultant weaknesses.",
        "relationships": [],
        "original_sparse_score": 155.86832203958795,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 155.86832203958795
          },
          "normalized_scores": {
            "sparse": 0.12469465763167036
          },
          "weighted_scores": {
            "sparse": 0.04987786305266814
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 155.86832203958795,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.12469465763167036,
              "weight": 0.4,
              "weighted_score": 0.04987786305266814
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.04987786305266814,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.05985343566320177
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.05985343566320177
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.06583877922952194
            }
          },
          "combined_score": 0.06583877922952194
        }
      },
      "similarity": 0.06583877922952194
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 283.6752679403397,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 283.6752679403397
          },
          "normalized_scores": {
            "sparse": 0.22694021435227177
          },
          "weighted_scores": {
            "sparse": 0.09077608574090872
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 283.6752679403397,
              "query_max": 464.47247124004275,
              "query_min": 155.86832203958795,
              "normalized_score": 0.22694021435227177,
              "weight": 0.4,
              "weighted_score": 0.09077608574090872
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.09077608574090872,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.07262086859272697
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07262086859272697
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.05809669487418158
            }
          },
          "combined_score": 0.05809669487418158
        }
      },
      "similarity": 0.05809669487418158
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-680",
      "CWE-119",
      "CWE-190",
      "CWE-122"
    ],
    "critic_additional": [
      "CWE-788",
      "CWE-787",
      "CWE-121",
      "CWE-130",
      "CWE-131"
    ]
  }
}