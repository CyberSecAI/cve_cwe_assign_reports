{
  "cve_id": "CVE-2022-24949",
  "description": "A privilege escalation to root exists in Eternal Terminal prior to version 6.2.0. This is due to the combination of a race condition, buffer overflow, and logic bug all in PipeSocketHandlerlisten().",
  "key_phrases": {
    "rootcause": "race condition",
    "weakness": [
      "buffer overflow",
      "logic bug"
    ],
    "impact": "privilege escalation to root",
    "vector": "",
    "attacker": "",
    "product": "Eternal Terminal",
    "version": "prior to version 6.2.0",
    "component": "PipeSocketHandlerlisten()"
  },
  "reference_content": "Based on the provided information, here's an analysis of CVE-2022-24949:\n\n**Root cause of vulnerability:**\nThe vulnerability stems from a combination of a logic bug, a race condition, and a buffer overflow within the Eternal Terminal (ET) software.\n\n**Weaknesses/vulnerabilities present:**\n*   **Logic Bug:** A flaw in `PortForwardHandler::createSource()` allows an attacker to provide an arbitrary `SocketEndpoint` to the `PipeSocketHandler::listen()` function. The `name` member of `SocketEndpoint` is used in system calls like `unlink()`, enabling arbitrary file deletion.\n*   **Race Condition:** Within `PipeSocketHandler::listen()`, operations on the `name` variable of `SocketEndpoint` such as `unlink()`, `bind()`, `chmod()`, and `chown()` are performed without proper path verification or synchronization. If an attacker can manipulate the file path (e.g., via symlinks) between `bind()` and `chmod()`/`chown()`, they can change the permissions and ownership of arbitrary files.\n*   **Buffer Overflow:** The `PipeSocketHandler::listen()` function uses `strcpy()` to copy the `name` variable from `SocketEndpoint` into the `local.sun_path` member of a socket. This member has a fixed size of 108 bytes. Because the size of the `name` variable is not checked, a buffer overflow can occur, leading to memory corruption.\n\n**Impact of exploitation:**\n*   An attacker can gain root privileges on the server. This is done by exploiting the race condition to modify the permissions of `/etc/passwd`, allowing the creation of a new root user without a password.\n*   Arbitrary file deletion is possible due to the logic bug and improper path handling within `PipeSocketHandler::listen()`.\n*   The buffer overflow can be leveraged for more complex memory corruption attacks to control code execution, although this approach requires more effort and is less reliable than the race condition.\n\n**Attack vectors:**\n*   An authenticated attacker must be able to send crafted packets to an Eternal Terminal server.\n*   The attacker needs to establish an ET connection and send a crafted `InitialPayload` packet containing a `PortForwardSourceRequest` and a malicious `SocketEndpoint`.\n*   A separate race utility needs to be run locally on the target to help with the race condition.\n\n**Required attacker capabilities/position:**\n*   The attacker must have network access to the ET server.\n*   The attacker must be authenticated to the ET server to send the crafted initial payload and trigger the vulnerable code.\n*   The attacker must have SSH access to the target machine to upload and execute the race utility.\n\n**Additional Details:**\n*   The provided code includes a proof-of-concept (PoC) exploit written in Python and C that demonstrates how to trigger the vulnerability.\n*   The vulnerability was addressed in version 6.1.9 of Eternal Terminal.\n*   The provided code includes a detailed explanation of the vulnerability, including how the race condition and buffer overflow are exploited to gain root access.\n*   The fix involved using `strncpy` instead of `strcpy` to prevent the buffer overflow and modifying the path handling logic.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-367 | Time-of-check Time-of-use (TOCTOU) Race Condition | 0.95 | Base | Primary | Allowed |\n| CWE-120 | Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') | 0.85 | Base | Secondary | Allowed-with-Review |\n| CWE-754 | Improper Check for Unusual or Exceptional Conditions | 0.75 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability involves a **race condition**, a **buffer overflow**, and a **logic bug**. The primary weakness is the **race condition** in `PipeSocketHandlerlisten()`, where the state of a resource changes between the check and use, leading to privilege escalation. This aligns with CWE-367 (Time-of-check Time-of-use (TOCTOU) Race Condition), which is a Base level CWE and ALLOWED for mapping. The `CVE Reference Links Content Summary` confirms that operations on `name` in `SocketEndpoint` are performed without proper synchronization, leading to the ability to manipulate file paths and change permissions. CWE-362 (Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')) is a Class-level CWE and less specific, making CWE-367 a better fit. The **buffer overflow** due to `strcpy()` aligns with CWE-120 (Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')), which is a Base level CWE. Finally, a **logic bug** in `PortForwardHandler::createSource()` allows for arbitrary file deletion. Since the code doesn't correctly check for the expected conditions, this can be classified as CWE-754 (Improper Check for Unusual or Exceptional Conditions), which is a Class-level CWE.\n\n  - *Relationship Analysis:* CWE-367 has no direct relationships. CWE-120 is a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer) and can precede CWE-123 (Write-what-where Condition). CWE-754 is a Class and may have more specific children.\n\n- **Confidence Score:**  \n  - Confidence: 0.95 (High evidence from technical description and CVE reference materials for CWE-367)\n  - Confidence: 0.85 (High evidence from technical description and CVE reference materials for CWE-120)\n  - Confidence: 0.75 (Medium evidence from technical description and CVE reference materials for CWE-754)\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-367 | Time-of-check Time-of-use (TOCTOU) Race Condition | 0.95 | Base | Primary | Allowed |\n| CWE-120 | Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') | 0.85 | Base | Secondary | Allowed-with-Review |\n| CWE-754 | Improper Check for Unusual or Exceptional Conditions | 0.75 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability involves a **race condition**, a **buffer overflow**, and a **logic bug**. The primary weakness is the **race condition** in `PipeSocketHandlerlisten()`, where the state of a resource changes between the check and use, leading to privilege escalation. This aligns with CWE-367 (Time-of-check Time-of-use (TOCTOU) Race Condition), which is a Base level CWE and ALLOWED for mapping. The `CVE Reference Links Content Summary` confirms that operations on `name` in `SocketEndpoint` are performed without proper synchronization, leading to the ability to manipulate file paths and change permissions. CWE-362 (Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')) is a Class-level CWE and less specific, making CWE-367 a better fit. The **buffer overflow** due to `strcpy()` aligns with CWE-120 (Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')), which is a Base level CWE. Finally, a **logic bug** in `PortForwardHandler::createSource()` allows for arbitrary file deletion. Since the code doesn't correctly check for the expected conditions, this can be classified as CWE-754 (Improper Check for Unusual or Exceptional Conditions), which is a Class-level CWE.\n\n  - *Relationship Analysis:* CWE-367 has no direct relationships. CWE-120 is a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer) and can precede CWE-123 (Write-what-where Condition). CWE-754 is a Class and may have more specific children.\n\n- **Confidence Score:**  \n  - Confidence: 0.95 (High evidence from technical description and CVE reference materials for CWE-367)\n  - Confidence: 0.85 (High evidence from technical description and CVE reference materials for CWE-120)\n  - Confidence: 0.75 (Medium evidence from technical description and CVE reference materials for CWE-754)\n---",
  "criticism": "Okay, I've reviewed the provided analysis against the full CWE specifications and will provide a detailed critique focusing on the accuracy of the CWE assignments, their abstraction levels, and the appropriateness of the selected CWEs considering the specific vulnerability described.\n\n**Overall Assessment**\n\nThe analysis is generally good and identifies the key weaknesses involved in the Eternal Terminal vulnerability. The confidence scores are well-reasoned, and the evidence presented supports the chosen CWEs. However, some areas could be more precise and leverage the CWE specifications more effectively, especially regarding the discouragement of CWE-119, and using the *closest fit*.\n\n**Detailed Critique of Each CWE Assignment**\n\n1.  **CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition (Confidence: 0.95, Primary)**\n\n    *   **Assessment:** This is a strong primary mapping. The vulnerability description clearly indicates a TOCTOU race condition. The analysis correctly points out that operations like `unlink()`, `bind()`, `chmod()`, and `chown()` are performed on file paths without proper synchronization. An attacker can potentially manipulate the file path between the check (e.g., existence check, permission check) and the use (the actual operation), leading to privilege escalation.\n    *   **Justification:** The description explicitly mentions the ability to manipulate file paths between checks and use.\n    *   **CWE Specification Alignment:** The description perfectly aligns with CWE-367.  The vulnerability enables invalid actions because the resource's state is not stable between check and use.\n    *   **Mapping Guidance Review:** Correctly using a Base level mapping.\n    *   **Retriever Results**: Agrees with the dense score, however, the retriever should have considered other conditions that are more specific, such as CWE-367.\n    *   **Potential Improvements:** None\n\n2.  **CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') (Confidence: 0.85, Secondary)**\n\n    *   **Assessment:** This is also a strong secondary mapping. The use of `strcpy()` without checking the size of the input buffer (`name` variable from `SocketEndpoint`) against the size of the destination buffer (`local.sun_path`, fixed at 108 bytes) is a textbook example of CWE-120.\n    *   **Justification:** The description highlights the overflow risk due to the unchecked copy.\n    *   **CWE Specification Alignment:** The description of CWE-120 directly reflects this situation: \"The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.\"\n     *  **Mapping Guidance Review:** This is flagged as `Allowed-with-Review` due to potential misuse as a catch-all for buffer overflows. The analysis adequately specifies that this is a copy operation using `strcpy`, so it is appropriate. It should however consider children, such as CWE-787 (out-of-bounds write), which the next point will address.\n    *   **Retriever Results**: The retriever identified CWE-120 but also provided CWE-121 and CWE-122 which are stack based and heap based BOF. Depending on the context this is fine. It also produced CWE-119 which is too abstract.\n    *   **Potential Improvements:** While CWE-120 is appropriate, it might be even *more* precise to map to **CWE-787: Out-of-bounds Write**. CWE-120, as the specifications state, is `Allowed-with-Review` because it is often misused as a generic buffer overflow. Since we *know* that the vulnerability involves writing beyond the bounds of the buffer, the primary buffer overflow designation should be **CWE-787**, and perhaps CWE-120 can be kept as a secondary. Also consider CWE-121 and CWE-122, depending on the context of stack or heap.\n\n3.  **CWE-754: Improper Check for Unusual or Exceptional Conditions (Confidence: 0.75, Secondary)**\n\n    *   **Assessment:** This mapping is less convincing than the others. While it's true that a logic bug exists in `PortForwardHandler::createSource()`, characterizing it solely as a missing check for unusual conditions is somewhat broad. The logic bug allows for arbitrary file deletion because an attacker is able to provide a `SocketEndpoint` to the `PipeSocketHandler::listen()` function.\n    *   **Justification:** The rationale states that the code doesn't correctly check for the expected conditions.\n    *   **CWE Specification Alignment:** CWE-754 is a Class-level CWE, and the mapping guidance recommends looking for more specific Base-level children.\n\n    *   **Mapping Guidance Review:** The tool correctly recognizes the abstract nature and recommends to explore children CWEs.\n\n    *   **Potential Improvements:** It might be better to relate this to **CWE-20: Improper Input Validation**, and then find the Base child that fits that vulnerability. It *might* also be related to **CWE-676: Use of Potentially Dangerous Function**.\n        *   It could be argued that the code should have validated the supplied `SocketEndpoint` *before* passing it to `PipeSocketHandler::listen()`. This aligns with CWE-20.\n        *   The function `unlink` can be considered dangerous.\n\n**Recommendations**\n\n*   **Prioritize Specificity:** Always strive for the most specific CWE mapping possible. Prefer Base and Variant level CWEs over Class level CWEs when the available information allows.\n*   **CWE-119 Avoidance:**  As per CWE's mapping guidance, avoid using CWE-119 directly when a more specific child CWE is applicable (e.g., CWE-120, CWE-787).  It's better to map to the specific type of out-of-bounds access.\n*   **Review relationships to create chains**: Follow \"can precede\" and \"can follow\" relationships to fully describe the vulnerability.\n\n**Revised Summary**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-367 | Time-of-check Time-of-use (TOCTOU) Race Condition | 0.95 | Base | Primary | Allowed |\n| CWE-787 | Out-of-bounds Write | 0.90 | Base | Secondary | Allowed |\n| CWE-120 | Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') | 0.80 | Base | Secondary | Allowed-with-Review |\n| CWE-20 | Improper Input Validation | 0.75 | Class | Secondary | Allowed-with-Review |\n| CWE-676 | Use of Potentially Dangerous Function | 0.75 | Base | Secondary | Allowed-with-Review |\n| CWE-754 | Improper Check for Unusual or Exceptional Conditions | 0.60 | Class | Secondary | Allowed-with-Review |\n\nThese changes increase the overall accuracy and usefulness of the analysis by aligning it more closely with the intent and guidance provided in the CWE specifications.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-367 | Time-of-check Time-of-use (TOCTOU) Race Condition | 0.95 | Base | Primary | Allowed |\n| CWE-787 | Out-of-bounds Write | 0.90 | Base | Secondary | Allowed |\n| CWE-20 | Improper Input Validation | 0.80 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is a **race condition** (CWE-367). This can lead to a state where a buffer overflow (CWE-787) can occur due to improper input validation (CWE-20) of the `SocketEndpoint` before passing it to `PipeSocketHandler::listen()`.\n\n```mermaid\ngraph TD\n    cwe367[\"CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations\"]\n\n    cwe787 -->|CHILDOF| cwe119\n    cwe367 -->|CANPRECEDE| cwe787\n    cwe20 -->|CANPRECEDE| cwe367\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe367 primary\n    class cwe787,cwe20 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-20** (Improper Input Validation) where the `SocketEndpoint` is not validated correctly. This leads to **CWE-367** (TOCTOU Race Condition) where the state of a resource changes between check and use due to missing synchronization when operations like `unlink()`, `bind()`, `chmod()`, and `chown()` are performed. Finally, the **race condition** can then lead to **CWE-787** (Out-of-bounds Write) due to the `strcpy()` without checking the size of the input buffer.\n\n## Summary of Analysis\nBased on the initial analysis, criticism, and graph relationships, the final decision is to classify the vulnerability with the following CWEs:\n\n*   **CWE-367** (Time-of-check Time-of-use (TOCTOU) Race Condition) as the primary **ROOTCAUSE**. The evidence for this is the explicit mention of the ability to manipulate file paths between checks and use, leading to privilege escalation.\n*   **CWE-787** (Out-of-bounds Write) as a secondary weakness. The use of `strcpy()` without checking the size of the input buffer (`name` variable from `SocketEndpoint`) against the size of the destination buffer (`local.sun_path`, fixed at 108 bytes) is a clear indicator of an out-of-bounds write.\n*   **CWE-20** (Improper Input Validation) as a contributing factor. The code should have validated the supplied `SocketEndpoint` before passing it to `PipeSocketHandler::listen()`.\n\nThe decision to prioritize **CWE-787** over **CWE-120** is based on the recommendation to avoid using **CWE-119** directly when a more specific child CWE is applicable. Since the vulnerability involves writing beyond the bounds of the buffer, **CWE-787** is a more precise classification. Also, the use of **CWE-120** is \"Allowed-with-Review\" because it's often misused, whereas **CWE-787** directly describes the out-of-bounds write.\n\nThe decision to include **CWE-20** is based on the criticism that the logic bug allows for arbitrary file deletion because an attacker is able to provide a `SocketEndpoint` to the `PipeSocketHandler::listen()` function.\n\nThe selected CWEs are at the optimal level of specificity, with **CWE-367** and **CWE-787** being Base level CWEs and **CWE-20** being a Class level CWE with no specific Base level children that describe the vulnerability. This ensures that the classification is accurate and useful for trend analysis.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 422.9132528293878,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 422.9132528293878,
            "graph": 4.329000000000001
          },
          "normalized_scores": {
            "sparse": 0.3383306022635102,
            "graph": 1.0
          },
          "weighted_scores": {
            "sparse": 0.13533224090540408,
            "graph": 0.25
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 422.9132528293878,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.3383306022635102,
              "weight": 0.4,
              "weighted_score": 0.13533224090540408
            },
            "graph": {
              "raw_score": 4.329000000000001,
              "query_max": 4.329000000000001,
              "query_min": 1.7680000000000005,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "sparse": 35.12092333291857,
            "graph": 64.87907666708142
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3853322409054041,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5009319131770253
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5009319131770253
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.551025104494728
            }
          },
          "combined_score": 0.551025104494728
        }
      },
      "similarity": 0.551025104494728
    },
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 419.7998894111968,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 419.7998894111968,
            "graph": 4.329000000000001
          },
          "normalized_scores": {
            "sparse": 0.3358399115289574,
            "graph": 1.0
          },
          "weighted_scores": {
            "sparse": 0.13433596461158298,
            "graph": 0.25
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 419.7998894111968,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.3358399115289574,
              "weight": 0.4,
              "weighted_score": 0.13433596461158298
            },
            "graph": {
              "raw_score": 4.329000000000001,
              "query_max": 4.329000000000001,
              "query_min": 1.7680000000000005,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "sparse": 34.952743688024455,
            "graph": 65.04725631197554
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.384335964611583,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4996367539950579
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4996367539950579
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5496004293945638
            }
          },
          "combined_score": 0.5496004293945638
        }
      },
      "similarity": 0.5496004293945638
    },
    {
      "metadata": {
        "doc_id": "CWE-367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "type": "Base",
        "original_content": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
        "relationships": [],
        "original_sparse_score": 402.91941340630893,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4843698884030285,
            "sparse": 402.91941340630893
          },
          "normalized_scores": {
            "dense": 0.4843698884030285,
            "sparse": 0.32233553072504717
          },
          "weighted_scores": {
            "dense": 0.16952946094105997,
            "sparse": 0.12893421229001886
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4843698884030285,
              "query_max": 0.5636608180102891,
              "query_min": 0.47795553978136596,
              "normalized_score": 0.4843698884030285,
              "weight": 0.35,
              "weighted_score": 0.16952946094105997
            },
            "sparse": {
              "raw_score": 402.91941340630893,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.32233553072504717,
              "weight": 0.4,
              "weighted_score": 0.12893421229001886
            }
          },
          "contribution_percentages": {
            "dense": 56.800701775792184,
            "sparse": 43.19929822420782
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2984636732310788,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.38800277520040244
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.38800277520040244
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4268030527204427
            }
          },
          "combined_score": 0.4268030527204427
        }
      },
      "similarity": 0.4268030527204427
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 405.04055198534337,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 405.04055198534337,
            "graph": 1.96992
          },
          "normalized_scores": {
            "sparse": 0.3240324415882747,
            "graph": 0.7035428571428571
          },
          "weighted_scores": {
            "sparse": 0.12961297663530988,
            "graph": 0.17588571428571428
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 405.04055198534337,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.3240324415882747,
              "weight": 0.4,
              "weighted_score": 0.12961297663530988
            },
            "graph": {
              "raw_score": 1.96992,
              "query_max": 4.329000000000001,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.7035428571428571,
              "weight": 0.25,
              "weighted_score": 0.17588571428571428
            }
          },
          "contribution_percentages": {
            "sparse": 42.426688063555964,
            "graph": 57.573311936444036
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.30549869092102416,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.366598429105229
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.366598429105229
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.40325827201575193
            }
          },
          "combined_score": 0.40325827201575193
        }
      },
      "similarity": 0.40325827201575193
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 400.2932899871218,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4954664839142909,
            "sparse": 400.2932899871218
          },
          "normalized_scores": {
            "dense": 0.4954664839142909,
            "sparse": 0.3202346319896974
          },
          "weighted_scores": {
            "dense": 0.1734132693700018,
            "sparse": 0.12809385279587898
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4954664839142909,
              "query_max": 0.5636608180102891,
              "query_min": 0.47795553978136596,
              "normalized_score": 0.4954664839142909,
              "weight": 0.35,
              "weighted_score": 0.1734132693700018
            },
            "sparse": {
              "raw_score": 400.2932899871218,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.3202346319896974,
              "weight": 0.4,
              "weighted_score": 0.12809385279587898
            }
          },
          "contribution_percentages": {
            "dense": 57.51548027266655,
            "sparse": 42.484519727333456
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.30150712216588077,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3618085465990569
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3618085465990569
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.39798940125896265
            }
          },
          "combined_score": 0.39798940125896265
        }
      },
      "similarity": 0.39798940125896265
    },
    {
      "metadata": {
        "doc_id": "CWE-120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "type": "Base",
        "original_content": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 215.32236266690833,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
          "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 215.32236266690833,
            "graph": 2.4232000000000005
          },
          "normalized_scores": {
            "sparse": 0.17225789013352666,
            "graph": 0.8654285714285717
          },
          "weighted_scores": {
            "sparse": 0.06890315605341067,
            "graph": 0.21635714285714291
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 215.32236266690833,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.17225789013352666,
              "weight": 0.4,
              "weighted_score": 0.06890315605341067
            },
            "graph": {
              "raw_score": 2.4232000000000005,
              "query_max": 4.329000000000001,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.8654285714285717,
              "weight": 0.25,
              "weighted_score": 0.21635714285714291
            }
          },
          "contribution_percentages": {
            "sparse": 24.154484979704797,
            "graph": 75.8455150202952
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.2852602989105536,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3708383885837197
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3708383885837197
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
                "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.3893803080129057
            }
          },
          "combined_score": 0.3893803080129057
        }
      },
      "similarity": 0.3893803080129057
    },
    {
      "metadata": {
        "doc_id": "CWE-277",
        "name": "Insecure Inherited Permissions",
        "type": "Variant",
        "original_content": "A product defines a set of insecure permissions that are inherited by objects that are created by the program.",
        "relationships": [],
        "original_sparse_score": 383.19237043412556,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4858058714945859,
            "sparse": 383.19237043412556
          },
          "normalized_scores": {
            "dense": 0.4858058714945859,
            "sparse": 0.30655389634730046
          },
          "weighted_scores": {
            "dense": 0.17003205502310503,
            "sparse": 0.12262155853892019
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4858058714945859,
              "query_max": 0.5636608180102891,
              "query_min": 0.47795553978136596,
              "normalized_score": 0.4858058714945859,
              "weight": 0.35,
              "weighted_score": 0.17003205502310503
            },
            "sparse": {
              "raw_score": 383.19237043412556,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.30655389634730046,
              "weight": 0.4,
              "weighted_score": 0.12262155853892019
            }
          },
          "contribution_percentages": {
            "dense": 58.100104404509025,
            "sparse": 41.899895595490975
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.29265361356202524,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3511843362744303
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3511843362744303
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.38630276990187334
            }
          },
          "combined_score": 0.38630276990187334
        }
      },
      "similarity": 0.38630276990187334
    },
    {
      "metadata": {
        "doc_id": "CWE-362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "type": "Class",
        "original_content": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.",
        "relationships": [],
        "original_sparse_score": 420.32341687681844,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5099338362263837,
            "sparse": 420.32341687681844
          },
          "normalized_scores": {
            "dense": 0.5099338362263837,
            "sparse": 0.33625873350145474
          },
          "weighted_scores": {
            "dense": 0.17847684267923428,
            "sparse": 0.1345034934005819
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5099338362263837,
              "query_max": 0.5636608180102891,
              "query_min": 0.47795553978136596,
              "normalized_score": 0.5099338362263837,
              "weight": 0.35,
              "weighted_score": 0.17847684267923428
            },
            "sparse": {
              "raw_score": 420.32341687681844,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.33625873350145474,
              "weight": 0.4,
              "weighted_score": 0.1345034934005819
            }
          },
          "contribution_percentages": {
            "dense": 57.02493802477071,
            "sparse": 42.97506197522928
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.3129803360798162,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.25038426886385295
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.25038426886385295
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.26290348230704563
            }
          },
          "combined_score": 0.26290348230704563
        }
      },
      "similarity": 0.26290348230704563
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 417.0521570602432,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 417.0521570602432,
            "graph": 2.5519999999999996
          },
          "normalized_scores": {
            "sparse": 0.33364172564819455,
            "graph": 0.9114285714285714
          },
          "weighted_scores": {
            "sparse": 0.13345669025927784,
            "graph": 0.22785714285714284
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 417.0521570602432,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.33364172564819455,
              "weight": 0.4,
              "weighted_score": 0.13345669025927784
            },
            "graph": {
              "raw_score": 2.5519999999999996,
              "query_max": 4.329000000000001,
              "query_min": 1.7680000000000005,
              "normalized_score": 0.9114285714285714,
              "weight": 0.25,
              "weighted_score": 0.22785714285714284
            }
          },
          "contribution_percentages": {
            "sparse": 36.93650174093282,
            "graph": 63.063498259067174
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.3613138331164207,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.28905106649313655
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.28905106649313655
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.23124085319450927
            }
          },
          "combined_score": 0.23124085319450927
        }
      },
      "similarity": 0.23124085319450927
    },
    {
      "metadata": {
        "doc_id": "CWE-667",
        "name": "Improper Locking",
        "type": "Class",
        "original_content": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.",
        "relationships": [],
        "original_sparse_score": 214.70910314137157,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4806113795899402,
            "sparse": 214.70910314137157
          },
          "normalized_scores": {
            "dense": 0.4806113795899402,
            "sparse": 0.17176728251309725
          },
          "weighted_scores": {
            "dense": 0.16821398285647907,
            "sparse": 0.0687069130052389
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4806113795899402,
              "query_max": 0.5636608180102891,
              "query_min": 0.47795553978136596,
              "normalized_score": 0.4806113795899402,
              "weight": 0.35,
              "weighted_score": 0.16821398285647907
            },
            "sparse": {
              "raw_score": 214.70910314137157,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.17176728251309725,
              "weight": 0.4,
              "weighted_score": 0.0687069130052389
            }
          },
          "contribution_percentages": {
            "dense": 71.00006195935515,
            "sparse": 28.99993804064484
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.23692089586171797,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.18953671668937438
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.18953671668937438
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.19901355252384312
            }
          },
          "combined_score": 0.19901355252384312
        }
      },
      "similarity": 0.19901355252384312
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 394.7869701434199,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 394.7869701434199
          },
          "normalized_scores": {
            "sparse": 0.31582957611473594
          },
          "weighted_scores": {
            "sparse": 0.12633183044589438
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 394.7869701434199,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.31582957611473594,
              "weight": 0.4,
              "weighted_score": 0.12633183044589438
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.12633183044589438,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.16423137957966272
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.16423137957966272
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.180654517537629
            }
          },
          "combined_score": 0.180654517537629
        }
      },
      "similarity": 0.180654517537629
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 375.4016793996259,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 375.4016793996259
          },
          "normalized_scores": {
            "sparse": 0.3003213435197007
          },
          "weighted_scores": {
            "sparse": 0.12012853740788028
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 375.4016793996259,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.3003213435197007,
              "weight": 0.4,
              "weighted_score": 0.12012853740788028
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.12012853740788028,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.15616709863024436
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.15616709863024436
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1717838084932688
            }
          },
          "combined_score": 0.1717838084932688
        }
      },
      "similarity": 0.1717838084932688
    },
    {
      "metadata": {
        "doc_id": "CWE-415",
        "name": "Double Free",
        "type": "Variant",
        "original_content": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
        "relationships": [],
        "original_sparse_score": 370.6638037885597,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 370.6638037885597
          },
          "normalized_scores": {
            "sparse": 0.29653104303084776
          },
          "weighted_scores": {
            "sparse": 0.11861241721233912
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 370.6638037885597,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.29653104303084776,
              "weight": 0.4,
              "weighted_score": 0.11861241721233912
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11861241721233912,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.14233490065480695
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.14233490065480695
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.15656839072028766
            }
          },
          "combined_score": 0.15656839072028766
        }
      },
      "similarity": 0.15656839072028766
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 219.14332415448,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 219.14332415448
          },
          "normalized_scores": {
            "sparse": 0.175314659323584
          },
          "weighted_scores": {
            "sparse": 0.07012586372943361
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 219.14332415448,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.175314659323584,
              "weight": 0.4,
              "weighted_score": 0.07012586372943361
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.07012586372943361,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.0911636228482637
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0911636228482637
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.10027998513309007
            }
          },
          "combined_score": 0.10027998513309007
        }
      },
      "similarity": 0.10027998513309007
    },
    {
      "metadata": {
        "doc_id": "CWE-295",
        "name": "Improper Certificate Validation",
        "type": "Base",
        "original_content": "The product does not validate, or incorrectly validates, a certificate.",
        "relationships": [],
        "original_sparse_score": 213.82817768559445,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 213.82817768559445
          },
          "normalized_scores": {
            "sparse": 0.17106254214847558
          },
          "weighted_scores": {
            "sparse": 0.06842501685939023
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 213.82817768559445,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.17106254214847558,
              "weight": 0.4,
              "weighted_score": 0.06842501685939023
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06842501685939023,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.0889525219172073
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0889525219172073
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.09784777410892805
            }
          },
          "combined_score": 0.09784777410892805
        }
      },
      "similarity": 0.09784777410892805
    },
    {
      "metadata": {
        "doc_id": "CWE-770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [],
        "original_sparse_score": 213.42411303839992,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 213.42411303839992
          },
          "normalized_scores": {
            "sparse": 0.17073929043071995
          },
          "weighted_scores": {
            "sparse": 0.06829571617228798
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 213.42411303839992,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.17073929043071995,
              "weight": 0.4,
              "weighted_score": 0.06829571617228798
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06829571617228798,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.08878443102397438
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08878443102397438
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.09766287412637183
            }
          },
          "combined_score": 0.09766287412637183
        }
      },
      "similarity": 0.09766287412637183
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 217.97715581013782,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 217.97715581013782
          },
          "normalized_scores": {
            "sparse": 0.17438172464811025
          },
          "weighted_scores": {
            "sparse": 0.0697526898592441
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 217.97715581013782,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.17438172464811025,
              "weight": 0.4,
              "weighted_score": 0.0697526898592441
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.0697526898592441,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.08370322783109292
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08370322783109292
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.09207355061420222
            }
          },
          "combined_score": 0.09207355061420222
        }
      },
      "similarity": 0.09207355061420222
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 380.70402553972684,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 380.70402553972684
          },
          "normalized_scores": {
            "sparse": 0.30456322043178147
          },
          "weighted_scores": {
            "sparse": 0.1218252881727126
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 380.70402553972684,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.30456322043178147,
              "weight": 0.4,
              "weighted_score": 0.1218252881727126
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.1218252881727126,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.09746023053817009
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.09746023053817009
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.07796818443053607
            }
          },
          "combined_score": 0.07796818443053607
        }
      },
      "similarity": 0.07796818443053607
    },
    {
      "metadata": {
        "doc_id": "CWE-345",
        "name": "Insufficient Verification of Data Authenticity",
        "type": "Class",
        "original_content": "The product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.",
        "relationships": [],
        "original_sparse_score": 380.45265680862036,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 380.45265680862036
          },
          "normalized_scores": {
            "sparse": 0.3043621254468963
          },
          "weighted_scores": {
            "sparse": 0.12174485017875852
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 380.45265680862036,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.3043621254468963,
              "weight": 0.4,
              "weighted_score": 0.12174485017875852
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.12174485017875852,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.09739588014300682
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.09739588014300682
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.07791670411440546
            }
          },
          "combined_score": 0.07791670411440546
        }
      },
      "similarity": 0.07791670411440546
    },
    {
      "metadata": {
        "doc_id": "CWE-662",
        "name": "Improper Synchronization",
        "type": "Class",
        "original_content": "The product utilizes multiple threads or processes to allow temporary access to a shared resource that can only be exclusive to one process at a time, but it does not properly synchronize these actions, which might cause simultaneous accesses of this resource by multiple threads or processes.",
        "relationships": [],
        "original_sparse_score": 230.48544959593275,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 230.48544959593275
          },
          "normalized_scores": {
            "sparse": 0.1843883596767462
          },
          "weighted_scores": {
            "sparse": 0.07375534387069847
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 230.48544959593275,
              "query_max": 422.9132528293878,
              "query_min": 213.42411303839992,
              "normalized_score": 0.1843883596767462,
              "weight": 0.4,
              "weighted_score": 0.07375534387069847
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.07375534387069847,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.059004275096558784
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.059004275096558784
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.04720342007724703
            }
          },
          "combined_score": 0.04720342007724703
        }
      },
      "similarity": 0.04720342007724703
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-119",
      "CWE-120",
      "CWE-754",
      "CWE-123",
      "CWE-362",
      "CWE-367"
    ],
    "critic_additional": [
      "CWE-676",
      "CWE-787",
      "CWE-122",
      "CWE-20",
      "CWE-121"
    ]
  }
}