{
  "cve_id": "CVE-2022-38381",
  "description": "An improper handling of malformed request vulnerability [CWE-228] exists in FortiADC 5.0 all versions, 6.0.0 all versions, 6.1.0 all versions, 6.2.0 through 6.2.3, and 7.0.0 through 7.0.2. This may allow a remote attacker without privileges to bypass some Web Application Firewall (WAF) protection such as the SQL Injection and XSS filters via a malformed HTTP request.",
  "key_phrases": {
    "rootcause": "improper handling of malformed request",
    "weakness": "",
    "impact": "bypass SQL Injection and XSS filters",
    "vector": "malformed HTTP request",
    "attacker": "remote attacker without privileges",
    "product": "FortiADC",
    "version": [
      "5.0 all versions",
      "6.0.0 all versions",
      "6.1.0 all versions",
      "6.2.0 through 6.2.3",
      "7.0.0 through 7.0.2"
    ],
    "component": ""
  },
  "reference_content": "- **Root cause of vulnerability**: Improper handling of malformed HTTP requests.\n- **Weaknesses/vulnerabilities present**:  The vulnerability lies in the FortiADC's failure to properly handle malformed HTTP requests, which allows for the bypass of Web Application Firewall (WAF) protections. Specifically, SQL Injection and Cross-Site Scripting (XSS) filters can be circumvented.\n- **Impact of exploitation**: Successful exploitation can lead to the bypass of WAF protections, potentially allowing an attacker to inject SQL queries, execute arbitrary code or commands.\n- **Attack vectors**:  A remote attacker can exploit this vulnerability by sending a malformed HTTP request.\n- **Required attacker capabilities/position**: The attacker needs to be able to send HTTP requests to the vulnerable FortiADC instance. No specific privileges are required.\n\nThe provided content gives more detail than the CVE description by specifying the affected versions and providing a timeline for the publication of the advisory. It also specifies that the vulnerability can bypass SQL injection and XSS filters.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID    | CWE Name                                                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :--------- | :--------------------------------------------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-444 | Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') | 0.75       | Base                  | Allowed                       | Allowed                      |\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 0.65       | Base                  | Allowed                       | Allowed                      |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.65       | Base                  | Allowed                       | Allowed                      |\n| CWE-228     | Improper Handling of Syntactically Invalid Structure                                                      | 0.50       | Class                   | Allowed-with-Review               | Allowed-with-Review              |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.70\n*   **Evidence Strength:** MEDIUM\n\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability description clearly states an **improper handling of malformed requests** [CWE-228], leading to the bypass of WAF protections, specifically SQL Injection and XSS filters. The \"Retriever Results\" highlight CWE-444 (Inconsistent Interpretation of HTTP Requests) as the top candidate, which aligns with the description of the vulnerability. Since the vulnerability involves bypassing SQL Injection and XSS filters, CWE-89 (Improper Neutralization of Special Elements used in an SQL Command) and CWE-79 (Improper Neutralization of Input During Web Page Generation) are also relevant.  CWE-228 is included as the **improper handling of the malformed requests** is the direct cause.\n  - *Relationship Analysis:* CWE-444 is a Base level CWE, which is preferred. CWE-89 and CWE-79 are related to the impact of the vulnerability (bypassing SQL Injection and XSS filters), not the root cause. CWE-228 is a Class level, but accurately describes the **improper handling of malformed request**.\n\n- **Confidence Score:**\n  - Confidence: 0.70 (Medium evidence because while the description is clear, more specific technical details would increase confidence.)\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID    | CWE Name                                                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :--------- | :--------------------------------------------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-444 | Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') | 0.75       | Base                  | Allowed                       | Allowed                      |\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 0.65       | Base                  | Allowed                       | Allowed                      |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.65       | Base                  | Allowed                       | Allowed                      |\n| CWE-228     | Improper Handling of Syntactically Invalid Structure                                                      | 0.50       | Class                   | Allowed-with-Review               | Allowed-with-Review              |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.70\n*   **Evidence Strength:** MEDIUM\n\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability description clearly states an **improper handling of malformed requests** [CWE-228], leading to the bypass of WAF protections, specifically SQL Injection and XSS filters. The \"Retriever Results\" highlight CWE-444 (Inconsistent Interpretation of HTTP Requests) as the top candidate, which aligns with the description of the vulnerability. Since the vulnerability involves bypassing SQL Injection and XSS filters, CWE-89 (Improper Neutralization of Special Elements used in an SQL Command) and CWE-79 (Improper Neutralization of Input During Web Page Generation) are also relevant.  CWE-228 is included as the **improper handling of the malformed requests** is the direct cause.\n  - *Relationship Analysis:* CWE-444 is a Base level CWE, which is preferred. CWE-89 and CWE-79 are related to the impact of the vulnerability (bypassing SQL Injection and XSS filters), not the root cause. CWE-228 is a Class level, but accurately describes the **improper handling of malformed request**.\n\n- **Confidence Score:**\n  - Confidence: 0.70 (Medium evidence because while the description is clear, more specific technical details would increase confidence.)\n---",
  "criticism": "Okay, let's break down the provided analysis and see how well it aligns with the full CWE specifications.\n\n**Overall Assessment:**\n\nThe analysis shows a good understanding of the vulnerability and attempts to map it to relevant CWEs. The inclusion of CWE-444, CWE-89, CWE-79, and CWE-228 demonstrates a multi-faceted perspective. However, the confidence levels could be improved with more precise justifications. The analysis would benefit from explicitly considering alternative CWEs that were considered and why they were ultimately rejected.\n\n**Detailed Review:**\n\nHere's a breakdown of each CWE mapping, along with suggestions for improvement:\n\n1.  **CWE-444: Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') - Confidence 0.75 - Allowed**\n\n    *   **Strengths:** This is a strong candidate, especially given that the vulnerability involves \"malformed HTTP requests.\" The core idea of CWE-444 is that an intermediary (like FortiADC, acting as a WAF) interprets the request differently than the backend server.  This could lead to the WAF missing malicious content embedded within the request.\n    *   **Weaknesses/Suggestions:**\n        *   The analysis could be strengthened by explicitly detailing *how* the malformed request leads to inconsistent interpretation. What *specific* types of malformed requests are in play (e.g., issues with Content-Length, Transfer-Encoding, header injection, etc.)?  The more specific the description, the higher the confidence.\n        *   Mitigation:  Mention that strict HTTP parsing, as recommended in the CWE, is essential.\n        *   Consider and explicitly reject alternatives like CWE-113 (HTTP Request/Response Splitting). While related, splitting usually involves CRLF injection, which might not be the primary mechanism here.\n\n2.  **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - Confidence 0.65 - Allowed**\n\n    *   **Strengths:** This mapping is reasonable because the impact of the vulnerability is that it bypasses SQL injection filters.\n    *   **Weaknesses/Suggestions:**\n        *   This CWE should not be considered a *root cause*. It's a *consequence* or *impact* of the underlying improper handling of the malformed request. The WAF *should* be preventing SQL injection, but it's failing to do so because of the malformed request.\n        *   Reduce the confidence level. The inclusion of CWE-89 is warranted, but secondary.\n        *   Mitigation: Suggest using parameterized queries and following the principle of least privilege for database accounts. These are standard SQL injection prevention techniques, but only relevant here because the WAF is failing.\n        *   Clarify the relationship:  \"The improper handling of malformed requests allows attackers to bypass SQL injection filters, potentially leading to SQL injection vulnerabilities on the backend server.\"\n\n3.  **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') - Confidence 0.65 - Allowed**\n\n    *   **Strengths:** Similar to CWE-89, this is also a reasonable mapping since bypassing XSS filters is a stated impact.\n    *   **Weaknesses/Suggestions:**\n        *   Again, this is not the *root cause*. It's a consequence of the WAF failure.\n        *   Reduce the confidence level for the same reasons as CWE-89.\n        *   Mitigation: Suggest output encoding/escaping techniques as specified in the CWE.\n        *  Clarify the relationship: \"The improper handling of malformed requests allows attackers to bypass XSS filters, potentially leading to XSS vulnerabilities...\"\n\n4.  **CWE-228: Improper Handling of Syntactically Invalid Structure - Confidence 0.50 - Allowed-with-Review**\n\n    *   **Strengths:** This CWE aligns well with the description's key phrase: \"improper handling of malformed request.\"\n    *   **Weaknesses/Suggestions:**\n        *   CWE-228 is a Class-level CWE, and the mapping guidance recommends looking for more specific Base-level children. This is a key point.\n        *   The low confidence reflects this concern.\n        *   **Crucially, consider CWE-1286: Improper Validation of Syntactic Correctness of Input.** This is a Base-level CWE and a child of CWE-20. The FortiADC *failed to validate* that the HTTP request was syntactically correct.  This failure led to the bypass of the WAF.  This aligns more directly with the root cause. If you select CWE-1286 the confidence score should increase.\n        *   If you use CWE-1286, mitigate using \"accept known good\" input validation strategy.\n        *   If you stick with CWE-228, justify *why* none of its children are a better fit.\n\n**Additional Considerations:**\n\n*   **Relationship Analysis:** It is important to consider that the analysis has to determine if the WAF is an intermediary agent or the final destination. If the FortiADC is the final destination then an alternative CWE to consider is CWE-20, since the FortiADC could be considered to be failing to validate the request.\n*   **CWE Chaining:** Consider explicitly stating the CWE chain (even if it's just in the justification). Something like: \"CWE-1286 (Improper Validation of Syntactic Correctness of Input) -> CWE-89 (SQL Injection Bypass) / CWE-79 (XSS Bypass).\"\n*   **Alternative Considerations:** Explicitly mention that CWE-74 (\"Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\") was considered and rejected because it's too high-level.  The analysis should also detail why CWE-74 was considered/rejected.\n*   **Abstraction Level:** Aim for Base-level CWEs where possible. This provides more specific information about the nature of the weakness.\n*   **Mitigation Strategies:** Always link the suggested mitigations back to the chosen CWEs.\n\n**Revised Summary Table (Example):**\n\n| CWE ID    | CWE Name                                                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes                                                                                                                              |\n| :--------- | :--------------------------------------------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| CWE-1286 | Improper Validation of Syntactic Correctness of Input | 0.80       | Base                  | Allowed                       | Root Cause: The FortiADC fails to validate the syntactic correctness of the HTTP request.                                                                        |\n| CWE-444 | Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') | 0.60       | Base                  | Allowed                       | Allowed                      | Alternate Root Cause or Contributing Factor: The FortiADC interprets the request differently than the back-end server due to the malformed syntax.   |\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 0.50       | Base                  | Allowed                       | Consequence: The malformed request bypasses SQL injection filters.                                                                            |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.50       | Base                  | Allowed                       | Consequence: The malformed request bypasses XSS filters.                                                                                   |\n\n**In Summary:**\n\nThe analysis is a good starting point. By focusing on more specific CWEs (especially CWE-1286), providing stronger justifications for each mapping, detailing the attack mechanisms more precisely, explicitly considering and rejecting alternatives, and emphasizing the root cause vs. consequence relationship, the analysis can be significantly improved and the confidence levels increased.",
  "resolution": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :------- | :--------------------------------------------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-1286 | Improper Validation of Syntactic Correctness of Input | 0.85 | Base | Allowed | Primary: **ROOTCAUSE** - The FortiADC fails to validate the syntactic correctness of the HTTP request, leading to subsequent bypass of security filters. |\n| CWE-444 | Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') | 0.70 | Base | Allowed | Secondary: Contributes to the bypass due to differing interpretations of malformed requests. |\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 0.60 | Base | Allowed | Secondary: Impact - The malformed request bypasses SQL injection filters, potentially leading to SQL injection vulnerabilities. |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.60 | Base | Allowed | Secondary: Impact - The malformed request bypasses XSS filters, potentially leading to XSS vulnerabilities. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe analysis focused on several key CWE relationships to arrive at the final classification:\n\n*   **Parent-Child Hierarchical Relationships:** Initially, CWE-228 (Improper Handling of Syntactically Invalid Structure), a Class-level CWE, was considered. However, through analysis of its child CWEs, CWE-1286 (Improper Validation of Syntactic Correctness of Input), a Base-level CWE, was identified as a more specific and appropriate fit for the **ROOTCAUSE**.\n\n*   **Chain Relationships:** The analysis identified a clear chain: CWE-1286 (failure to validate input) leads to CWE-89 (SQL Injection bypass) and CWE-79 (XSS bypass). This chain highlights how the initial **WEAKNESS** results in concrete security impacts. CWE-444 can also be part of this chain since the improper validation can lead to the inconsistent interpretation.\n\n*   **Peer Relationships:** CWE-20 (Improper Input Validation) was considered but deemed too general. While CWE-1286 is a child of CWE-20, it provides a more precise description of the validation failure.\n\n*   **Abstraction Levels:** The decision to prioritize Base-level CWEs (CWE-1286, CWE-444, CWE-89, CWE-79) over Class-level CWEs (CWE-228) reflects a commitment to specificity. Base-level CWEs offer more actionable information for remediation and prevention.\n\n```mermaid\ngraph TD\n    cwe1286[\"CWE-1286: Improper Validation of Syntactic Correctness of Input\"]\n    cwe444[\"CWE-444: Inconsistent Interpretation of HTTP Requests\"]\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe228[\"CWE-228: Improper Handling of Syntactically Invalid Structure\"]\n\n    cwe1286 -->|CANPRECEDE| cwe89\n    cwe1286 -->|CANPRECEDE| cwe79\n    cwe1286 -->|CANPRECEDE| cwe444\n    cwe1286 -->|CHILDOF| cwe20\n    cwe1286 -->|CHILDOF| cwe228\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe1286 primary\n    class cwe444,cwe89,cwe79 secondary\n    class cwe20,cwe228 tertiary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **ROOTCAUSE**, the improper validation of syntactic correctness of input (CWE-1286). This **WEAKNESS** allows malformed HTTP requests to be processed. Due to this initial failure, the WAF is unable to correctly interpret these malformed requests (CWE-444), and thus fails to neutralize malicious elements. This leads to the bypass of SQL injection (CWE-89) and XSS (CWE-79) filters. The ultimate impact is that attackers can inject malicious SQL commands or scripts into the system, potentially leading to data breaches or other security compromises.\n\n## Summary of Analysis\n\nThe initial analysis correctly identified several relevant CWEs, including CWE-444, CWE-89, CWE-79, and CWE-228. However, it lacked a clear articulation of the **ROOTCAUSE** and the relationships between these CWEs. The criticism highlighted the importance of selecting the most specific CWE possible and considering the abstraction level.\n\nBased on the vulnerability description (\"An **improper handling of malformed request vulnerability** [CWE-228] exists... This may allow a remote attacker without privileges to bypass some Web Application Firewall (WAF) protection such as the SQL Injection and XSS filters via a malformed HTTP request.\") and the provided CWE definitions, CWE-1286 (Improper Validation of Syntactic Correctness of Input) was chosen as the primary CWE because it directly addresses the failure to validate the malformed HTTP request. This aligns with the recommendation to select Base-level CWEs for **ROOTCAUSE** analysis.\n\nCWE-444 was retained as a secondary CWE because inconsistent interpretation of HTTP requests contributes to the bypass, especially when coupled with the lack of proper validation.\n\nCWE-89 and CWE-79 were also retained, but classified as secondary CWEs representing the impact of the vulnerability (bypassing SQL injection and XSS filters). They are consequences of the initial validation failure.\n\nThe selection of CWE-1286 provides the optimal level of specificity because it directly addresses the **ROOTCAUSE** of the vulnerability. The other CWEs contribute to a more complete understanding of the vulnerability chain, from initial **WEAKNESS** to potential impact.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-444",
        "name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
        "type": "Base",
        "original_content": "The product acts as an intermediary HTTP agent\n         (such as a proxy or firewall) in the data flow between two\n         entities such as a client and server, but it does not\n         interpret malformed HTTP requests or responses in ways that\n         are consistent with how the messages will be processed by\n         those entities that are at the ultimate destination.",
        "relationships": [],
        "original_sparse_score": 345.3990669703323,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.607501746007583,
            "sparse": 345.3990669703323,
            "graph": 1.6957257350397295
          },
          "normalized_scores": {
            "dense": 0.607501746007583,
            "sparse": 0.27631925357626586,
            "graph": 0.6056163339427606
          },
          "weighted_scores": {
            "dense": 0.21262561110265404,
            "sparse": 0.11052770143050634,
            "graph": 0.15140408348569015
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.607501746007583,
              "query_max": 0.6450260124724461,
              "query_min": 0.576736306964229,
              "normalized_score": 0.607501746007583,
              "weight": 0.35,
              "weighted_score": 0.21262561110265404
            },
            "sparse": {
              "raw_score": 345.3990669703323,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.27631925357626586,
              "weight": 0.4,
              "weighted_score": 0.11052770143050634
            },
            "graph": {
              "raw_score": 1.6957257350397295,
              "query_max": 2.4699999999999998,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.6056163339427606,
              "weight": 0.25,
              "weighted_score": 0.15140408348569015
            }
          },
          "contribution_percentages": {
            "dense": 44.805035784166364,
            "sparse": 23.29069199168396,
            "graph": 31.904272224149686
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4745573960188505,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6169246148245057
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6169246148245057
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6786170763069563
            }
          },
          "combined_score": 0.6786170763069563
        }
      },
      "similarity": 0.6786170763069563
    },
    {
      "metadata": {
        "doc_id": "CWE-1286",
        "name": "Improper Validation of Syntactic Correctness of Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.",
        "relationships": [],
        "original_sparse_score": 348.7994492467467,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 348.7994492467467,
            "graph": 2.4699999999999998
          },
          "normalized_scores": {
            "sparse": 0.27903955939739733,
            "graph": 0.8821428571428571
          },
          "weighted_scores": {
            "sparse": 0.11161582375895894,
            "graph": 0.22053571428571428
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 348.7994492467467,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.27903955939739733,
              "weight": 0.4,
              "weighted_score": 0.11161582375895894
            },
            "graph": {
              "raw_score": 2.4699999999999998,
              "query_max": 2.4699999999999998,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.8821428571428571,
              "weight": 0.25,
              "weighted_score": 0.22053571428571428
            }
          },
          "contribution_percentages": {
            "sparse": 33.6038858696921,
            "graph": 66.3961141303079
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.33215153804467323,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4317969994580752
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4317969994580752
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.47497669940388276
            }
          },
          "combined_score": 0.47497669940388276
        }
      },
      "similarity": 0.47497669940388276
    },
    {
      "metadata": {
        "doc_id": "CWE-89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "relationships": [],
        "original_sparse_score": 359.6894463212596,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 359.6894463212596,
            "graph": 2.3998000000000004
          },
          "normalized_scores": {
            "sparse": 0.28775155705700767,
            "graph": 0.8570714285714287
          },
          "weighted_scores": {
            "sparse": 0.11510062282280308,
            "graph": 0.21426785714285718
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 359.6894463212596,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.28775155705700767,
              "weight": 0.4,
              "weighted_score": 0.11510062282280308
            },
            "graph": {
              "raw_score": 2.3998000000000004,
              "query_max": 2.4699999999999998,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.8570714285714287,
              "weight": 0.25,
              "weighted_score": 0.21426785714285718
            }
          },
          "contribution_percentages": {
            "sparse": 34.945852388426296,
            "graph": 65.0541476115737
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.32936847996566027,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.42817902395535834
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.42817902395535834
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4709969263508942
            }
          },
          "combined_score": 0.4709969263508942
        }
      },
      "similarity": 0.4709969263508942
    },
    {
      "metadata": {
        "doc_id": "CWE-78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 330.8690181059386,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5780268530519008,
            "sparse": 330.8690181059386
          },
          "normalized_scores": {
            "dense": 0.5780268530519008,
            "sparse": 0.26469521448475086
          },
          "weighted_scores": {
            "dense": 0.20230939856816527,
            "sparse": 0.10587808579390035
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5780268530519008,
              "query_max": 0.6450260124724461,
              "query_min": 0.576736306964229,
              "normalized_score": 0.5780268530519008,
              "weight": 0.35,
              "weighted_score": 0.20230939856816527
            },
            "sparse": {
              "raw_score": 330.8690181059386,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.26469521448475086,
              "weight": 0.4,
              "weighted_score": 0.10587808579390035
            }
          },
          "contribution_percentages": {
            "dense": 65.64491059295828,
            "sparse": 34.35508940704172
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3081874843620656,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4006437296706853
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4006437296706853
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.44070810263775384
            }
          },
          "combined_score": 0.44070810263775384
        }
      },
      "similarity": 0.44070810263775384
    },
    {
      "metadata": {
        "doc_id": "CWE-79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "type": "Base",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "relationships": [],
        "original_sparse_score": 344.32790367590917,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 344.32790367590917,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.2754623229407273,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.11018492917629093,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 344.32790367590917,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.2754623229407273,
              "weight": 0.4,
              "weighted_score": 0.11018492917629093
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 2.4699999999999998,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 35.831756449955236,
            "graph": 64.16824355004476
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.30750635774771956,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.39975826507203543
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.39975826507203543
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.43973409157923904
            }
          },
          "combined_score": 0.43973409157923904
        }
      },
      "similarity": 0.43973409157923904
    },
    {
      "metadata": {
        "doc_id": "CWE-113",
        "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
        "type": "Variant",
        "original_content": "The product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.",
        "relationships": [],
        "original_sparse_score": 348.53874650541593,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6133089940000055,
            "sparse": 348.53874650541593
          },
          "normalized_scores": {
            "dense": 0.6133089940000055,
            "sparse": 0.27883099720433274
          },
          "weighted_scores": {
            "dense": 0.2146581479000019,
            "sparse": 0.11153239888173311
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6133089940000055,
              "query_max": 0.6450260124724461,
              "query_min": 0.576736306964229,
              "normalized_score": 0.6133089940000055,
              "weight": 0.35,
              "weighted_score": 0.2146581479000019
            },
            "sparse": {
              "raw_score": 348.53874650541593,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.27883099720433274,
              "weight": 0.4,
              "weighted_score": 0.11153239888173311
            }
          },
          "contribution_percentages": {
            "dense": 65.80759314390458,
            "sparse": 34.192406856095424
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.326190546781735,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.391428656138082
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.391428656138082
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.43057152175189023
            }
          },
          "combined_score": 0.43057152175189023
        }
      },
      "similarity": 0.43057152175189023
    },
    {
      "metadata": {
        "doc_id": "CWE-228",
        "name": "Improper Handling of Syntactically Invalid Structure",
        "type": "Class",
        "original_content": "The product does not handle or incorrectly handles input that is not syntactically well-formed with respect to the associated specification.",
        "relationships": [],
        "original_sparse_score": 526.2941642112879,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.6286084845270546,
            "sparse": 526.2941642112879
          },
          "normalized_scores": {
            "dense": 0.6286084845270546,
            "sparse": 0.4210353313690303
          },
          "weighted_scores": {
            "dense": 0.22001296958446911,
            "sparse": 0.16841413254761214
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.6286084845270546,
              "query_max": 0.6450260124724461,
              "query_min": 0.576736306964229,
              "normalized_score": 0.6286084845270546,
              "weight": 0.35,
              "weighted_score": 0.22001296958446911
            },
            "sparse": {
              "raw_score": 526.2941642112879,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.4210353313690303,
              "weight": 0.4,
              "weighted_score": 0.16841413254761214
            }
          },
          "contribution_percentages": {
            "dense": 56.642023272015564,
            "sparse": 43.357976727984436
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.38842710213208126,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.310741681705665
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.310741681705665
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.3262787657909483
            }
          },
          "combined_score": 0.3262787657909483
        }
      },
      "similarity": 0.3262787657909483
    },
    {
      "metadata": {
        "doc_id": "CWE-287",
        "name": "Improper Authentication",
        "type": "Class",
        "original_content": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
        "relationships": [],
        "original_sparse_score": 346.8333260270349,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1390",
              "Comment": "Weak Authentication"
            },
            {
              "CweID": "306",
              "Comment": "Missing Authentication for Critical Function"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5785311209222164,
            "sparse": 346.8333260270349
          },
          "normalized_scores": {
            "dense": 0.5785311209222164,
            "sparse": 0.2774666608216279
          },
          "weighted_scores": {
            "dense": 0.20248589232277572,
            "sparse": 0.11098666432865117
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5785311209222164,
              "query_max": 0.6450260124724461,
              "query_min": 0.576736306964229,
              "normalized_score": 0.5785311209222164,
              "weight": 0.35,
              "weighted_score": 0.20248589232277572
            },
            "sparse": {
              "raw_score": 346.8333260270349,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.2774666608216279,
              "weight": 0.4,
              "weighted_score": 0.11098666432865117
            }
          },
          "contribution_percentages": {
            "dense": 64.59445588659125,
            "sparse": 35.405544113408745
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.3134725566514269,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.25077804532114156
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.25077804532114156
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1390",
                    "Comment": "Weak Authentication"
                  },
                  {
                    "CweID": "306",
                    "Comment": "Missing Authentication for Critical Function"
                  }
                ]
              },
              "score_after": 0.20062243625691326
            }
          },
          "combined_score": 0.20062243625691326
        }
      },
      "similarity": 0.20062243625691326
    },
    {
      "metadata": {
        "doc_id": "CWE-74",
        "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
        "type": "Class",
        "original_content": "The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",
        "relationships": [],
        "original_sparse_score": 342.33461818860144,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.",
          "comments": "Examine the children and descendants of this entry to find a more precise mapping.",
          "reasons": [
            "Frequent Misuse",
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 342.33461818860144,
            "graph": 1.6736000000000002
          },
          "normalized_scores": {
            "sparse": 0.27386769455088117,
            "graph": 0.5977142857142859
          },
          "weighted_scores": {
            "sparse": 0.10954707782035247,
            "graph": 0.14942857142857147
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 342.33461818860144,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.27386769455088117,
              "weight": 0.4,
              "weighted_score": 0.10954707782035247
            },
            "graph": {
              "raw_score": 1.6736000000000002,
              "query_max": 2.4699999999999998,
              "query_min": 1.6016000000000004,
              "normalized_score": 0.5977142857142859,
              "weight": 0.25,
              "weighted_score": 0.14942857142857147
            }
          },
          "contribution_percentages": {
            "sparse": 42.30014603228479,
            "graph": 57.69985396771522
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.2589756492489239,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.20718051939913915
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.20718051939913915
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.",
                "comments": "Examine the children and descendants of this entry to find a more precise mapping.",
                "reasons": [
                  "Frequent Misuse",
                  "Abstraction"
                ]
              },
              "score_after": 0.16574441551931132
            }
          },
          "combined_score": 0.16574441551931132
        }
      },
      "similarity": 0.16574441551931132
    },
    {
      "metadata": {
        "doc_id": "CWE-209",
        "name": "Generation of Error Message Containing Sensitive Information",
        "type": "Base",
        "original_content": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
        "relationships": [],
        "original_sparse_score": 339.38662646584066,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 339.38662646584066
          },
          "normalized_scores": {
            "sparse": 0.2715093011726725
          },
          "weighted_scores": {
            "sparse": 0.10860372046906902
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 339.38662646584066,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.2715093011726725,
              "weight": 0.4,
              "weighted_score": 0.10860372046906902
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10860372046906902,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.14118483660978973
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.14118483660978973
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1553033202707687
            }
          },
          "combined_score": 0.1553033202707687
        }
      },
      "similarity": 0.1553033202707687
    },
    {
      "metadata": {
        "doc_id": "CWE-918",
        "name": "Server-Side Request Forgery (SSRF)",
        "type": "Base",
        "original_content": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
        "relationships": [],
        "original_sparse_score": 337.9597221963596,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 337.9597221963596
          },
          "normalized_scores": {
            "sparse": 0.2703677777570877
          },
          "weighted_scores": {
            "sparse": 0.10814711110283509
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 337.9597221963596,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.2703677777570877,
              "weight": 0.4,
              "weighted_score": 0.10814711110283509
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10814711110283509,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.14059124443368562
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.14059124443368562
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1546503688770542
            }
          },
          "combined_score": 0.1546503688770542
        }
      },
      "similarity": 0.1546503688770542
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 336.4972414741227,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 336.4972414741227
          },
          "normalized_scores": {
            "sparse": 0.26919779317929815
          },
          "weighted_scores": {
            "sparse": 0.10767911727171926
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 336.4972414741227,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.26919779317929815,
              "weight": 0.4,
              "weighted_score": 0.10767911727171926
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10767911727171926,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13998285245323505
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13998285245323505
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.15398113769855856
            }
          },
          "combined_score": 0.15398113769855856
        }
      },
      "similarity": 0.15398113769855856
    },
    {
      "metadata": {
        "doc_id": "CWE-23",
        "name": "Relative Path Traversal",
        "type": "Base",
        "original_content": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.",
        "relationships": [],
        "original_sparse_score": 336.17317179826694,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 336.17317179826694
          },
          "normalized_scores": {
            "sparse": 0.26893853743861357
          },
          "weighted_scores": {
            "sparse": 0.10757541497544543
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 336.17317179826694,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.26893853743861357,
              "weight": 0.4,
              "weighted_score": 0.10757541497544543
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10757541497544543,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13984803946807906
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13984803946807906
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.15383284341488698
            }
          },
          "combined_score": 0.15383284341488698
        }
      },
      "similarity": 0.15383284341488698
    },
    {
      "metadata": {
        "doc_id": "CWE-611",
        "name": "Improper Restriction of XML External Entity Reference",
        "type": "Base",
        "original_content": "The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",
        "relationships": [],
        "original_sparse_score": 335.21576265827485,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 335.21576265827485
          },
          "normalized_scores": {
            "sparse": 0.26817261012661986
          },
          "weighted_scores": {
            "sparse": 0.10726904405064795
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 335.21576265827485,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.26817261012661986,
              "weight": 0.4,
              "weighted_score": 0.10726904405064795
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10726904405064795,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13944975726584236
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13944975726584236
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1533947329924266
            }
          },
          "combined_score": 0.1533947329924266
        }
      },
      "similarity": 0.1533947329924266
    },
    {
      "metadata": {
        "doc_id": "CWE-502",
        "name": "Deserialization of Untrusted Data",
        "type": "Base",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "relationships": [],
        "original_sparse_score": 332.2175313032132,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 332.2175313032132
          },
          "normalized_scores": {
            "sparse": 0.2657740250425706
          },
          "weighted_scores": {
            "sparse": 0.10630961001702824
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 332.2175313032132,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.2657740250425706,
              "weight": 0.4,
              "weighted_score": 0.10630961001702824
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.10630961001702824,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13820249302213672
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13820249302213672
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1520227423243504
            }
          },
          "combined_score": 0.1520227423243504
        }
      },
      "similarity": 0.1520227423243504
    },
    {
      "metadata": {
        "doc_id": "CWE-94",
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
        "relationships": [],
        "original_sparse_score": 335.3784796169693,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
          "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
          "reasons": [
            "Frequent Misuse",
            "Frequent Misinterpretation"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 335.3784796169693
          },
          "normalized_scores": {
            "sparse": 0.2683027836935754
          },
          "weighted_scores": {
            "sparse": 0.10732111347743017
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 335.3784796169693,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.2683027836935754,
              "weight": 0.4,
              "weighted_score": 0.10732111347743017
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.10732111347743017,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.13951744752065923
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13951744752065923
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
                "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
                "reasons": [
                  "Frequent Misuse",
                  "Frequent Misinterpretation"
                ]
              },
              "score_after": 0.1464933198966922
            }
          },
          "combined_score": 0.1464933198966922
        }
      },
      "similarity": 0.1464933198966922
    },
    {
      "metadata": {
        "doc_id": "CWE-116",
        "name": "Improper Encoding or Escaping of Output",
        "type": "Class",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "relationships": [],
        "original_sparse_score": 332.6343660575152,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 332.6343660575152
          },
          "normalized_scores": {
            "sparse": 0.26610749284601215
          },
          "weighted_scores": {
            "sparse": 0.10644299713840487
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 332.6343660575152,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.26610749284601215,
              "weight": 0.4,
              "weighted_score": 0.10644299713840487
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.10644299713840487,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.0851543977107239
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0851543977107239
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.0894121175962601
            }
          },
          "combined_score": 0.0894121175962601
        }
      },
      "similarity": 0.0894121175962601
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 351.0206063274604,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 351.0206063274604
          },
          "normalized_scores": {
            "sparse": 0.2808164850619683
          },
          "weighted_scores": {
            "sparse": 0.11232659402478734
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 351.0206063274604,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.2808164850619683,
              "weight": 0.4,
              "weighted_score": 0.11232659402478734
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.11232659402478734,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.08986127521982988
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08986127521982988
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.0718890201758639
            }
          },
          "combined_score": 0.0718890201758639
        }
      },
      "similarity": 0.0718890201758639
    },
    {
      "metadata": {
        "doc_id": "CWE-400",
        "name": "Uncontrolled Resource Consumption",
        "type": "Class",
        "original_content": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
        "relationships": [],
        "original_sparse_score": 336.67229684895034,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 336.67229684895034
          },
          "normalized_scores": {
            "sparse": 0.2693378374791603
          },
          "weighted_scores": {
            "sparse": 0.10773513499166412
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 336.67229684895034,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.2693378374791603,
              "weight": 0.4,
              "weighted_score": 0.10773513499166412
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.10773513499166412,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.0861881079933313
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0861881079933313
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.06895048639466504
            }
          },
          "combined_score": 0.06895048639466504
        }
      },
      "similarity": 0.06895048639466504
    },
    {
      "metadata": {
        "doc_id": "CWE-200",
        "name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "type": "Class",
        "original_content": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
        "relationships": [],
        "original_sparse_score": 333.250388850593,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-200 is commonly misused to represent the loss of confidentiality in a vulnerability, but confidentiality loss is a technical impact - not a root cause error. As of CWE 4.9, over 400 CWE entries can lead to a loss of confidentiality. Other options are often available. [REF-1287].",
          "comments": "If an error or mistake causes information to be disclosed, then use the CWE ID for that error. Consider starting with improper authorization (CWE-285), insecure permissions (CWE-732), improper authentication (CWE-287), etc. Also consider children such as Insertion of Sensitive Information Into Sent Data (CWE-201), Observable Discrepancy (CWE-203), Insertion of Sensitive Information into Externally-Accessible File or Directory (CWE-538), or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 333.250388850593
          },
          "normalized_scores": {
            "sparse": 0.26660031108047444
          },
          "weighted_scores": {
            "sparse": 0.10664012443218979
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 333.250388850593,
              "query_max": 526.2941642112879,
              "query_min": 330.8690181059386,
              "normalized_score": 0.26660031108047444,
              "weight": 0.4,
              "weighted_score": 0.10664012443218979
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.10664012443218979,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.08531209954575183
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08531209954575183
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-200 is commonly misused to represent the loss of confidentiality in a vulnerability, but confidentiality loss is a technical impact - not a root cause error. As of CWE 4.9, over 400 CWE entries can lead to a loss of confidentiality. Other options are often available. [REF-1287].",
                "comments": "If an error or mistake causes information to be disclosed, then use the CWE ID for that error. Consider starting with improper authorization (CWE-285), insecure permissions (CWE-732), improper authentication (CWE-287), etc. Also consider children such as Insertion of Sensitive Information Into Sent Data (CWE-201), Observable Discrepancy (CWE-203), Insertion of Sensitive Information into Externally-Accessible File or Directory (CWE-538), or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.06824967963660147
            }
          },
          "combined_score": 0.06824967963660147
        }
      },
      "similarity": 0.06824967963660147
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-79",
      "CWE-444",
      "CWE-228"
    ],
    "critic_additional": [
      "CWE-113",
      "CWE-1286",
      "CWE-74",
      "CWE-20"
    ]
  }
}