{
  "query": "TensorFlow is an end-to-end open source platform for machine learning. TFlite graphs must not have loops between nodes. However, this condition was not checked and an attacker could craft models that would result in infinite loop during evaluation. In certain cases, the infinite loop would be replaced by stack overflow due to too many recursive calls. For example, the `While` implementation(https//github.com/tensorflow/tensorflow/blob/106d8f4fb89335a2c52d7c895b7a7485465ca8d9/tensorflow/lite/kernels/while.cc) could be tricked into a scneario where both the body and the loop subgraphs are the same. Evaluating one of the subgraphs means calling the `Eval` function for the other and this quickly exhaust all stack space. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range. Please consult our security guide(https//github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
  "count": 20,
  "results": [
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "abstraction": "Base",
      "score": 2646.8652797857453,
      "original_score": 2646.8652797857453,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "824",
      "name": "Access of Uninitialized Pointer",
      "abstraction": "Base",
      "score": 2074.1006311861734,
      "original_score": 2074.1006311861734,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 2025.7926062507584,
      "original_score": 2025.7926062507584,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "681",
      "name": "Incorrect Conversion between Numeric Types",
      "abstraction": "Base",
      "score": 1967.587837268526,
      "original_score": 1967.587837268526,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "abstraction": "Class",
      "score": 1964.7405813153696,
      "original_score": 1964.7405813153696,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 1850.0027803653354,
      "original_score": 1850.0027803653354,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "abstraction": "Base",
      "score": 1813.6161283936308,
      "original_score": 1813.6161283936308,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "abstraction": "Variant",
      "score": 1731.780553942571,
      "original_score": 1731.780553942571,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "617",
      "name": "Reachable Assertion",
      "abstraction": "Base",
      "score": 1698.1071719875379,
      "original_score": 1698.1071719875379,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "95",
      "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
      "abstraction": "Variant",
      "score": 1664.9914025113073,
      "original_score": 1664.9914025113073,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "score": 1648.9587398553283,
      "original_score": 1648.9587398553283,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "663",
      "name": "Use of a Non-reentrant Function in a Concurrent Context",
      "abstraction": "Base",
      "score": 1616.919287538898,
      "original_score": 1616.919287538898,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 1594.1055169451145,
      "original_score": 1594.1055169451145,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "20",
      "name": "Improper Input Validation",
      "abstraction": "Class",
      "score": 1532.5958320132743,
      "original_score": 1532.5958320132743,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "abstraction": "Base",
      "score": 1503.884170995222,
      "original_score": 1503.884170995222,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1286",
      "name": "Improper Validation of Syntactic Correctness of Input",
      "abstraction": "Base",
      "score": 1447.4496108329367,
      "original_score": 1447.4496108329367,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 1447.0151082844275,
      "original_score": 1447.0151082844275,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "843",
      "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
      "abstraction": "Base",
      "score": 1441.5161645619912,
      "original_score": 1441.5161645619912,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 1369.4782072910132,
      "original_score": 1369.4782072910132,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1287",
      "name": "Improper Validation of Specified Type of Input",
      "abstraction": "Base",
      "score": 1326.8204801997683,
      "original_score": 1326.8204801997683,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 1326.8204801997683,
    "max": 2646.8652797857453,
    "mean": 1718.3164045762467,
    "median": 1656.9750711833178,
    "count": 20
  }
}