{
  "cve_id": "CVE-2022-1922",
  "description": "DOS / potential heap overwrite in mkv demuxing using zlib decompression. Integer overflow in matroskademux element in gst_matroska_decompress_data function which causes a segfault, or could cause a heap overwrite, depending on libc and OS. Depending on the libc used, and the underlying OS capabilities, it could be just a segfault or a heap overwrite. If the libc uses mmap for large chunks, and the OS supports mmap, then it is just a segfault (because the realloc before the integer overflow will use mremap to reduce the size of the chunk, and it will start to write to unmapped memory). However, if using a libc implementation that does not use mmap, or if the OS does not support mmap while using libc, then this could result in a heap overwrite.",
  "key_phrases": {
    "rootcause": "integer overflow",
    "weakness": "",
    "impact": [
      "segfault",
      "heap overwrite"
    ],
    "vector": "mkv demuxing using zlib decompression",
    "attacker": "",
    "product": "matroskademux",
    "version": "",
    "component": "gst_matroska_decompress_data function"
  },
  "reference_content": "Based on the provided information, here's an analysis of CVE-2022-1922:\n\n**Root Cause of Vulnerability:**\n*   Integer overflow in the `gst_matroska_decompress_data` function when decoding zlib compressed data within a Matroska file. Specifically, the `new_size` variable, a 32-bit integer, overflows when the decompressed data size exceeds its maximum value.\n\n**Weaknesses/Vulnerabilities Present:**\n*   **Integer Overflow:** The code uses a 32-bit integer (`new_size`) to store the size of decompressed data, while the zlib decompression process tracks the data counters with 64-bit variables. This mismatch leads to an overflow when the decompressed size exceeds the maximum value that a 32-bit integer can store.\n*   **Heap Overflow (Potential):** The integer overflow results in an incorrect `new_size` value being used in subsequent memory allocation operations (specifically `realloc`). If the libc implementation doesn't use `mmap` for large allocations, this could result in a heap overflow.\n\n**Impact of Exploitation:**\n*   **Denial of Service (DoS):** The integer overflow can lead to a segfault, causing the application using the GStreamer framework to crash.\n*   **Potential Heap Overwrite:** Depending on the libc implementation and underlying OS capabilities, the incorrect memory allocation size caused by the overflow could lead to writing data beyond the allocated buffer, resulting in a heap overwrite. This could potentially lead to arbitrary code execution.\n\n**Attack Vectors:**\n*   **Malformed Media File:** The vulnerability is triggered by processing a specially crafted Matroska file containing zlib-compressed data with a large decompressed size.\n\n**Required Attacker Capabilities/Position:**\n*   **Ability to Provide Malicious Media File:** An attacker needs to provide a user with a malicious MKV file designed to trigger the vulnerability when processed with a vulnerable version of the GStreamer library. This could be done via email, a website, or any other means of file distribution.\n\n**Summary:**\nCVE-2022-1922 involves an integer overflow in the Matroska demuxer of the GStreamer framework. A specifically crafted MKV file with a large zlib compressed block can trigger the overflow, causing a denial-of-service. Under certain conditions, a heap overwrite may also occur, potentially leading to arbitrary code execution.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {
          "CWE-190": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-190"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {
          "CWE-190": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-190"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      },
      "85": {
        "cwe_counts": {
          "CWE-190": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-190"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      },
      "80": {
        "cwe_counts": {
          "CWE-190": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-190"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      },
      "75": {
        "cwe_counts": {
          "CWE-190": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-190"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      },
      "70": {
        "cwe_counts": {
          "CWE-190": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-190"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      }
    },
    "cwe_consensus": "CWE-190",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 2,
        "90": 2,
        "85": 2,
        "80": 2,
        "75": 2,
        "70": 2
      },
      "top_cwes_by_threshold": {
        "95": [
          [
            "CWE-190",
            2
          ]
        ],
        "90": [
          [
            "CWE-190",
            2
          ]
        ],
        "85": [
          [
            "CWE-190",
            2
          ]
        ],
        "80": [
          [
            "CWE-190",
            2
          ]
        ],
        "75": [
          [
            "CWE-190",
            2
          ]
        ],
        "70": [
          [
            "CWE-190",
            2
          ]
        ]
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [
          "190"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [
          "190"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      },
      {
        "similarity": 85,
        "cwes": [
          "190"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      },
      {
        "similarity": 80,
        "cwes": [
          "190"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      },
      {
        "similarity": 75,
        "cwes": [
          "190"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      },
      {
        "similarity": 70,
        "cwes": [
          "190"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-190",
    "top_cwes": [
      [
        "CWE-190",
        12
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 12
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-190 | Integer Overflow or Wraparound | 1.0 | Base | Allowed | Primary CWE |\n| CWE-122 | Heap-based Buffer Overflow | 0.7 | Variant | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states that the **rootcause** is an **integer overflow** in the `gst_matroska_decompress_data` function. The \"Vulnerability Description Key Phrases\" section also highlights \"**rootcause: integer overflow**\". The CVE Reference Links Content Summary confirms the integer overflow occurs because a 32-bit integer (`new_size`) is used to store the size of the decompressed data, leading to an overflow when the decompressed size exceeds the maximum value a 32-bit integer can store. This aligns directly with CWE-190 (Integer Overflow or Wraparound), which describes a calculation that can produce an integer overflow or wraparound. The \"Retriever Results\" also lists CWE-190 as the top candidate with the highest score, further supporting this classification. MITRE mapping guidance for CWE-190 indicates that it is ALLOWED as it is at the Base level of abstraction.\n  \n  - *Relationship Analysis:* CWE-190 does not have any direct relationships with other CWEs. However, the integer overflow can lead to other vulnerabilities. The description indicates that the integer overflow in `new_size` can lead to an incorrect size being used in `realloc`, which \"could result in a heap overwrite\". Thus, CWE-122 (Heap-based Buffer Overflow) is a candidate for secondary mapping.\n\n- **Confidence Score:**  \n  - Confidence: 1.0 (High confidence due to direct evidence of integer overflow from the vulnerability description and CVE reference materials, along with the \"Retriever Results\" top ranking)\n\n---\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description mentions \"potential heap overwrite\" depending on the libc and OS. The CVE Reference Links Content Summary states that the integer overflow results in an incorrect `new_size` value being used in `realloc`. If the `libc` implementation doesn't use `mmap` for large allocations, this could result in a heap overflow. This aligns with CWE-122 (Heap-based Buffer Overflow), which is a buffer overflow where the buffer that can be overwritten is allocated in the heap. The \"Retriever Results\" lists CWE-122 as a potential candidate. While a heap overflow is not guaranteed, the conditions under which it *could* occur are described. MITRE mapping guidance for CWE-122 indicates that it is ALLOWED as it is at the Variant level of abstraction.\n  \n  - *Relationship Analysis:* CWE-122 is a variant of CWE-787 (Out-of-bounds Write). The integer overflow (CWE-190) *precedes* the potential heap overflow (CWE-122) in the vulnerability chain.\n\n- **Confidence Score:**  \n  - Confidence: 0.7 (Moderate confidence because the heap overflow is conditional, depending on the libc and OS configuration. However, the possibility is clearly described in the vulnerability details.)",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-190 | Integer Overflow or Wraparound | 1.0 | Base | Allowed | Primary CWE |\n| CWE-122 | Heap-based Buffer Overflow | 0.7 | Variant | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states that the **rootcause** is an **integer overflow** in the `gst_matroska_decompress_data` function. The \"Vulnerability Description Key Phrases\" section also highlights \"**rootcause: integer overflow**\". The CVE Reference Links Content Summary confirms the integer overflow occurs because a 32-bit integer (`new_size`) is used to store the size of the decompressed data, leading to an overflow when the decompressed size exceeds the maximum value a 32-bit integer can store. This aligns directly with CWE-190 (Integer Overflow or Wraparound), which describes a calculation that can produce an integer overflow or wraparound. The \"Retriever Results\" also lists CWE-190 as the top candidate with the highest score, further supporting this classification. MITRE mapping guidance for CWE-190 indicates that it is ALLOWED as it is at the Base level of abstraction.\n  \n  - *Relationship Analysis:* CWE-190 does not have any direct relationships with other CWEs. However, the integer overflow can lead to other vulnerabilities. The description indicates that the integer overflow in `new_size` can lead to an incorrect size being used in `realloc`, which \"could result in a heap overwrite\". Thus, CWE-122 (Heap-based Buffer Overflow) is a candidate for secondary mapping.\n\n- **Confidence Score:**  \n  - Confidence: 1.0 (High confidence due to direct evidence of integer overflow from the vulnerability description and CVE reference materials, along with the \"Retriever Results\" top ranking)\n\n---\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description mentions \"potential heap overwrite\" depending on the libc and OS. The CVE Reference Links Content Summary states that the integer overflow results in an incorrect `new_size` value being used in `realloc`. If the `libc` implementation doesn't use `mmap` for large allocations, this could result in a heap overflow. This aligns with CWE-122 (Heap-based Buffer Overflow), which is a buffer overflow where the buffer that can be overwritten is allocated in the heap. The \"Retriever Results\" lists CWE-122 as a potential candidate. While a heap overflow is not guaranteed, the conditions under which it *could* occur are described. MITRE mapping guidance for CWE-122 indicates that it is ALLOWED as it is at the Variant level of abstraction.\n  \n  - *Relationship Analysis:* CWE-122 is a variant of CWE-787 (Out-of-bounds Write). The integer overflow (CWE-190) *precedes* the potential heap overflow (CWE-122) in the vulnerability chain.\n\n- **Confidence Score:**  \n  - Confidence: 0.7 (Moderate confidence because the heap overflow is conditional, depending on the libc and OS configuration. However, the possibility is clearly described in the vulnerability details.)",
  "criticism": "Okay, I've reviewed the provided analysis with the full CWE specifications, paying close attention to the mapping guidance and potential mitigations. Here's my critique:\n\n**Overall Assessment:**\n\nThe analysis is generally good and correctly identifies the primary vulnerability as CWE-190 (Integer Overflow or Wraparound). The inclusion of CWE-122 (Heap-based Buffer Overflow) as a secondary candidate is also reasonable, given the conditional nature of its occurrence. The confidence scores assigned are appropriate.\n\n**Detailed Critique:**\n\n*   **CWE-190 (Integer Overflow or Wraparound):**\n    *   **Correct Mapping:** The analysis provides strong justification for selecting CWE-190 as the primary CWE. The vulnerability description explicitly mentions an integer overflow as the root cause, and the CVE Reference Links Content Summary confirms the overflow's mechanism. The \"Retriever Results\" further support this selection.\n    *   **Abstraction Level:** CWE-190 is a Base level CWE, which is preferred for root cause analysis. The analysis correctly notes that its Usage is \"Allowed\" according to MITRE's mapping guidance.\n    *   **Mitigations:** The provided CWE specifications include a range of mitigations for CWE-190, such as:\n        *   Requirements: Strict protocol definitions to identify out-of-bounds behavior.\n        *   Language Selection: Using languages/compilers with automatic bounds checking.\n        *   Architecture and Design: Using vetted libraries or frameworks for safe integer handling.\n    *   **Relationship Analysis:** The analysis notes the relationship between CWE-190 and potential subsequent buffer overflows. This is accurate.\n\n*   **CWE-122 (Heap-based Buffer Overflow):**\n    *   **Conditional Mapping:** The analysis acknowledges that the heap overflow is *conditional*, depending on the libc implementation and OS capabilities. This is important. Not all instances of the integer overflow will necessarily lead to a heap overflow.\n    *   **Abstraction Level:** CWE-122 is a Variant level CWE. Its Usage is \"Allowed\".\n    *   **Mitigations:** The provided CWE specifications include mitigations for CWE-122, such as:\n        * Pre-design: Use a language or compiler that performs automatic bounds checking.\n        * Architecture and Design: Use an abstraction library to abstract away risky APIs. Not a complete solution.\n        * Operation, Build and Compilation: Use automatic buffer overflow detection mechanisms.\n    *   **Relationship Analysis:** Correctly identifies CWE-122 as a variant of CWE-787 (Out-of-bounds Write) and acknowledges that the integer overflow *precedes* the heap overflow in the chain.\n\n**Suggestions for Improvement:**\n\n*   **Consider CWE-789 (Memory Allocation with Excessive Size Value):** While CWE-190 is the root cause, CWE-789 could also be a relevant mapping.  The integer overflow leads to an incorrect (smaller) size value being used for memory allocation. This could be viewed as a memory allocation with an excessive size value *after* the overflow. However, this is less direct than the mapping to CWE-122. The current mapping is better.\n*   **Explicitly Mention CWE-682 (Incorrect Calculation):** While not necessary as a direct mapping, it is the parent of CWE-190. Mentioning it could provide a broader context for the root cause.\n* **Refine Scope for Mitigation:** The mitigations for CWE-190 are at too high a level. Consider the following:\n *  **Implementation:** Add input validation to reject files that result in decompression sizes greater than the maximum allowable value.\n *  **Implementation:** Use safe integer arithmetic libraries.\n *  **Implementation:** Ensure the value passed to `realloc` is not truncated to a value smaller than the actual amount of data being written.\n\n**Justification for Maintaining Confidence Scores:**\n\n*   **CWE-190 (1.0 Confidence):**  The evidence supporting CWE-190 is very strong. The vulnerability is explicitly described as an integer overflow, and the analysis of CVE details confirms the mechanism.\n*   **CWE-122 (0.7 Confidence):** The confidence score is appropriate because the heap overflow is conditional. It depends on specific libc and OS configurations. It is a *potential* consequence, not a guaranteed one.\n\n**Conclusion:**\n\nThe analysis is well-reasoned and accurate. The primary CWE mapping to CWE-190 is correct and well-supported. The secondary mapping to CWE-122 is justified given the conditional nature of the heap overflow. The suggestions above are minor refinements to strengthen the analysis further.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-190 | Integer Overflow or Wraparound | 1.0 | Base | Allowed | Primary CWE |\n| CWE-122 | Heap-based Buffer Overflow | 0.7 | Variant | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary **WEAKNESS** is **CWE-190 (Integer Overflow or Wraparound)**, which can **precede** **CWE-122 (Heap-based Buffer Overflow)**. **CWE-122** is a variant of **CWE-787 (Out-of-bounds Write)**. The integer overflow leads to an incorrect size calculation, potentially resulting in a heap overflow depending on system configuration (libc and OS). The abstraction levels are appropriate: **CWE-190** is a Base CWE, ideal for root cause analysis, and **CWE-122** is a Variant, reflecting its conditional nature.\n\n```mermaid\ngraph TD\n    cwe190[\"CWE-190: Integer Overflow or Wraparound\"]\n    cwe122[\"CWE-122: Heap-based Buffer Overflow\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    \n    cwe122 -->|CHILDOF| cwe787\n    cwe190 -->|CANPRECEDE| cwe122\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe190 primary\n    class cwe122 secondary\n    class cwe787 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **integer overflow (CWE-190)** in the `gst_matroska_decompress_data` function when calculating the decompressed size. This leads to an incorrect size being passed to `realloc`. If the `libc` implementation doesn't use `mmap` or if the OS doesn't support `mmap`, this can result in a **heap-based buffer overflow (CWE-122)**, where the heap is overwritten. The **ROOTCAUSE** is the integer overflow, and the impact is a potential heap overwrite.\n\n## Summary of Analysis\nThe initial analysis and criticism are accurate. The primary **ROOTCAUSE** is the integer overflow (**CWE-190**), leading to a potential heap overflow (**CWE-122**). The confidence scores are well-justified.\n\nThe analysis provided the following evidence: \"The vulnerability description clearly states that the **rootcause** is an **integer overflow** in the `gst_matroska_decompress_data` function. The \"Vulnerability Description Key Phrases\" section also highlights \"**rootcause: integer overflow**\".\"\n\nThe graph relationships confirm that **CWE-190** can **precede** **CWE-122**, and **CWE-122** is a variant of **CWE-787**, indicating a potential out-of-bounds write.\n\nThe selected CWEs are at the optimal level of specificity: **CWE-190** as the Base-level **ROOTCAUSE**, and **CWE-122** as a Variant that describes the conditional heap overflow.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 1315.6500699100354,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.558013672830298,
            "sparse": 1315.6500699100354,
            "graph": 1.9956587184773316
          },
          "normalized_scores": {
            "dense": 0.558013672830298,
            "sparse": 1.0,
            "graph": 0.712735256599047
          },
          "weighted_scores": {
            "dense": 0.1953047854906043,
            "sparse": 0.4,
            "graph": 0.17818381414976175
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.558013672830298,
              "query_max": 0.558013672830298,
              "query_min": 0.45273485344395925,
              "normalized_score": 0.558013672830298,
              "weight": 0.35,
              "weighted_score": 0.1953047854906043
            },
            "sparse": {
              "raw_score": 1315.6500699100354,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "graph": {
              "raw_score": 1.9956587184773316,
              "query_max": 4.329000000000001,
              "query_min": 1.571162786169391,
              "normalized_score": 0.712735256599047,
              "weight": 0.25,
              "weighted_score": 0.17818381414976175
            }
          },
          "contribution_percentages": {
            "dense": 25.249859607680236,
            "sparse": 51.713755081326376,
            "graph": 23.03638531099339
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.7734885996403661,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 1.005535179532476
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 1.005535179532476
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 1.1060886974857238
            }
          },
          "combined_score": 1.1060886974857238
        }
      },
      "similarity": 1.1060886974857238
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 719.4628623905844,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4690315728872061,
            "sparse": 719.4628623905844,
            "graph": 2.303186162626255
          },
          "normalized_scores": {
            "dense": 0.4690315728872061,
            "sparse": 0.5755702899124675,
            "graph": 0.822566486652234
          },
          "weighted_scores": {
            "dense": 0.16416105051052213,
            "sparse": 0.23022811596498702,
            "graph": 0.2056416216630585
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4690315728872061,
              "query_max": 0.558013672830298,
              "query_min": 0.45273485344395925,
              "normalized_score": 0.4690315728872061,
              "weight": 0.35,
              "weighted_score": 0.16416105051052213
            },
            "sparse": {
              "raw_score": 719.4628623905844,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5755702899124675,
              "weight": 0.4,
              "weighted_score": 0.23022811596498702
            },
            "graph": {
              "raw_score": 2.303186162626255,
              "query_max": 4.329000000000001,
              "query_min": 1.571162786169391,
              "normalized_score": 0.822566486652234,
              "weight": 0.25,
              "weighted_score": 0.2056416216630585
            }
          },
          "contribution_percentages": {
            "dense": 27.358771209021988,
            "sparse": 38.36938379098965,
            "graph": 34.271844999988375
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.6000307881385676,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7800400245801379
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7800400245801379
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.8580440270381517
            }
          },
          "combined_score": 0.8580440270381517
        }
      },
      "similarity": 0.8580440270381517
    },
    {
      "metadata": {
        "doc_id": "CWE-789",
        "name": "Memory Allocation with Excessive Size Value",
        "type": "Variant",
        "original_content": "The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.",
        "relationships": [],
        "original_sparse_score": 742.8710548386396,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.49821457534558594,
            "sparse": 742.8710548386396,
            "graph": 2.1679325402258947
          },
          "normalized_scores": {
            "dense": 0.49821457534558594,
            "sparse": 0.5942968438709116,
            "graph": 0.7742616215092482
          },
          "weighted_scores": {
            "dense": 0.17437510137095508,
            "sparse": 0.23771873754836467,
            "graph": 0.19356540537731204
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.49821457534558594,
              "query_max": 0.558013672830298,
              "query_min": 0.45273485344395925,
              "normalized_score": 0.49821457534558594,
              "weight": 0.35,
              "weighted_score": 0.17437510137095508
            },
            "sparse": {
              "raw_score": 742.8710548386396,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5942968438709116,
              "weight": 0.4,
              "weighted_score": 0.23771873754836467
            },
            "graph": {
              "raw_score": 2.1679325402258947,
              "query_max": 4.329000000000001,
              "query_min": 1.571162786169391,
              "normalized_score": 0.7742616215092482,
              "weight": 0.25,
              "weighted_score": 0.19356540537731204
            }
          },
          "contribution_percentages": {
            "dense": 28.790958449492756,
            "sparse": 39.24958461162989,
            "graph": 31.959456938877356
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.6056592442966318,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.7267910931559581
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7267910931559581
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.799470202471554
            }
          },
          "combined_score": 0.799470202471554
        }
      },
      "similarity": 0.799470202471554
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 683.2449790283442,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4921319756254169,
            "sparse": 683.2449790283442,
            "graph": 1.6552987443563376
          },
          "normalized_scores": {
            "dense": 0.4921319756254169,
            "sparse": 0.5465959832226754,
            "graph": 0.5911781229844063
          },
          "weighted_scores": {
            "dense": 0.1722461914688959,
            "sparse": 0.2186383932890702,
            "graph": 0.14779453074610158
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4921319756254169,
              "query_max": 0.558013672830298,
              "query_min": 0.45273485344395925,
              "normalized_score": 0.4921319756254169,
              "weight": 0.35,
              "weighted_score": 0.1722461914688959
            },
            "sparse": {
              "raw_score": 683.2449790283442,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5465959832226754,
              "weight": 0.4,
              "weighted_score": 0.2186383932890702
            },
            "graph": {
              "raw_score": 1.6552987443563376,
              "query_max": 4.329000000000001,
              "query_min": 1.571162786169391,
              "normalized_score": 0.5911781229844063,
              "weight": 0.25,
              "weighted_score": 0.14779453074610158
            }
          },
          "contribution_percentages": {
            "dense": 31.975657958767705,
            "sparse": 40.58787263071817,
            "graph": 27.436469410514125
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5386791155040677,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.700282850155288
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.700282850155288
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7703111351708168
            }
          },
          "combined_score": 0.7703111351708168
        }
      },
      "similarity": 0.7703111351708168
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 764.9499569043717,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 764.9499569043717,
            "graph": 4.329000000000001
          },
          "normalized_scores": {
            "sparse": 0.6119599655234973,
            "graph": 1.0
          },
          "weighted_scores": {
            "sparse": 0.24478398620939892,
            "graph": 0.25
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 764.9499569043717,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.6119599655234973,
              "weight": 0.4,
              "weighted_score": 0.24478398620939892
            },
            "graph": {
              "raw_score": 4.329000000000001,
              "query_max": 4.329000000000001,
              "query_min": 1.571162786169391,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "sparse": 49.472899898139225,
            "graph": 50.527100101860775
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4947839862093989,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6432191820722186
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6432191820722186
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7075411002794405
            }
          },
          "combined_score": 0.7075411002794405
        }
      },
      "similarity": 0.7075411002794405
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 718.5935719222148,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5510702636999103,
            "sparse": 718.5935719222148
          },
          "normalized_scores": {
            "dense": 0.5510702636999103,
            "sparse": 0.5748748575377718
          },
          "weighted_scores": {
            "dense": 0.1928745922949686,
            "sparse": 0.22994994301510874
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5510702636999103,
              "query_max": 0.558013672830298,
              "query_min": 0.45273485344395925,
              "normalized_score": 0.5510702636999103,
              "weight": 0.35,
              "weighted_score": 0.1928745922949686
            },
            "sparse": {
              "raw_score": 718.5935719222148,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5748748575377718,
              "weight": 0.4,
              "weighted_score": 0.22994994301510874
            }
          },
          "contribution_percentages": {
            "dense": 45.61575220641453,
            "sparse": 54.38424779358546
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.42282453531007735,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.5073894423720928
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5073894423720928
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5581283866093022
            }
          },
          "combined_score": 0.5581283866093022
        }
      },
      "similarity": 0.5581283866093022
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 698.677075355101,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.46331740385260334,
            "sparse": 698.677075355101
          },
          "normalized_scores": {
            "dense": 0.46331740385260334,
            "sparse": 0.5589416602840808
          },
          "weighted_scores": {
            "dense": 0.16216109134841117,
            "sparse": 0.2235766641136323
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.46331740385260334,
              "query_max": 0.558013672830298,
              "query_min": 0.45273485344395925,
              "normalized_score": 0.46331740385260334,
              "weight": 0.35,
              "weighted_score": 0.16216109134841117
            },
            "sparse": {
              "raw_score": 698.677075355101,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5589416602840808,
              "weight": 0.4,
              "weighted_score": 0.2235766641136323
            }
          },
          "contribution_percentages": {
            "dense": 42.03920644329248,
            "sparse": 57.96079355670752
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3857377554620435,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5014590821006565
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5014590821006565
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5516049903107222
            }
          },
          "combined_score": 0.5516049903107222
        }
      },
      "similarity": 0.5516049903107222
    },
    {
      "metadata": {
        "doc_id": "CWE-197",
        "name": "Numeric Truncation Error",
        "type": "Base",
        "original_content": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
        "relationships": [],
        "original_sparse_score": 698.4257997517714,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4573313979813297,
            "sparse": 698.4257997517714
          },
          "normalized_scores": {
            "dense": 0.4573313979813297,
            "sparse": 0.5587406398014171
          },
          "weighted_scores": {
            "dense": 0.16006598929346538,
            "sparse": 0.22349625592056685
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4573313979813297,
              "query_max": 0.558013672830298,
              "query_min": 0.45273485344395925,
              "normalized_score": 0.4573313979813297,
              "weight": 0.35,
              "weighted_score": 0.16006598929346538
            },
            "sparse": {
              "raw_score": 698.4257997517714,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5587406398014171,
              "weight": 0.4,
              "weighted_score": 0.22349625592056685
            }
          },
          "contribution_percentages": {
            "dense": 41.73142463595359,
            "sparse": 58.268575364046406
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.38356224521403226,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.49863091877824195
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.49863091877824195
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5484940106560662
            }
          },
          "combined_score": 0.5484940106560662
        }
      },
      "similarity": 0.5484940106560662
    },
    {
      "metadata": {
        "doc_id": "CWE-839",
        "name": "Numeric Range Comparison Without Minimum Check",
        "type": "Base",
        "original_content": "The product checks a value to ensure that it is less than or equal to a maximum, but it does not also verify that the value is greater than or equal to the minimum.",
        "relationships": [],
        "original_sparse_score": 673.6516394048115,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 673.6516394048115,
            "graph": 1.6848000000000003
          },
          "normalized_scores": {
            "sparse": 0.5389213115238491,
            "graph": 0.6017142857142859
          },
          "weighted_scores": {
            "sparse": 0.21556852460953968,
            "graph": 0.15042857142857147
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 673.6516394048115,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5389213115238491,
              "weight": 0.4,
              "weighted_score": 0.21556852460953968
            },
            "graph": {
              "raw_score": 1.6848000000000003,
              "query_max": 4.329000000000001,
              "query_min": 1.571162786169391,
              "normalized_score": 0.6017142857142859,
              "weight": 0.25,
              "weighted_score": 0.15042857142857147
            }
          },
          "contribution_percentages": {
            "sparse": 58.89897131508732,
            "graph": 41.10102868491268
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.36599709603811115,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4757962248495445
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4757962248495445
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5233758473344989
            }
          },
          "combined_score": 0.5233758473344989
        }
      },
      "similarity": 0.5233758473344989
    },
    {
      "metadata": {
        "doc_id": "CWE-195",
        "name": "Signed to Unsigned Conversion Error",
        "type": "Variant",
        "original_content": "The product uses a signed primitive and performs a cast to an unsigned primitive, which can produce an unexpected value if the value of the signed primitive can not be represented using an unsigned primitive.",
        "relationships": [],
        "original_sparse_score": 676.3517406314951,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 676.3517406314951,
            "graph": 2.0088000000000004
          },
          "normalized_scores": {
            "sparse": 0.541081392505196,
            "graph": 0.7174285714285716
          },
          "weighted_scores": {
            "sparse": 0.21643255700207842,
            "graph": 0.1793571428571429
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 676.3517406314951,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.541081392505196,
              "weight": 0.4,
              "weighted_score": 0.21643255700207842
            },
            "graph": {
              "raw_score": 2.0088000000000004,
              "query_max": 4.329000000000001,
              "query_min": 1.571162786169391,
              "normalized_score": 0.7174285714285716,
              "weight": 0.25,
              "weighted_score": 0.1793571428571429
            }
          },
          "contribution_percentages": {
            "sparse": 54.683726504015,
            "graph": 45.316273495985
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3957896998592213,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.4749476398310655
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4749476398310655
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5224424038141722
            }
          },
          "combined_score": 0.5224424038141722
        }
      },
      "similarity": 0.5224424038141722
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 661.3725077319888,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5234374862975133,
            "sparse": 661.3725077319888
          },
          "normalized_scores": {
            "dense": 0.5234374862975133,
            "sparse": 0.529098006185591
          },
          "weighted_scores": {
            "dense": 0.18320312020412965,
            "sparse": 0.2116392024742364
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5234374862975133,
              "query_max": 0.558013672830298,
              "query_min": 0.45273485344395925,
              "normalized_score": 0.5234374862975133,
              "weight": 0.35,
              "weighted_score": 0.18320312020412965
            },
            "sparse": {
              "raw_score": 661.3725077319888,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.529098006185591,
              "weight": 0.4,
              "weighted_score": 0.2116392024742364
            }
          },
          "contribution_percentages": {
            "dense": 46.3990584802037,
            "sparse": 53.600941519796294
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.39484232267836605,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.47381078721403924
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.47381078721403924
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5211918659354432
            }
          },
          "combined_score": 0.5211918659354432
        }
      },
      "similarity": 0.5211918659354432
    },
    {
      "metadata": {
        "doc_id": "CWE-909",
        "name": "Missing Initialization of Resource",
        "type": "Class",
        "original_content": "The product does not initialize a critical resource.",
        "relationships": [],
        "original_sparse_score": 671.1541496831446,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4900733498180081,
            "sparse": 671.1541496831446
          },
          "normalized_scores": {
            "dense": 0.4900733498180081,
            "sparse": 0.5369233197465157
          },
          "weighted_scores": {
            "dense": 0.17152567243630282,
            "sparse": 0.2147693278986063
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4900733498180081,
              "query_max": 0.558013672830298,
              "query_min": 0.45273485344395925,
              "normalized_score": 0.4900733498180081,
              "weight": 0.35,
              "weighted_score": 0.17152567243630282
            },
            "sparse": {
              "raw_score": 671.1541496831446,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5369233197465157,
              "weight": 0.4,
              "weighted_score": 0.2147693278986063
            }
          },
          "contribution_percentages": {
            "dense": 44.40276790732313,
            "sparse": 55.59723209267686
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.38629500033490916,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.3090360002679273
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3090360002679273
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.3244878002813237
            }
          },
          "combined_score": 0.3244878002813237
        }
      },
      "similarity": 0.3244878002813237
    },
    {
      "metadata": {
        "doc_id": "CWE-295",
        "name": "Improper Certificate Validation",
        "type": "Base",
        "original_content": "The product does not validate, or incorrectly validates, a certificate.",
        "relationships": [],
        "original_sparse_score": 694.6823456109305,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 694.6823456109305
          },
          "normalized_scores": {
            "sparse": 0.5557458764887444
          },
          "weighted_scores": {
            "sparse": 0.22229835059549777
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 694.6823456109305,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5557458764887444,
              "weight": 0.4,
              "weighted_score": 0.22229835059549777
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.22229835059549777,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2889878557741471
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2889878557741471
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3178866413515618
            }
          },
          "combined_score": 0.3178866413515618
        }
      },
      "similarity": 0.3178866413515618
    },
    {
      "metadata": {
        "doc_id": "CWE-770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [],
        "original_sparse_score": 684.7282560514606,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 684.7282560514606
          },
          "normalized_scores": {
            "sparse": 0.5477826048411685
          },
          "weighted_scores": {
            "sparse": 0.2191130419364674
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 684.7282560514606,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5477826048411685,
              "weight": 0.4,
              "weighted_score": 0.2191130419364674
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2191130419364674,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.28484695451740766
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.28484695451740766
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3133316499691485
            }
          },
          "combined_score": 0.3133316499691485
        }
      },
      "similarity": 0.3133316499691485
    },
    {
      "metadata": {
        "doc_id": "CWE-194",
        "name": "Unexpected Sign Extension",
        "type": "Variant",
        "original_content": "The product performs an operation on a number that causes it to be sign extended when it is transformed into a larger data type. When the original number is negative, this can produce unexpected values that lead to resultant weaknesses.",
        "relationships": [],
        "original_sparse_score": 733.0546287909003,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 733.0546287909003
          },
          "normalized_scores": {
            "sparse": 0.5864437030327203
          },
          "weighted_scores": {
            "sparse": 0.23457748121308813
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 733.0546287909003,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5864437030327203,
              "weight": 0.4,
              "weighted_score": 0.23457748121308813
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.23457748121308813,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.28149297745570573
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.28149297745570573
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.30964227520127635
            }
          },
          "combined_score": 0.30964227520127635
        }
      },
      "similarity": 0.30964227520127635
    },
    {
      "metadata": {
        "doc_id": "CWE-681",
        "name": "Incorrect Conversion between Numeric Types",
        "type": "Base",
        "original_content": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
        "relationships": [],
        "original_sparse_score": 667.2994066457424,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 667.2994066457424
          },
          "normalized_scores": {
            "sparse": 0.5338395253165938
          },
          "weighted_scores": {
            "sparse": 0.21353581012663755
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 667.2994066457424,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5338395253165938,
              "weight": 0.4,
              "weighted_score": 0.21353581012663755
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.21353581012663755,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.27759655316462883
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.27759655316462883
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.30535620848109174
            }
          },
          "combined_score": 0.30535620848109174
        }
      },
      "similarity": 0.30535620848109174
    },
    {
      "metadata": {
        "doc_id": "CWE-1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
        "relationships": [],
        "original_sparse_score": 639.2172554999352,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 639.2172554999352
          },
          "normalized_scores": {
            "sparse": 0.5113738043999482
          },
          "weighted_scores": {
            "sparse": 0.20454952175997929
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 639.2172554999352,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5113738043999482,
              "weight": 0.4,
              "weighted_score": 0.20454952175997929
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.20454952175997929,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2659143782879731
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2659143782879731
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.29250581611677046
            }
          },
          "combined_score": 0.29250581611677046
        }
      },
      "similarity": 0.29250581611677046
    },
    {
      "metadata": {
        "doc_id": "CWE-754",
        "name": "Improper Check for Unusual or Exceptional Conditions",
        "type": "Class",
        "original_content": "The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product.",
        "relationships": [],
        "original_sparse_score": 647.9639844599269,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 647.9639844599269
          },
          "normalized_scores": {
            "sparse": 0.5183711875679415
          },
          "weighted_scores": {
            "sparse": 0.20734847502717663
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 647.9639844599269,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5183711875679415,
              "weight": 0.4,
              "weighted_score": 0.20734847502717663
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.20734847502717663,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.1658787800217413
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1658787800217413
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.17417271902282838
            }
          },
          "combined_score": 0.17417271902282838
        }
      },
      "similarity": 0.17417271902282838
    },
    {
      "metadata": {
        "doc_id": "CWE-362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "type": "Class",
        "original_content": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.",
        "relationships": [],
        "original_sparse_score": 643.8898300245821,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 643.8898300245821
          },
          "normalized_scores": {
            "sparse": 0.5151118640196657
          },
          "weighted_scores": {
            "sparse": 0.2060447456078663
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 643.8898300245821,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5151118640196657,
              "weight": 0.4,
              "weighted_score": 0.2060447456078663
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.2060447456078663,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.16483579648629304
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.16483579648629304
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.1730775863106077
            }
          },
          "combined_score": 0.1730775863106077
        }
      },
      "similarity": 0.1730775863106077
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 631.6322222847136,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 631.6322222847136
          },
          "normalized_scores": {
            "sparse": 0.5053057778277709
          },
          "weighted_scores": {
            "sparse": 0.20212231113110835
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 631.6322222847136,
              "query_max": 1315.6500699100354,
              "query_min": 631.6322222847136,
              "normalized_score": 0.5053057778277709,
              "weight": 0.4,
              "weighted_score": 0.20212231113110835
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.20212231113110835,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.1616978489048867
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1616978489048867
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.12935827912390938
            }
          },
          "combined_score": 0.12935827912390938
        }
      },
      "similarity": 0.12935827912390938
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-122",
      "CWE-190",
      "CWE-787"
    ],
    "critic_additional": [
      "CWE-789",
      "CWE-682"
    ]
  }
}