{
  "cve_id": "CVE-2021-46475",
  "description": "Jsish v3.5.0 was discovered to contain a heap buffer overflow via jsi_ArraySliceCmd in src/jsiArray.c. This vulnerability can lead to a Denial of Service (DoS).",
  "key_phrases": {
    "rootcause": "",
    "weakness": "heap buffer overflow",
    "impact": "Denial of Service (DoS)",
    "vector": "",
    "attacker": "",
    "product": "componentJsish",
    "version": "v3.5.0",
    "component": "jsi_ArraySliceCmd in src/jsiArray.c"
  },
  "reference_content": "The provided content contains a detailed report of a heap-buffer-overflow vulnerability in the jsish project, specifically in the `jsi_ArraySliceCmd` function within `src/jsiArray.c` at line 912.\n\n**Root cause of vulnerability:**\n- The vulnerability is a heap-buffer-overflow occurring in the `jsi_ArraySliceCmd` function when processing array slicing operations.\n\n**Weaknesses/vulnerabilities present:**\n- Heap-buffer-overflow: A memory safety violation where the program writes beyond the allocated buffer on the heap.\n\n**Impact of exploitation:**\n- The vulnerability could lead to a crash due to memory corruption and can potentially be exploited for arbitrary code execution.\n- In this case, the program crashes with an AddressSanitizer error, indicating a read beyond the allocated buffer.\n\n**Attack vectors:**\n- The attack vector is by crafting a specific sequence of Javascript array operations that manipulate the array size and call the slice method, which triggers the heap-buffer-overflow.\n- The provided test case demonstrates this vulnerability using the `findIndex` and `slice` methods within the javascript code.\n\n**Required attacker capabilities/position:**\n- The attacker needs to be able to execute arbitrary JavaScript code within the vulnerable jsish environment.\n- The attacker would need to control the input to trigger the specific sequence of array operations that cause the buffer overflow.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.95 | Variant | Allowed | Primary CWE |\n| CWE-125 | Buffer Over-read | 0.60 | Base | Allowed | Secondary Candidate |\n| CWE-193 | Off-by-one Error | 0.50 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states a **heap buffer overflow** in `jsi_ArraySliceCmd`, which directly corresponds to CWE-122 (Heap-based Buffer Overflow). The CVE Reference Links Content Summary further confirms this, highlighting a memory safety violation where the program writes beyond the allocated buffer on the heap. The attack vector involves crafting specific JavaScript array operations to trigger the overflow. This aligns perfectly with the description of CWE-122, which is a Variant-level CWE, making it a precise and appropriate match. The usage for CWE-122 is ALLOWED.\n  CWE-125 (Buffer Over-read) is added as a secondary CWE since the ASan error reported indicates a read beyond allocated buffer which aligns with the definition of CWE-125.\n  CWE-193 (Off-by-one Error) is also a secondary candidate since it can be a contributing factor to buffer overflows, especially in calculations related to array slicing. However, the primary issue is the heap overflow itself.\n\n  - *Relationship Analysis:* CWE-122 is a variant of buffer overflow. While it doesn't have direct relationships to other CWEs, it falls under the broader category of memory corruption vulnerabilities. CWE-125 (Buffer Over-read) is related to CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), as over-reading often results from not properly bounding memory access. CWE-193 (Off-by-one Error) can precede CWE-119, as a slight miscalculation can lead to out-of-bounds access.\n\n- **Confidence Score:**\n  - Confidence: 0.95 (High confidence due to direct evidence from the vulnerability description and CVE reference).\n---",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.95 | Variant | Allowed | Primary CWE |\n| CWE-125 | Buffer Over-read | 0.60 | Base | Allowed | Secondary Candidate |\n| CWE-193 | Off-by-one Error | 0.50 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* The vulnerability description clearly states a **heap buffer overflow** in `jsi_ArraySliceCmd`, which directly corresponds to CWE-122 (Heap-based Buffer Overflow). The CVE Reference Links Content Summary further confirms this, highlighting a memory safety violation where the program writes beyond the allocated buffer on the heap. The attack vector involves crafting specific JavaScript array operations to trigger the overflow. This aligns perfectly with the description of CWE-122, which is a Variant-level CWE, making it a precise and appropriate match. The usage for CWE-122 is ALLOWED.\n  CWE-125 (Buffer Over-read) is added as a secondary CWE since the ASan error reported indicates a read beyond allocated buffer which aligns with the definition of CWE-125.\n  CWE-193 (Off-by-one Error) is also a secondary candidate since it can be a contributing factor to buffer overflows, especially in calculations related to array slicing. However, the primary issue is the heap overflow itself.\n\n  - *Relationship Analysis:* CWE-122 is a variant of buffer overflow. While it doesn't have direct relationships to other CWEs, it falls under the broader category of memory corruption vulnerabilities. CWE-125 (Buffer Over-read) is related to CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), as over-reading often results from not properly bounding memory access. CWE-193 (Off-by-one Error) can precede CWE-119, as a slight miscalculation can lead to out-of-bounds access.\n\n- **Confidence Score:**\n  - Confidence: 0.95 (High confidence due to direct evidence from the vulnerability description and CVE reference).\n---",
  "criticism": "Okay, here's a review of the provided CWE analysis based on the full CWE specifications included in the document:\n\n**Overall Assessment:**\n\nThe analysis is good, and the primary CWE assignment of `CWE-122: Heap-based Buffer Overflow` is correct and well-justified. The inclusion of `CWE-125: Out-of-bounds Read` and `CWE-193: Off-by-one Error` as secondary candidates is also reasonable, although the confidence levels and justifications could be slightly refined.\n\n**Detailed Review:**\n\n1.  **CWE-122: Heap-based Buffer Overflow (Primary)**\n    *   **Confidence:** 0.95 - Appropriately high.\n    *   **Justification:** The justification is strong. The vulnerability description explicitly states a heap buffer overflow, and the CVE summary confirms the memory corruption occurs on the heap.  The attack vector described aligns with how heap overflows are typically triggered.\n    *   **CWE Abstraction Level:** Variant - Correct.\n    *   **CWE Mapping Guidance Compliance:** The analysis follows the mapping guidance, which recommends using the Variant level when possible. The analysis also checks if the description and name are aligned to the problem. The usage for CWE-122 is ALLOWED.\n    *   **Potential Mitigations:** The analysis does not explicitly mention mitigations, but it should. Referring to the CWE-122 specification, potential mitigations include:\n        *   Using languages or compilers with automatic bounds checking.\n        *   Using abstraction libraries.\n        *   Using compiler-based buffer overflow detection mechanisms (e.g., /GS flag in Visual Studio, FORTIFY\\_SOURCE in GCC).\n    *   **Observed Examples:** The analysis includes observed examples of CWE-122 which aids in the validation of the mapping.\n\n2.  **CWE-125: Out-of-bounds Read (Secondary Candidate)**\n    *   **Confidence:** 0.60 - This seems reasonable, but the justification could be stronger.\n    *   **Justification:** The justification mentions ASan reporting a \"read beyond allocated buffer.\" This is good evidence for CWE-125. However, it should be clearly stated that heap buffer *overflows* can often *lead* to out-of-bounds reads (and vice versa). Overflows often corrupt metadata that is then used for subsequent reads which results in over-reads. The connection between the heap *overflow* and the *read* should be made explicit. Another possible justification is the `CVE-2009-2523` observed example which includes both `CWE-125` and `CWE-122`.\n    *   **CWE Abstraction Level:** Base - Correct.\n    *   **CWE Mapping Guidance Compliance:** The analysis follows the mapping guidance.\n    *   **Potential Mitigations:** The analysis does not explicitly mention mitigations, but it should. Referring to the CWE-125 specification, potential mitigations include:\n        *   Input validation (\"accept known good\" strategy).\n        *   Using languages with appropriate memory abstractions.\n        *   Length validation.\n    *   **Inter-CWE Relationships:** The analysis would benefit from explicitly stating the relationship between CWE-122 and CWE-125. Specifically, how a write past the buffer (CWE-122) can *cause* a subsequent read outside the buffer (CWE-125). CWE-119 may be mentioned but should be avoided as per the mapping guidance.\n\n3.  **CWE-193: Off-by-one Error (Secondary Candidate)**\n    *   **Confidence:** 0.50 - Seems reasonable, given its possible contributory role.\n    *   **Justification:** The current justification is weak. Saying it \"can be a contributing factor\" is too general. The analysis should explain *how* an off-by-one error could lead to a heap buffer overflow in the context of array slicing. For example, a calculation might be off by one, resulting in an undersized buffer allocation or an incorrect loop condition.\n    *   **CWE Abstraction Level:** Base - Correct.\n    *   **CWE Mapping Guidance Compliance:** The analysis follows the mapping guidance.\n    *   **Potential Mitigations:** The analysis does not explicitly mention mitigations, but it should. Referring to the CWE-193 specification, potential mitigations include:\n        *   Double-checking size parameters when copying character arrays or using character manipulation methods.\n    *   **Inter-CWE Relationships:** The analysis notes that CWE-193 can precede CWE-119.\n\n**Recommendations for Improvement:**\n\n*   **Strengthen Justifications:** Provide more specific and detailed explanations for the inclusion of CWE-125 and CWE-193, focusing on the *causal* relationships between these CWEs and the primary CWE-122.\n*   **Explicitly Mention Mitigations:** For each CWE, explicitly list 1-2 relevant mitigations from the CWE specification. This adds practical value to the analysis.\n*   **Clarify Relationships:** Further clarify the relationships between CWE-122, CWE-125, and CWE-193.\n*   **Consider Other Potential CWEs:** The retriever results suggest other CWEs that may have contributed to the vulnerability. Review these results and include them in the analysis if relevant.\n*   **Observed Examples:** The observed examples are helpful, consider including more of them.\n\nBy incorporating these suggestions, the analysis would become even more robust and provide a more complete understanding of the vulnerability.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-122 | Heap-based Buffer Overflow | 0.95 | Variant | Allowed | Primary CWE |\n| CWE-125 | Out-of-bounds Read | 0.75 | Base | Allowed | Secondary Candidate |\n| CWE-193 | Off-by-one Error | 0.60 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.92\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-122 (Heap-based Buffer Overflow)**, which is a variant of buffer overflows. **CWE-125 (Out-of-bounds Read)** can follow **CWE-122** as a consequence of the overflow corrupting metadata used for subsequent reads. **CWE-193 (Off-by-one Error)** can precede **CWE-122** if it leads to an incorrect size calculation during memory allocation on the heap, eventually resulting in the overflow.\n\n```mermaid\ngraph TD\n    cwe122[\"CWE-122: Heap-based Buffer Overflow\"]\n    cwe125[\"CWE-125: Out-of-bounds Read\"]\n    cwe193[\"CWE-193: Off-by-one Error\"]\n    \n    cwe125 -->|CANFOLLOW| cwe122\n    cwe193 -->|CANPRECEDE| cwe122\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe122 primary\n    class cwe125,cwe193 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a potential **CWE-193 (Off-by-one Error)** during the calculation of the size for the array slice. This incorrect size is then used to allocate a buffer on the heap. Due to the undersized allocation or incorrect loop condition, a **CWE-122 (Heap-based Buffer Overflow)** occurs when data is written past the allocated buffer. The overflow can corrupt heap metadata, leading to a subsequent **CWE-125 (Out-of-bounds Read)** when the corrupted metadata is used to determine the size or location of a memory region. This leads to a Denial of Service (DoS).\n\n## Summary of Analysis\nThe initial analysis correctly identified **CWE-122 (Heap-based Buffer Overflow)** as the primary **ROOTCAUSE**, supported by the vulnerability description and CVE reference, which state a \"heap buffer overflow via `jsi_ArraySliceCmd`\". The secondary candidates, **CWE-125 (Out-of-bounds Read)** and **CWE-193 (Off-by-one Error)**, are also relevant. The analysis has been updated to strengthen the justification for **CWE-125** and **CWE-193**, explaining how they can contribute to the primary weakness.\n\n*   **CWE-125**: The ASan error reporting a \"read beyond allocated buffer\" provides evidence. A heap overflow corrupts metadata that is then used for subsequent reads which results in over-reads. This justifies the inclusion of **CWE-125**.\n*   **CWE-193**: An off-by-one error in the size calculation for the array slice can lead to an undersized buffer allocation on the heap. This provides a more specific justification for its inclusion.\n\nThe graph relationships influenced the selection by highlighting how these weaknesses can form a chain leading to the final impact. The chosen CWEs are at the optimal level of specificity, with **CWE-122** being a Variant and **CWE-125** and **CWE-193** being Base level CWEs.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 212.3263753495741,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5287862977344734,
            "sparse": 212.3263753495741,
            "graph": 2.56476043856254
          },
          "normalized_scores": {
            "dense": 0.5287862977344734,
            "sparse": 0.16986110027965928,
            "graph": 0.915985870915193
          },
          "weighted_scores": {
            "dense": 0.18507520420706566,
            "sparse": 0.06794444011186372,
            "graph": 0.22899646772879825
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5287862977344734,
              "query_max": 0.5606326990981708,
              "query_min": 0.511365532032525,
              "normalized_score": 0.5287862977344734,
              "weight": 0.35,
              "weighted_score": 0.18507520420706566
            },
            "sparse": {
              "raw_score": 212.3263753495741,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.16986110027965928,
              "weight": 0.4,
              "weighted_score": 0.06794444011186372
            },
            "graph": {
              "raw_score": 2.56476043856254,
              "query_max": 2.56476043856254,
              "query_min": 1.280537224562555,
              "normalized_score": 0.915985870915193,
              "weight": 0.25,
              "weighted_score": 0.22899646772879825
            }
          },
          "contribution_percentages": {
            "dense": 38.39606178739937,
            "sparse": 14.09588567967539,
            "graph": 47.50805253292524
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.48201611204772765,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.626620945662046
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.626620945662046
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6892830402282506
            }
          },
          "combined_score": 0.6892830402282506
        }
      },
      "similarity": 0.6892830402282506
    },
    {
      "metadata": {
        "doc_id": "CWE-770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [],
        "original_sparse_score": 182.45633241938683,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5439262480171563,
            "sparse": 182.45633241938683,
            "graph": 2.4682381005973895
          },
          "normalized_scores": {
            "dense": 0.5439262480171563,
            "sparse": 0.14596506593550945,
            "graph": 0.8815136073562105
          },
          "weighted_scores": {
            "dense": 0.19037418680600468,
            "sparse": 0.05838602637420379,
            "graph": 0.22037840183905263
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5439262480171563,
              "query_max": 0.5606326990981708,
              "query_min": 0.511365532032525,
              "normalized_score": 0.5439262480171563,
              "weight": 0.35,
              "weighted_score": 0.19037418680600468
            },
            "sparse": {
              "raw_score": 182.45633241938683,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.14596506593550945,
              "weight": 0.4,
              "weighted_score": 0.05838602637420379
            },
            "graph": {
              "raw_score": 2.4682381005973895,
              "query_max": 2.56476043856254,
              "query_min": 1.280537224562555,
              "normalized_score": 0.8815136073562105,
              "weight": 0.25,
              "weighted_score": 0.22037840183905263
            }
          },
          "contribution_percentages": {
            "dense": 40.57951759059284,
            "sparse": 12.445367851846232,
            "graph": 46.97511455756093
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.46913861501926113,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6098801995250395
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6098801995250395
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6708682194775435
            }
          },
          "combined_score": 0.6708682194775435
        }
      },
      "similarity": 0.6708682194775435
    },
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 211.50245184438344,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5428633231211063,
            "sparse": 211.50245184438344,
            "graph": 2.2494726583101556
          },
          "normalized_scores": {
            "dense": 0.5428633231211063,
            "sparse": 0.16920196147550676,
            "graph": 0.803383092253627
          },
          "weighted_scores": {
            "dense": 0.19000216309238718,
            "sparse": 0.0676807845902027,
            "graph": 0.20084577306340676
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5428633231211063,
              "query_max": 0.5606326990981708,
              "query_min": 0.511365532032525,
              "normalized_score": 0.5428633231211063,
              "weight": 0.35,
              "weighted_score": 0.19000216309238718
            },
            "sparse": {
              "raw_score": 211.50245184438344,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.16920196147550676,
              "weight": 0.4,
              "weighted_score": 0.0676807845902027
            },
            "graph": {
              "raw_score": 2.2494726583101556,
              "query_max": 2.56476043856254,
              "query_min": 1.280537224562555,
              "normalized_score": 0.803383092253627,
              "weight": 0.25,
              "weighted_score": 0.20084577306340676
            }
          },
          "contribution_percentages": {
            "dense": 41.437352666429696,
            "sparse": 14.760424271807976,
            "graph": 43.80222306176234
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4585287207459966,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5960873369697955
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5960873369697955
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.6556960706667752
            }
          },
          "combined_score": 0.6556960706667752
        }
      },
      "similarity": 0.6556960706667752
    },
    {
      "metadata": {
        "doc_id": "CWE-126",
        "name": "Buffer Over-read",
        "type": "Variant",
        "original_content": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "relationships": [],
        "original_sparse_score": 207.7535133021074,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5573806478482519,
            "sparse": 207.7535133021074,
            "graph": 1.574871521922501
          },
          "normalized_scores": {
            "dense": 0.5573806478482519,
            "sparse": 0.1662028106416859,
            "graph": 0.5624541149723218
          },
          "weighted_scores": {
            "dense": 0.19508322674688816,
            "sparse": 0.06648112425667436,
            "graph": 0.14061352874308045
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5573806478482519,
              "query_max": 0.5606326990981708,
              "query_min": 0.511365532032525,
              "normalized_score": 0.5573806478482519,
              "weight": 0.35,
              "weighted_score": 0.19508322674688816
            },
            "sparse": {
              "raw_score": 207.7535133021074,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.1662028106416859,
              "weight": 0.4,
              "weighted_score": 0.06648112425667436
            },
            "graph": {
              "raw_score": 1.574871521922501,
              "query_max": 2.56476043856254,
              "query_min": 1.280537224562555,
              "normalized_score": 0.5624541149723218,
              "weight": 0.25,
              "weighted_score": 0.14061352874308045
            }
          },
          "contribution_percentages": {
            "dense": 48.50670227556605,
            "sparse": 16.530278666383886,
            "graph": 34.96301905805006
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.402177879746643,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.4826134556959716
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4826134556959716
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.5308748012655687
            }
          },
          "combined_score": 0.5308748012655687
        }
      },
      "similarity": 0.5308748012655687
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 266.22382341889283,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5606326990981708,
            "sparse": 266.22382341889283
          },
          "normalized_scores": {
            "dense": 0.5606326990981708,
            "sparse": 0.21297905873511427
          },
          "weighted_scores": {
            "dense": 0.19622144468435979,
            "sparse": 0.08519162349404572
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5606326990981708,
              "query_max": 0.5606326990981708,
              "query_min": 0.511365532032525,
              "normalized_score": 0.5606326990981708,
              "weight": 0.35,
              "weighted_score": 0.19622144468435979
            },
            "sparse": {
              "raw_score": 266.22382341889283,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.21297905873511427,
              "weight": 0.4,
              "weighted_score": 0.08519162349404572
            }
          },
          "contribution_percentages": {
            "dense": 69.72719708949786,
            "sparse": 30.27280291050214
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2814130681784055,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3376956818140866
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3376956818140866
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3714652499954953
            }
          },
          "combined_score": 0.3714652499954953
        }
      },
      "similarity": 0.3714652499954953
    },
    {
      "metadata": {
        "doc_id": "CWE-170",
        "name": "Improper Null Termination",
        "type": "Base",
        "original_content": "The product does not terminate or incorrectly terminates a string or array with a null character or equivalent terminator.",
        "relationships": [],
        "original_sparse_score": 185.23380152214088,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 185.23380152214088,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.1481870412177127,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.05927481648708508,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 185.23380152214088,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.1481870412177127,
              "weight": 0.4,
              "weighted_score": 0.05927481648708508
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 2.56476043856254,
              "query_min": 1.280537224562555,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 23.100422406246892,
            "graph": 76.89957759375311
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2565962450585137,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3335751185760678
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3335751185760678
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.36693263043367463
            }
          },
          "combined_score": 0.36693263043367463
        }
      },
      "similarity": 0.36693263043367463
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 201.51126763547234,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5181985124703803,
            "sparse": 201.51126763547234
          },
          "normalized_scores": {
            "dense": 0.5181985124703803,
            "sparse": 0.16120901410837787
          },
          "weighted_scores": {
            "dense": 0.1813694793646331,
            "sparse": 0.06448360564335115
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5181985124703803,
              "query_max": 0.5606326990981708,
              "query_min": 0.511365532032525,
              "normalized_score": 0.5181985124703803,
              "weight": 0.35,
              "weighted_score": 0.1813694793646331
            },
            "sparse": {
              "raw_score": 201.51126763547234,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.16120901410837787,
              "weight": 0.4,
              "weighted_score": 0.06448360564335115
            }
          },
          "contribution_percentages": {
            "dense": 73.77148810589178,
            "sparse": 26.228511894108227
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.24585308500798425,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.31960901051037954
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.31960901051037954
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.35156991156141754
            }
          },
          "combined_score": 0.35156991156141754
        }
      },
      "similarity": 0.35156991156141754
    },
    {
      "metadata": {
        "doc_id": "CWE-121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "relationships": [],
        "original_sparse_score": 216.5086072334205,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5603376001440892,
            "sparse": 216.5086072334205
          },
          "normalized_scores": {
            "dense": 0.5603376001440892,
            "sparse": 0.1732068857867364
          },
          "weighted_scores": {
            "dense": 0.1961181600504312,
            "sparse": 0.06928275431469456
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5603376001440892,
              "query_max": 0.5606326990981708,
              "query_min": 0.511365532032525,
              "normalized_score": 0.5603376001440892,
              "weight": 0.35,
              "weighted_score": 0.1961181600504312
            },
            "sparse": {
              "raw_score": 216.5086072334205,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.1732068857867364,
              "weight": 0.4,
              "weighted_score": 0.06928275431469456
            }
          },
          "contribution_percentages": {
            "dense": 73.89505816872256,
            "sparse": 26.104941831277458
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.26540091436512575,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3184810972381509
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3184810972381509
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.350329206961966
            }
          },
          "combined_score": 0.350329206961966
        }
      },
      "similarity": 0.350329206961966
    },
    {
      "metadata": {
        "doc_id": "CWE-131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [],
        "original_sparse_score": 182.04556501873108,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5192390131940716,
            "sparse": 182.04556501873108
          },
          "normalized_scores": {
            "dense": 0.5192390131940716,
            "sparse": 0.14563645201498487
          },
          "weighted_scores": {
            "dense": 0.18173365461792507,
            "sparse": 0.05825458080599395
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5192390131940716,
              "query_max": 0.5606326990981708,
              "query_min": 0.511365532032525,
              "normalized_score": 0.5192390131940716,
              "weight": 0.35,
              "weighted_score": 0.18173365461792507
            },
            "sparse": {
              "raw_score": 182.04556501873108,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.14563645201498487,
              "weight": 0.4,
              "weighted_score": 0.05825458080599395
            }
          },
          "contribution_percentages": {
            "dense": 75.72606811200886,
            "sparse": 24.27393188799115
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.239988235423919,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.31198470605109474
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.31198470605109474
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.34318317665620424
            }
          },
          "combined_score": 0.34318317665620424
        }
      },
      "similarity": 0.34318317665620424
    },
    {
      "metadata": {
        "doc_id": "CWE-130",
        "name": "Improper Handling of Length Parameter Inconsistency",
        "type": "Base",
        "original_content": "The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.",
        "relationships": [],
        "original_sparse_score": 186.1766372155291,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5126338673405735,
            "sparse": 186.1766372155291
          },
          "normalized_scores": {
            "dense": 0.5126338673405735,
            "sparse": 0.14894130977242329
          },
          "weighted_scores": {
            "dense": 0.1794218535692007,
            "sparse": 0.059576523908969316
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5126338673405735,
              "query_max": 0.5606326990981708,
              "query_min": 0.511365532032525,
              "normalized_score": 0.5126338673405735,
              "weight": 0.35,
              "weighted_score": 0.1794218535692007
            },
            "sparse": {
              "raw_score": 186.1766372155291,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.14894130977242329,
              "weight": 0.4,
              "weighted_score": 0.059576523908969316
            }
          },
          "contribution_percentages": {
            "dense": 75.0724149102598,
            "sparse": 24.927585089740205
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.23899837747817002,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.310697890721621
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.310697890721621
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.34176767979378314
            }
          },
          "combined_score": 0.34176767979378314
        }
      },
      "similarity": 0.34176767979378314
    },
    {
      "metadata": {
        "doc_id": "CWE-401",
        "name": "Missing Release of Memory after Effective Lifetime",
        "type": "Variant",
        "original_content": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
        "relationships": [],
        "original_sparse_score": 181.9164076054797,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5264227348859027,
            "sparse": 181.9164076054797
          },
          "normalized_scores": {
            "dense": 0.5264227348859027,
            "sparse": 0.14553312608438376
          },
          "weighted_scores": {
            "dense": 0.18424795721006595,
            "sparse": 0.058213250433753506
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5264227348859027,
              "query_max": 0.5606326990981708,
              "query_min": 0.511365532032525,
              "normalized_score": 0.5264227348859027,
              "weight": 0.35,
              "weighted_score": 0.18424795721006595
            },
            "sparse": {
              "raw_score": 181.9164076054797,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.14553312608438376,
              "weight": 0.4,
              "weighted_score": 0.058213250433753506
            }
          },
          "contribution_percentages": {
            "dense": 75.99069517162928,
            "sparse": 24.009304828370723
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.24246120764381945,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.2909534491725833
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2909534491725833
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.32004879408984166
            }
          },
          "combined_score": 0.32004879408984166
        }
      },
      "similarity": 0.32004879408984166
    },
    {
      "metadata": {
        "doc_id": "CWE-843",
        "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
        "type": "Base",
        "original_content": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.",
        "relationships": [],
        "original_sparse_score": 175.10286899817268,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 175.10286899817268,
            "graph": 1.6848000000000003
          },
          "normalized_scores": {
            "sparse": 0.14008229519853815,
            "graph": 0.6017142857142859
          },
          "weighted_scores": {
            "sparse": 0.05603291807941527,
            "graph": 0.15042857142857147
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 175.10286899817268,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.14008229519853815,
              "weight": 0.4,
              "weighted_score": 0.05603291807941527
            },
            "graph": {
              "raw_score": 1.6848000000000003,
              "query_max": 2.56476043856254,
              "query_min": 1.280537224562555,
              "normalized_score": 0.6017142857142859,
              "weight": 0.25,
              "weighted_score": 0.15042857142857147
            }
          },
          "contribution_percentages": {
            "sparse": 27.139646339346836,
            "graph": 72.86035366065316
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.20646148950798673,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2683999363603828
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2683999363603828
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.29523992999642107
            }
          },
          "combined_score": 0.29523992999642107
        }
      },
      "similarity": 0.29523992999642107
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 215.384583673436,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5478717706334592,
            "sparse": 215.384583673436
          },
          "normalized_scores": {
            "dense": 0.5478717706334592,
            "sparse": 0.1723076669387488
          },
          "weighted_scores": {
            "dense": 0.1917551197217107,
            "sparse": 0.06892306677549952
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5478717706334592,
              "query_max": 0.5606326990981708,
              "query_min": 0.511365532032525,
              "normalized_score": 0.5478717706334592,
              "weight": 0.35,
              "weighted_score": 0.1917551197217107
            },
            "sparse": {
              "raw_score": 215.384583673436,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.1723076669387488,
              "weight": 0.4,
              "weighted_score": 0.06892306677549952
            }
          },
          "contribution_percentages": {
            "dense": 73.56009426732868,
            "sparse": 26.43990573267132
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.2606781864972102,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.20854254919776816
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.20854254919776816
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.21896967665765657
            }
          },
          "combined_score": 0.21896967665765657
        }
      },
      "similarity": 0.21896967665765657
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 198.31682127216985,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5245145437093965,
            "sparse": 198.31682127216985
          },
          "normalized_scores": {
            "dense": 0.5245145437093965,
            "sparse": 0.15865345701773587
          },
          "weighted_scores": {
            "dense": 0.18358009029828878,
            "sparse": 0.06346138280709435
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5245145437093965,
              "query_max": 0.5606326990981708,
              "query_min": 0.511365532032525,
              "normalized_score": 0.5245145437093965,
              "weight": 0.35,
              "weighted_score": 0.18358009029828878
            },
            "sparse": {
              "raw_score": 198.31682127216985,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.15865345701773587,
              "weight": 0.4,
              "weighted_score": 0.06346138280709435
            }
          },
          "contribution_percentages": {
            "dense": 74.31144576278375,
            "sparse": 25.688554237216255
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.24704147310538313,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.1976331784843065
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1976331784843065
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.1581065427874452
            }
          },
          "combined_score": 0.1581065427874452
        }
      },
      "similarity": 0.1581065427874452
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 206.83558282600055,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 206.83558282600055
          },
          "normalized_scores": {
            "sparse": 0.16546846626080045
          },
          "weighted_scores": {
            "sparse": 0.06618738650432018
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 206.83558282600055,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.16546846626080045,
              "weight": 0.4,
              "weighted_score": 0.06618738650432018
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06618738650432018,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.08604360245561624
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08604360245561624
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.09464796270117787
            }
          },
          "combined_score": 0.09464796270117787
        }
      },
      "similarity": 0.09464796270117787
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 198.81065319757772,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 198.81065319757772
          },
          "normalized_scores": {
            "sparse": 0.15904852255806218
          },
          "weighted_scores": {
            "sparse": 0.06361940902322487
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 198.81065319757772,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.15904852255806218,
              "weight": 0.4,
              "weighted_score": 0.06361940902322487
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.06361940902322487,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.08270523173019233
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.08270523173019233
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.09097575490321157
            }
          },
          "combined_score": 0.09097575490321157
        }
      },
      "similarity": 0.09097575490321157
    },
    {
      "metadata": {
        "doc_id": "CWE-197",
        "name": "Numeric Truncation Error",
        "type": "Base",
        "original_content": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
        "relationships": [],
        "original_sparse_score": 180.73749520956972,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 180.73749520956972
          },
          "normalized_scores": {
            "sparse": 0.14458999616765578
          },
          "weighted_scores": {
            "sparse": 0.05783599846706231
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 180.73749520956972,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.14458999616765578,
              "weight": 0.4,
              "weighted_score": 0.05783599846706231
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.05783599846706231,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.075186798007181
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.075186798007181
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08270547780789911
            }
          },
          "combined_score": 0.08270547780789911
        }
      },
      "similarity": 0.08270547780789911
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 176.38928450815956,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 176.38928450815956
          },
          "normalized_scores": {
            "sparse": 0.14111142760652765
          },
          "weighted_scores": {
            "sparse": 0.05644457104261106
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 176.38928450815956,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.14111142760652765,
              "weight": 0.4,
              "weighted_score": 0.05644457104261106
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.05644457104261106,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.07337794235539438
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07337794235539438
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08071573659093383
            }
          },
          "combined_score": 0.08071573659093383
        }
      },
      "similarity": 0.08071573659093383
    },
    {
      "metadata": {
        "doc_id": "CWE-476",
        "name": "NULL Pointer Dereference",
        "type": "Base",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "relationships": [],
        "original_sparse_score": 176.2982748920419,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 176.2982748920419
          },
          "normalized_scores": {
            "sparse": 0.1410386199136335
          },
          "weighted_scores": {
            "sparse": 0.056415447965453405
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 176.2982748920419,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.1410386199136335,
              "weight": 0.4,
              "weighted_score": 0.056415447965453405
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.056415447965453405,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.07334008235508943
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.07334008235508943
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.08067409059059838
            }
          },
          "combined_score": 0.08067409059059838
        }
      },
      "similarity": 0.08067409059059838
    },
    {
      "metadata": {
        "doc_id": "CWE-909",
        "name": "Missing Initialization of Resource",
        "type": "Class",
        "original_content": "The product does not initialize a critical resource.",
        "relationships": [],
        "original_sparse_score": 177.93895015361514,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 177.93895015361514
          },
          "normalized_scores": {
            "sparse": 0.14235116012289212
          },
          "weighted_scores": {
            "sparse": 0.05694046404915685
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 177.93895015361514,
              "query_max": 266.22382341889283,
              "query_min": 175.10286899817268,
              "normalized_score": 0.14235116012289212,
              "weight": 0.4,
              "weighted_score": 0.05694046404915685
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.05694046404915685,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.045552371239325484
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.045552371239325484
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.04782998980129176
            }
          },
          "combined_score": 0.04782998980129176
        }
      },
      "similarity": 0.04782998980129176
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-122",
      "CWE-193",
      "CWE-119",
      "CWE-125"
    ],
    "critic_additional": []
  }
}