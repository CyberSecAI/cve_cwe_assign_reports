{
  "cve_id": "CVE-2022-43408",
  "description": "Jenkins Pipeline Stage View Plugin 2.26 and earlier does not correctly encode the ID of input steps when using it to generate URLs to proceed or abort Pipeline builds, allowing attackers able to configure Pipelines to specify input step IDs resulting in URLs that would bypass the CSRF protection of any target URL in Jenkins.",
  "key_phrases": {
    "rootcause": "improper encoding of the ID of input steps",
    "weakness": "cross-site request forgery",
    "impact": "bypass CSRF protection",
    "vector": "",
    "attacker": "attackers able to configure Pipelines",
    "product": "Jenkins Pipeline Stage View Plugin",
    "version": "2.26 and earlier",
    "component": ""
  },
  "reference_content": "Based on the provided information, here's an analysis of CVE-2022-43408:\n\n**CVE-2022-43408**\n\n*   **Root Cause:** The Pipeline: Stage View Plugin does not properly encode the ID of `input` steps when generating URLs to proceed or abort Pipeline builds.\n*   **Weakness:** Insufficient encoding of user-provided input (`input` step IDs) in URLs. This allows for the bypass of CSRF protection.\n*   **Impact:** Attackers can configure Pipelines to specify `input` step IDs that would result in URLs that bypass CSRF protection of any target URL in Jenkins. This can lead to unauthorized actions in Jenkins or potentially external systems.\n*   **Attack Vector:** An attacker must be able to configure Pipelines with crafted `input` step IDs. The attack is triggered when a user interacts with the crafted `input` step, specifically through the stage view.\n*   **Required Attacker Capabilities/Position:** Attackers need the ability to configure Pipelines within Jenkins, which typically requires some level of authenticated access.  The user needs to interact with the crafted `input` step within the stage view for the attack to succeed.\n\n**Summary of CVE-2022-43408:**\n\nThe vulnerability lies in the way the Pipeline: Stage View Plugin handles `input` step IDs when constructing URLs. The lack of proper encoding allows an attacker to inject arbitrary URLs that bypass Jenkins' CSRF protection. By crafting a pipeline with a malicious `input` step ID and tricking a user to interact with it, the attacker can perform actions in Jenkins under the victim's identity, potentially leading to sensitive data exposure or privilege escalation.\n\nThis content provides more detail than a typical CVE description by outlining the specific mechanism of the attack and the required attacker capabilities.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.85 | Compound | Primary | Allowed |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.75 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability description clearly states that the Jenkins Pipeline Stage View Plugin does not correctly encode the ID of input steps, leading to a bypass of CSRF protection. The core **weakness** is the lack of proper CSRF protection due to **improper encoding**. This aligns precisely with CWE-352 (Cross-Site Request Forgery (CSRF)). The CVE reference summary reinforces this, emphasizing that insufficient encoding of user-provided input allows bypassing CSRF protection. The description mentions that an attacker can configure pipelines to specify input step IDs, resulting in URLs that bypass CSRF protection of any target URL in Jenkins. This indicates a CSRF attack where the attacker crafts a malicious request that the victim unknowingly executes. CWE-352 is a compound weakness that describes a scenario where a web application does not sufficiently verify whether a request was intentionally provided by the user.\n  - While other CWEs such as CWE-79 (Cross-Site Scripting) and CWE-78 (OS Command Injection) were considered, they do not directly address the CSRF aspect of the vulnerability. CWE-116 (Improper Encoding or Escaping of Output) is a contributing factor, as the **improper encoding** is the root cause that enables the CSRF bypass. However, CWE-352 is the primary **weakness** that describes the vulnerability's impact.\n\n- **Relationship Analysis:**\n  - *Explanation:* CWE-352 is a compound weakness, meaning it's composed of multiple underlying weaknesses. In this case, the **improper encoding** (CWE-116) is a contributing factor that allows the CSRF attack to be successful. CWE-352 requires weaknesses such as CWE-613 (Insufficient Session Expiration), CWE-642 (Permissive Cross-domain Policy with Untrusted Domains), CWE-441 (Unprotected Transport of Credentials), and CWE-346 (Origin Validation Error). The relationship analysis shows CWE-352 can follow CWE-1275 (Reliance on Reverse DNS for Security). CWE-116 is a parent of many encoding related weaknesses.\n\n- **Confidence Score:**\n  - *Explanation:* Confidence: 0.85 (High evidence from technical description and CVE reference materials)\n\n---\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability description indicates **improper encoding** of the ID of input steps. The **root cause** centers around how the plugin handles the IDs, leading to the possibility of crafting URLs that bypass CSRF protection. CWE-116 (Improper Encoding or Escaping of Output) is a class-level CWE that describes situations where the product prepares a structured message, but encoding or escaping is missing or done incorrectly. This aligns with the vulnerability description, as the plugin's failure to properly encode the input step IDs directly leads to the CSRF bypass. The CVE reference summary explicitly states that the Pipeline: Stage View Plugin does not properly encode the ID of `input` steps, reinforcing the **improper encoding** aspect.\n  - While other CWEs like CWE-838 (Inappropriate Encoding for Output Context) and CWE-79 (Cross-Site Scripting) were considered, they do not precisely capture the **root cause** of the vulnerability. CWE-838 is too broad and doesn't specify the encoding problem. CWE-79 is focused on XSS, which is not the primary issue here. CWE-116 is a more suitable candidate since it is focused on **improper encoding** and CSRF is the result. However, CWE-352 is the overall **weakness** and impact, so CWE-116 is a secondary consideration.\n\n- **Relationship Analysis:**\n  - *Explanation:* CWE-116 is a class-level CWE, meaning it has more specific child CWEs that might be applicable. However, the current description does not provide enough information to pinpoint the specific type of **improper encoding**. CWE-116 can precede CWE-79 (Cross-Site Scripting) and CWE-113 (Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')). The relationship analysis does not strongly suggest any other specific CWEs based on the provided information.\n\n- **Confidence Score:**\n  - *Explanation:* Confidence: 0.75 (Sufficient evidence from technical description and CVE reference materials)",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.85 | Compound | Primary | Allowed |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.75 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability description clearly states that the Jenkins Pipeline Stage View Plugin does not correctly encode the ID of input steps, leading to a bypass of CSRF protection. The core **weakness** is the lack of proper CSRF protection due to **improper encoding**. This aligns precisely with CWE-352 (Cross-Site Request Forgery (CSRF)). The CVE reference summary reinforces this, emphasizing that insufficient encoding of user-provided input allows bypassing CSRF protection. The description mentions that an attacker can configure pipelines to specify input step IDs, resulting in URLs that bypass CSRF protection of any target URL in Jenkins. This indicates a CSRF attack where the attacker crafts a malicious request that the victim unknowingly executes. CWE-352 is a compound weakness that describes a scenario where a web application does not sufficiently verify whether a request was intentionally provided by the user.\n  - While other CWEs such as CWE-79 (Cross-Site Scripting) and CWE-78 (OS Command Injection) were considered, they do not directly address the CSRF aspect of the vulnerability. CWE-116 (Improper Encoding or Escaping of Output) is a contributing factor, as the **improper encoding** is the root cause that enables the CSRF bypass. However, CWE-352 is the primary **weakness** that describes the vulnerability's impact.\n\n- **Relationship Analysis:**\n  - *Explanation:* CWE-352 is a compound weakness, meaning it's composed of multiple underlying weaknesses. In this case, the **improper encoding** (CWE-116) is a contributing factor that allows the CSRF attack to be successful. CWE-352 requires weaknesses such as CWE-613 (Insufficient Session Expiration), CWE-642 (Permissive Cross-domain Policy with Untrusted Domains), CWE-441 (Unprotected Transport of Credentials), and CWE-346 (Origin Validation Error). The relationship analysis shows CWE-352 can follow CWE-1275 (Reliance on Reverse DNS for Security). CWE-116 is a parent of many encoding related weaknesses.\n\n- **Confidence Score:**\n  - *Explanation:* Confidence: 0.85 (High evidence from technical description and CVE reference materials)\n\n---\n- **Analysis and Justification:**\n  - *Explanation:* The vulnerability description indicates **improper encoding** of the ID of input steps. The **root cause** centers around how the plugin handles the IDs, leading to the possibility of crafting URLs that bypass CSRF protection. CWE-116 (Improper Encoding or Escaping of Output) is a class-level CWE that describes situations where the product prepares a structured message, but encoding or escaping is missing or done incorrectly. This aligns with the vulnerability description, as the plugin's failure to properly encode the input step IDs directly leads to the CSRF bypass. The CVE reference summary explicitly states that the Pipeline: Stage View Plugin does not properly encode the ID of `input` steps, reinforcing the **improper encoding** aspect.\n  - While other CWEs like CWE-838 (Inappropriate Encoding for Output Context) and CWE-79 (Cross-Site Scripting) were considered, they do not precisely capture the **root cause** of the vulnerability. CWE-838 is too broad and doesn't specify the encoding problem. CWE-79 is focused on XSS, which is not the primary issue here. CWE-116 is a more suitable candidate since it is focused on **improper encoding** and CSRF is the result. However, CWE-352 is the overall **weakness** and impact, so CWE-116 is a secondary consideration.\n\n- **Relationship Analysis:**\n  - *Explanation:* CWE-116 is a class-level CWE, meaning it has more specific child CWEs that might be applicable. However, the current description does not provide enough information to pinpoint the specific type of **improper encoding**. CWE-116 can precede CWE-79 (Cross-Site Scripting) and CWE-113 (Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')). The relationship analysis does not strongly suggest any other specific CWEs based on the provided information.\n\n- **Confidence Score:**\n  - *Explanation:* Confidence: 0.75 (Sufficient evidence from technical description and CVE reference materials)",
  "criticism": "Okay, I've reviewed the provided vulnerability analysis and the full CWE specifications for the identified CWEs and other potentially relevant CWEs. Here's my critique:\n\n**Overall Assessment:**\n\nThe analysis is generally good and identifies the primary weakness, CWE-352 (Cross-Site Request Forgery), with a high confidence score. The secondary classification, CWE-116 (Improper Encoding or Escaping of Output), is also a reasonable assessment. However, I have some suggestions for improvement, particularly in refining the relationship between the two CWEs and exploring potentially more specific CWEs related to encoding.\n\n**Detailed Critique:**\n\n**1. CWE-352: Cross-Site Request Forgery (Primary)**\n\n*   **Strengths:** The justification for choosing CWE-352 is strong. The analysis correctly points out that the core issue is the bypass of CSRF protection due to improper encoding. The description of how the attacker can configure pipelines with malicious input step IDs to craft CSRF-bypassing URLs aligns well with the definition of CWE-352. The evidence strength is high, given the description of the attack and the CVE reference.\n*   **Areas for Consideration:**\n    *   The analysis states that CWE-352 *requires* CWE-346, CWE-441, CWE-642, and CWE-613. While these CWEs often *contribute* to the *potential* success of a CSRF attack, they are not strictly *required* for CWE-352 to be present.  A CSRF can occur without, for example, CWE-613 (Insufficient Session Expiration). A valid CSRF token mechanism that is bypassed can still exist with proper session expiration times. Remove this statement to avoid confusion.\n    *   The \"Theoretical\" section mentioning the multi-channel nature of CSRF is informative, but it might be beneficial to directly link this to the vulnerability at hand.  How does the attacker-to-intermediary-to-server flow manifest in this specific Jenkins plugin scenario? Explicitly stating the channel may help provide better context.\n*   **Suggested Improvements:**\n    * Revise the \"Relationship Analysis\" to emphasize the *contribution* of weaknesses like CWE-116, CWE-346, CWE-441, CWE-642, and CWE-613, rather than stating they are strict requirements.\n    * Provide greater clarity on the exploitation channel.\n\n**2. CWE-116: Improper Encoding or Escaping of Output (Secondary)**\n\n*   **Strengths:** Identifying CWE-116 as a contributing factor is accurate. The **root cause** *is* the incorrect or missing encoding of the input step ID. Without this improper encoding, the CSRF vulnerability would not be exploitable. The analysis correctly explains that CWE-116 enables the CSRF bypass.\n*   **Areas for Consideration:**\n    *   The analysis mentions considering other CWEs like CWE-838 and CWE-79.  While these are possibilities, it's important to distinguish why CWE-116 is more fitting. Briefly stating the specific output context (URL generation) would help clarify.\n    *   The relationship analysis could be strengthened by suggesting *specific* child CWEs of CWE-116. URL encoding is not occurring correctly, so specifying a more accurate child may be more appropriate.\n*   **Suggested Improvements:**\n    *   Clarify the specific context where the encoding is failing (URL generation). This will better support CWE-116 and guide future analysis.\n    *   Investigate potential child CWEs of CWE-116 that might be more precise. For example, if the output is used in URLs, consider weaknesses relating to URL encoding.\n\n**3. Top Combined Retriever Results**\n\nThe Retriever Results section presents some potentially relevant CWEs that warrant review:\n\n*   **CWE-838: Inappropriate Encoding for Output Context** While considered and dismissed, reviewing *why* this isn't as appropriate is valuable. CWE-838 is a `Base` level CWE, making it more specific than the `Class` CWE-116. The encoding is not just 'inappropriate' but rather explicitly missing (improper)\n*   **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**. Also consider that this vulnerability is not directly about injecting malicious script into a web page, but about bypassing a CSRF protection mechanism. However, XSS could be used to *facilitate* the CSRF attack (as noted in CWE-352's relationships), but it's not the primary weakness here.\n*   **CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')**. This is not relevant, as it does not involve file path manipulation.\n*   **CWE-352: Cross-Site Request Forgery (CSRF)** Although this is the primary CWE, it is being presented within the top combined results, which is counter intuitive.\n*   **CWE-862: Missing Authorization and CWE-863: Incorrect Authorization**. These are not directly related, as an attacker is not attempting to bypass authorization to access a protected resource directly. The CSRF attack aims to trick a legitimate user into performing an action they are authorized to do, but without their knowledge or consent.\n*   **CWE-639: Authorization Bypass Through User-Controlled Key**. Although not directly related, this is the closest to being related to the vulnerability because of the attacker's ability to control the input step ID.\n\n**4. General Suggestions:**\n\n*   **Focus on the Specifics:** While the analysis correctly identifies the broad categories of CSRF and improper encoding, the strength of the analysis would increase by focusing on the specific encoding mechanisms (or lack thereof) that are failing. What *type* of encoding should be used? Why is it not being used?\n*   **Exploit Chain:** The analysis correctly identifies the relationship between improper encoding and CSRF. Explicitly stating this relationship as an \"exploit chain\" (Improper Encoding -> CSRF Bypass) can improve clarity.\n\n**Revised Summary Table (Example):**\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.85 | Compound | Primary | Allowed |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.75 | Class | Secondary | Allowed-with-Review |\n\n**Justification:**\nThe classification accurately identifies CSRF as the primary vulnerability, and Improper Encoding as the direct cause of the CSRF. The key is to refine the understanding of encoding and provide more context to show why each CWE is appropriate.\n\nBy addressing these points, the analysis can be made even more robust and provide a more precise understanding of the vulnerability, which in turn, can assist remediation efforts.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.90 | Compound | Primary | Allowed |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.80 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that **CWE-116 (Improper Encoding or Escaping of Output)** can lead to **CWE-352 (Cross-Site Request Forgery (CSRF))**. The initial analysis and the criticism both agree on this relationship. **CWE-116** is a class-level weakness, and a more specific variant might be more appropriate if more details about the encoding context were available. The criticism suggested exploring children of **CWE-116**, but the available information does not pinpoint a specific encoding flaw. **CWE-352** is a compound weakness, representing a broader category of vulnerabilities related to CSRF. It is important to note that while weaknesses like **CWE-613 (Insufficient Session Expiration)**, **CWE-642 (External Control of Critical State Data)**, **CWE-441 (Unintended Proxy or Intermediary ('Confused Deputy'))**, and **CWE-346 (Origin Validation Error)** can contribute to the success of a CSRF attack, they are not strictly required for **CWE-352** to exist.mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    \n    cwe116 -->|CANPRECEDE| cwe352\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe352 primary\n    class cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with the **ROOTCAUSE** of **CWE-116 (Improper Encoding or Escaping of Output)**. Because the ID of input steps is not correctly encoded when generating URLs to proceed or abort Pipeline builds, an attacker can specify input step IDs resulting in URLs that bypass CSRF protection. This leads to **CWE-352 (Cross-Site Request Forgery (CSRF))**, where an attacker can craft a malicious request that the victim unknowingly executes, leading to unintended actions being performed on the victim's behalf.\n\n## Summary of Analysis\nThe initial analysis correctly identified **CWE-352 (Cross-Site Request Forgery (CSRF))** as the primary **weakness**, with **CWE-116 (Improper Encoding or Escaping of Output)** as a contributing factor. The criticism provided useful suggestions for refining the relationship between these CWEs and exploring more specific encoding-related CWEs. Based on the evidence, the plugin's failure to properly encode the input step IDs allows attackers to craft URLs that bypass CSRF protection. The vulnerability description clearly states that the Jenkins Pipeline Stage View Plugin does not correctly encode the ID of input steps. While a more specific child of **CWE-116** might be ideal, the lack of detailed information about the exact encoding context makes **CWE-116** the most appropriate choice at the class level. The decision is based on the vulnerability description and the relationships between CWEs. The selected CWEs are at the optimal level of specificity given the available evidence.\n```",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-838",
        "name": "Inappropriate Encoding for Output Context",
        "type": "Base",
        "original_content": "The product uses or specifies an encoding when generating output to a downstream component, but the specified encoding is not the same as the encoding that is expected by the downstream component.",
        "relationships": [],
        "original_sparse_score": 1225.0866370166948,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.537099465379951,
            "sparse": 1225.0866370166948,
            "graph": 1.7112628821870535
          },
          "normalized_scores": {
            "dense": 0.537099465379951,
            "sparse": 0.9800693096133558,
            "graph": 0.6111653150668048
          },
          "weighted_scores": {
            "dense": 0.18798481288298285,
            "sparse": 0.39202772384534235,
            "graph": 0.1527913287667012
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.537099465379951,
              "query_max": 0.537099465379951,
              "query_min": 0.41874293593124357,
              "normalized_score": 0.537099465379951,
              "weight": 0.35,
              "weighted_score": 0.18798481288298285
            },
            "sparse": {
              "raw_score": 1225.0866370166948,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.9800693096133558,
              "weight": 0.4,
              "weighted_score": 0.39202772384534235
            },
            "graph": {
              "raw_score": 1.7112628821870535,
              "query_max": 1.7112628821870535,
              "query_min": 1.0062,
              "normalized_score": 0.6111653150668048,
              "weight": 0.25,
              "weighted_score": 0.1527913287667012
            }
          },
          "contribution_percentages": {
            "dense": 25.652814038582434,
            "sparse": 53.496950862904946,
            "graph": 20.85023509851262
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.7328038654950264,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.9526450251435343
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.9526450251435343
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 1.0479095276578878
            }
          },
          "combined_score": 1.0479095276578878
        }
      },
      "similarity": 1.0479095276578878
    },
    {
      "metadata": {
        "doc_id": "CWE-549",
        "name": "Missing Password Field Masking",
        "type": "Base",
        "original_content": "The product does not mask passwords during entry, increasing the potential for attackers to observe and capture passwords.",
        "relationships": [],
        "original_sparse_score": 492.96095737043413,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4406497509525782,
            "sparse": 492.96095737043413
          },
          "normalized_scores": {
            "dense": 0.4406497509525782,
            "sparse": 0.3943687658963473
          },
          "weighted_scores": {
            "dense": 0.15422741283340236,
            "sparse": 0.15774750635853893
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4406497509525782,
              "query_max": 0.537099465379951,
              "query_min": 0.41874293593124357,
              "normalized_score": 0.4406497509525782,
              "weight": 0.35,
              "weighted_score": 0.15422741283340236
            },
            "sparse": {
              "raw_score": 492.96095737043413,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.3943687658963473,
              "weight": 0.4,
              "weighted_score": 0.15774750635853893
            }
          },
          "contribution_percentages": {
            "dense": 49.43583709641561,
            "sparse": 50.564162903584375
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.3119749191919413,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4055673949495237
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4055673949495237
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.44612413444447613
            }
          },
          "combined_score": 0.44612413444447613
        }
      },
      "similarity": 0.44612413444447613
    },
    {
      "metadata": {
        "doc_id": "CWE-79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "type": "Base",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "relationships": [],
        "original_sparse_score": 471.4494705772255,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.43167137563062397,
            "sparse": 471.4494705772255
          },
          "normalized_scores": {
            "dense": 0.43167137563062397,
            "sparse": 0.3771595764617804
          },
          "weighted_scores": {
            "dense": 0.1510849814707184,
            "sparse": 0.15086383058471217
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.43167137563062397,
              "query_max": 0.537099465379951,
              "query_min": 0.41874293593124357,
              "normalized_score": 0.43167137563062397,
              "weight": 0.35,
              "weighted_score": 0.1510849814707184
            },
            "sparse": {
              "raw_score": 471.4494705772255,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.3771595764617804,
              "weight": 0.4,
              "weighted_score": 0.15086383058471217
            }
          },
          "contribution_percentages": {
            "dense": 50.03662059216276,
            "sparse": 49.963379407837245
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.30194881205543056,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.3925334556720597
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3925334556720597
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4317868012392657
            }
          },
          "combined_score": 0.4317868012392657
        }
      },
      "similarity": 0.4317868012392657
    },
    {
      "metadata": {
        "doc_id": "CWE-22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "type": "Base",
        "original_content": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
        "relationships": [],
        "original_sparse_score": 467.71175994777167,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 467.71175994777167,
            "graph": 1.6016000000000004
          },
          "normalized_scores": {
            "sparse": 0.37416940795821735,
            "graph": 0.5720000000000002
          },
          "weighted_scores": {
            "sparse": 0.14966776318328695,
            "graph": 0.14300000000000004
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 467.71175994777167,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.37416940795821735,
              "weight": 0.4,
              "weighted_score": 0.14966776318328695
            },
            "graph": {
              "raw_score": 1.6016000000000004,
              "query_max": 1.7112628821870535,
              "query_min": 1.0062,
              "normalized_score": 0.5720000000000002,
              "weight": 0.25,
              "weighted_score": 0.14300000000000004
            }
          },
          "contribution_percentages": {
            "sparse": 51.13913522807619,
            "graph": 48.860864771923794
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.292667763183287,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.38046809213827315
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.38046809213827315
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4185149013521005
            }
          },
          "combined_score": 0.4185149013521005
        }
      },
      "similarity": 0.4185149013521005
    },
    {
      "metadata": {
        "doc_id": "CWE-116",
        "name": "Improper Encoding or Escaping of Output",
        "type": "Class",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "relationships": [],
        "original_sparse_score": 577.239916224849,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.42994611997187726,
            "sparse": 577.239916224849,
            "graph": 1.1675114466412992
          },
          "normalized_scores": {
            "dense": 0.42994611997187726,
            "sparse": 0.4617919329798792,
            "graph": 0.41696837380046403
          },
          "weighted_scores": {
            "dense": 0.15048114199015702,
            "sparse": 0.18471677319195168,
            "graph": 0.10424209345011601
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.42994611997187726,
              "query_max": 0.537099465379951,
              "query_min": 0.41874293593124357,
              "normalized_score": 0.42994611997187726,
              "weight": 0.35,
              "weighted_score": 0.15048114199015702
            },
            "sparse": {
              "raw_score": 577.239916224849,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.4617919329798792,
              "weight": 0.4,
              "weighted_score": 0.18471677319195168
            },
            "graph": {
              "raw_score": 1.1675114466412992,
              "query_max": 1.7112628821870535,
              "query_min": 1.0062,
              "normalized_score": 0.41696837380046403,
              "weight": 0.25,
              "weighted_score": 0.10424209345011601
            }
          },
          "contribution_percentages": {
            "dense": 34.243841942961865,
            "sparse": 42.03458255129984,
            "graph": 23.72157550573828
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.43944000863222477,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.3515520069057798
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3515520069057798
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.3691296072510688
            }
          },
          "combined_score": 0.3691296072510688
        }
      },
      "similarity": 0.3691296072510688
    },
    {
      "metadata": {
        "doc_id": "CWE-352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "type": "Compound",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "relationships": [],
        "original_sparse_score": 515.0944661482445,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
          "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
          "reasons": [
            "Other"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.45252930700683813,
            "sparse": 515.0944661482445
          },
          "normalized_scores": {
            "dense": 0.45252930700683813,
            "sparse": 0.4120755729185956
          },
          "weighted_scores": {
            "dense": 0.15838525745239335,
            "sparse": 0.16483022916743825
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.45252930700683813,
              "query_max": 0.537099465379951,
              "query_min": 0.41874293593124357,
              "normalized_score": 0.45252930700683813,
              "weight": 0.35,
              "weighted_score": 0.15838525745239335
            },
            "sparse": {
              "raw_score": 515.0944661482445,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.4120755729185956,
              "weight": 0.4,
              "weighted_score": 0.16483022916743825
            }
          },
          "contribution_percentages": {
            "dense": 49.00299150538144,
            "sparse": 50.99700849461857
          },
          "abstraction_factor": 1.0,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.32321548661983157,
            "abstraction": {
              "type": "compound",
              "factor": 1.0,
              "score_after": 0.32321548661983157
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.32321548661983157
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
                "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
                "reasons": [
                  "Other"
                ]
              },
              "score_after": 0.35553703528181474
            }
          },
          "combined_score": 0.35553703528181474
        }
      },
      "similarity": 0.35553703528181474
    },
    {
      "metadata": {
        "doc_id": "CWE-862",
        "name": "Missing Authorization",
        "type": "Class",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "relationships": [],
        "original_sparse_score": 614.5775166566431,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.42994462076588374,
            "sparse": 614.5775166566431
          },
          "normalized_scores": {
            "dense": 0.42994462076588374,
            "sparse": 0.49166201332531445
          },
          "weighted_scores": {
            "dense": 0.1504806172680593,
            "sparse": 0.19666480533012579
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.42994462076588374,
              "query_max": 0.537099465379951,
              "query_min": 0.41874293593124357,
              "normalized_score": 0.42994462076588374,
              "weight": 0.35,
              "weighted_score": 0.1504806172680593
            },
            "sparse": {
              "raw_score": 614.5775166566431,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.49166201332531445,
              "weight": 0.4,
              "weighted_score": 0.19666480533012579
            }
          },
          "contribution_percentages": {
            "dense": 43.34800561153821,
            "sparse": 56.65199438846179
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.3471454225981851,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.27771633807854806
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.27771633807854806
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.2916021549824755
            }
          },
          "combined_score": 0.2916021549824755
        }
      },
      "similarity": 0.2916021549824755
    },
    {
      "metadata": {
        "doc_id": "CWE-863",
        "name": "Incorrect Authorization",
        "type": "Class",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "relationships": [],
        "original_sparse_score": 547.6167093052454,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 547.6167093052454,
            "graph": 1.3648
          },
          "normalized_scores": {
            "sparse": 0.43809336744419636,
            "graph": 0.4874285714285715
          },
          "weighted_scores": {
            "sparse": 0.17523734697767857,
            "graph": 0.12185714285714287
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 547.6167093052454,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.43809336744419636,
              "weight": 0.4,
              "weighted_score": 0.17523734697767857
            },
            "graph": {
              "raw_score": 1.3648,
              "query_max": 1.7112628821870535,
              "query_min": 1.0062,
              "normalized_score": 0.4874285714285715,
              "weight": 0.25,
              "weighted_score": 0.12185714285714287
            }
          },
          "contribution_percentages": {
            "sparse": 58.983708205125915,
            "graph": 41.01629179487408
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.29709448983482145,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.23767559186785717
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.23767559186785717
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.24955937146125004
            }
          },
          "combined_score": 0.24955937146125004
        }
      },
      "similarity": 0.24955937146125004
    },
    {
      "metadata": {
        "doc_id": "CWE-639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "type": "Base",
        "original_content": "The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.",
        "relationships": [],
        "original_sparse_score": 500.2326814053052,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 500.2326814053052
          },
          "normalized_scores": {
            "sparse": 0.40018614512424416
          },
          "weighted_scores": {
            "sparse": 0.16007445804969767
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 500.2326814053052,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.40018614512424416,
              "weight": 0.4,
              "weighted_score": 0.16007445804969767
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.16007445804969767,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.20809679546460697
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.20809679546460697
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.22890647501106767
            }
          },
          "combined_score": 0.22890647501106767
        }
      },
      "similarity": 0.22890647501106767
    },
    {
      "metadata": {
        "doc_id": "CWE-256",
        "name": "Plaintext Storage of a Password",
        "type": "Base",
        "original_content": "Storing a password in plaintext may result in a system compromise.",
        "relationships": [],
        "original_sparse_score": 498.05013008416364,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 498.05013008416364
          },
          "normalized_scores": {
            "sparse": 0.39844010406733094
          },
          "weighted_scores": {
            "sparse": 0.1593760416269324
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 498.05013008416364,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.39844010406733094,
              "weight": 0.4,
              "weighted_score": 0.1593760416269324
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.1593760416269324,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.20718885411501212
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.20718885411501212
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.22790773952651336
            }
          },
          "combined_score": 0.22790773952651336
        }
      },
      "similarity": 0.22790773952651336
    },
    {
      "metadata": {
        "doc_id": "CWE-319",
        "name": "Cleartext Transmission of Sensitive Information",
        "type": "Base",
        "original_content": "The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.",
        "relationships": [],
        "original_sparse_score": 494.63437071076254,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 494.63437071076254
          },
          "normalized_scores": {
            "sparse": 0.39570749656861004
          },
          "weighted_scores": {
            "sparse": 0.15828299862744402
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 494.63437071076254,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.39570749656861004,
              "weight": 0.4,
              "weighted_score": 0.15828299862744402
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.15828299862744402,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.20576789821567723
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.20576789821567723
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.22634468803724497
            }
          },
          "combined_score": 0.22634468803724497
        }
      },
      "similarity": 0.22634468803724497
    },
    {
      "metadata": {
        "doc_id": "CWE-88",
        "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
        "type": "Base",
        "original_content": "The product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.",
        "relationships": [],
        "original_sparse_score": 493.6397515108031,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 493.6397515108031
          },
          "normalized_scores": {
            "sparse": 0.39491180120864244
          },
          "weighted_scores": {
            "sparse": 0.157964720483457
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 493.6397515108031,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.39491180120864244,
              "weight": 0.4,
              "weighted_score": 0.157964720483457
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.157964720483457,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.2053541366284941
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.2053541366284941
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.22588955029134353
            }
          },
          "combined_score": 0.22588955029134353
        }
      },
      "similarity": 0.22588955029134353
    },
    {
      "metadata": {
        "doc_id": "CWE-306",
        "name": "Missing Authentication for Critical Function",
        "type": "Base",
        "original_content": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
        "relationships": [],
        "original_sparse_score": 488.55160451220615,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 488.55160451220615
          },
          "normalized_scores": {
            "sparse": 0.39084128360976494
          },
          "weighted_scores": {
            "sparse": 0.15633651344390598
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 488.55160451220615,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.39084128360976494,
              "weight": 0.4,
              "weighted_score": 0.15633651344390598
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.15633651344390598,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.20323746747707777
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.20323746747707777
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.22356121422478556
            }
          },
          "combined_score": 0.22356121422478556
        }
      },
      "similarity": 0.22356121422478556
    },
    {
      "metadata": {
        "doc_id": "CWE-201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "type": "Base",
        "original_content": "The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.",
        "relationships": [],
        "original_sparse_score": 477.0468798231202,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 477.0468798231202
          },
          "normalized_scores": {
            "sparse": 0.38163750385849615
          },
          "weighted_scores": {
            "sparse": 0.15265500154339848
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 477.0468798231202,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.38163750385849615,
              "weight": 0.4,
              "weighted_score": 0.15265500154339848
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.15265500154339848,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.19845150200641803
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.19845150200641803
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.21829665220705985
            }
          },
          "combined_score": 0.21829665220705985
        }
      },
      "similarity": 0.21829665220705985
    },
    {
      "metadata": {
        "doc_id": "CWE-425",
        "name": "Direct Request ('Forced Browsing')",
        "type": "Base",
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "relationships": [],
        "original_sparse_score": 472.5279036644643,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 472.5279036644643
          },
          "normalized_scores": {
            "sparse": 0.37802232293157145
          },
          "weighted_scores": {
            "sparse": 0.1512089291726286
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 472.5279036644643,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.37802232293157145,
              "weight": 0.4,
              "weighted_score": 0.1512089291726286
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.1512089291726286,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.1965716079244172
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1965716079244172
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.21622876871685892
            }
          },
          "combined_score": 0.21622876871685892
        }
      },
      "similarity": 0.21622876871685892
    },
    {
      "metadata": {
        "doc_id": "CWE-522",
        "name": "Insufficiently Protected Credentials",
        "type": "Class",
        "original_content": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.",
        "relationships": [],
        "original_sparse_score": 542.0751058116612,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 542.0751058116612
          },
          "normalized_scores": {
            "sparse": 0.4336600846493289
          },
          "weighted_scores": {
            "sparse": 0.17346403385973158
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 542.0751058116612,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.4336600846493289,
              "weight": 0.4,
              "weighted_score": 0.17346403385973158
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.17346403385973158,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.13877122708778528
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.13877122708778528
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.14570978844217455
            }
          },
          "combined_score": 0.14570978844217455
        }
      },
      "similarity": 0.14570978844217455
    },
    {
      "metadata": {
        "doc_id": "CWE-325",
        "name": "Missing Cryptographic Step",
        "type": "Base",
        "original_content": "The product does not implement a required step in a cryptographic algorithm, resulting in weaker encryption than advertised by the algorithm.",
        "relationships": [],
        "original_sparse_score": 304.25483461668847,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 304.25483461668847
          },
          "normalized_scores": {
            "sparse": 0.2434038676933508
          },
          "weighted_scores": {
            "sparse": 0.09736154707734032
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 304.25483461668847,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.2434038676933508,
              "weight": 0.4,
              "weighted_score": 0.09736154707734032
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.09736154707734032,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.12657001120054243
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.12657001120054243
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.13922701232059667
            }
          },
          "combined_score": 0.13922701232059667
        }
      },
      "similarity": 0.13922701232059667
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 298.50352923280616,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 298.50352923280616,
            "graph": 1.3504000000000003
          },
          "normalized_scores": {
            "sparse": 0.23880282338624492,
            "graph": 0.48228571428571443
          },
          "weighted_scores": {
            "sparse": 0.09552112935449797,
            "graph": 0.12057142857142861
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 298.50352923280616,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.23880282338624492,
              "weight": 0.4,
              "weighted_score": 0.09552112935449797
            },
            "graph": {
              "raw_score": 1.3504000000000003,
              "query_max": 1.7112628821870535,
              "query_min": 1.0062,
              "normalized_score": 0.48228571428571443,
              "weight": 0.25,
              "weighted_score": 0.12057142857142861
            }
          },
          "contribution_percentages": {
            "sparse": 44.20380334765681,
            "graph": 55.79619665234319
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.21609255792592658,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.17287404634074127
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.17287404634074127
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.13829923707259303
            }
          },
          "combined_score": 0.13829923707259303
        }
      },
      "similarity": 0.13829923707259303
    },
    {
      "metadata": {
        "doc_id": "CWE-285",
        "name": "Improper Authorization",
        "type": "Class",
        "original_content": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
        "relationships": [],
        "original_sparse_score": 497.1632555092626,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Look at CWE-285's children and consider mapping to CWEs such as CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-732: Incorrect Permission Assignment for Critical Resource, or others.",
          "reasons": [
            "Abstraction"
          ],
          "suggestions": [
            {
              "CweID": "862",
              "Comment": "Missing Authorization"
            },
            {
              "CweID": "863",
              "Comment": "Incorrect Authorization"
            },
            {
              "CweID": "732",
              "Comment": "Incorrect Permission Assignment for Critical Resource"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 497.1632555092626
          },
          "normalized_scores": {
            "sparse": 0.3977306044074101
          },
          "weighted_scores": {
            "sparse": 0.15909224176296405
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 497.1632555092626,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.3977306044074101,
              "weight": 0.4,
              "weighted_score": 0.15909224176296405
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.15909224176296405,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.12727379341037123
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.12727379341037123
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Look at CWE-285's children and consider mapping to CWEs such as CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-732: Incorrect Permission Assignment for Critical Resource, or others.",
                "reasons": [
                  "Abstraction"
                ],
                "suggestions": [
                  {
                    "CweID": "862",
                    "Comment": "Missing Authorization"
                  },
                  {
                    "CweID": "863",
                    "Comment": "Incorrect Authorization"
                  },
                  {
                    "CweID": "732",
                    "Comment": "Incorrect Permission Assignment for Critical Resource"
                  }
                ]
              },
              "score_after": 0.101819034728297
            }
          },
          "combined_score": 0.101819034728297
        }
      },
      "similarity": 0.101819034728297
    },
    {
      "metadata": {
        "doc_id": "CWE-693",
        "name": "Protection Mechanism Failure",
        "type": "Pillar",
        "original_content": "The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.",
        "relationships": [],
        "original_sparse_score": 568.0585981512284,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "This CWE entry is extremely high-level, a Pillar.",
          "comments": "Consider children or descendants of this entry instead.",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 568.0585981512284
          },
          "normalized_scores": {
            "sparse": 0.4544468785209827
          },
          "weighted_scores": {
            "sparse": 0.18177875140839309
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 568.0585981512284,
              "query_max": 1225.0866370166948,
              "query_min": 298.50352923280616,
              "normalized_score": 0.4544468785209827,
              "weight": 0.4,
              "weighted_score": 0.18177875140839309
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.6,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.18177875140839309,
            "abstraction": {
              "type": "pillar",
              "factor": 0.6,
              "score_after": 0.10906725084503585
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.10906725084503585
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is extremely high-level, a Pillar.",
                "comments": "Consider children or descendants of this entry instead.",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.08725380067602868
            }
          },
          "combined_score": 0.08725380067602868
        }
      },
      "similarity": 0.08725380067602868
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-352",
      "CWE-613",
      "CWE-838",
      "CWE-78",
      "CWE-113",
      "CWE-116",
      "CWE-441",
      "CWE-642",
      "CWE-1275",
      "CWE-79",
      "CWE-346"
    ],
    "critic_additional": [
      "CWE-639",
      "CWE-862",
      "CWE-22",
      "CWE-863"
    ]
  }
}