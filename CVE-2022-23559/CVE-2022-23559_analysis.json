{
  "cve_id": "CVE-2022-23559",
  "description": "Tensorflow is an Open Source Machine Learning Framework. An attacker can craft a TFLite model that would cause an integer overflow in embedding lookup operations. Both `embedding_size` and `lookup_size` are products of values provided by the user. Hence, a malicious user could trigger overflows in the multiplication. In certain scenarios, this can then result in heap OOB read/write. Users are advised to upgrade to a patched version.",
  "key_phrases": {
    "rootcause": "",
    "weakness": [
      "integer overflow",
      "heap OOB read/write"
    ],
    "impact": "heap OOB read/write",
    "vector": "crafting a TFLite model",
    "attacker": "",
    "product": "Tensorflow",
    "version": "",
    "component": ""
  },
  "reference_content": "```\n{\n  \"CVE-2022-23559\": {\n    \"Description\": \"An attacker can craft a TFLite model that would cause an integer overflow in embedding lookup operations. Both `embedding_size` and `lookup_size` are products of values provided by the user. Hence, a malicious user could trigger overflows in the multiplication. In certain scenarios, this can then result in heap OOB read/write.\",\n    \"Root cause\": \"Integer overflow in the calculation of `embedding_size` and `lookup_size` due to multiplication of user-provided dimensions.\",\n    \"Weaknesses\": [\n      \"Integer overflow\",\n      \"Heap out-of-bounds read/write\"\n    ],\n    \"Impact\": \"Heap out-of-bounds read/write, potentially leading to arbitrary code execution or denial of service.\",\n    \"Attack vectors\": \"Crafting a malicious TFLite model with specific dimension values that cause integer overflows.\",\n    \"Required attacker capabilities\": \"Ability to create or modify TFLite models and load them in the vulnerable environment.\"\n  }\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-190 | Integer Overflow or Wraparound | 0.95 | Base | Allowed | Primary |\n| CWE-125 | Out-of-bounds Read | 0.75 | Base | Allowed | Secondary |\n| CWE-787 | Out-of-bounds Write | 0.75 | Base | Allowed | Secondary |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The vulnerability description explicitly mentions an **integer overflow** when calculating `embedding_size` and `lookup_size` in TFLite models. Since these sizes are products of user-provided values, a malicious user can trigger the overflow. This aligns directly with CWE-190 (Integer Overflow or Wraparound), where a calculation produces a value exceeding the maximum, potentially wrapping around to a small or negative number. The CVE Reference Links Content Summary confirms this root cause: 'Integer overflow in the calculation of `embedding_size` and `lookup_size` due to multiplication of user-provided dimensions.'\"\n  - Subsequent to the integer overflow, a **heap out-of-bounds read/write** occurs. This is due to the incorrect size calculation from the integer overflow leading to accessing memory outside of the allocated buffer. CWE-125 (Out-of-bounds Read) and CWE-787 (Out-of-bounds Write) are appropriate for mapping to this consequence. The CVE Reference Links Content Summary confirms the impact: \"Heap out-of-bounds read/write, potentially leading to arbitrary code execution or denial of service.\" Because the heap OOB read/write is a consequence of the integer overflow, CWE-190 is chosen as the primary weakness, and CWE-125 and CWE-787 are secondary weaknesses.\n\n  - *Relationship Analysis:* \"CWE-190 is related to CWE-128 (Wrap-around Error), and can lead to other memory corruption issues like CWE-125 and CWE-787. CWE-190 is a Base level CWE, which is the preferred level of abstraction. The relationship analysis shows that CWE-190 can precede CWE-125 and CWE-787, indicating that the integer overflow leads to the out-of-bounds access.\"\n\n- **Confidence Score:**\n  - Confidence: 0.95 (High confidence due to explicit mention of integer overflow and out-of-bounds access in the vulnerability description and CVE reference.)",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-190 | Integer Overflow or Wraparound | 0.95 | Base | Allowed | Primary |\n| CWE-125 | Out-of-bounds Read | 0.75 | Base | Allowed | Secondary |\n| CWE-787 | Out-of-bounds Write | 0.75 | Base | Allowed | Secondary |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n- **Analysis and Justification:**  \n  - *Explanation:* \"The vulnerability description explicitly mentions an **integer overflow** when calculating `embedding_size` and `lookup_size` in TFLite models. Since these sizes are products of user-provided values, a malicious user can trigger the overflow. This aligns directly with CWE-190 (Integer Overflow or Wraparound), where a calculation produces a value exceeding the maximum, potentially wrapping around to a small or negative number. The CVE Reference Links Content Summary confirms this root cause: 'Integer overflow in the calculation of `embedding_size` and `lookup_size` due to multiplication of user-provided dimensions.'\"\n  - Subsequent to the integer overflow, a **heap out-of-bounds read/write** occurs. This is due to the incorrect size calculation from the integer overflow leading to accessing memory outside of the allocated buffer. CWE-125 (Out-of-bounds Read) and CWE-787 (Out-of-bounds Write) are appropriate for mapping to this consequence. The CVE Reference Links Content Summary confirms the impact: \"Heap out-of-bounds read/write, potentially leading to arbitrary code execution or denial of service.\" Because the heap OOB read/write is a consequence of the integer overflow, CWE-190 is chosen as the primary weakness, and CWE-125 and CWE-787 are secondary weaknesses.\n\n  - *Relationship Analysis:* \"CWE-190 is related to CWE-128 (Wrap-around Error), and can lead to other memory corruption issues like CWE-125 and CWE-787. CWE-190 is a Base level CWE, which is the preferred level of abstraction. The relationship analysis shows that CWE-190 can precede CWE-125 and CWE-787, indicating that the integer overflow leads to the out-of-bounds access.\"\n\n- **Confidence Score:**\n  - Confidence: 0.95 (High confidence due to explicit mention of integer overflow and out-of-bounds access in the vulnerability description and CVE reference.)",
  "criticism": "Okay, here's a review of the provided CWE analysis, incorporating the full CWE specifications:\n\n**Overall Assessment**\n\nThe analysis is generally sound and well-reasoned. The primary CWE mapping of CWE-190 (Integer Overflow or Wraparound) is accurate and supported by the vulnerability description. The secondary mappings of CWE-125 (Out-of-bounds Read) and CWE-787 (Out-of-bounds Write) are also appropriate as consequences of the integer overflow. The confidence scores are justified.\n\n**Detailed Review**\n\n1.  **CWE-190: Integer Overflow or Wraparound (Primary Mapping)**\n\n    *   **Confidence Level:** Justified at 0.95. The description explicitly mentions the integer overflow when calculating embedding and lookup sizes, making this a direct match. The CVE summary confirms the root cause.\n    *   **CWE Specification Alignment:**\n        *   The description of CWE-190 accurately reflects the vulnerability.  The user-provided dimensions, when multiplied, can exceed the maximum integer size, leading to wraparound.\n        *   The *Relationships* section of CWE-190 correctly identifies that this can *CanPrecede* CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), which is the parent of CWE-125 and CWE-787, strengthening the proposed chain.\n        *   The *Mapping Guidance* is correctly followed: the tool is at the Base level of abstraction.\n        *   The *Potential Mitigations* section suggests: \"Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid\" or \"Use libraries or frameworks that make it easier to handle numbers without unexpected consequences\". This aligns with the general recommendations for preventing integer overflows which could include using safe integer libraries.\n    *   **Observed Examples:** The provided examples from the CWE database are relevant, showcasing how integer overflows can lead to memory corruption (CWE-122, CWE-123) and out-of-bounds access (CWE-125, CWE-787).\n    *   **Potential Improvements:**  It might be valuable to mention the possibility of integer *underflow* as well, even though the main problem is overflow. The products are dimension values, and it is less likely that those values can underflow, but it is still possible. It would show a more complete understanding of the problem.\n    *   **Conclusion:** The mapping to CWE-190 is excellent.\n\n2.  **CWE-125: Out-of-bounds Read (Secondary Mapping)**\n\n    *   **Confidence Level:** Justified at 0.75. The heap OOB read is a direct consequence of the integer overflow, but it is not the primary cause of the vulnerability. It *results from* the incorrect size calculation.\n    *   **CWE Specification Alignment:**\n        *   The description of CWE-125 accurately reflects the vulnerability's impact. The incorrect buffer size leads to reading data outside the intended boundary.\n        *   The *Relationships* section of CWE-125 correctly identifies that it *ChildOf* CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), which fits the vulnerability description.\n        *   The *Mapping Guidance* is correctly followed: the tool is at the Base level of abstraction.\n        *   The *Potential Mitigations* section suggests \"Assume all input is malicious. Use an \"accept known good\" input validation strategy\". Since the overflow leads to an incorrect size, this highlights the importance of input validation to prevent calculations of sizes that exceed expected limits.\n    *   **Observed Examples:** Relevant, showcasing out-of-bounds reads due to inconsistent length parameters (\"Heartbleed\").\n    *   **Conclusion:** The mapping to CWE-125 is accurate.\n\n3.  **CWE-787: Out-of-bounds Write (Secondary Mapping)**\n\n    *   **Confidence Level:** Justified at 0.75. Similar to CWE-125, the heap OOB write is a consequence, not the initiating cause. It's a direct result of the integer overflow and subsequent memory access using the wrong size.\n    *   **CWE Specification Alignment:**\n        *   The description of CWE-787 accurately reflects the vulnerability's impact: the product writes data past the end of the intended buffer.\n        *   The *Relationships* section of CWE-787 correctly identifies that it *ChildOf* CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), which fits the vulnerability description.\n        *   The *Mapping Guidance* is correctly followed: the tool is at the Base level of abstraction.\n        *   The *Potential Mitigations* section suggests using languages or libraries that prevent out-of-bounds writes or using compiler-based buffer overflow detection mechanisms. These align with standard defensive programming practices to avoid buffer overflows.\n    *   **Observed Examples:** Relevant, showing out-of-bounds writes due to insufficient input validation and heap corruption.\n    *   **Conclusion:** The mapping to CWE-787 is accurate.\n\n**Recommendations for Improvement**\n\n*   **Relationship Clarity:** While the explanation mentions the relationship between the CWEs, it could be more explicit:\n    *\"The chain of events is: User-controlled input -> Integer Overflow (CWE-190) -> Incorrect buffer size calculation -> Out-of-bounds Read/Write (CWE-125, CWE-787).\"*\n*   **Alternative CWEs Considered:** Briefly mention CWE-119, Improper Restriction of Operations within the Bounds of a Memory Buffer, and explain why it *wasn't* chosen as the primary mapping (because it's too broad, and the root cause is the integer overflow).  This demonstrates a more comprehensive analysis.\n*   **Input Validation Emphasis:**  While the CWE-190 mitigations are suitable, explicitly stating that validating the *size* of the input and the *result* of the multiplication is *critical* would strengthen the analysis.  This aligns with the CWE-125 and CWE-787 mitigations and highlights a practical remediation step.\n*   **Heap vs. Stack:** Since the vulnerability involves a heap OOB read/write, briefly mentioning that the overflow occurs on the heap and not the stack (e.g., \"This leads to a heap-based buffer overflow...\") might provide additional clarity.\n*   **CWE-680 Considered?** The compound CWE, \"Integer Overflow to Buffer Overflow\" might be considered; however, by mapping individually to CWE-190, CWE-125, and CWE-787, the analysis is more precise, and the mapping guidance suggests avoiding compound CWEs.\n\n**Additional CWEs to Consider (Potentially)**\n\n*   **CWE-1284: Improper Validation of Specified Quantity in Input:** This CWE might be relevant as a *contributing* factor. The sizes are user-provided. However, the core problem is *not* the lack of validation *directly*, but the integer overflow that happens during a calculation. If the system had checks against the final buffer size, but not the overflow, this would be applicable.\n*   **CWE-789: Memory Allocation with Excessive Size Value:** Similar to the above, if excessive memory was the *goal*, not the under-allocation, this might be relevant.\n\n**Summary of Changes**\nThe existing analysis is mostly correct. These are suggestions for better describing the analysis to show more understanding.",
  "resolution": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-190 | Integer Overflow or Wraparound | 0.95 | Base | Allowed | Primary CWE |\n| CWE-125 | Out-of-bounds Read | 0.75 | Base | Allowed | Secondary CWE |\n| CWE-787 | Out-of-bounds Write | 0.75 | Base | Allowed | Secondary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-190 (Integer Overflow or Wraparound)**, which occurs when the product of user-provided `embedding_size` and `lookup_size` exceeds the maximum integer value. This leads to an incorrect buffer size calculation, resulting in out-of-bounds memory access. Consequently, **CWE-125 (Out-of-bounds Read)** and **CWE-787 (Out-of-bounds Write)** manifest as secondary weaknesses. These three CWEs are related in a chain where CWE-190 *CanPrecede* CWE-125 and CWE-787. Also, CWE-125 and CWE-787 are *ChildOf* CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), which confirms the relationship.\nThe abstraction levels are optimal, as CWE-190, CWE-125, and CWE-787 are all at the Base level.\n\n```mermaid\ngraph TD\n    cwe190[\"CWE-190: Integer Overflow or Wraparound\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    cwe125[\"CWE-125: Out-of-bounds Read\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n\n    cwe125 -->|CHILDOF| cwe119\n    cwe787 -->|CHILDOF| cwe119\n    cwe190 -->|CANPRECEDE| cwe125\n    cwe190 -->|CANPRECEDE| cwe787\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe190 primary\n    class cwe125,cwe787 secondary\n    class cwe119 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with user-controlled input used to calculate `embedding_size` and `lookup_size`. This calculation leads to an **Integer Overflow (CWE-190)**, which results in an incorrect buffer size. This incorrect buffer size is then used in memory access operations, leading to an **Out-of-bounds Read (CWE-125)** and/or **Out-of-bounds Write (CWE-787)**.\n\n## Summary of Analysis\nThe initial analysis is accurate and well-supported by the vulnerability description. The primary weakness is correctly identified as **CWE-190 (Integer Overflow or Wraparound)**, which occurs when calculating `embedding_size` and `lookup_size` using user-provided values. The description explicitly states: \"Both `embedding_size` and `lookup_size` are products of values provided by the user. Hence, a malicious user could trigger overflows in the multiplication.\" The secondary weaknesses, **CWE-125 (Out-of-bounds Read)** and **CWE-787 (Out-of-bounds Write)**, are a direct consequence of the integer overflow. This is supported by the statement: \"In certain scenarios, this can then result in heap OOB read/write.\"\n\nThe graph relationships confirm this assessment, with CWE-190 *CanPrecede* CWE-125 and CWE-787, and both CWE-125 and CWE-787 being *ChildOf* CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer).\n\nThe selected CWEs are at the optimal level of specificity, as they are all Base-level CWEs. The mapping guidance supports this selection, with the Usage recommendation being \"Allowed\" for all three CWEs.\n\nThe suggestion in the criticism to consider **CWE-1284 (Improper Validation of Specified Quantity in Input)** is not directly applicable because the primary issue isn't the lack of input validation in isolation, but the integer overflow during the calculation of the buffer sizes. However, implementing input validation to prevent excessively large inputs could act as a mitigating control.\nAlso, although the criticism mentions **CWE-680 (Integer Overflow to Buffer Overflow)**, the individual mapping to CWE-190, CWE-125, and CWE-787 is more precise, and the mapping guidance suggests avoiding compound CWEs.",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "CWE-190",
        "name": "Integer Overflow or Wraparound",
        "type": "Base",
        "original_content": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
        "relationships": [],
        "original_sparse_score": 516.6731096282787,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ],
          "suggestions": [
            {
              "CweID": "191",
              "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.5034892203385644,
            "sparse": 516.6731096282787,
            "graph": 2.4952953669048274
          },
          "normalized_scores": {
            "dense": 0.5034892203385644,
            "sparse": 0.41333848770262294,
            "graph": 0.8911769167517242
          },
          "weighted_scores": {
            "dense": 0.17622122711849753,
            "sparse": 0.1653353950810492,
            "graph": 0.22279422918793104
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.5034892203385644,
              "query_max": 0.5034892203385644,
              "query_min": 0.42640196387902496,
              "normalized_score": 0.5034892203385644,
              "weight": 0.35,
              "weighted_score": 0.17622122711849753
            },
            "sparse": {
              "raw_score": 516.6731096282787,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.41333848770262294,
              "weight": 0.4,
              "weighted_score": 0.1653353950810492
            },
            "graph": {
              "raw_score": 2.4952953669048274,
              "query_max": 2.8115883422847534,
              "query_min": 1.5543622993264763,
              "normalized_score": 0.8911769167517242,
              "weight": 0.25,
              "weighted_score": 0.22279422918793104
            }
          },
          "contribution_percentages": {
            "dense": 31.225473778457324,
            "sparse": 29.296561646813483,
            "graph": 39.47796457472919
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5643508513874778,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7336561068037211
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7336561068037211
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Be careful of terminology problems with \"overflow,\" \"underflow,\" and \"wraparound\" - see Terminology Notes. Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ],
                "suggestions": [
                  {
                    "CweID": "191",
                    "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
                  }
                ]
              },
              "score_after": 0.8070217174840932
            }
          },
          "combined_score": 0.8070217174840932
        }
      },
      "similarity": 0.8070217174840932
    },
    {
      "metadata": {
        "doc_id": "CWE-125",
        "name": "Out-of-bounds Read",
        "type": "Base",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 457.1272820369462,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.43931693848791237,
            "sparse": 457.1272820369462,
            "graph": 2.7938688131773057
          },
          "normalized_scores": {
            "dense": 0.43931693848791237,
            "sparse": 0.36570182562955694,
            "graph": 0.9978102904204664
          },
          "weighted_scores": {
            "dense": 0.15376092847076933,
            "sparse": 0.14628073025182278,
            "graph": 0.2494525726051166
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.43931693848791237,
              "query_max": 0.5034892203385644,
              "query_min": 0.42640196387902496,
              "normalized_score": 0.43931693848791237,
              "weight": 0.35,
              "weighted_score": 0.15376092847076933
            },
            "sparse": {
              "raw_score": 457.1272820369462,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.36570182562955694,
              "weight": 0.4,
              "weighted_score": 0.14628073025182278
            },
            "graph": {
              "raw_score": 2.7938688131773057,
              "query_max": 2.8115883422847534,
              "query_min": 1.5543622993264763,
              "normalized_score": 0.9978102904204664,
              "weight": 0.25,
              "weighted_score": 0.2494525726051166
            }
          },
          "contribution_percentages": {
            "dense": 27.982264363221134,
            "sparse": 26.620976511140753,
            "graph": 45.39675912563811
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5494942313277087,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7143425007260213
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7143425007260213
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7857767507986235
            }
          },
          "combined_score": 0.7857767507986235
        }
      },
      "similarity": 0.7857767507986235
    },
    {
      "metadata": {
        "doc_id": "CWE-824",
        "name": "Access of Uninitialized Pointer",
        "type": "Base",
        "original_content": "The product accesses or uses a pointer that has not been initialized.",
        "relationships": [],
        "original_sparse_score": 392.6515386840434,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4820384950873444,
            "sparse": 392.6515386840434,
            "graph": 2.8115883422847534
          },
          "normalized_scores": {
            "dense": 0.4820384950873444,
            "sparse": 0.3141212309472347,
            "graph": 1.0
          },
          "weighted_scores": {
            "dense": 0.16871347328057054,
            "sparse": 0.1256484923788939,
            "graph": 0.25
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4820384950873444,
              "query_max": 0.5034892203385644,
              "query_min": 0.42640196387902496,
              "normalized_score": 0.4820384950873444,
              "weight": 0.35,
              "weighted_score": 0.16871347328057054
            },
            "sparse": {
              "raw_score": 392.6515386840434,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.3141212309472347,
              "weight": 0.4,
              "weighted_score": 0.1256484923788939
            },
            "graph": {
              "raw_score": 2.8115883422847534,
              "query_max": 2.8115883422847534,
              "query_min": 1.5543622993264763,
              "normalized_score": 1.0,
              "weight": 0.25,
              "weighted_score": 0.25
            }
          },
          "contribution_percentages": {
            "dense": 30.992884132928626,
            "sparse": 23.08179121711372,
            "graph": 45.925324649957645
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5443619656594645,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.7076705553573038
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.7076705553573038
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7784376108930343
            }
          },
          "combined_score": 0.7784376108930343
        }
      },
      "similarity": 0.7784376108930343
    },
    {
      "metadata": {
        "doc_id": "CWE-681",
        "name": "Incorrect Conversion between Numeric Types",
        "type": "Base",
        "original_content": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
        "relationships": [],
        "original_sparse_score": 438.6535813609106,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.48280071631376725,
            "sparse": 438.6535813609106,
            "graph": 2.406160961463093
          },
          "normalized_scores": {
            "dense": 0.48280071631376725,
            "sparse": 0.3509228650887285,
            "graph": 0.8593432005225332
          },
          "weighted_scores": {
            "dense": 0.16898025070981854,
            "sparse": 0.14036914603549142,
            "graph": 0.2148358001306333
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.48280071631376725,
              "query_max": 0.5034892203385644,
              "query_min": 0.42640196387902496,
              "normalized_score": 0.48280071631376725,
              "weight": 0.35,
              "weighted_score": 0.16898025070981854
            },
            "sparse": {
              "raw_score": 438.6535813609106,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.3509228650887285,
              "weight": 0.4,
              "weighted_score": 0.14036914603549142
            },
            "graph": {
              "raw_score": 2.406160961463093,
              "query_max": 2.8115883422847534,
              "query_min": 1.5543622993264763,
              "normalized_score": 0.8593432005225332,
              "weight": 0.25,
              "weighted_score": 0.2148358001306333
            }
          },
          "contribution_percentages": {
            "dense": 32.236746042603414,
            "sparse": 26.778540651675826,
            "graph": 40.98471330572077
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5241851968759432,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6814407559387262
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6814407559387262
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7495848315325989
            }
          },
          "combined_score": 0.7495848315325989
        }
      },
      "similarity": 0.7495848315325989
    },
    {
      "metadata": {
        "doc_id": "CWE-193",
        "name": "Off-by-one Error",
        "type": "Base",
        "original_content": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "relationships": [],
        "original_sparse_score": 450.4096331132313,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4369108422976406,
            "sparse": 450.4096331132313,
            "graph": 2.47621427433887
          },
          "normalized_scores": {
            "dense": 0.4369108422976406,
            "sparse": 0.36032770649058504,
            "graph": 0.8843622408353108
          },
          "weighted_scores": {
            "dense": 0.1529187948041742,
            "sparse": 0.14413108259623403,
            "graph": 0.2210905602088277
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4369108422976406,
              "query_max": 0.5034892203385644,
              "query_min": 0.42640196387902496,
              "normalized_score": 0.4369108422976406,
              "weight": 0.35,
              "weighted_score": 0.1529187948041742
            },
            "sparse": {
              "raw_score": 450.4096331132313,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.36032770649058504,
              "weight": 0.4,
              "weighted_score": 0.14413108259623403
            },
            "graph": {
              "raw_score": 2.47621427433887,
              "query_max": 2.8115883422847534,
              "query_min": 1.5543622993264763,
              "normalized_score": 0.8843622408353108,
              "weight": 0.25,
              "weighted_score": 0.2210905602088277
            }
          },
          "contribution_percentages": {
            "dense": 29.513001438328274,
            "sparse": 27.81699171392078,
            "graph": 42.670006847750955
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.5181404376092359,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.6735825688920067
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.6735825688920067
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.7409408257812075
            }
          },
          "combined_score": 0.7409408257812075
        }
      },
      "similarity": 0.7409408257812075
    },
    {
      "metadata": {
        "doc_id": "CWE-1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "relationships": [],
        "original_sparse_score": 465.05464543254027,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4699534647540665,
            "sparse": 465.05464543254027,
            "graph": 1.6023069556152152
          },
          "normalized_scores": {
            "dense": 0.4699534647540665,
            "sparse": 0.3720437163460322,
            "graph": 0.5722524841482912
          },
          "weighted_scores": {
            "dense": 0.16448371266392328,
            "sparse": 0.1488174865384129,
            "graph": 0.1430631210370728
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4699534647540665,
              "query_max": 0.5034892203385644,
              "query_min": 0.42640196387902496,
              "normalized_score": 0.4699534647540665,
              "weight": 0.35,
              "weighted_score": 0.16448371266392328
            },
            "sparse": {
              "raw_score": 465.05464543254027,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.3720437163460322,
              "weight": 0.4,
              "weighted_score": 0.1488174865384129
            },
            "graph": {
              "raw_score": 1.6023069556152152,
              "query_max": 2.8115883422847534,
              "query_min": 1.5543622993264763,
              "normalized_score": 0.5722524841482912,
              "weight": 0.25,
              "weighted_score": 0.1430631210370728
            }
          },
          "contribution_percentages": {
            "dense": 36.04219378448232,
            "sparse": 32.60936053465861,
            "graph": 31.34844568085906
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.456364320239409,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5932736163112317
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5932736163112317
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6526009779423548
            }
          },
          "combined_score": 0.6526009779423548
        }
      },
      "similarity": 0.6526009779423548
    },
    {
      "metadata": {
        "doc_id": "CWE-191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "type": "Base",
        "original_content": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "relationships": [],
        "original_sparse_score": 404.82343473257606,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.47611770342825194,
            "sparse": 404.82343473257606,
            "graph": 1.6454076426701205
          },
          "normalized_scores": {
            "dense": 0.47611770342825194,
            "sparse": 0.32385874778606083,
            "graph": 0.5876455866679002
          },
          "weighted_scores": {
            "dense": 0.16664119619988818,
            "sparse": 0.12954349911442434,
            "graph": 0.14691139666697506
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.47611770342825194,
              "query_max": 0.5034892203385644,
              "query_min": 0.42640196387902496,
              "normalized_score": 0.47611770342825194,
              "weight": 0.35,
              "weighted_score": 0.16664119619988818
            },
            "sparse": {
              "raw_score": 404.82343473257606,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.32385874778606083,
              "weight": 0.4,
              "weighted_score": 0.12954349911442434
            },
            "graph": {
              "raw_score": 1.6454076426701205,
              "query_max": 2.8115883422847534,
              "query_min": 1.5543622993264763,
              "normalized_score": 0.5876455866679002,
              "weight": 0.25,
              "weighted_score": 0.14691139666697506
            }
          },
          "contribution_percentages": {
            "dense": 37.60836514146589,
            "sparse": 29.23598322322714,
            "graph": 33.155651635306974
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.4430960919812876,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.5760249195756739
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.5760249195756739
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.6336274115332413
            }
          },
          "combined_score": 0.6336274115332413
        }
      },
      "similarity": 0.6336274115332413
    },
    {
      "metadata": {
        "doc_id": "CWE-787",
        "name": "Out-of-bounds Write",
        "type": "Base",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "relationships": [],
        "original_sparse_score": 368.9721298195511,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 368.9721298195511,
            "graph": 2.2100000000000004
          },
          "normalized_scores": {
            "sparse": 0.2951777038556409,
            "graph": 0.7892857142857145
          },
          "weighted_scores": {
            "sparse": 0.11807108154225637,
            "graph": 0.19732142857142862
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 368.9721298195511,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.2951777038556409,
              "weight": 0.4,
              "weighted_score": 0.11807108154225637
            },
            "graph": {
              "raw_score": 2.2100000000000004,
              "query_max": 2.8115883422847534,
              "query_min": 1.5543622993264763,
              "normalized_score": 0.7892857142857145,
              "weight": 0.25,
              "weighted_score": 0.19732142857142862
            }
          },
          "contribution_percentages": {
            "sparse": 37.436235089950934,
            "graph": 62.56376491004908
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.31539251011368497,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.4100102631477905
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.4100102631477905
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.4510112894625696
            }
          },
          "combined_score": 0.4510112894625696
        }
      },
      "similarity": 0.4510112894625696
    },
    {
      "metadata": {
        "doc_id": "CWE-843",
        "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
        "type": "Base",
        "original_content": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.",
        "relationships": [],
        "original_sparse_score": 374.9758537241467,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4418216768407472,
            "sparse": 374.9758537241467
          },
          "normalized_scores": {
            "dense": 0.4418216768407472,
            "sparse": 0.29998068297931735
          },
          "weighted_scores": {
            "dense": 0.15463758689426152,
            "sparse": 0.11999227319172695
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4418216768407472,
              "query_max": 0.5034892203385644,
              "query_min": 0.42640196387902496,
              "normalized_score": 0.4418216768407472,
              "weight": 0.35,
              "weighted_score": 0.15463758689426152
            },
            "sparse": {
              "raw_score": 374.9758537241467,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.29998068297931735,
              "weight": 0.4,
              "weighted_score": 0.11999227319172695
            }
          },
          "contribution_percentages": {
            "dense": 56.30763779504656,
            "sparse": 43.69236220495345
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.27462986008598844,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.357018818111785
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.357018818111785
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3927206999229635
            }
          },
          "combined_score": 0.3927206999229635
        }
      },
      "similarity": 0.3927206999229635
    },
    {
      "metadata": {
        "doc_id": "CWE-122",
        "name": "Heap-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "relationships": [],
        "original_sparse_score": 435.2532620324165,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.44985931241449,
            "sparse": 435.2532620324165
          },
          "normalized_scores": {
            "dense": 0.44985931241449,
            "sparse": 0.3482026096259332
          },
          "weighted_scores": {
            "dense": 0.1574507593450715,
            "sparse": 0.1392810438503733
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.44985931241449,
              "query_max": 0.5034892203385644,
              "query_min": 0.42640196387902496,
              "normalized_score": 0.44985931241449,
              "weight": 0.35,
              "weighted_score": 0.1574507593450715
            },
            "sparse": {
              "raw_score": 435.2532620324165,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.3482026096259332,
              "weight": 0.4,
              "weighted_score": 0.1392810438503733
            }
          },
          "contribution_percentages": {
            "dense": 53.06163938260615,
            "sparse": 46.938360617393855
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.2967318031954448,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.3560781638345337
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.3560781638345337
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3916859802179871
            }
          },
          "combined_score": 0.3916859802179871
        }
      },
      "similarity": 0.3916859802179871
    },
    {
      "metadata": {
        "doc_id": "CWE-415",
        "name": "Double Free",
        "type": "Variant",
        "original_content": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
        "relationships": [],
        "original_sparse_score": 358.7261255502764,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.4519337761661474,
            "sparse": 358.7261255502764
          },
          "normalized_scores": {
            "dense": 0.4519337761661474,
            "sparse": 0.2869809004402211
          },
          "weighted_scores": {
            "dense": 0.15817682165815158,
            "sparse": 0.11479236017608846
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.4519337761661474,
              "query_max": 0.5034892203385644,
              "query_min": 0.42640196387902496,
              "normalized_score": 0.4519337761661474,
              "weight": 0.35,
              "weighted_score": 0.15817682165815158
            },
            "sparse": {
              "raw_score": 358.7261255502764,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.2869809004402211,
              "weight": 0.4,
              "weighted_score": 0.11479236017608846
            }
          },
          "contribution_percentages": {
            "dense": 57.94676915367103,
            "sparse": 42.05323084632898
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.27296918183424,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.327563018201088
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.327563018201088
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.3603193200211969
            }
          },
          "combined_score": 0.3603193200211969
        }
      },
      "similarity": 0.3603193200211969
    },
    {
      "metadata": {
        "doc_id": "CWE-194",
        "name": "Unexpected Sign Extension",
        "type": "Variant",
        "original_content": "The product performs an operation on a number that causes it to be sign extended when it is transformed into a larger data type. When the original number is negative, this can produce unexpected values that lead to resultant weaknesses.",
        "relationships": [],
        "original_sparse_score": 373.19062915453986,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "dense": 0.43315191616218685,
            "sparse": 373.19062915453986
          },
          "normalized_scores": {
            "dense": 0.43315191616218685,
            "sparse": 0.29855250332363187
          },
          "weighted_scores": {
            "dense": 0.15160317065676537,
            "sparse": 0.11942100132945276
          },
          "normalization_details": {
            "dense": {
              "raw_score": 0.43315191616218685,
              "query_max": 0.5034892203385644,
              "query_min": 0.42640196387902496,
              "normalized_score": 0.43315191616218685,
              "weight": 0.35,
              "weighted_score": 0.15160317065676537
            },
            "sparse": {
              "raw_score": 373.19062915453986,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.29855250332363187,
              "weight": 0.4,
              "weighted_score": 0.11942100132945276
            }
          },
          "contribution_percentages": {
            "dense": 55.93714005128463,
            "sparse": 44.062859948715364
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.27102417198621814,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.32522900638346175
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.32522900638346175
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.357751907021808
            }
          },
          "combined_score": 0.357751907021808
        }
      },
      "similarity": 0.357751907021808
    },
    {
      "metadata": {
        "doc_id": "CWE-835",
        "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "type": "Base",
        "original_content": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
        "relationships": [],
        "original_sparse_score": 404.42151945101904,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 404.42151945101904
          },
          "normalized_scores": {
            "sparse": 0.3235372155608152
          },
          "weighted_scores": {
            "sparse": 0.1294148862243261
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 404.42151945101904,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.3235372155608152,
              "weight": 0.4,
              "weighted_score": 0.1294148862243261
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.1294148862243261,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.16823935209162394
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.16823935209162394
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.18506328730078636
            }
          },
          "combined_score": 0.18506328730078636
        }
      },
      "similarity": 0.18506328730078636
    },
    {
      "metadata": {
        "doc_id": "CWE-197",
        "name": "Numeric Truncation Error",
        "type": "Base",
        "original_content": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
        "relationships": [],
        "original_sparse_score": 391.0407782809379,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 391.0407782809379
          },
          "normalized_scores": {
            "sparse": 0.3128326226247503
          },
          "weighted_scores": {
            "sparse": 0.12513304904990014
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 391.0407782809379,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.3128326226247503,
              "weight": 0.4,
              "weighted_score": 0.12513304904990014
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.12513304904990014,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.16267296376487017
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.16267296376487017
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1789402601413572
            }
          },
          "combined_score": 0.1789402601413572
        }
      },
      "similarity": 0.1789402601413572
    },
    {
      "metadata": {
        "doc_id": "CWE-119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "type": "Class",
        "original_content": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "relationships": [],
        "original_sparse_score": 366.46563700649443,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
          "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 366.46563700649443,
            "graph": 1.6736000000000002
          },
          "normalized_scores": {
            "sparse": 0.29317250960519553,
            "graph": 0.5977142857142859
          },
          "weighted_scores": {
            "sparse": 0.11726900384207822,
            "graph": 0.14942857142857147
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 366.46563700649443,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.29317250960519553,
              "weight": 0.4,
              "weighted_score": 0.11726900384207822
            },
            "graph": {
              "raw_score": 1.6736000000000002,
              "query_max": 2.8115883422847534,
              "query_min": 1.5543622993264763,
              "normalized_score": 0.5977142857142859,
              "weight": 0.25,
              "weighted_score": 0.14942857142857147
            }
          },
          "contribution_percentages": {
            "sparse": 43.97077990794308,
            "graph": 56.02922009205691
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.2666975752706497,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.21335806021651976
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.21335806021651976
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.",
                "comments": "Look at CWE-119's children and consider mapping to CWEs such as CWE-787: Out-of-bounds Write, CWE-125: Out-of-bounds Read, or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_after": 0.17068644817321582
            }
          },
          "combined_score": 0.17068644817321582
        }
      },
      "similarity": 0.17068644817321582
    },
    {
      "metadata": {
        "doc_id": "CWE-617",
        "name": "Reachable Assertion",
        "type": "Base",
        "original_content": "The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary.",
        "relationships": [],
        "original_sparse_score": 371.36786969280473,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 371.36786969280473
          },
          "normalized_scores": {
            "sparse": 0.2970942957542438
          },
          "weighted_scores": {
            "sparse": 0.11883771830169752
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 371.36786969280473,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.2970942957542438,
              "weight": 0.4,
              "weighted_score": 0.11883771830169752
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11883771830169752,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.1544890337922068
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.1544890337922068
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.1699379371714275
            }
          },
          "combined_score": 0.1699379371714275
        }
      },
      "similarity": 0.1699379371714275
    },
    {
      "metadata": {
        "doc_id": "CWE-476",
        "name": "NULL Pointer Dereference",
        "type": "Base",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "relationships": [],
        "original_sparse_score": 370.03009663966617,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 370.03009663966617
          },
          "normalized_scores": {
            "sparse": 0.2960240773117329
          },
          "weighted_scores": {
            "sparse": 0.11840963092469317
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 370.03009663966617,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.2960240773117329,
              "weight": 0.4,
              "weighted_score": 0.11840963092469317
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.3,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.11840963092469317,
            "abstraction": {
              "type": "base",
              "factor": 1.3,
              "score_after": 0.15393252020210113
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.15393252020210113
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.16932577222231127
            }
          },
          "combined_score": 0.16932577222231127
        }
      },
      "similarity": 0.16932577222231127
    },
    {
      "metadata": {
        "doc_id": "CWE-129",
        "name": "Improper Validation of Array Index",
        "type": "Variant",
        "original_content": "The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.",
        "relationships": [],
        "original_sparse_score": 388.9893104041113,
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 388.9893104041113
          },
          "normalized_scores": {
            "sparse": 0.31119144832328904
          },
          "weighted_scores": {
            "sparse": 0.12447657932931562
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 388.9893104041113,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.31119144832328904,
              "weight": 0.4,
              "weighted_score": 0.12447657932931562
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 1.2,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.1,
          "mapping_usage": "ALLOWED",
          "adjustment_factors": {
            "initial_combined_score": 0.12447657932931562,
            "abstraction": {
              "type": "variant",
              "factor": 1.2,
              "score_after": 0.14937189519517874
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.14937189519517874
            },
            "mapping": {
              "usage": "ALLOWED",
              "boost": 1.1,
              "notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_after": 0.16430908471469663
            }
          },
          "combined_score": 0.16430908471469663
        }
      },
      "similarity": 0.16430908471469663
    },
    {
      "metadata": {
        "doc_id": "CWE-674",
        "name": "Uncontrolled Recursion",
        "type": "Class",
        "original_content": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "relationships": [],
        "original_sparse_score": 403.1048029481061,
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 403.1048029481061
          },
          "normalized_scores": {
            "sparse": 0.3224838423584849
          },
          "weighted_scores": {
            "sparse": 0.12899353694339397
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 403.1048029481061,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.3224838423584849,
              "weight": 0.4,
              "weighted_score": 0.12899353694339397
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 1.05,
          "mapping_usage": "ALLOWED-WITH-REVIEW",
          "adjustment_factors": {
            "initial_combined_score": 0.12899353694339397,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.10319482955471518
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.10319482955471518
            },
            "mapping": {
              "usage": "ALLOWED-WITH-REVIEW",
              "boost": 1.05,
              "notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_after": 0.10835457103245094
            }
          },
          "combined_score": 0.10835457103245094
        }
      },
      "similarity": 0.10835457103245094
    },
    {
      "metadata": {
        "doc_id": "CWE-20",
        "name": "Improper Input Validation",
        "type": "Class",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "relationships": [],
        "original_sparse_score": 374.9417508756378,
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
          "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
          "reasons": [
            "Frequent Misuse"
          ],
          "suggestions": [
            {
              "CweID": "1284",
              "Comment": "Specified Quantity"
            },
            {
              "CweID": "1285",
              "Comment": "Specified Index, Position, or Offset"
            },
            {
              "CweID": "1286",
              "Comment": "Syntactic Correctness"
            },
            {
              "CweID": "1287",
              "Comment": "Specified Type"
            },
            {
              "CweID": "1288",
              "Comment": "Consistency within Input"
            },
            {
              "CweID": "1289",
              "Comment": "Unsafe Equivalence"
            },
            {
              "CweID": "116",
              "Comment": "Improper Encoding or Escaping of Output"
            }
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse"
          ],
          "is_graph_exclusive": false,
          "raw_scores": {
            "sparse": 374.9417508756378
          },
          "normalized_scores": {
            "sparse": 0.29995340070051024
          },
          "weighted_scores": {
            "sparse": 0.1199813602802041
          },
          "normalization_details": {
            "sparse": {
              "raw_score": 374.9417508756378,
              "query_max": 516.6731096282787,
              "query_min": 358.7261255502764,
              "normalized_score": 0.29995340070051024,
              "weight": 0.4,
              "weighted_score": 0.1199813602802041
            }
          },
          "contribution_percentages": {
            "sparse": 100.0
          },
          "abstraction_factor": 0.8,
          "relationship_count": 0,
          "relationship_bonus": 1.0,
          "mapping_boost": 0.8,
          "mapping_usage": "DISCOURAGED",
          "adjustment_factors": {
            "initial_combined_score": 0.1199813602802041,
            "abstraction": {
              "type": "class",
              "factor": 0.8,
              "score_after": 0.0959850882241633
            },
            "relationship": {
              "count": 0,
              "is_graph_exclusive": false,
              "bonus": 1.0,
              "score_after": 0.0959850882241633
            },
            "mapping": {
              "usage": "DISCOURAGED",
              "boost": 0.8,
              "notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_after": 0.07678807057933064
            }
          },
          "combined_score": 0.07678807057933064
        }
      },
      "similarity": 0.07678807057933064
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-190",
      "CWE-128",
      "CWE-787",
      "CWE-125"
    ],
    "critic_additional": [
      "CWE-119",
      "CWE-1284",
      "CWE-123",
      "CWE-122",
      "CWE-680",
      "CWE-789"
    ]
  }
}